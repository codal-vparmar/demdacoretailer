(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[5],{

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/client/client.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/client/client.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectAssign = _interopRequireDefault(__webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js"));

var _offsitePaymentInitializer = _interopRequireDefault(__webpack_require__(/*! ../payment/offsite-payment-initializer */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-initializer.js"));

var _paymentSubmitter = _interopRequireDefault(__webpack_require__(/*! ../payment/payment-submitter */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-submitter.js"));

var _clientTokenGenerator = _interopRequireDefault(__webpack_require__(/*! ../payment/client-token-generator */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/client-token-generator.js"));

var _storeRequestSender = _interopRequireDefault(__webpack_require__(/*! ../store/store-request-sender */ "./node_modules/@bigcommerce/bigpay-client/lib/store/store-request-sender.js"));

var _defaultConfig = _interopRequireDefault(__webpack_require__(/*! ./default-config */ "./node_modules/@bigcommerce/bigpay-client/lib/client/default-config.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Client = /*#__PURE__*/function () {
  _createClass(Client, null, [{
    key: "create",

    /**
     * @param {Object} config
     * @returns {Client}
     */
    value: function create(config) {
      var clientConfig = (0, _objectAssign.default)({}, _defaultConfig.default, config);

      var offsitePaymentInitializer = _offsitePaymentInitializer.default.create(clientConfig);

      var paymentSubmitter = _paymentSubmitter.default.create(clientConfig);

      var clientTokenGenerator = _clientTokenGenerator.default.create(clientConfig);

      var storeRequestSender = _storeRequestSender.default.create(clientConfig);

      return new Client(clientConfig, paymentSubmitter, offsitePaymentInitializer, clientTokenGenerator, storeRequestSender);
    }
    /**
     * @param {Object} config
     * @param {PaymentSubmitter} paymentSubmitter
     * @param {OffsitePaymentInitializer} offsitePaymentInitializer
     * @param {ClientTokenGenerator} clientTokenGenerator
     * @param {StoreRequestSender} storeRequestSender
     */

  }]);

  function Client(config, paymentSubmitter, offsitePaymentInitializer, clientTokenGenerator, storeRequestSender) {
    _classCallCheck(this, Client);

    /**
     * @private
     * @type {Object}
     */
    this.config = config;
    /**
     * @private
     * @type {PaymentSubmitter}
     */

    this.paymentSubmitter = paymentSubmitter;
    /**
     * @private
     * @type {OffsitePaymentInitializer}
     */

    this.offsitePaymentInitializer = offsitePaymentInitializer;
    /**
     * @private
     * @type {ClientTokenGenerator}
     */

    this.clientTokenGenerator = clientTokenGenerator;
    /**
     * @private
     * @type {StoreRequestSender}
     */

    this.storeRequestSender = storeRequestSender;
  }
  /**
   * @param {string} host
   * @returns {void}
   */


  _createClass(Client, [{
    key: "setHost",
    value: function setHost(host) {
      this.config.host = host;
    }
    /**
     * @param {PaymentRequestData} data
     * @param {Function} [callback]
     * @param {string} target
     * @returns {void}
     */

  }, {
    key: "initializeOffsitePayment",
    value: function initializeOffsitePayment(data, callback, target) {
      this.offsitePaymentInitializer.initializeOffsitePayment(data, callback, target);
    }
    /**
     * @param {PaymentRequestData} data
     * @param {Function} [callback]
     * @returns {void}
     */

  }, {
    key: "submitPayment",
    value: function submitPayment(data, callback) {
      this.paymentSubmitter.submitPayment(data, callback);
    }
    /**
     * @param {PaymentRequestData} data
     * @param {Function} [callback]
     * @returns {void}
     */

  }, {
    key: "generateClientToken",
    value: function generateClientToken(data, callback) {
      this.clientTokenGenerator.generateClientToken(data, callback);
    }
    /**
     * @param {Object} data
     * @param {string} data.storeId
     * @param {string} data.customerId
     * @param {string} data.currencyCode
     * @param {Function} [callback]
     * @return {void}
     */

  }, {
    key: "loadInstruments",
    value: function loadInstruments(data, callback) {
      this.storeRequestSender.loadInstruments(data, callback);
    }
    /**
     * @param {Object} data
     * @param {string} data.storeId
     * @param {string} data.customerId
     * @param {string} data.currencyCode
     * @param {AddressData} data.shippingAddress
     * @param {Function} [callback]
     * @return {void}
     */

  }, {
    key: "loadInstrumentsWithAddress",
    value: function loadInstrumentsWithAddress(data, callback) {
      this.storeRequestSender.loadInstrumentsWithAddress(data, callback);
    }
    /**
     * @param {Object} data
     * @param {string} data.storeId
     * @param {string} data.customerId
     * @param {string} data.instrumentId
     * @param {string} data.currencyCode
     * @param {Function} [callback]
     * @return {void}
     */

  }, {
    key: "deleteShopperInstrument",
    value: function deleteShopperInstrument(data, callback) {
      this.storeRequestSender.deleteShopperInstrument(data, callback);
    }
  }]);

  return Client;
}();

exports.default = Client;
//# sourceMappingURL=client.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/client/default-config.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/client/default-config.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var DEFAULT_CONFIG = {
  host: ''
};
var _default = DEFAULT_CONFIG;
exports.default = _default;
//# sourceMappingURL=default-config.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/content-types.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/content-types.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.APPLICATION_JSON = void 0;
var APPLICATION_JSON = 'application/json';
exports.APPLICATION_JSON = APPLICATION_JSON;
//# sourceMappingURL=content-types.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/default-options.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/default-options.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _contentTypes = __webpack_require__(/*! ./content-types */ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/content-types.js");

var _methodTypes = __webpack_require__(/*! ./method-types */ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/method-types.js");

var DEFAULT_OPTIONS = {
  headers: {
    Accept: _contentTypes.APPLICATION_JSON,
    'Content-Type': _contentTypes.APPLICATION_JSON
  },
  method: _methodTypes.GET
};
var _default = DEFAULT_OPTIONS;
exports.default = _default;
//# sourceMappingURL=default-options.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/method-types.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/method-types.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DELETE = exports.POST = exports.GET = void 0;
var GET = 'GET';
exports.GET = GET;
var POST = 'POST';
exports.POST = POST;
var DELETE = 'DELETE';
exports.DELETE = DELETE;
//# sourceMappingURL=method-types.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/payload-transformer.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/payload-transformer.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectAssign2 = _interopRequireDefault(__webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js"));

var _contentTypes = __webpack_require__(/*! ./content-types */ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/content-types.js");

var _utils = __webpack_require__(/*! ../utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var PayloadTransformer = /*#__PURE__*/function () {
  function PayloadTransformer() {
    _classCallCheck(this, PayloadTransformer);
  }

  _createClass(PayloadTransformer, [{
    key: "toRequest",

    /**
     * @param {Object} data
     * @param {string} [contentType = APPLICATION_JSON]
     * @returns {Object}
     */
    value: function toRequest(data) {
      var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _contentTypes.APPLICATION_JSON;

      if (data && (0, _utils.includes)(contentType, _contentTypes.APPLICATION_JSON)) {
        return JSON.stringify(data);
      }

      return data;
    }
    /**
     * @param {XMLHttpRequest} xhr
     * @returns {Object}
     * @property {Object} data
     * @property {number} status
     * @property {string} statusText
     */

  }, {
    key: "fromResponse",
    value: function fromResponse(xhr) {
      var headers = this.parseResponseHeaders(xhr.getAllResponseHeaders());
      var contentType = xhr.getResponseHeader('Content-Type');
      var status = xhr.status,
          statusText = xhr.statusText;
      var data = 'response' in xhr ? xhr.response : xhr.responseText;

      if (data && (0, _utils.includes)(contentType, _contentTypes.APPLICATION_JSON)) {
        data = JSON.parse(data);
      }

      return {
        data: data,
        headers: headers,
        status: status,
        statusText: statusText
      };
    }
    /**
     * @private
     * @param {string} rawHeaders
     * @returns {Object}
     */

  }, {
    key: "parseResponseHeaders",
    value: function parseResponseHeaders(rawHeaders) {
      var lines = rawHeaders ? rawHeaders.replace(/\r?\n[\t ]+/g, ' ').split(/\r?\n/) : [];
      return lines.reduce(function (headers, line) {
        var parts = line.split(':');
        var key = (parts.shift() || '').trim();

        if (!key) {
          return headers;
        }

        return (0, _objectAssign2.default)({}, headers, _defineProperty({}, key.toLowerCase(), parts.join(':').trim()));
      }, {});
    }
  }], [{
    key: "create",

    /**
     * @returns {PayloadTransformer}
     */
    value: function create() {
      return new PayloadTransformer();
    }
  }]);

  return PayloadTransformer;
}();

exports.default = PayloadTransformer;
//# sourceMappingURL=payload-transformer.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/request-factory.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/request-factory.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var RequestFactory = /*#__PURE__*/function () {
  function RequestFactory() {
    _classCallCheck(this, RequestFactory);
  }

  _createClass(RequestFactory, [{
    key: "createRequest",

    /**
     * @param {string} url
     * @param {Object} options
     * @param {Function} [callback]
     * @returns {XMLHttpRequest}
     */
    value: function createRequest(url, options, callback) {
      var xhr = new XMLHttpRequest();

      xhr.onerror = function () {
        if (callback) {
          callback(new Error(xhr.statusText));
        }
      };

      xhr.onload = function () {
        if (callback) {
          callback();
        }
      };

      xhr.open(options.method, url, true);
      this.setOptions(xhr, options);
      return xhr;
    }
    /**
     * @private
     * @param {XMLHttpRequest} xhr
     * @param {Object} headers
     * @returns {void}
     */

  }, {
    key: "setHeaders",
    value: function setHeaders(xhr, headers) {
      var headerKeys = Object.keys(headers);
      headerKeys.forEach(function (key) {
        var value = headers[key];
        xhr.setRequestHeader(key, value);
      });
    }
    /**
     * @private
     * @param {XMLHttpRequest} xhr
     * @param {Object} options
     * @returns {void}
     */

  }, {
    key: "setOptions",
    value: function setOptions(xhr, options) {
      xhr.withCredentials = options.withCredentials;

      if (options.headers) {
        this.setHeaders(xhr, options.headers);
      }
    }
  }], [{
    key: "create",

    /**
     * @returns {RequestFactory}
     */
    value: function create() {
      return new RequestFactory();
    }
  }]);

  return RequestFactory;
}();

exports.default = RequestFactory;
//# sourceMappingURL=request-factory.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/request-sender.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/request-sender.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _deepAssign = _interopRequireDefault(__webpack_require__(/*! deep-assign */ "./node_modules/deep-assign/index.js"));

var _objectAssign = _interopRequireDefault(__webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js"));

var _methodTypes = __webpack_require__(/*! ./method-types */ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/method-types.js");

var _defaultOptions = _interopRequireDefault(__webpack_require__(/*! ./default-options */ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/default-options.js"));

var _payloadTransformer = _interopRequireDefault(__webpack_require__(/*! ./payload-transformer */ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/payload-transformer.js"));

var _requestFactory = _interopRequireDefault(__webpack_require__(/*! ./request-factory */ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/request-factory.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var RequestSender = /*#__PURE__*/function () {
  _createClass(RequestSender, null, [{
    key: "create",

    /**
     * @returns {RequestSender}
     */
    value: function create() {
      var requestFactory = _requestFactory.default.create();

      var payloadTransformer = _payloadTransformer.default.create();

      return new RequestSender(requestFactory, payloadTransformer);
    }
    /**
     * @param {RequestFactory} requestFactory
     * @param {PayloadTransformer} payloadTransformer
     */

  }]);

  function RequestSender(requestFactory, payloadTransformer) {
    _classCallCheck(this, RequestSender);

    /**
     * @private
     * @type {RequestFactory}
     */
    this.requestFactory = requestFactory;
    /**
     * @private
     * @type {PayloadTransformer}
     */

    this.payloadTransformer = payloadTransformer;
  }
  /**
   * @param {string} url
   * @param {Object} data
   * @param {Object} [options]
   * @param {Function} [callback]
   * @returns {void}
   */


  _createClass(RequestSender, [{
    key: "sendRequest",
    value: function sendRequest(url, data, options, callback) {
      var _this = this;

      var mergedOptions = (0, _deepAssign.default)({}, _defaultOptions.default, options);
      var xhr = this.requestFactory.createRequest(url, mergedOptions, function (error) {
        var response = _this.payloadTransformer.fromResponse(xhr);

        if (!callback) {
          return;
        }

        if (error || !_this.isSuccessfulRequest(xhr)) {
          callback(response);
          return;
        }

        callback(null, response);
      });
      var payload = this.payloadTransformer.toRequest(data, mergedOptions.headers['Content-Type']);
      xhr.send(payload);
    }
    /**
     * @param {string} url
     * @param {Object} data
     * @param {Object} [options]
     * @param {Function} [callback]
     * @returns {void}
     */

  }, {
    key: "postRequest",
    value: function postRequest(url, data, options, callback) {
      var mergedOptions = (0, _objectAssign.default)({}, options, {
        method: _methodTypes.POST
      });
      this.sendRequest(url, data, mergedOptions, callback);
    }
    /**
     * @private
     * @param {XMLHttpRequest} xhr
     * @returns {boolean}
     */

  }, {
    key: "isSuccessfulRequest",
    value: function isSuccessfulRequest(xhr) {
      return xhr.status >= 200 && xhr.status < 300;
    }
  }]);

  return RequestSender;
}();

exports.default = RequestSender;
//# sourceMappingURL=request-sender.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/includes.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/includes.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = includes;

/**
 * @param {array|string} items
 * @param {array|string} item
 * @returns {boolean}
 */
function includes(items, item) {
  if (!Array.isArray(items) && typeof items !== 'string') {
    return false;
  }

  return items.indexOf(item) !== -1;
}
//# sourceMappingURL=includes.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "includes", {
  enumerable: true,
  get: function get() {
    return _includes.default;
  }
});
Object.defineProperty(exports, "isNil", {
  enumerable: true,
  get: function get() {
    return _isNil.default;
  }
});
Object.defineProperty(exports, "isObject", {
  enumerable: true,
  get: function get() {
    return _isObject.default;
  }
});
Object.defineProperty(exports, "omitEmptyStringAndNil", {
  enumerable: true,
  get: function get() {
    return _omitEmptystringAndNil.default;
  }
});
Object.defineProperty(exports, "omitNil", {
  enumerable: true,
  get: function get() {
    return _omitNil.default;
  }
});
Object.defineProperty(exports, "omitProperty", {
  enumerable: true,
  get: function get() {
    return _omitProperty.default;
  }
});
Object.defineProperty(exports, "toNumber", {
  enumerable: true,
  get: function get() {
    return _toNumber.default;
  }
});
Object.defineProperty(exports, "toSnakeCase", {
  enumerable: true,
  get: function get() {
    return _toSnakeCase.default;
  }
});
Object.defineProperty(exports, "toString", {
  enumerable: true,
  get: function get() {
    return _toString.default;
  }
});

var _includes = _interopRequireDefault(__webpack_require__(/*! ./includes */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/includes.js"));

var _isNil = _interopRequireDefault(__webpack_require__(/*! ./is-nil */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-nil.js"));

var _isObject = _interopRequireDefault(__webpack_require__(/*! ./is-object */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-object.js"));

var _omitEmptystringAndNil = _interopRequireDefault(__webpack_require__(/*! ./omit-emptystring-and-nil */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/omit-emptystring-and-nil.js"));

var _omitNil = _interopRequireDefault(__webpack_require__(/*! ./omit-nil */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/omit-nil.js"));

var _omitProperty = _interopRequireDefault(__webpack_require__(/*! ./omit-property */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/omit-property.js"));

var _toNumber = _interopRequireDefault(__webpack_require__(/*! ./to-number */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/to-number.js"));

var _toSnakeCase = _interopRequireDefault(__webpack_require__(/*! ./to-snake-case */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/to-snake-case.js"));

var _toString = _interopRequireDefault(__webpack_require__(/*! ./to-string */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/to-string.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-empty-string.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-empty-string.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEmptyString;

/**
 * @param {*} value
 * @returns {boolean}
 */
function isEmptyString(value) {
  return value === '';
}
//# sourceMappingURL=is-empty-string.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-emptystring-or-nil.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-emptystring-or-nil.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEmptyStringOrNil;

var _isEmptyString = _interopRequireDefault(__webpack_require__(/*! ./is-empty-string */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-empty-string.js"));

var _isNil = _interopRequireDefault(__webpack_require__(/*! ./is-nil */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-nil.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {*} value
 * @returns {boolean}
 */
function isEmptyStringOrNil(value) {
  return (0, _isEmptyString.default)(value) || (0, _isNil.default)(value);
}
//# sourceMappingURL=is-emptystring-or-nil.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-nil.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-nil.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isNil;

/**
 * @param {*} value
 * @returns {boolean}
 */
function isNil(value) {
  if (value === null || value === undefined) {
    return true;
  }

  return false;
}
//# sourceMappingURL=is-nil.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-object.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-object.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isObject;

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * @param {*} value
 * @returns {boolean}
 */
function isObject(value) {
  return value !== null && _typeof(value) === 'object' && !Array.isArray(value);
}
//# sourceMappingURL=is-object.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/omit-emptystring-and-nil.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/omit-emptystring-and-nil.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = omitEmptyStringAndNil;

var _isEmptystringOrNil = _interopRequireDefault(__webpack_require__(/*! ./is-emptystring-or-nil */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-emptystring-or-nil.js"));

var _omitProperty = _interopRequireDefault(__webpack_require__(/*! ./omit-property */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/omit-property.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {Object} object
 * @returns {Object}
 */
function omitEmptyStringAndNil(object) {
  return (0, _omitProperty.default)(object, _isEmptystringOrNil.default);
}
//# sourceMappingURL=omit-emptystring-and-nil.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/omit-nil.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/omit-nil.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = omitNil;

var _isNil = _interopRequireDefault(__webpack_require__(/*! ./is-nil */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-nil.js"));

var _omitProperty = _interopRequireDefault(__webpack_require__(/*! ./omit-property */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/omit-property.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {Object} object
 * @returns {Object}
 */
function omitNil(object) {
  return (0, _omitProperty.default)(object, _isNil.default);
}
//# sourceMappingURL=omit-nil.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/omit-property.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/omit-property.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = omitProperty;

var _isObject = _interopRequireDefault(__webpack_require__(/*! ./is-object */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/is-object.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {Object} object
 * @param {Function} predicateFn
 * @returns {Object}
 */
function omitProperty(object, predicateFn) {
  if (!(0, _isObject.default)(object)) {
    return object;
  }

  var keys = Object.keys(object);
  return keys.reduce(function (result, key) {
    var value = object[key];

    if (!predicateFn(value)) {
      result[key] = value;
    }

    return result;
  }, {});
}
//# sourceMappingURL=omit-property.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/to-number.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/to-number.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toNumber;

/**
 * @param {*} value
 * @returns {number}
 */
function toNumber(value) {
  return parseFloat(value) || 0;
}
//# sourceMappingURL=to-number.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/to-snake-case.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/to-snake-case.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toSnakeCase;

/**
 * @param {string} string
 * @returns {string}
 */
function toSnakeCase(string) {
  if (typeof string !== 'string') {
    return string;
  }

  return string.replace(/([a-z\d])([A-Z]+)/g, '$1_$2').replace(/[-\s]+/g, '_').toLowerCase();
}
//# sourceMappingURL=to-snake-case.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/to-string.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/common/utils/to-string.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toString;

/**
 * @param {*} value
 * @returns {string}
 */
function toString(value) {
  if (typeof value === 'string') {
    return value;
  }

  if (typeof value === 'number' && !Number.isNaN(value)) {
    return value.toString();
  }

  return '';
}
//# sourceMappingURL=to-string.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createClient = createClient;

var _client = _interopRequireDefault(__webpack_require__(/*! ./client/client */ "./node_modules/@bigcommerce/bigpay-client/lib/client/client.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {Object} [config]
 * @returns {Client}
 */
function createClient(config) {
  return _client.default.create(config);
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/client-token-generator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/client-token-generator.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _requestSender = _interopRequireDefault(__webpack_require__(/*! ../common/http-request/request-sender */ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/request-sender.js"));

var _clientTokenMapper = _interopRequireDefault(__webpack_require__(/*! ./v2/payment-mappers/client-token-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/client-token-mapper.js"));

var _urlHelper = _interopRequireDefault(__webpack_require__(/*! ./url-helper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/url-helper.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ClientTokenGenerator = /*#__PURE__*/function () {
  _createClass(ClientTokenGenerator, null, [{
    key: "create",

    /**
     * @param {Object} config
     * @returns {PaymentSubmitter}
     */
    value: function create(config) {
      var urlHelper = _urlHelper.default.create(config);

      var requestSender = _requestSender.default.create();

      var clientTokenMapper = _clientTokenMapper.default.create();

      return new ClientTokenGenerator(urlHelper, requestSender, clientTokenMapper);
    }
    /**
     * @param {UrlHelper} urlHelper
     * @param {RequestSender} requestSender
     * @param {ClientTokenMapper} clientTokenMapper
     * @returns {void}
     */

  }]);

  function ClientTokenGenerator(urlHelper, requestSender, clientTokenMapper) {
    _classCallCheck(this, ClientTokenGenerator);

    /**
     * @private
     * @type {UrlHelper}
     */
    this.urlHelper = urlHelper;
    /**
     * @private
     * @type {RequestSender}
     */

    this.requestSender = requestSender;
    /**
     * @private
     * @type {ClientTokenMapper}
     */

    this.clientTokenMapper = clientTokenMapper;
  }
  /**
   * @param {PaymentRequestData} data
   * @param {Function} [callback]
   * @returns {void}
   */


  _createClass(ClientTokenGenerator, [{
    key: "generateClientToken",
    value: function generateClientToken(data, callback) {
      var url = this.urlHelper.getGenerateClientTokenUrl();
      var payload = this.clientTokenMapper.mapToClientToken(data);
      this.requestSender.postRequest(url, payload, {}, callback);
    }
  }]);

  return ClientTokenGenerator;
}();

exports.default = ClientTokenGenerator;
//# sourceMappingURL=client-token-generator.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-initializer.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-initializer.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _formPoster = __webpack_require__(/*! @bigcommerce/form-poster */ "./node_modules/@bigcommerce/form-poster/lib/index.js");

var _paymentTypes = __webpack_require__(/*! ./payment-types */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-types.js");

var _payloadMapper = _interopRequireDefault(__webpack_require__(/*! ./offsite-payment-mappers/payload-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/payload-mapper.js"));

var _urlHelper = _interopRequireDefault(__webpack_require__(/*! ./url-helper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/url-helper.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var OffsitePaymentInitializer = /*#__PURE__*/function () {
  _createClass(OffsitePaymentInitializer, null, [{
    key: "create",

    /**
     * @param {Object} config
     * @returns {OffsitePaymentInitializer}
     */
    value: function create(config) {
      var urlHelper = _urlHelper.default.create(config);

      var formPoster = (0, _formPoster.createFormPoster)();

      var payloadMapper = _payloadMapper.default.create();

      return new OffsitePaymentInitializer(urlHelper, formPoster, payloadMapper);
    }
    /**
     * @param {UrlHelper} urlHelper
     * @param {FormPoster} formPoster
     * @param {PayloadMapper} payloadMapper
     * @returns {void}
     */

  }]);

  function OffsitePaymentInitializer(urlHelper, formPoster, payloadMapper) {
    _classCallCheck(this, OffsitePaymentInitializer);

    /**
     * @private
     * @type {UrlHelper}
     */
    this.urlHelper = urlHelper;
    /**
     * @private
     * @type {FormPoster}
     */

    this.formPoster = formPoster;
    /**
     * @private
     * @type {PayloadMapper}
     */

    this.payloadMapper = payloadMapper;
  }
  /**
   * @param {PaymentRequestData} data
   * @param {Function} [callback]
   * @param {string} target
   * @returns {void}
   * @throws {Error}
   */


  _createClass(OffsitePaymentInitializer, [{
    key: "initializeOffsitePayment",
    value: function initializeOffsitePayment(data, callback, target) {
      var _data$paymentMethod = data.paymentMethod,
          paymentMethod = _data$paymentMethod === void 0 ? {} : _data$paymentMethod;

      if (paymentMethod.type !== _paymentTypes.HOSTED) {
        throw new Error("".concat(paymentMethod.type, " is not supported."));
      }

      var payload = this.payloadMapper.mapToPayload(data);
      var url = this.urlHelper.getOffsitePaymentUrl();
      this.formPoster.postForm(url, payload, callback, target);
    }
  }]);

  return OffsitePaymentInitializer;
}();

exports.default = OffsitePaymentInitializer;
//# sourceMappingURL=offsite-payment-initializer.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/address-mapper.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/address-mapper.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var AddressMapper = /*#__PURE__*/function () {
  function AddressMapper() {
    _classCallCheck(this, AddressMapper);
  }

  _createClass(AddressMapper, [{
    key: "mapToBillingAddress",

    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */
    value: function mapToBillingAddress(data) {
      return this.mapToAddress(data, 'billingAddress');
    }
    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */

  }, {
    key: "mapToShippingAddress",
    value: function mapToShippingAddress(data) {
      return this.mapToAddress(data, 'shippingAddress');
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @param {string} addressKey
     * @returns {Object}
     */

  }, {
    key: "mapToAddress",
    value: function mapToAddress(data, addressKey) {
      var _omitNil;

      var address = data[addressKey] || {};
      var formattedAddressKey = (0, _utils.toSnakeCase)(addressKey);
      return (0, _utils.omitNil)((_omitNil = {}, _defineProperty(_omitNil, "".concat(formattedAddressKey, "_city"), address.city), _defineProperty(_omitNil, "".concat(formattedAddressKey, "_company"), address.company), _defineProperty(_omitNil, "".concat(formattedAddressKey, "_country_code"), address.countryCode), _defineProperty(_omitNil, "".concat(formattedAddressKey, "_country"), address.country), _defineProperty(_omitNil, "".concat(formattedAddressKey, "_first_name"), address.firstName), _defineProperty(_omitNil, "".concat(formattedAddressKey, "_last_name"), address.lastName), _defineProperty(_omitNil, "".concat(formattedAddressKey, "_phone"), address.phone), _defineProperty(_omitNil, "".concat(formattedAddressKey, "_state_code"), address.provinceCode), _defineProperty(_omitNil, "".concat(formattedAddressKey, "_state"), address.province), _defineProperty(_omitNil, "".concat(formattedAddressKey, "_street_1"), address.addressLine1), _defineProperty(_omitNil, "".concat(formattedAddressKey, "_street_2"), address.addressLine2), _defineProperty(_omitNil, "".concat(formattedAddressKey, "_zip"), address.postCode), _omitNil));
    }
  }], [{
    key: "create",

    /**
     * @returns {AddressMapper}
     */
    value: function create() {
      return new AddressMapper();
    }
  }]);

  return AddressMapper;
}();

exports.default = AddressMapper;
//# sourceMappingURL=address-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/customer-mapper.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/customer-mapper.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var CustomerMapper = /*#__PURE__*/function () {
  function CustomerMapper() {
    _classCallCheck(this, CustomerMapper);
  }

  _createClass(CustomerMapper, [{
    key: "mapToCustomer",

    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */
    value: function mapToCustomer(data) {
      var _data$customer = data.customer,
          customer = _data$customer === void 0 ? {} : _data$customer,
          _data$quoteMeta = data.quoteMeta,
          quoteMeta = _data$quoteMeta === void 0 ? {} : _data$quoteMeta,
          _data$store = data.store,
          store = _data$store === void 0 ? {} : _data$store;
      return (0, _utils.omitNil)({
        customer_browser_info: navigator.userAgent,
        customer_email: customer.email,
        customer_first_name: customer.firstName,
        customer_geo_ip_country_code: quoteMeta.request ? quoteMeta.request.geoCountryCode : null,
        customer_id: customer.customerId,
        customer_last_name: customer.lastName,
        customer_locale: store.storeLanguage,
        customer_name: customer.name,
        customer_phone: customer.phoneNumber,
        customer_reference: customer.email
      });
    }
  }], [{
    key: "create",

    /**
     * @returns {CustomerMapper}
     */
    value: function create() {
      return new CustomerMapper();
    }
  }]);

  return CustomerMapper;
}();

exports.default = CustomerMapper;
//# sourceMappingURL=customer-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/meta-mapper.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/meta-mapper.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var MetaMapper = /*#__PURE__*/function () {
  function MetaMapper() {
    _classCallCheck(this, MetaMapper);
  }

  _createClass(MetaMapper, [{
    key: "mapToMeta",

    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */
    value: function mapToMeta(data) {
      var source = data.source;
      return (0, _utils.omitNil)({
        meta_referrer: document.referrer,
        meta_source: source,
        meta_user_agent: navigator.userAgent
      });
    }
  }], [{
    key: "create",

    /**
     * @returns {MetaMapper}
     */
    value: function create() {
      return new MetaMapper();
    }
  }]);

  return MetaMapper;
}();

exports.default = MetaMapper;
//# sourceMappingURL=meta-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/payload-mapper.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/payload-mapper.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectAssign = _interopRequireDefault(__webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js"));

var _utils = __webpack_require__(/*! ../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

var _addressMapper = _interopRequireDefault(__webpack_require__(/*! ./address-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/address-mapper.js"));

var _customerMapper = _interopRequireDefault(__webpack_require__(/*! ./customer-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/customer-mapper.js"));

var _metaMapper = _interopRequireDefault(__webpack_require__(/*! ./meta-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/meta-mapper.js"));

var _paymentMethodIdMapper = _interopRequireDefault(__webpack_require__(/*! ../payment-method-mappers/payment-method-id-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-method-mappers/payment-method-id-mapper.js"));

var _storeMapper = _interopRequireDefault(__webpack_require__(/*! ./store-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/store-mapper.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var PayloadMapper = /*#__PURE__*/function () {
  _createClass(PayloadMapper, null, [{
    key: "create",

    /**
     * @returns {PayloadMapper}
     */
    value: function create() {
      var addressMapper = _addressMapper.default.create();

      var customerMapper = _customerMapper.default.create();

      var metaMapper = _metaMapper.default.create();

      var paymentMethodIdMapper = _paymentMethodIdMapper.default.create();

      var storeMapper = _storeMapper.default.create();

      return new PayloadMapper(addressMapper, customerMapper, metaMapper, paymentMethodIdMapper, storeMapper);
    }
    /**
     * @param {AddressMapper} addressMapper
     * @param {CustomerMapper} customerMapper
     * @param {MetaMapper} metaMapper
     * @param {PaymentMethodIdMapper} paymentMethodIdMapper
     * @param {StoreMapper} storeMapper
     * @returns {Object}
     */

  }]);

  function PayloadMapper(addressMapper, customerMapper, metaMapper, paymentMethodIdMapper, storeMapper) {
    _classCallCheck(this, PayloadMapper);

    /**
     * @private
     * @type {AddressMapper}
     */
    this.addressMapper = addressMapper;
    /**
     * @private
     * @type {CustomerMapper}
     */

    this.customerMapper = customerMapper;
    /**
     * @private
     * @type {MetaMapper}
     */

    this.metaMapper = metaMapper;
    /**
     * @private
     * @type {PaymentMethodIdMapper}
     */

    this.paymentMethodIdMapper = paymentMethodIdMapper;
    /**
     * @private
     * @type {StoreMapper}
     */

    this.storeMapper = storeMapper;
  }
  /**
   * @param {PaymentRequestData} data
   * @returns {Object}
   */


  _createClass(PayloadMapper, [{
    key: "mapToPayload",
    value: function mapToPayload(data) {
      var authToken = data.authToken,
          _data$order = data.order,
          order = _data$order === void 0 ? {} : _data$order,
          _data$payment = data.payment,
          payment = _data$payment === void 0 ? {} : _data$payment,
          _data$paymentMethod = data.paymentMethod,
          paymentMethod = _data$paymentMethod === void 0 ? {} : _data$paymentMethod;
      var payload = (0, _objectAssign.default)({
        amount: order.grandTotal ? order.grandTotal.integerAmount : null,
        bc_auth_token: authToken,
        currency: order.currency,
        gateway: this.paymentMethodIdMapper.mapToId(paymentMethod),
        notify_url: order.callbackUrl,
        order_id: order.orderId ? (0, _utils.toString)(order.orderId) : null,
        page_title: document.title ? document.title : null,
        payment_method_id: paymentMethod.id,
        reference_id: order.orderId ? (0, _utils.toString)(order.orderId) : null,
        return_url: paymentMethod.returnUrl || (order.payment ? order.payment.returnUrl : null)
      }, this.addressMapper.mapToBillingAddress(data), this.customerMapper.mapToCustomer(data), this.metaMapper.mapToMeta(data), this.addressMapper.mapToShippingAddress(data), this.storeMapper.mapToStore(data));
      var _payment$formattedPay = payment.formattedPayload,
          formattedPayload = _payment$formattedPay === void 0 ? {} : _payment$formattedPay;
      (0, _objectAssign.default)(payload, formattedPayload);
      return (0, _utils.omitNil)(payload);
    }
  }]);

  return PayloadMapper;
}();

exports.default = PayloadMapper;
//# sourceMappingURL=payload-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/store-mapper.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/offsite-payment-mappers/store-mapper.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var StoreMapper = /*#__PURE__*/function () {
  function StoreMapper() {
    _classCallCheck(this, StoreMapper);
  }

  _createClass(StoreMapper, [{
    key: "mapToStore",

    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */
    value: function mapToStore(data) {
      var _data$store = data.store,
          store = _data$store === void 0 ? {} : _data$store;
      return (0, _utils.omitNil)({
        store_hash: store.storeHash,
        store_id: store.storeId ? (0, _utils.toString)(store.storeId) : null
      });
    }
  }], [{
    key: "create",

    /**
     * @returns {StoreMapper}
     */
    value: function create() {
      return new StoreMapper();
    }
  }]);

  return StoreMapper;
}();

exports.default = StoreMapper;
//# sourceMappingURL=store-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-method-ids.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-method-ids.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PAYPAL_COMMERCE_CREDIT_CARDS = exports.PAYPAL_COMMERCE_CREDIT = exports.PAYPAL_COMMERCE_ALTERNATIVE_METHODS = exports.PAYPAL_COMMERCE = exports.BRAINTREE_GOOGLEPAY = exports.BRAINTREE_VISACHECKOUT = exports.BRAINTREE_PAYPAL_CREDIT = exports.BRAINTREE_PAYPAL = exports.BRAINTREE = void 0;
var BRAINTREE = 'braintree';
exports.BRAINTREE = BRAINTREE;
var BRAINTREE_PAYPAL = 'braintreepaypal';
exports.BRAINTREE_PAYPAL = BRAINTREE_PAYPAL;
var BRAINTREE_PAYPAL_CREDIT = 'braintreepaypalcredit';
exports.BRAINTREE_PAYPAL_CREDIT = BRAINTREE_PAYPAL_CREDIT;
var BRAINTREE_VISACHECKOUT = 'braintreevisacheckout';
exports.BRAINTREE_VISACHECKOUT = BRAINTREE_VISACHECKOUT;
var BRAINTREE_GOOGLEPAY = 'googlepaybraintree';
exports.BRAINTREE_GOOGLEPAY = BRAINTREE_GOOGLEPAY;
var PAYPAL_COMMERCE = 'paypalcommerce';
exports.PAYPAL_COMMERCE = PAYPAL_COMMERCE;
var PAYPAL_COMMERCE_ALTERNATIVE_METHODS = 'paypalcommercealternativemethods';
exports.PAYPAL_COMMERCE_ALTERNATIVE_METHODS = PAYPAL_COMMERCE_ALTERNATIVE_METHODS;
var PAYPAL_COMMERCE_CREDIT = 'paypalcommercecredit';
exports.PAYPAL_COMMERCE_CREDIT = PAYPAL_COMMERCE_CREDIT;
var PAYPAL_COMMERCE_CREDIT_CARDS = 'paypalcommercecreditcards';
exports.PAYPAL_COMMERCE_CREDIT_CARDS = PAYPAL_COMMERCE_CREDIT_CARDS;
//# sourceMappingURL=payment-method-ids.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-method-mappers/payment-method-id-mapper.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-method-mappers/payment-method-id-mapper.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _paymentMethodTypes = __webpack_require__(/*! ../payment-method-types */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-method-types.js");

var _paymentMethodIds = __webpack_require__(/*! ../payment-method-ids */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-method-ids.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * @param {string} id
 * @return {Boolean}
 */
function isBraintreePaymentMethod(id) {
  switch (id) {
    case _paymentMethodIds.BRAINTREE_PAYPAL:
    case _paymentMethodIds.BRAINTREE_PAYPAL_CREDIT:
    case _paymentMethodIds.BRAINTREE_VISACHECKOUT:
    case _paymentMethodIds.BRAINTREE_GOOGLEPAY:
      return true;

    default:
      return false;
  }
}
/**
 * @param {string} id
 * @return {Boolean}
 */


function isPaypalCommercePaymentMethod(id) {
  switch (id) {
    case _paymentMethodIds.PAYPAL_COMMERCE_CREDIT:
    case _paymentMethodIds.PAYPAL_COMMERCE_CREDIT_CARDS:
    case _paymentMethodIds.PAYPAL_COMMERCE_ALTERNATIVE_METHODS:
      return true;

    default:
      return false;
  }
}

var PaymentMethodIdMapper = /*#__PURE__*/function () {
  function PaymentMethodIdMapper() {
    _classCallCheck(this, PaymentMethodIdMapper);
  }

  _createClass(PaymentMethodIdMapper, [{
    key: "mapToId",

    /**
     * @param {PaymentMethod} paymentMethod
     * @returns {string}
     */
    value: function mapToId(paymentMethod) {
      var id = paymentMethod.id;

      if (paymentMethod.method === _paymentMethodTypes.MULTI_OPTION) {
        id = paymentMethod.gateway;
      }

      if (isBraintreePaymentMethod(id)) {
        return _paymentMethodIds.BRAINTREE;
      }

      if (isPaypalCommercePaymentMethod(id)) {
        return _paymentMethodIds.PAYPAL_COMMERCE;
      }

      return id;
    }
  }], [{
    key: "create",

    /**
     * @returns {PaymentMethodIdMapper}
     */
    value: function create() {
      return new PaymentMethodIdMapper();
    }
  }]);

  return PaymentMethodIdMapper;
}();

exports.default = PaymentMethodIdMapper;
//# sourceMappingURL=payment-method-id-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-method-types.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-method-types.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MULTI_OPTION = exports.CREDIT_CARD = void 0;
var CREDIT_CARD = 'credit-card';
exports.CREDIT_CARD = CREDIT_CARD;
var MULTI_OPTION = 'multi-option';
exports.MULTI_OPTION = MULTI_OPTION;
//# sourceMappingURL=payment-method-types.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-submitter.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-submitter.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _paymentTypes = __webpack_require__(/*! ./payment-types */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-types.js");

var _payloadMapper = _interopRequireDefault(__webpack_require__(/*! ./v1/payment-mappers/payload-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/payload-mapper.js"));

var _requestSender = _interopRequireDefault(__webpack_require__(/*! ../common/http-request/request-sender */ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/request-sender.js"));

var _urlHelper = _interopRequireDefault(__webpack_require__(/*! ./url-helper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/url-helper.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var PaymentSubmitter = /*#__PURE__*/function () {
  _createClass(PaymentSubmitter, null, [{
    key: "create",

    /**
     * @param {Object} config
     * @returns {PaymentSubmitter}
     */
    value: function create(config) {
      var urlHelper = _urlHelper.default.create(config);

      var requestSender = _requestSender.default.create();

      var payloadMapper = _payloadMapper.default.create();

      return new PaymentSubmitter(urlHelper, requestSender, payloadMapper);
    }
    /**
     * @param {UrlHelper} urlHelper
     * @param {RequestSender} requestSender
     * @param {PayloadMapper} payloadMapper
     * @returns {void}
     */

  }]);

  function PaymentSubmitter(urlHelper, requestSender, payloadMapper) {
    _classCallCheck(this, PaymentSubmitter);

    /**
     * @private
     * @type {UrlHelper}
     */
    this.urlHelper = urlHelper;
    /**
     * @private
     * @type {RequestSender}
     */

    this.requestSender = requestSender;
    /**
     * @private
     * @type {PayloadMapper}
     */

    this.payloadMapper = payloadMapper;
  }
  /**
   * @param {PaymentRequestData} data
   * @param {Function} [callback]
   * @returns {void}
   * @throws {Error}
   */


  _createClass(PaymentSubmitter, [{
    key: "submitPayment",
    value: function submitPayment(data, callback) {
      var _data$paymentMethod = data.paymentMethod,
          paymentMethod = _data$paymentMethod === void 0 ? {} : _data$paymentMethod;

      if (paymentMethod.type !== _paymentTypes.API) {
        throw new Error("".concat(paymentMethod.type, " is not supported."));
      }

      var payload = this.payloadMapper.mapToPayload(data);
      var url = this.urlHelper.getPaymentUrl();
      var options = {
        headers: this.payloadMapper.mapToHeaders(data)
      };
      this.requestSender.postRequest(url, payload, options, callback);
    }
  }]);

  return PaymentSubmitter;
}();

exports.default = PaymentSubmitter;
//# sourceMappingURL=payment-submitter.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-types.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-types.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OFFLINE = exports.HOSTED = exports.API = void 0;
var API = 'PAYMENT_TYPE_API';
exports.API = API;
var HOSTED = 'PAYMENT_TYPE_HOSTED';
exports.HOSTED = HOSTED;
var OFFLINE = 'PAYMENT_TYPE_OFFLINE';
exports.OFFLINE = OFFLINE;
//# sourceMappingURL=payment-types.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/url-helper.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/url-helper.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var UrlHelper = /*#__PURE__*/function () {
  _createClass(UrlHelper, null, [{
    key: "create",

    /**
     * @param {Object} config
     * @param {string} config.host
     * @returns {CustomerMapper}
     */
    value: function create(config) {
      return new UrlHelper(config);
    }
    /**
     * @param {Object} config
     * @param {string} config.host
     * @returns {void}
     */

  }]);

  function UrlHelper(config) {
    _classCallCheck(this, UrlHelper);

    /**
     * @private
     * @type {Object}
     */
    this.config = config;
  }
  /**
   * @private
   * @returns {string}
   */


  _createClass(UrlHelper, [{
    key: "getOffsitePaymentUrl",

    /**
     * @returns {string}
     */
    value: function getOffsitePaymentUrl() {
      return "".concat(this.host, "/pay/initialize");
    }
    /**
     * @returns {string}
     */

  }, {
    key: "getPaymentUrl",
    value: function getPaymentUrl() {
      return "".concat(this.host, "/api/public/v1/orders/payments");
    }
    /**
     * @returns {string}
     */

  }, {
    key: "getGenerateClientTokenUrl",
    value: function getGenerateClientTokenUrl() {
      return "".concat(this.host, "/api/v2/public/payments/client_tokens");
    }
  }, {
    key: "host",
    get: function get() {
      return this.config.host;
    }
  }]);

  return UrlHelper;
}();

exports.default = UrlHelper;
//# sourceMappingURL=url-helper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/customer-mapper.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/customer-mapper.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var CustomerMapper = /*#__PURE__*/function () {
  function CustomerMapper() {
    _classCallCheck(this, CustomerMapper);
  }

  _createClass(CustomerMapper, [{
    key: "mapToCustomer",

    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */
    value: function mapToCustomer(data) {
      var _data$customer = data.customer,
          customer = _data$customer === void 0 ? {} : _data$customer,
          _data$quoteMeta = data.quoteMeta,
          quoteMeta = _data$quoteMeta === void 0 ? {} : _data$quoteMeta;
      return (0, _utils.omitNil)({
        customer_group: customer.customerGroupName ? {
          name: customer.customerGroupName
        } : null,
        geo_ip_country_code: quoteMeta.request ? quoteMeta.request.geoCountryCode : null,
        id: customer.customerId ? (0, _utils.toString)(customer.customerId) : null,
        session_token: quoteMeta.request ? quoteMeta.request.sessionHash : null
      });
    }
  }], [{
    key: "create",

    /**
     * @returns {CustomerMapper}
     */
    value: function create() {
      return new CustomerMapper();
    }
  }]);

  return CustomerMapper;
}();

exports.default = CustomerMapper;
//# sourceMappingURL=customer-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/order-mapper.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/order-mapper.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var OrderMapper = /*#__PURE__*/function () {
  function OrderMapper() {
    _classCallCheck(this, OrderMapper);
  }

  _createClass(OrderMapper, [{
    key: "mapToOrder",

    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */
    value: function mapToOrder(data) {
      var _data$order = data.order,
          order = _data$order === void 0 ? {} : _data$order;
      return (0, _utils.omitNil)({
        billing_address: this.mapToBillingAddress(data),
        coupons: this.mapToCoupons(data),
        currency: order.currency,
        id: order.orderId ? (0, _utils.toString)(order.orderId) : null,
        items: this.mapToItems(data),
        shipping: this.mapToShipping(data),
        shipping_address: this.mapToShippingAddress(data),
        token: order.token,
        totals: this.mapToOrderTotals(data)
      });
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @returns {Object}
     */

  }, {
    key: "mapToBillingAddress",
    value: function mapToBillingAddress(data) {
      var _data$customer = data.customer,
          customer = _data$customer === void 0 ? {} : _data$customer;
      var address = this.mapToAddress(data, 'billingAddress');

      if (customer.email) {
        address.email = customer.email;
      }

      return address;
    }
    /**
     * @private
     * @param  {PaymentRequestData} data
     * @return {Shipping[]}
     */

  }, {
    key: "mapToShipping",
    value: function mapToShipping(data) {
      var _ref = data.shippingOption || {},
          description = _ref.description,
          transitTime = _ref.transitTime;

      if (description) {
        return [(0, _utils.omitEmptyStringAndNil)({
          method: description,
          transit_time: transitTime
        })];
      }

      return [];
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @returns {Coupon[]}
     */

  }, {
    key: "mapToCoupons",
    value: function mapToCoupons(_ref2) {
      var _ref2$order = _ref2.order,
          order = _ref2$order === void 0 ? {} : _ref2$order;

      if (order.coupon && order.coupon.coupons) {
        return order.coupon.coupons.map(function (_ref3) {
          var code = _ref3.code;
          return {
            code: code
          };
        });
      }

      return [];
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @returns {Object}
     */

  }, {
    key: "mapToShippingAddress",
    value: function mapToShippingAddress(data) {
      return this.mapToAddress(data, 'shippingAddress');
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @param {string} addressKey
     * @returns {Object}
     */

  }, {
    key: "mapToAddress",
    value: function mapToAddress(data, addressKey) {
      var address = data[addressKey] || {};
      return (0, _utils.omitEmptyStringAndNil)({
        city: address.city,
        company: address.company,
        country_code: address.countryCode,
        country: address.country,
        first_name: address.firstName,
        last_name: address.lastName,
        phone: address.phone,
        state_code: address.provinceCode,
        state: address.province,
        street_1: address.addressLine1,
        street_2: address.addressLine2,
        zip: address.postCode
      });
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @returns {Object}
     */

  }, {
    key: "mapToItems",
    value: function mapToItems(data) {
      var _data$cart = data.cart,
          cart = _data$cart === void 0 ? {
        items: []
      } : _data$cart;
      return cart.items.map(function (itemData) {
        return (0, _utils.omitNil)({
          code: itemData.id,
          variant_id: itemData.variantId,
          name: itemData.name,
          price: itemData.integerAmount,
          unit_price: itemData.integerUnitPrice,
          quantity: itemData.quantity,
          sku: itemData.sku
        });
      });
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @returns {Object}
     */

  }, {
    key: "mapToOrderTotals",
    value: function mapToOrderTotals(data) {
      var _data$order2 = data.order,
          order = _data$order2 === void 0 ? {} : _data$order2;
      return (0, _utils.omitNil)({
        grand_total: order.grandTotal ? order.grandTotal.integerAmount : null,
        handling: order.handling ? order.handling.integerAmount : null,
        shipping: order.shipping ? order.shipping.integerAmount : null,
        subtotal: order.subtotal ? order.subtotal.integerAmount : null,
        tax: order.taxTotal ? order.taxTotal.integerAmount : null
      });
    }
  }], [{
    key: "create",

    /**
     * @returns {OrderMapper}
     */
    value: function create() {
      return new OrderMapper();
    }
  }]);

  return OrderMapper;
}();

exports.default = OrderMapper;
//# sourceMappingURL=order-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/payload-mapper.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/payload-mapper.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

var _customerMapper = _interopRequireDefault(__webpack_require__(/*! ./customer-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/customer-mapper.js"));

var _orderMapper = _interopRequireDefault(__webpack_require__(/*! ./order-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/order-mapper.js"));

var _paymentMapper = _interopRequireDefault(__webpack_require__(/*! ./payment-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/payment-mapper.js"));

var _storeMapper = _interopRequireDefault(__webpack_require__(/*! ./store-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/store-mapper.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var PayloadMapper = /*#__PURE__*/function () {
  _createClass(PayloadMapper, null, [{
    key: "create",

    /**
     * @returns {PayloadMapper}
     */
    value: function create() {
      var customerMapper = _customerMapper.default.create();

      var orderMapper = _orderMapper.default.create();

      var paymentMapper = _paymentMapper.default.create();

      var storeMapper = _storeMapper.default.create();

      return new PayloadMapper(customerMapper, orderMapper, paymentMapper, storeMapper);
    }
    /**
     * @param {CustomerMapper} customerMapper
     * @param {OrderMapper} orderMapper
     * @param {PaymentMapper} paymentMapper
     * @param {StoreMapper} storeMapper
     */

  }]);

  function PayloadMapper(customerMapper, orderMapper, paymentMapper, storeMapper) {
    _classCallCheck(this, PayloadMapper);

    /**
     * @private
     * @type {CustomerMapper}
     */
    this.customerMapper = customerMapper;
    /**
     * @private
     * @type {OrderMapper}
     */

    this.orderMapper = orderMapper;
    /**
     * @private
     * @type {PaymentMapper}
     */

    this.paymentMapper = paymentMapper;
    /**
     * @private
     * @type {StoreMapper}
     */

    this.storeMapper = storeMapper;
  }
  /**
   * @param {PaymentRequestData} data
   * @returns {Object}
   */


  _createClass(PayloadMapper, [{
    key: "mapToPayload",
    value: function mapToPayload(data) {
      var _data$order = data.order,
          order = _data$order === void 0 ? {} : _data$order,
          additionalAction = data.additionalAction;
      return (0, _utils.omitNil)({
        customer: this.customerMapper.mapToCustomer(data),
        notify_url: order.callbackUrl,
        order: this.orderMapper.mapToOrder(data),
        payment: this.paymentMapper.mapToPayment(data),
        store: this.storeMapper.mapToStore(data),
        additional_action: additionalAction
      });
    }
    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */

  }, {
    key: "mapToHeaders",
    value: function mapToHeaders(data) {
      var authToken = data.authToken;
      return (0, _utils.omitNil)({
        Authorization: authToken
      });
    }
  }]);

  return PayloadMapper;
}();

exports.default = PayloadMapper;
//# sourceMappingURL=payload-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/payment-mapper.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/payment-mapper.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectAssign = _interopRequireDefault(__webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js"));

var _utils = __webpack_require__(/*! ../../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

var _paymentMethodIdMapper = _interopRequireDefault(__webpack_require__(/*! ../../payment-method-mappers/payment-method-id-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-method-mappers/payment-method-id-mapper.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var PaymentMapper = /*#__PURE__*/function () {
  _createClass(PaymentMapper, null, [{
    key: "create",

    /**
     * @param {PaymentMethodIdMapper} paymentMethodIdMapper
     * @returns {PaymentMapper}
     */
    value: function create() {
      var paymentMethodIdMapper = _paymentMethodIdMapper.default.create();

      return new PaymentMapper(paymentMethodIdMapper);
    }
    /**
     * @param {PaymentMethodIdMapper} paymentMethodIdMapper
     * @returns {void}
     */

  }]);

  function PaymentMapper(paymentMethodIdMapper) {
    _classCallCheck(this, PaymentMapper);

    /**
     * @private
     * @type {PaymentMethodIdMapper}
     */
    this.paymentMethodIdMapper = paymentMethodIdMapper;
  }
  /**
   * @param {PaymentRequestData} data
   * @returns {Object}
   */


  _createClass(PaymentMapper, [{
    key: "mapToPayment",
    value: function mapToPayment(data) {
      var _data$order = data.order,
          order = _data$order === void 0 ? {} : _data$order,
          _data$orderMeta = data.orderMeta,
          orderMeta = _data$orderMeta === void 0 ? {} : _data$orderMeta,
          _data$payment = data.payment,
          payment = _data$payment === void 0 ? {} : _data$payment,
          _data$paymentMethod = data.paymentMethod,
          paymentMethod = _data$paymentMethod === void 0 ? {} : _data$paymentMethod;
      var payload = {
        device_info: payment.deviceSessionId ? payment.deviceSessionId : null,
        device: orderMeta.deviceFingerprint ? {
          fingerprint_id: orderMeta.deviceFingerprint
        } : null,
        gateway: this.paymentMethodIdMapper.mapToId(paymentMethod),
        notify_url: order.callbackUrl,
        return_url: paymentMethod.returnUrl || (order.payment ? order.payment.returnUrl : null),
        vault_payment_instrument: !payment.instrumentId ? payment.shouldSaveInstrument : null,
        set_as_default_stored_instrument: payment.instrumentId || payment.shouldSaveInstrument ? payment.shouldSetAsDefaultInstrument : null
      };
      var method = paymentMethod.method;

      if (method) {
        (0, _objectAssign.default)(payload, {
          method: method
        });
      }

      var nonce = payment.nonce || paymentMethod.nonce;

      if (payment.formattedPayload) {
        (0, _objectAssign.default)(payload, payment.formattedPayload);
      } else if (payment.instrumentId) {
        (0, _objectAssign.default)(payload, {
          bigpay_token: this.mapToBigPayToken(data)
        });
      } else if (nonce) {
        (0, _objectAssign.default)(payload, {
          credit_card_token: {
            token: nonce
          }
        });
      } else if (payment.cryptogramId) {
        (0, _objectAssign.default)(payload, {
          credit_card_cryptogram: this.mapToCryptogram(data)
        });
      } else {
        (0, _objectAssign.default)(payload, {
          credit_card: this.mapToCreditCard(data)
        });
      }

      return (0, _utils.omitNil)(payload);
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @returns {Object}
     */

  }, {
    key: "mapToCreditCard",
    value: function mapToCreditCard(data) {
      var _data$payment2 = data.payment,
          payment = _data$payment2 === void 0 ? {} : _data$payment2;
      return (0, _utils.omitNil)({
        account_name: payment.ccName,
        month: payment.ccExpiry ? (0, _utils.toNumber)(payment.ccExpiry.month) : null,
        number: payment.ccNumber,
        verification_value: payment.ccCvv,
        year: payment.ccExpiry ? (0, _utils.toNumber)(payment.ccExpiry.year) : null,
        customer_code: payment.ccCustomerCode,
        three_d_secure: payment.threeDSecure,
        hosted_form_nonce: payment.hostedFormNonce
      });
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @return {Object}
     */

  }, {
    key: "mapToBigPayToken",
    value: function mapToBigPayToken(_ref) {
      var payment = _ref.payment;
      return (0, _utils.omitNil)({
        credit_card_number_confirmation: payment.ccNumber,
        token: payment.instrumentId,
        verification_value: payment.ccCvv,
        verification_nonce: payment.nonce,
        three_d_secure: payment.threeDSecure
      });
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @return {Object}
     */

  }, {
    key: "mapToCryptogram",
    value: function mapToCryptogram(_ref2) {
      var payment = _ref2.payment;
      return (0, _utils.omitNil)({
        payment_cryptogram: payment.cryptogramId,
        eci: payment.eci,
        xid: payment.transactionId,
        month: payment.ccExpiry ? (0, _utils.toNumber)(payment.ccExpiry.month) : null,
        number: payment.ccNumber,
        year: payment.ccExpiry ? (0, _utils.toNumber)(payment.ccExpiry.year) : null,
        account_mask: payment.accountMask
      });
    }
  }]);

  return PaymentMapper;
}();

exports.default = PaymentMapper;
//# sourceMappingURL=payment-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/store-mapper.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/v1/payment-mappers/store-mapper.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var StoreMapper = /*#__PURE__*/function () {
  function StoreMapper() {
    _classCallCheck(this, StoreMapper);
  }

  _createClass(StoreMapper, [{
    key: "mapToStore",

    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */
    value: function mapToStore(data) {
      var _data$store = data.store,
          store = _data$store === void 0 ? {} : _data$store;
      return (0, _utils.omitNil)({
        hash: store.storeHash,
        id: store.storeId ? (0, _utils.toString)(store.storeId) : null,
        name: store.storeName
      });
    }
  }], [{
    key: "create",

    /**
     * @returns {StoreMapper}
     */
    value: function create() {
      return new StoreMapper();
    }
  }]);

  return StoreMapper;
}();

exports.default = StoreMapper;
//# sourceMappingURL=store-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/cart-mapper.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/cart-mapper.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var CartMapper = /*#__PURE__*/function () {
  function CartMapper() {
    _classCallCheck(this, CartMapper);
  }

  _createClass(CartMapper, [{
    key: "mapToCart",

    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */
    value: function mapToCart(data) {
      var _data$cart = data.cart,
          cart = _data$cart === void 0 ? {} : _data$cart;
      return (0, _utils.omitNil)({
        currency_code: cart.currency,
        items: this.mapToItems(data),
        totals: this.mapToOrderTotals(data)
      });
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @returns {Object[]}
     */

  }, {
    key: "mapToItems",
    value: function mapToItems(data) {
      var _this = this;

      var _data$cart2 = data.cart,
          cart = _data$cart2 === void 0 ? {
        items: []
      } : _data$cart2;
      return cart.items.map(function (itemData) {
        return (0, _utils.omitNil)({
          discount_amount: itemData.integerDiscount,
          name: itemData.name,
          price: itemData.integerAmount,
          unit_price: itemData.integerUnitPrice,
          quantity: itemData.quantity,
          sku: itemData.sku,
          tax_amount: itemData.integerTax,
          amount: itemData.integerAmountAfterDiscount,
          type: _this.mapToType(itemData)
        });
      });
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @returns {Object}
     */

  }, {
    key: "mapToOrderTotals",
    value: function mapToOrderTotals(data) {
      var _data$cart3 = data.cart,
          cart = _data$cart3 === void 0 ? {} : _data$cart3;
      return (0, _utils.omitNil)({
        discount_total: cart.discount ? cart.discount.integerAmount : null,
        grand_total: cart.grandTotal ? cart.grandTotal.integerAmount : null,
        shipping_total: cart.shipping ? cart.shipping.integerAmount : null,
        subtotal: cart.subtotal ? cart.subtotal.integerAmount : null,
        surcharge_total: cart.handling ? cart.handling.integerAmount : null,
        tax_total: cart.taxTotal ? cart.taxTotal.integerAmount : null
      });
    }
    /**
     * @private
     * @param {Object} itemData
     * @returns {Object}
     */

  }, {
    key: "mapToType",
    value: function mapToType(itemData) {
      var types = {
        ItemPhysicalEntity: 'physical',
        ItemDigitalEntity: 'digital',
        ItemGiftCertificateEntity: 'gift_card'
      };
      return types[itemData.type];
    }
  }], [{
    key: "create",

    /**
     * @returns {CartMapper}
     */
    value: function create() {
      return new CartMapper();
    }
  }]);

  return CartMapper;
}();

exports.default = CartMapper;
//# sourceMappingURL=cart-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/client-token-mapper.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/client-token-mapper.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

var _cartMapper = _interopRequireDefault(__webpack_require__(/*! ./cart-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/cart-mapper.js"));

var _gatewayMapper = _interopRequireDefault(__webpack_require__(/*! ./gateway-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/gateway-mapper.js"));

var _quoteMapper = _interopRequireDefault(__webpack_require__(/*! ./quote-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/quote-mapper.js"));

var _storeMapper = _interopRequireDefault(__webpack_require__(/*! ./store-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/store-mapper.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ClientTokenMapper = /*#__PURE__*/function () {
  _createClass(ClientTokenMapper, null, [{
    key: "create",

    /**
     * @returns {ClientTokenMapper}
     */
    value: function create() {
      var cartMapper = _cartMapper.default.create();

      var gatewayMapper = _gatewayMapper.default.create();

      var quoteMapper = _quoteMapper.default.create();

      var storeMapper = _storeMapper.default.create();

      return new ClientTokenMapper(cartMapper, gatewayMapper, quoteMapper, storeMapper);
    }
    /**
     * @param {CartMapper} cartMapper
     * @param {GatewayMapper} gatewayMapper
     * @param {QuoteMapper} quoteMapper
     * @param {StoreMapper} storeMapper
     */

  }]);

  function ClientTokenMapper(cartMapper, gatewayMapper, quoteMapper, storeMapper) {
    _classCallCheck(this, ClientTokenMapper);

    /**
     * @private
     * @type {CartMapper}
     */
    this.cartMapper = cartMapper;
    /**
     * @private
     * @type {GatewayMapper}
     */

    this.gatewayMapper = gatewayMapper;
    /**
     * @private
     * @type {QuoteMapper}
     */

    this.quoteMapper = quoteMapper;
    /**
     * @private
     * @type {StoreMapper}
     */

    this.storeMapper = storeMapper;
  }
  /**
   * @param {PaymentRequestData} data
   * @returns {Object}
   */


  _createClass(ClientTokenMapper, [{
    key: "mapToClientToken",
    value: function mapToClientToken(data) {
      return (0, _utils.omitNil)({
        cart: this.cartMapper.mapToCart(data),
        gateway: this.gatewayMapper.mapToGateway(data),
        quote: this.quoteMapper.mapToQuote(data),
        store: this.storeMapper.mapToStore(data)
      });
    }
  }]);

  return ClientTokenMapper;
}();

exports.default = ClientTokenMapper;
//# sourceMappingURL=client-token-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/gateway-mapper.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/gateway-mapper.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

var _paymentMethodIdMapper = _interopRequireDefault(__webpack_require__(/*! ../../payment-method-mappers/payment-method-id-mapper */ "./node_modules/@bigcommerce/bigpay-client/lib/payment/payment-method-mappers/payment-method-id-mapper.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var GatewayMapper = /*#__PURE__*/function () {
  _createClass(GatewayMapper, null, [{
    key: "create",

    /**
     * @returns {GatewayMapper}
     */
    value: function create() {
      var paymentMethodIdMapper = _paymentMethodIdMapper.default.create();

      return new GatewayMapper(paymentMethodIdMapper);
    }
    /**
     * @param {PaymentMethodIdMapper} paymentMethodIdMapper
     * @returns {void}
     */

  }]);

  function GatewayMapper(paymentMethodIdMapper) {
    _classCallCheck(this, GatewayMapper);

    /**
     * @private
     * @type {PaymentMethodIdMapper}
     */
    this.paymentMethodIdMapper = paymentMethodIdMapper;
  }
  /**
   * @param {PaymentRequestData} data
   * @returns {Object}
   */


  _createClass(GatewayMapper, [{
    key: "mapToGateway",
    value: function mapToGateway(data) {
      var _data$paymentMethod = data.paymentMethod,
          paymentMethod = _data$paymentMethod === void 0 ? {} : _data$paymentMethod;
      return (0, _utils.omitNil)({
        name: this.paymentMethodIdMapper.mapToId(paymentMethod)
      });
    }
  }]);

  return GatewayMapper;
}();

exports.default = GatewayMapper;
//# sourceMappingURL=gateway-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/quote-mapper.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/quote-mapper.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var QuoteMapper = /*#__PURE__*/function () {
  function QuoteMapper() {
    _classCallCheck(this, QuoteMapper);
  }

  _createClass(QuoteMapper, [{
    key: "mapToQuote",

    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */
    value: function mapToQuote(data) {
      return (0, _utils.omitNil)({
        billing_address: this.mapToAddress(data, 'billingAddress'),
        shipping_address: this.mapToAddress(data, 'shippingAddress')
      });
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @param {string} addressKey
     * @returns {Object}
     */

  }, {
    key: "mapToAddress",
    value: function mapToAddress(data, addressKey) {
      var _data$customer = data.customer,
          customer = _data$customer === void 0 ? {} : _data$customer;
      var address = data[addressKey] || {};
      return (0, _utils.omitNil)({
        address_line_1: address.addressLine1,
        address_line_2: address.addressLine2,
        city: address.city,
        company: address.company,
        country_code: address.countryCode,
        email: customer.email,
        first_name: address.firstName,
        last_name: address.lastName,
        phone: address.phone,
        postal_code: address.postCode,
        state: address.province
      });
    }
  }], [{
    key: "create",

    /**
     * @returns {QuoteMapper}
     */
    value: function create() {
      return new QuoteMapper();
    }
  }]);

  return QuoteMapper;
}();

exports.default = QuoteMapper;
//# sourceMappingURL=quote-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/store-mapper.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/payment/v2/payment-mappers/store-mapper.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = __webpack_require__(/*! ../../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var StoreMapper = /*#__PURE__*/function () {
  function StoreMapper() {
    _classCallCheck(this, StoreMapper);
  }

  _createClass(StoreMapper, [{
    key: "mapToStore",

    /**
     * @param {PaymentRequestData} data
     * @returns {Object}
     */
    value: function mapToStore(data) {
      return (0, _utils.omitNil)({
        locale: this.mapToLocale(data),
        store_identity: this.mapToIdentity(data),
        urls: this.mapToUrls(data)
      });
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @returns {Object}
     */

  }, {
    key: "mapToLocale",
    value: function mapToLocale(data) {
      var _data$store = data.store,
          store = _data$store === void 0 ? {} : _data$store;
      return (0, _utils.omitNil)({
        country_code: store.countryCode,
        currency_code: store.currencyCode,
        language_code: store.storeLanguage
      });
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @returns {Object}
     */

  }, {
    key: "mapToIdentity",
    value: function mapToIdentity(data) {
      var _data$store2 = data.store,
          store = _data$store2 === void 0 ? {} : _data$store2;
      return (0, _utils.omitNil)({
        id: store.storeId ? (0, _utils.toNumber)(store.storeId) : null,
        name: store.storeName
      });
    }
    /**
     * @private
     * @param {PaymentRequestData} data
     * @returns {Object}
     */

  }, {
    key: "mapToUrls",
    value: function mapToUrls(data) {
      var _data$store3 = data.store,
          store = _data$store3 === void 0 ? {} : _data$store3;
      return (0, _utils.omitNil)({
        cart: store.cartLink,
        checkout: store.checkoutLink,
        confirmation: store.orderConfirmationLink,
        home: store.shopPath
      });
    }
  }], [{
    key: "create",

    /**
     * @returns {StoreMapper}
     */
    value: function create() {
      return new StoreMapper();
    }
  }]);

  return StoreMapper;
}();

exports.default = StoreMapper;
//# sourceMappingURL=store-mapper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/store/store-request-sender.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/store/store-request-sender.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _requestSender = _interopRequireDefault(__webpack_require__(/*! ../common/http-request/request-sender */ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/request-sender.js"));

var _methodTypes = __webpack_require__(/*! ../common/http-request/method-types */ "./node_modules/@bigcommerce/bigpay-client/lib/common/http-request/method-types.js");

var _urlHelper = _interopRequireDefault(__webpack_require__(/*! ./url-helper */ "./node_modules/@bigcommerce/bigpay-client/lib/store/url-helper.js"));

var _mappers = __webpack_require__(/*! ./v2/mappers */ "./node_modules/@bigcommerce/bigpay-client/lib/store/v2/mappers/index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var StoreRequestSender = /*#__PURE__*/function () {
  _createClass(StoreRequestSender, null, [{
    key: "create",

    /**
     * @param {Object} config
     * @returns {StoreRequestSender}
     */
    value: function create(config) {
      var urlHelper = _urlHelper.default.create(config);

      var requestSender = _requestSender.default.create();

      return new StoreRequestSender(urlHelper, requestSender);
    }
    /**
     * @param {UrlHelper} urlHelper
     * @param {RequestSender} requestSender
     * @returns {void}
     */

  }]);

  function StoreRequestSender(urlHelper, requestSender) {
    _classCallCheck(this, StoreRequestSender);

    /**
     * @private
     * @type {UrlHelper}
     */
    this.urlHelper = urlHelper;
    /**
     * @private
     * @type {RequestSender}
     */

    this.requestSender = requestSender;
  }
  /**
   * @param {Object} data
   * @param {Function} [callback]
   * @return {void}
   */


  _createClass(StoreRequestSender, [{
    key: "loadInstruments",
    value: function loadInstruments(data, callback) {
      var url = this.urlHelper.getInstrumentsUrl(data.storeId, data.customerId, data.currencyCode);
      var options = {
        headers: (0, _mappers.mapToHeaders)(data)
      };
      this.requestSender.sendRequest(url, null, options, callback);
    }
    /**
     * @param {Object} data
     * @param {Function} [callback]
     * @return {void}
     */

  }, {
    key: "loadInstrumentsWithAddress",
    value: function loadInstrumentsWithAddress(data, callback) {
      var url = this.urlHelper.getTrustedShippingAddressUrl(data.storeId, data.customerId, data.currencyCode);
      var payload = (0, _mappers.mapToTrustedShippingAddressPayload)(data);
      var options = {
        method: _methodTypes.POST,
        headers: (0, _mappers.mapToHeaders)(data)
      };
      this.requestSender.postRequest(url, payload, options, callback);
    }
    /**
     * @param {Object} data
     * @param {Function} [callback]
     * @return {void}
     */

  }, {
    key: "deleteShopperInstrument",
    value: function deleteShopperInstrument(data, callback) {
      var url = this.urlHelper.getInstrumentByIdUrl(data.storeId, data.customerId, data.instrumentId, data.currencyCode);
      var options = {
        method: _methodTypes.DELETE,
        headers: (0, _mappers.mapToHeaders)(data)
      };
      this.requestSender.sendRequest(url, null, options, callback);
    }
  }]);

  return StoreRequestSender;
}();

exports.default = StoreRequestSender;
//# sourceMappingURL=store-request-sender.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/store/url-helper.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/store/url-helper.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var UrlHelper = /*#__PURE__*/function () {
  _createClass(UrlHelper, null, [{
    key: "create",

    /**
     * @param {Object} config
     * @param {string} config.host
     * @returns {CustomerMapper}
     */
    value: function create(config) {
      return new UrlHelper(config);
    }
    /**
     * @param {Object} config
     * @param {string} config.host
     * @returns {void}
     */

  }]);

  function UrlHelper(config) {
    _classCallCheck(this, UrlHelper);

    /**
     * @private
     * @type {Object}
     */
    this.config = config;
  }
  /**
   * @private
   * @returns {string}
   * @throws {Error}
   */


  _createClass(UrlHelper, [{
    key: "getInstrumentsUrl",

    /**
     * @param {number} storeId
     * @param {number} customerId
     * @param {string} currencyCode
     * @returns {string}
     */
    value: function getInstrumentsUrl(storeId, customerId, currencyCode) {
      return "".concat(this.host, "/api/v3/stores/").concat(storeId, "/shoppers/").concat(customerId, "/instruments?currency_code=").concat(currencyCode);
    }
    /**
     * @param {number} storeId
     * @param {number} customerId
     * @param {string} currencyCode
     * @return {string}
     */

  }, {
    key: "getTrustedShippingAddressUrl",
    value: function getTrustedShippingAddressUrl(storeId, customerId, currencyCode) {
      return "".concat(this.host, "/api/v3/stores/").concat(storeId, "/shoppers/").concat(customerId, "/instruments/trusted_shipping_address?currency_code=").concat(currencyCode);
    }
    /**
     * @param {number} storeId
     * @param {number} customerId
     * @param {number} instrumentId
     * @param {string} currencyCode
     * @returns {string}
     */

  }, {
    key: "getInstrumentByIdUrl",
    value: function getInstrumentByIdUrl(storeId, customerId, instrumentId, currencyCode) {
      return "".concat(this.host, "/api/v2/stores/").concat(storeId, "/shoppers/").concat(customerId, "/instruments/").concat(instrumentId, "?currency_code=").concat(currencyCode);
    }
  }, {
    key: "host",
    get: function get() {
      if (!this.config || !this.config.host) {
        throw new Error('Host URL unavailable or not supplied.');
      }

      return this.config.host;
    }
  }]);

  return UrlHelper;
}();

exports.default = UrlHelper;
//# sourceMappingURL=url-helper.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/bigpay-client/lib/store/v2/mappers/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@bigcommerce/bigpay-client/lib/store/v2/mappers/index.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapToInstrumentPayload = mapToInstrumentPayload;
exports.mapToTrustedShippingAddressPayload = mapToTrustedShippingAddressPayload;
exports.mapToHeaders = mapToHeaders;

var _utils = __webpack_require__(/*! ../../../common/utils */ "./node_modules/@bigcommerce/bigpay-client/lib/common/utils/index.js");

/**
 * @param {Object} [data={}]
 * @param {Object} data.billingAddress
 * @param {CreditCard} data.creditCard
 * @param {boolean} data.defaultInstrument
 * @param {string} data.providerName
 * @return {Object}
 */
function mapToInstrumentPayload() {
  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var providerName = data.providerName,
      defaultInstrument = data.defaultInstrument;
  var provider = (0, _utils.omitNil)({
    name: providerName
  });
  return (0, _utils.omitNil)({
    provider: provider,
    credit_card: mapToCreditCard(data),
    billing_address: mapToAddress(data.billingAddress),
    default_instrument: defaultInstrument
  });
}
/**
 * @param {Object} [data={}]
 * @param {Object} data.shippingAddress
 * @return {Object}
 */


function mapToTrustedShippingAddressPayload() {
  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _utils.omitNil)({
    shipping_address: mapToAddress(data.shippingAddress)
  });
}
/**
 * @param {Object} data
 * @param {string} data.authToken
 * @return {Object}
 */


function mapToHeaders() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      Authorization = _ref.authToken;

  return (0, _utils.omitNil)({
    Authorization: Authorization
  });
}
/**
 * @param {AddressData} address
 * @return {Object}
 */


function mapToAddress() {
  var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var state = mapToState(address.provinceCode, address.province);
  return (0, _utils.omitNil)({
    address_line_1: address.addressLine1,
    address_line_2: address.addressLine2,
    city: address.city,
    company: address.company,
    country_code: address.countryCode,
    email: address.email,
    first_name: address.firstName,
    last_name: address.lastName,
    phone: address.phone,
    postal_code: address.postCode,
    state: state
  });
}
/**
 * @param {string} code
 * @param {string} name
 * @return {Object}
 */


function mapToState(code, name) {
  return (0, _utils.omitNil)({
    code: code,
    name: name
  });
}
/**
 * @param {Object} data
 * @param {CreditCard} data.creditCard
 * @return {Object}
 */


function mapToCreditCard(_ref2) {
  var _ref2$creditCard = _ref2.creditCard,
      creditCard = _ref2$creditCard === void 0 ? {} : _ref2$creditCard;
  var threeDSecure = (0, _utils.omitNil)(creditCard.threeDSecure);
  return (0, _utils.omitNil)({
    cardholder_name: creditCard.cardholderName,
    number: creditCard.number,
    month: creditCard.month,
    year: creditCard.year,
    verification_code: creditCard.verificationCode,
    issue_month: creditCard.issueMonth,
    issue_year: creditCard.issueYear,
    issue_number: creditCard.issueNumber,
    track_data: creditCard.trackData,
    is_manual_entry: creditCard.isManualEntry,
    icc_data: creditCard.iccData,
    fallback_reason: creditCard.fallbackReason,
    is_contactless: creditCard.isContactless,
    encrypted_pin_cryptogram: creditCard.encryptedPinCryptogram,
    encrypted_pin_ksn: creditCard.encryptedPinKsn,
    three_d_secure: threeDSecure
  });
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/checkout-sdk/dist/checkout-sdk.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@bigcommerce/checkout-sdk/dist/checkout-sdk.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=194)}([function(t,e){t.exports=__webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js")},function(t,e){t.exports=__webpack_require__(/*! @bigcommerce/data-store */ "./node_modules/@bigcommerce/data-store/lib/index.js")},function(t,e){t.exports=__webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js")},function(t,e){t.exports=__webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js")},,function(t,e){t.exports=__webpack_require__(/*! @bigcommerce/memoize */ "./node_modules/@bigcommerce/memoize/lib/index.js")},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.CreateConsignmentsRequested="CREATE_CONSIGNMENTS_REQUESTED",t.CreateConsignmentsSucceeded="CREATE_CONSIGNMENTS_SUCCEEDED",t.CreateConsignmentsFailed="CREATE_CONSIGNMENTS_FAILED",t.UpdateConsignmentRequested="UPDATE_CONSIGNMENT_REQUESTED",t.UpdateConsignmentSucceeded="UPDATE_CONSIGNMENT_SUCCEEDED",t.UpdateConsignmentFailed="UPDATE_CONSIGNMENT_FAILED",t.DeleteConsignmentRequested="DELETE_CONSIGNMENT_REQUESTED",t.DeleteConsignmentSucceeded="DELETE_CONSIGNMENT_SUCCEEDED",t.DeleteConsignmentFailed="DELETE_CONSIGNMENT_FAILED",t.UpdateShippingOptionRequested="UPDATE_SHIPPING_OPTION_REQUESTED",t.UpdateShippingOptionSucceeded="UPDATE_SHIPPING_OPTION_SUCCEEDED",t.UpdateShippingOptionFailed="UPDATE_SHIPPING_OPTION_FAILED",t.LoadShippingOptionsRequested="LOAD_SHIPPING_OPTIONS_REQUESTED",t.LoadShippingOptionsSucceeded="LOAD_SHIPPING_OPTIONS_SUCCEEDED",t.LoadShippingOptionsFailed="LOAD_SHIPPING_OPTIONS_FAILED"}(r||(r={}))},,function(t,e){t.exports=__webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js")},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.UpdateAddressFailed="SHIPPING_STRATEGY_UPDATE_ADDRESS_FAILED",t.UpdateAddressRequested="SHIPPING_STRATEGY_UPDATE_ADDRESS_REQUESTED",t.UpdateAddressSucceeded="SHIPPING_STRATEGY_UPDATE_ADDRESS_SUCCEEDED",t.SelectOptionFailed="SHIPPING_STRATEGY_SELECT_OPTION_FAILED",t.SelectOptionRequested="SHIPPING_STRATEGY_SELECT_OPTION_REQUESTED",t.SelectOptionSucceeded="SHIPPING_STRATEGY_SELECT_OPTION_SUCCEEDED",t.InitializeFailed="SHIPPING_STRATEGY_INITIALIZE_FAILED",t.InitializeRequested="SHIPPING_STRATEGY_INITIALIZE_REQUESTED",t.InitializeSucceeded="SHIPPING_STRATEGY_INITIALIZE_SUCCEEDED",t.DeinitializeFailed="SHIPPING_STRATEGY_DEINITIALIZE_FAILED",t.DeinitializeRequested="SHIPPING_STRATEGY_DEINITIALIZE_REQUESTED",t.DeinitializeSucceeded="SHIPPING_STRATEGY_DEINITIALIZE_SUCCEEDED",t.WidgetInteractionStarted="SHIPPING_STRATEGY_WIDGET_INTERACTION_STARTED",t.WidgetInteractionFinished="SHIPPING_STRATEGY_WIDGET_INTERACTION_FINISHED",t.WidgetInteractionFailed="SHIPPING_STRATEGY_WIDGET_INTERACTION_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.SignInFailed="CUSTOMER_STRATEGY_SIGN_IN_FAILED",t.SignInRequested="CUSTOMER_STRATEGY_SIGN_IN_REQUESTED",t.SignInSucceeded="CUSTOMER_STRATEGY_SIGN_IN_SUCCEEDED",t.SignOutFailed="CUSTOMER_STRATEGY_SIGN_OUT_FAILED",t.SignOutRequested="CUSTOMER_STRATEGY_SIGN_OUT_REQUESTED",t.SignOutSucceeded="CUSTOMER_STRATEGY_SIGN_OUT_SUCCEEDED",t.InitializeFailed="CUSTOMER_STRATEGY_INITIALIZE_FAILED",t.InitializeRequested="CUSTOMER_STRATEGY_INITIALIZE_REQUESTED",t.InitializeSucceeded="CUSTOMER_STRATEGY_INITIALIZE_SUCCEEDED",t.DeinitializeFailed="CUSTOMER_STRATEGY_DEINITIALIZE_FAILED",t.DeinitializeRequested="CUSTOMER_STRATEGY_DEINITIALIZE_REQUESTED",t.DeinitializeSucceeded="CUSTOMER_STRATEGY_DEINITIALIZE_SUCCEEDED",t.WidgetInteractionStarted="CUSTOMER_STRATEGY_WIDGET_INTERACTION_STARTED",t.WidgetInteractionFinished="CUSTOMER_STRATEGY_WIDGET_INTERACTION_FINISHED",t.WidgetInteractionFailed="CUSTOMER_STRATEGY_WIDGET_INTERACTION_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.ExecuteFailed="PAYMENT_STRATEGY_EXECUTE_FAILED",t.ExecuteRequested="PAYMENT_STRATEGY_EXECUTE_REQUESTED",t.ExecuteSucceeded="PAYMENT_STRATEGY_EXECUTE_SUCCEEDED",t.FinalizeFailed="PAYMENT_STRATEGY_FINALIZE_FAILED",t.FinalizeRequested="PAYMENT_STRATEGY_FINALIZE_REQUESTED",t.FinalizeSucceeded="PAYMENT_STRATEGY_FINALIZE_SUCCEEDED",t.InitializeFailed="PAYMENT_STRATEGY_INITIALIZE_FAILED",t.InitializeRequested="PAYMENT_STRATEGY_INITIALIZE_REQUESTED",t.InitializeSucceeded="PAYMENT_STRATEGY_INITIALIZE_SUCCEEDED",t.DeinitializeFailed="PAYMENT_STRATEGY_DEINITIALIZE_FAILED",t.DeinitializeRequested="PAYMENT_STRATEGY_DEINITIALIZE_REQUESTED",t.DeinitializeSucceeded="PAYMENT_STRATEGY_DEINITIALIZE_SUCCEEDED",t.WidgetInteractionStarted="PAYMENT_STRATEGY_WIDGET_INTERACTION_STARTED",t.WidgetInteractionFinished="PAYMENT_STRATEGY_WIDGET_INTERACTION_FINISHED",t.WidgetInteractionFailed="PAYMENT_STRATEGY_WIDGET_INTERACTION_FAILED"}(r||(r={}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r,i=n(0),o=n(22);!function(t){t[t.MissingBillingAddress=0]="MissingBillingAddress",t[t.MissingCart=1]="MissingCart",t[t.MissingCheckout=2]="MissingCheckout",t[t.MissingConsignments=3]="MissingConsignments",t[t.MissingCheckoutConfig=4]="MissingCheckoutConfig",t[t.MissingOrder=5]="MissingOrder",t[t.MissingOrderConfig=6]="MissingOrderConfig",t[t.MissingOrderId=7]="MissingOrderId",t[t.MissingPayment=8]="MissingPayment",t[t.MissingPaymentInstrument=9]="MissingPaymentInstrument",t[t.MissingPaymentMethod=10]="MissingPaymentMethod",t[t.MissingPaymentToken=11]="MissingPaymentToken",t[t.MissingShippingAddress=12]="MissingShippingAddress"}(r||(r={}));var a=function(t){function e(e){var n=t.call(this,function(t){switch(t){case r.MissingBillingAddress:return"Unable to proceed because billing address data is unavailable.";case r.MissingCart:return"Unable to proceed because cart data is unavailable.";case r.MissingConsignments:return"Unable to proceed because consignments data is unavailable.";case r.MissingCheckout:return"Unable to proceed because checkout data is unavailable.";case r.MissingCheckoutConfig:case r.MissingOrderConfig:return"Unable to proceed because configuration data is unavailable.";case r.MissingOrder:return"Unable to proceed because order data is unavailable.";case r.MissingOrderId:return"Unable to proceed because order ID is unavailable or not generated yet.";case r.MissingPayment:return"Unable to proceed because payment data is unavailable.";case r.MissingPaymentToken:return"Unable to proceed because the token required to submit a payment is missing.";case r.MissingPaymentMethod:return"Unable to proceed because payment method data is unavailable or not properly configured.";case r.MissingShippingAddress:return"Unable to proceed because shipping address data is unavailable.";default:return"Unable to proceed because the required data is unavailable."}}(e))||this;return n.subtype=e,n.name="MissingDataError",n.type="missing_data",n}return Object(i.__extends)(e,t),e}(o.a);e.b=a},,,,function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.LoadCheckoutRequested="LOAD_CHECKOUT_REQUESTED",t.LoadCheckoutSucceeded="LOAD_CHECKOUT_SUCCEEDED",t.LoadCheckoutFailed="LOAD_CHECKOUT_FAILED",t.UpdateCheckoutRequested="UPDATE_CHECKOUT_REQUESTED",t.UpdateCheckoutSucceeded="UPDATE_CHECKOUT_SUCCEEDED",t.UpdateCheckoutFailed="UPDATE_CHECKOUT_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.LoadOrderRequested="LOAD_ORDER_REQUESTED",t.LoadOrderSucceeded="LOAD_ORDER_SUCCEEDED",t.LoadOrderFailed="LOAD_ORDER_FAILED",t.LoadOrderPaymentsRequested="LOAD_ORDER_PAYMENTS_REQUESTED",t.LoadOrderPaymentsSucceeded="LOAD_ORDER_PAYMENTS_SUCCEEDED",t.LoadOrderPaymentsFailed="LOAD_ORDER_PAYMENTS_FAILED",t.SubmitOrderRequested="SUBMIT_ORDER_REQUESTED",t.SubmitOrderSucceeded="SUBMIT_ORDER_SUCCEEDED",t.SubmitOrderFailed="SUBMIT_ORDER_FAILED",t.FinalizeOrderRequested="FINALIZE_ORDER_REQUESTED",t.FinalizeOrderSucceeded="FINALIZE_ORDER_SUCCEEDED",t.FinalizeOrderFailed="FINALIZE_ORDER_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.LoadPaymentMethodRequested="LOAD_PAYMENT_METHOD_REQUESTED",t.LoadPaymentMethodSucceeded="LOAD_PAYMENT_METHOD_SUCCEEDED",t.LoadPaymentMethodFailed="LOAD_PAYMENT_METHOD_FAILED",t.LoadPaymentMethodsRequested="LOAD_PAYMENT_METHODS_REQUESTED",t.LoadPaymentMethodsSucceeded="LOAD_PAYMENT_METHODS_SUCCEEDED",t.LoadPaymentMethodsFailed="LOAD_PAYMENT_METHODS_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.UpdateBillingAddressRequested="UPDATE_BILLING_ADDRESS_REQUESTED",t.UpdateBillingAddressSucceeded="UPDATE_BILLING_ADDRESS_SUCCEEDED",t.UpdateBillingAddressFailed="UPDATE_BILLING_ADDRESS_FAILED",t.ContinueAsGuestRequested="CONTINUE_AS_GUEST_REQUESTED",t.ContinueAsGuestSucceeded="CONTINUE_AS_GUEST_SUCCEEDED",t.ContinueAsGuestFailed="CONTINUE_AS_GUEST_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.InitializeButtonFailed="INITIALIZE_BUTTON_FAILED",t.InitializeButtonRequested="INITIALIZE_BUTTON_REQUESTED",t.InitializeButtonSucceeded="INITIALIZE_BUTTON_SUCCEEDED",t.DeinitializeButtonFailed="DEINITIALIZE_BUTTON_FAILED",t.DeinitializeButtonRequested="DEINITIALIZE_BUTTON_REQUESTED",t.DeinitializeButtonSucceeded="DEINITIALIZE_BUTTON_SUCCEEDED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.ApplyCouponRequested="APPLY_COUPON_REQUESTED",t.ApplyCouponSucceeded="APPLY_COUPON_SUCCEEDED",t.ApplyCouponFailed="APPLY_COUPON_FAILED",t.RemoveCouponRequested="REMOVE_COUPON_REQUESTED",t.RemoveCouponSucceeded="REMOVE_COUPON_SUCCEEDED",t.RemoveCouponFailed="REMOVE_COUPON_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r=n(0);var i=function(t){function e(e){var n,r,i=this.constructor,o=t.call(this,e||"An unexpected error has occurred.")||this;return o.name="StandardError",o.type="standard",n=o,r=i.prototype,Object.setPrototypeOf?Object.setPrototypeOf(n,r):n.__proto__=r,"function"==typeof Error.captureStackTrace?Error.captureStackTrace(o,i):o.stack=new Error(o.message).stack,o}return Object(r.__extends)(e,t),e}(Error);e.a=i},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.CheckoutComplete="CHECKOUT_COMPLETE",t.CheckoutError="CHECKOUT_ERROR",t.CheckoutLoaded="CHECKOUT_LOADED",t.FrameError="FRAME_ERROR",t.FrameLoaded="FRAME_LOADED",t.SignedOut="SIGNED_OUT"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.LoadInstrumentsRequested="LOAD_INSTRUMENTS_REQUESTED",t.LoadInstrumentsSucceeded="LOAD_INSTRUMENTS_SUCCEEDED",t.LoadInstrumentsFailed="LOAD_INSTRUMENTS_FAILED",t.DeleteInstrumentRequested="DELETE_INSTRUMENT_REQUESTED",t.DeleteInstrumentSucceeded="DELETE_INSTRUMENT_SUCCEEDED",t.DeleteInstrumentFailed="DELETE_INSTRUMENT_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.ApplyGiftCertificateRequested="APPLY_GIFT_CERTIFICATE_REQUESTED",t.ApplyGiftCertificateSucceeded="APPLY_GIFT_CERTIFICATE_SUCCEEDED",t.ApplyGiftCertificateFailed="APPLY_GIFT_CERTIFICATE_FAILED",t.RemoveGiftCertificateRequested="REMOVE_GIFT_CERTIFICATE_REQUESTED",t.RemoveGiftCertificateSucceeded="REMOVE_GIFT_CERTIFICATE_SUCCEEDED",t.RemoveGiftCertificateFailed="REMOVE_GIFT_CERTIFICATE_FAILED"}(r||(r={}))},,function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.InitializeRemoteBillingRequested="INITIALIZE_REMOTE_BILLING_REQUESTED",t.InitializeRemoteBillingSucceeded="INITIALIZE_REMOTE_BILLING_SUCCEEDED",t.InitializeRemoteBillingFailed="INITIALIZE_REMOTE_BILLING_FAILED",t.InitializeRemoteShippingRequested="INITIALIZE_REMOTE_SHIPPING_REQUESTED",t.InitializeRemoteShippingSucceeded="INITIALIZE_REMOTE_SHIPPING_SUCCEEDED",t.InitializeRemoteShippingFailed="INITIALIZE_REMOTE_SHIPPING_FAILED",t.InitializeRemotePaymentRequested="INITIALIZE_REMOTE_PAYMENT_REQUESTED",t.InitializeRemotePaymentSucceeded="INITIALIZE_REMOTE_PAYMENT_SUCCEEDED",t.InitializeRemotePaymentFailed="INITIALIZE_REMOTE_PAYMENT_FAILED",t.LoadRemoteSettingsRequested="LOAD_REMOTE_SETTINGS_REQUESTED",t.LoadRemoteSettingsSucceeded="LOAD_REMOTE_SETTINGS_SUCCEEDED",t.LoadRemoteSettingsFailed="LOAD_REMOTE_SETTINGS_FAILED",t.SignOutRemoteCustomerRequested="SIGN_OUT_REMOTE_CUSTOMER_REQUESTED",t.SignOutRemoteCustomerSucceeded="SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED",t.SignOutRemoteCustomerFailed="SIGN_OUT_REMOTE_CUSTOMER_FAILED",t.UpdateRemoteCheckout="UPDATE_REMOTE_CHECKOUT"}(r||(r={}))},,function(t,e,n){"use strict";var r,i,o;n.d(e,"c",(function(){return r})),n.d(e,"b",(function(){return i})),n.d(e,"a",(function(){return o})),function(t){t.Long="long",t.Short="short"}(r||(r={})),function(t){t.Default="default",t.Black="black",t.White="white"}(i||(i={})),function(t){t.Min="MIN",t.Full="FULL"}(o||(o={}))},,function(t,e){t.exports=__webpack_require__(/*! @bigcommerce/script-loader */ "./node_modules/@bigcommerce/script-loader/lib/index.js")},,function(t,e){t.exports=__webpack_require__(/*! card-validator */ "./node_modules/card-validator/index.js")},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.SignInCustomerRequested="SIGN_IN_CUSTOMER_REQUESTED",t.SignInCustomerSucceeded="SIGN_IN_CUSTOMER_SUCCEEDED",t.SignInCustomerFailed="SIGN_IN_CUSTOMER_FAILED",t.SignOutCustomerRequested="SIGN_OUT_CUSTOMER_REQUESTED",t.SignOutCustomerSucceeded="SIGN_OUT_CUSTOMER_SUCCEEDED",t.SignOutCustomerFailed="SIGN_OUT_CUSTOMER_FAILED",t.CreateCustomerRequested="CREATE_CUSTOMER_REQUESTED",t.CreateCustomerSucceeded="CREATE_CUSTOMER_SUCCEEDED",t.CreateCustomerFailed="CREATE_CUSTOMER_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r=n(0),i=n(22),o={body:{},headers:{},status:0},a=function(t){function e(e,n){var r=void 0===n?{}:n,i=r.message,a=r.errors,s=this,c=e||o,u=c.body,d=c.headers,p=c.status;return(s=t.call(this,i||"An unexpected error has occurred.")||this).name="RequestError",s.type="request",s.body=u,s.headers=d,s.status=p,s.errors=a||[],s}return Object(r.__extends)(e,t),e}(i.a);e.a=a},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return i}));var r="ACKNOWLEDGE",i="FINALIZE"},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.LoadConfigRequested="LOAD_CONFIG_REQUESTED",t.LoadConfigSucceeded="LOAD_CONFIG_SUCCEEDED",t.LoadConfigFailed="LOAD_CONFIG_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.LoadFormFieldsRequested="LOAD_FORM_FIELDS_REQUESTED",t.LoadFormFieldsSucceeded="LOAD_FORM_FIELDS_SUCCEEDED",t.LoadFormFieldsFailed="LOAD_FORM_FIELDS_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;!function(t){t.Json="application/json",t.JsonV1="application/vnd.bc.v1+json"}(r||(r={})),e.a=r},function(t,e,n){"use strict";function r(t){return Boolean(t.instrumentId)}function i(t){return Boolean(t.instrumentId)&&!t.hasOwnProperty("ccNumber")&&!t.hasOwnProperty("ccCvv")}function o(t){var e=t.formattedPayload;return!!e&&("string"==typeof e.bigpay_token||Boolean(e.bigpay_token&&e.bigpay_token.token))}n.d(e,"a",(function(){return r})),n.d(e,"c",(function(){return i})),n.d(e,"b",(function(){return o}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(2);function i(t){return Object(r.isPlainObject)(t)}},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.LoadCountriesRequested="LOAD_COUNTRIES_REQUESTED",t.LoadCountriesSucceeded="LOAD_COUNTRIES_SUCCEEDED",t.LoadCountriesFailed="LOAD_COUNTRIES_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.LoadShippingCountriesRequested="LOAD_SHIPPING_COUNTRIES_REQUESTED",t.LoadShippingCountriesSucceeded="LOAD_SHIPPING_COUNTRIES_SUCCEEDED",t.LoadShippingCountriesFailed="LOAD_SHIPPING_COUNTRIES_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.SendSignInEmailRequested="SEND_SIGNIN_EMAIL_REQUESTED",t.SendSignInEmailSucceeded="SEND_SIGNIN_EMAIL_SUCCEEDED",t.SendSignInEmailFailed="SEND_SIGNIN_EMAIL_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r=n(0),i=function(t){function e(e){var n=t.call(this,e||"Unable to proceed because the client library of a payment method is not loaded or ready to be used.")||this;return n.name="PaymentMethodClientUnavailableError",n.type="payment_method_client_unavailable",n}return Object(r.__extends)(e,t),e}(n(22).a);e.a=i},function(t,e){t.exports=__webpack_require__(/*! @bigcommerce/request-sender */ "./node_modules/@bigcommerce/request-sender/esm/index.js")},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.ApplyStoreCreditRequested="APPLY_STORE_CREDIT_REQUESTED",t.ApplyStoreCreditSucceeded="APPLY_STORE_CREDIT_SUCCEEDED",t.ApplyStoreCreditFailed="APPLY_STORE_CREDIT_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.AttachSucceeded="HOSTED_INPUT:ATTACH_SUCCEEDED",t.AttachFailed="HOSTED_INPUT:ATTACH_FAILED",t.BinChanged="HOSTED_INPUT:BIN_CHANGED",t.Blurred="HOSTED_INPUT:BLURRED",t.Changed="HOSTED_INPUT:CHANGED",t.CardTypeChanged="HOSTED_INPUT:CARD_TYPE_CHANGED",t.Entered="HOSTED_INPUT:ENTERED",t.Focused="HOSTED_INPUT:FOCUSED",t.SubmitSucceeded="HOSTED_INPUT:SUBMIT_SUCCEEDED",t.SubmitFailed="HOSTED_INPUT:SUBMIT_FAILED",t.Validated="HOSTED_INPUT:VALIDATED"}(r||(r={}))},,,function(t,e){t.exports=__webpack_require__(/*! local-storage-fallback */ "./node_modules/local-storage-fallback/lib/index.js")},function(t,e,n){"use strict";var r=n(0),i=function(t){function e(e){var n=t.call(this,e||"Invalid arguments have been provided.")||this;return n.name="InvalidArgumentError",n.type="invalid_argument",n}return Object(r.__extends)(e,t),e}(n(22).a);e.a=i},,,,function(t,e,n){"use strict";function r(t,e){return t.type===e}n.d(e,"a",(function(){return r}))},,function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return i}));var r="PAYMENT_TYPE_HOSTED",i="PAYMENT_TYPE_OFFLINE"},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(107);function i(t,e){var n;return Object(r.a)(t)?n=t.id:e&&e.length&&(n=e[0].id),{id:n,firstName:t.firstName,lastName:t.lastName,company:t.company,addressLine1:t.address1,addressLine2:t.address2,city:t.city,province:t.stateOrProvince,provinceCode:t.stateOrProvinceCode,postCode:t.postalCode,country:t.country,countryCode:t.countryCode,phone:t.phone,customFields:t.customFields}}},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.SubmitPaymentRequested="SUBMIT_PAYMENT_REQUESTED",t.SubmitPaymentSucceeded="SUBMIT_PAYMENT_SUCCEEDED",t.SubmitPaymentFailed="SUBMIT_PAYMENT_FAILED",t.InitializeOffsitePaymentRequested="INITIALIZE_OFFSITE_PAYMENT_REQUESTED",t.InitializeOffsitePaymentSucceeded="INITIALIZE_OFFSITE_PAYMENT_SUCCEEDED",t.InitializeOffsitePaymentFailed="INITIALIZE_OFFSITE_PAYMENT_FAILED"}(r||(r={}))},,,function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(2);function i(t){return Object(r.uniq)(t).join(",")}},function(t,e,n){"use strict";var r=n(0),i=n(79);var o=n(76);function a(t,e,n){return void 0===n&&(n="id"),Object.keys(t).reduce((function(a,s){return Object(r.__spreadArrays)(a,t[s].map((function(t){return"giftCertificates"===s?function(t,e){var n=new i.a(e);return{id:t.id,imageUrl:"",name:t.name,amount:t.amount,amountAfterDiscount:t.amount,discount:0,integerAmount:n.toInteger(t.amount),integerAmountAfterDiscount:n.toInteger(t.amount),integerUnitPrice:n.toInteger(t.amount),integerUnitPriceAfterDiscount:n.toInteger(t.amount),integerDiscount:0,quantity:1,sender:t.sender,recipient:t.recipient,type:"ItemGiftCertificateEntity",attributes:[],variantId:null}}(t,e):Object(o.a)(t,function(t){switch(t){case"physicalItems":return"ItemPhysicalEntity";case"digitalItems":return"ItemDigitalEntity";case"giftCertificates":return"ItemGiftCertificateEntity";default:return""}}(s),e,n)})))}),[])}n.d(e,"a",(function(){return a}))},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.InitializeFailed="SPAM_PROTECTION_INITIALIZE_FAILED",t.InitializeSucceeded="SPAM_PROTECTION_INITIALIZE_SUCCEEDED",t.InitializeRequested="SPAM_PROTECTION_INITIALIZE_REQUESTED",t.VerifyCheckoutRequested="SPAM_PROTECTION_CHECKOUT_VERIFY_REQUESTED",t.VerifyCheckoutSucceeded="SPAM_PROTECTION_CHECKOUT_VERIFY_SUCCEEDED",t.VerifyCheckoutFailed="SPAM_PROTECTION_CHECKOUT_VERIFY_FAILED",t.ExecuteRequested="SPAM_PROTECTION_EXECUTE_REQUESTED",t.ExecuteSucceeded="SPAM_PROTECTION_EXECUTE_SUCCEEDED",t.ExecuteFailed="SPAM_PROTECTION_EXECUTE_FAILED"}(r||(r={}))},function(t,e){t.exports=__webpack_require__(/*! shallowequal */ "./node_modules/shallowequal/index.js")},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.AttachRequested="HOSTED_FIELD:ATTACH_REQUESTED",t.SubmitRequested="HOSTED_FIELD:SUBMITTED_REQUESTED",t.ValidateRequested="HOSTED_FIELD:VALIDATE_REQUESTED"}(r||(r={}))},,,function(t,e,n){"use strict";function r(t,e,n){return t===e||(t&&e&&"object"==typeof t&&"object"==typeof e?Array.isArray(t)&&Array.isArray(e)?function(t,e,n){if(t.length!==e.length)return!1;for(var i=0,o=t.length;i<o;i++)if(!r(t[i],e[i],n))return!1;return!0}(t,e,n):!Array.isArray(t)&&!Array.isArray(e)&&(t instanceof Date&&e instanceof Date?function(t,e){return t.getTime()===e.getTime()}(t,e):!(t instanceof Date||e instanceof Date)&&(t instanceof RegExp&&e instanceof RegExp?function(t,e){return t.toString()===e.toString()}(t,e):!(t instanceof RegExp||e instanceof RegExp)&&function(t,e,n){var i=n&&n.keyFilter,o=i?Object.keys(t).filter(i):Object.keys(t),a=i?Object.keys(e).filter(i):Object.keys(e);if(o.length!==a.length)return!1;for(var s=0,c=o.length;s<c;s++){var u=o[s];if(!e.hasOwnProperty(u))return!1;if(!r(t[u],e[u],n))return!1}return!0}(t,e,n))):t===e)}n.d(e,"a",(function(){return r}))},function(t,e){t.exports=__webpack_require__(/*! @bigcommerce/form-poster */ "./node_modules/@bigcommerce/form-poster/lib/index.js")},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r="This API endpoint is for internal use only and may change in the future"},,,,function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(79);function i(t,e,n,i){void 0===i&&(i="id");var o=new r.a(n);return{id:t[i],imageUrl:t.imageUrl,amount:t.extendedListPrice,amountAfterDiscount:t.extendedSalePrice,discount:t.discountAmount,integerAmount:o.toInteger(t.extendedListPrice),integerAmountAfterDiscount:o.toInteger(t.extendedSalePrice),integerDiscount:o.toInteger(t.discountAmount),integerUnitPrice:o.toInteger(t.listPrice),integerUnitPriceAfterDiscount:o.toInteger(t.salePrice),downloadsPageUrl:t.downloadPageUrl,name:t.name,quantity:t.quantity,brand:t.brand,sku:t.sku,categoryNames:t.categoryNames,variantId:t.variantId,productId:t.productId,attributes:(t.options||[]).map((function(t){return{name:t.name,value:t.value}})),addedByPromotion:t.addedByPromotion,type:e}}},function(t,e){t.exports=__webpack_require__(/*! reselect */ "./node_modules/reselect/es/index.js")},function(t,e,n){"use strict";function r(t,e){return{description:t.description,module:t.type,price:t.cost,id:t.id,selected:e,isRecommended:t.isRecommended,imageUrl:t.imageUrl,transitTime:t.transitTime}}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";var r=function(){function t(t){this._decimalPlaces=t}return t.prototype.toInteger=function(t){return Math.round(t*Math.pow(10,this._decimalPlaces))},t}();e.a=r},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(52);function i(t){if(!/^(https?:)?\/\//.test(t))throw new r.a("The provided URL must be absolute.");var e=document.createElement("a");e.href=t;var n=e.port&&-1!==t.indexOf(e.hostname+":"+e.port)?e.port:"";return{hash:e.hash,hostname:e.hostname,href:e.href,origin:e.protocol+"//"+e.hostname+(n?":"+n:""),pathname:e.pathname,port:n,protocol:e.protocol,search:e.search}}},,,,,function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(0),i=n(5);function o(t){return function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var o=e.pop();return t.apply(void 0,Object(r.__spreadArrays)(e,[function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=o.apply(void 0,t);return"function"==typeof n?Object(i.memoize)(n):n}]))}}},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.ClearError="CLEAR_ERROR"}(r||(r={}))},function(t,e,n){"use strict";var r=n(0),i=n(1),o=n(3),a=n(92),s=n(18),c=function(){function t(t){this._requestSender=t}return t.prototype.loadPaymentMethods=function(t){var e=this;return o.Observable.create((function(n){n.next(Object(i.createAction)(s.a.LoadPaymentMethodsRequested)),e._requestSender.loadPaymentMethods(t).then((function(t){var e={deviceSessionId:t.headers["x-device-session-id"],sessionHash:t.headers["x-session-hash"]};n.next(Object(i.createAction)(s.a.LoadPaymentMethodsSucceeded,t.body,e)),n.complete()})).catch((function(t){n.error(Object(i.createErrorAction)(s.a.LoadPaymentMethodsFailed,t))}))}))},t.prototype.loadPaymentMethod=function(t,e){var n=this;return o.Observable.create((function(r){r.next(Object(i.createAction)(s.a.LoadPaymentMethodRequested,void 0,{methodId:t})),n._requestSender.loadPaymentMethod(t,e).then((function(e){r.next(Object(i.createAction)(s.a.LoadPaymentMethodSucceeded,e.body,{methodId:t})),r.complete()})).catch((function(e){r.error(Object(i.createErrorAction)(s.a.LoadPaymentMethodFailed,e,{methodId:t}))}))}))},Object(r.__decorate)([a.a],t.prototype,"loadPaymentMethod",null),t}();e.a=c},function(t,e,n){"use strict";var r=n(39),i=n(72),o=function(){function t(t){this._requestSender=t}return t.prototype.loadPaymentMethods=function(t){var e=(void 0===t?{}:t).timeout;return this._requestSender.get("/api/storefront/payments",{timeout:e,headers:{Accept:r.a.JsonV1,"X-API-INTERNAL":i.a}})},t.prototype.loadPaymentMethod=function(t,e){var n=(void 0===e?{}:e).timeout,o="/api/storefront/payments/"+t;return this._requestSender.get(o,{timeout:n,headers:{Accept:r.a.JsonV1,"X-API-INTERNAL":i.a}})},t}();e.a=o},function(t,e,n){"use strict";e.a=["cart.lineItems.physicalItems.options","cart.lineItems.digitalItems.options","customer","customer.customerGroup","payments","promotions.banners"]},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(1),i=n(3);function o(t,e,n){return(o=e)&&o.type&&o.error?Object(i.concat)(Object(i.of)(e),Object(i.throwError)(Object(r.createErrorAction)(t,e.payload,n))):Object(i.throwError)(Object(r.createErrorAction)(t,e,n));var o}},function(t,e,n){"use strict";var r=n(0),i=function(t){function e(e){var n=t.call(this,e||"Unable to proceed because the client library of a payment method has thrown an unexpected error.")||this;return n.name="PaymentMethodFailedError",n.type="payment_method_client_invalid",n}return Object(r.__extends)(e,t),e}(n(22).a);e.a=i},function(t,e,n){"use strict";var r=n(0),i=n(5),o=n(3),a=n(8);function s(t){return Object(i.memoize)((function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var s=t.call.apply(t,Object(r.__spreadArrays)([this],e));return s instanceof o.Observable?Object(o.from)(s).pipe(Object(a.shareReplay)()):"function"==typeof s?Object(i.memoize)((function(t){return Object(o.from)(s(t)).pipe(Object(a.shareReplay)())})):s}))}function c(t){return t&&"boolean"==typeof t.useCache}function u(t,e,n){var i=new WeakMap;function o(t){var n=this;return function(){for(var o,a=[],u=0;u<arguments.length;u++)a[u]=arguments[u];var d=a[a.length-1],p=(c(d)?d:{useCache:!1}).useCache;if(!p)return t.call.apply(t,Object(r.__spreadArrays)([n],a));var h=i.get(n)||{};return i.get(n)||i.set(n,h),h[e]||(h[e]=s(t)),(o=h[e]).call.apply(o,Object(r.__spreadArrays)([n],a))}}return{get:function(){if("function"!=typeof n.value)throw new Error("Decorator should be used in functions");var t=o.call(this,n.value);return Object.defineProperty(this,e,Object(r.__assign)(Object(r.__assign)({},n),{value:t})),t}}}n.d(e,"a",(function(){return u}))},,,,,function(t,e,n){"use strict";var r=n(0);function i(t,e,n){if("function"!=typeof n.value)return n;var i=n.value;return{get:function(){var t=i.bind(this);return Object.defineProperty(this,e,Object(r.__assign)(Object(r.__assign)({},n),{value:t})),t},set:function(t){i=t}}}e.a=function(t,e,n){return e&&n?i(t,e,n):function(t){var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(r.__extends)(e,t),e}(t);return Object.getOwnPropertyNames(t.prototype).forEach((function(n){var r=Object.getOwnPropertyDescriptor(t.prototype,n);r&&"constructor"!==n&&Object.defineProperty(e.prototype,n,i(t.prototype,n,r))})),e}(t)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(59);function i(t,e){var n=t.firstName||e.firstName||"",i=t.lastName||e.lastName||"";return{addresses:(t.addresses||[]).map((function(t){return Object(r.a)(t)})),customerId:t.id,isGuest:t.isGuest,storeCredit:t.storeCredit,email:t.email||e.email||"",firstName:n,lastName:i,name:t.fullName||[n,i].join(" "),customerGroupName:t.customerGroup&&t.customerGroup.name}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(0),i=n(2),o=n(64),a=n(79),s=n(110);n(58);function c(t,e){void 0===e&&(e={});var n,r,c=t.currency.decimalPlaces,u=new a.a(c);return{id:t.orderId,items:Object(o.a)(t.lineItems,t.currency.decimalPlaces,"productId"),orderId:t.orderId,currency:t.currency.code,customerCanBeCreated:t.customerCanBeCreated,payment:p(t.payments,e.payment),subtotal:{amount:t.baseAmount,integerAmount:u.toInteger(t.baseAmount)},coupon:{discountedAmount:Object(i.reduce)(t.coupons,(function(t,e){return t+e.discountedAmount}),0),coupons:t.coupons.map(s.a)},discount:{amount:t.discountAmount,integerAmount:u.toInteger(t.discountAmount)},token:e.orderToken,callbackUrl:e.callbackUrl,discountNotifications:[],giftCertificate:(n=t.payments,r=Object(i.filter)(n,{providerId:"giftcertificate"}),{totalDiscountedAmount:Object(i.reduce)(r,(function(t,e){return e.amount+t}),0),appliedGiftCertificates:Object(i.keyBy)(r.map((function(t){return{code:t.detail.code,discountedAmount:t.amount,remainingBalance:t.detail.remaining,giftCertificate:{balance:t.amount+t.detail.remaining,code:t.detail.code,purchaseDate:""}}})),"code")}),socialData:l(t),status:t.status,hasDigitalItems:t.hasDigitalItems,isDownloadable:t.isDownloadable,isComplete:t.isComplete,shipping:{amount:t.shippingCostTotal,integerAmount:u.toInteger(t.shippingCostTotal),amountBeforeDiscount:t.shippingCostBeforeDiscount,integerAmountBeforeDiscount:u.toInteger(t.shippingCostBeforeDiscount)},storeCredit:{amount:d(t.payments)},taxes:t.taxes,taxTotal:{amount:t.taxTotal,integerAmount:u.toInteger(t.taxTotal)},handling:{amount:t.handlingCostTotal,integerAmount:u.toInteger(t.handlingCostTotal)},grandTotal:{amount:t.orderAmount,integerAmount:t.orderAmountAsInteger}}}function u(t){return"PAYMENT_STATUS_"+t}function d(t){var e=Object(i.find)(t,{providerId:"storecredit"});return e?e.amount:0}function p(t,e){void 0===e&&(e={});var n=Object(i.find)(t,h);return n?{id:n.providerId,status:u(n.detail.step),helpText:n.detail.instructions,returnUrl:e.returnUrl}:{}}function h(t){return"giftcertificate"!==t.providerId&&"storecredit"!==t.providerId}function l(t){var e={};return Object(r.__spreadArrays)(t.lineItems.physicalItems,t.lineItems.digitalItems).forEach((function(t){var n;e[t.id]=(n=t,["fb","tw","gp"].reduce((function(t,e){var r=n.socialMedia&&Object(i.find)(n.socialMedia,(function(t){return t.code===e}));return r?(t[e]={name:n.name,description:n.name,image:n.imageUrl,url:r.link,shareText:r.text,sharingLink:r.link,channelName:r.channel,channelCode:r.code},t):t}),{}))})),e}},function(t,e,n){"use strict";var r=n(2),i=n(79),o=n(110),a=n(143);var s=n(64);function c(t){var e,n,c=t.cart.currency.decimalPlaces,u=new i.a(c);return{id:t.cart.id,items:Object(s.a)(t.cart.lineItems,c),currency:t.cart.currency.code,coupon:{discountedAmount:Object(r.reduce)(t.cart.coupons,(function(t,e){return t+e.discountedAmount}),0),coupons:t.cart.coupons.map(o.a)},discount:{amount:t.cart.discountAmount,integerAmount:u.toInteger(t.cart.discountAmount)},discountNotifications:(e=t.promotions,n=[],(e||[]).forEach((function(t){(t.banners||[]).forEach((function(t){n.push({placeholders:[],discountType:null,message:"",messageHtml:t.text})}))})),n),giftCertificate:{totalDiscountedAmount:Object(r.reduce)(t.giftCertificates,(function(t,e){return t+e.used}),0),appliedGiftCertificates:Object(r.keyBy)(t.giftCertificates.map(a.a),"code")},shipping:{amount:t.shippingCostTotal,integerAmount:u.toInteger(t.shippingCostTotal),amountBeforeDiscount:t.shippingCostBeforeDiscount,integerAmountBeforeDiscount:u.toInteger(t.shippingCostBeforeDiscount),required:Object(r.some)(t.cart.lineItems.physicalItems,(function(t){return t.isShippingRequired}))},subtotal:{amount:t.subtotal,integerAmount:u.toInteger(t.subtotal)},storeCredit:{amount:t.customer?t.customer.storeCredit:0},taxSubtotal:{amount:t.taxTotal,integerAmount:u.toInteger(t.taxTotal)},taxes:t.taxes,taxTotal:{amount:t.taxTotal,integerAmount:u.toInteger(t.taxTotal)},handling:{amount:t.handlingCostTotal,integerAmount:u.toInteger(t.handlingCostTotal)},grandTotal:{amount:t.grandTotal,integerAmount:u.toInteger(t.grandTotal)}}}n.d(e,"a",(function(){return c}))},,function(t,e){t.exports=__webpack_require__(/*! @bigcommerce/bigpay-client */ "./node_modules/@bigcommerce/bigpay-client/lib/index.js")},function(t,e,n){"use strict";var r,i,o,a,s;n.d(e,"c",(function(){return r})),n.d(e,"b",(function(){return o})),n.d(e,"a",(function(){return s})),function(t){t.de="eu",t.jp="fe",t.uk="eu",t.us="na"}(r||(r={})),function(t){t.en_US="en_US",t.en_GB="en_GB",t.de_DE="de_DE",t.fr_FR="fr_FR",t.it_IT="it_IT",t.es_ES="es_ES",t.ja_JP="ja_JP"}(i||(i={})),function(t){t.Home="Home",t.Product="Product",t.Cart="Cart",t.Checkout="Checkout",t.Other="Other"}(o||(o={})),function(t){t.USD="USD",t.EUR="EUR",t.GBP="GBP",t.JPY="JPY"}(a||(a={})),function(t){t.PayAndShip="PayAndShip",t.PayOnly="PayOnly"}(s||(s={}))},function(t,e,n){"use strict";var r=n(0),i=n(45),o=function(){function t(t,e){void 0===e&&(e=window),this._scriptLoader=t,this._window=e}return t.prototype.loadClient=function(){var t=this;return this._scriptLoader.loadScript("//js.braintreegateway.com/web/3.59.0/js/client.min.js").then((function(){if(!t._window.braintree||!t._window.braintree.client)throw new i.a;return t._window.braintree.client}))},t.prototype.load3DS=function(){var t=this;return this._scriptLoader.loadScript("//js.braintreegateway.com/web/3.59.0/js/three-d-secure.min.js").then((function(){if(!t._window.braintree||!t._window.braintree.threeDSecure)throw new i.a;return t._window.braintree.threeDSecure}))},t.prototype.loadDataCollector=function(){var t=this;return this._scriptLoader.loadScript("//js.braintreegateway.com/web/3.59.0/js/data-collector.min.js").then((function(){if(!t._window.braintree||!t._window.braintree.dataCollector)throw new i.a;return t._window.braintree.dataCollector}))},t.prototype.loadPaypal=function(){var t=this;return this._scriptLoader.loadScript("//js.braintreegateway.com/web/3.59.0/js/paypal.min.js").then((function(){if(!t._window.braintree||!t._window.braintree.paypal)throw new i.a;return t._window.braintree.paypal}))},t.prototype.loadPaypalCheckout=function(){var t=this;return this._scriptLoader.loadScript("//js.braintreegateway.com/web/3.59.0/js/paypal-checkout.min.js").then((function(){if(!t._window.braintree||!t._window.braintree.paypalCheckout)throw new i.a;return t._window.braintree.paypalCheckout}))},t.prototype.loadVisaCheckout=function(){var t=this;return this._scriptLoader.loadScript("//js.braintreegateway.com/web/3.59.0/js/visa-checkout.min.js").then((function(){if(!t._window.braintree||!t._window.braintree.visaCheckout)throw new i.a;return t._window.braintree.visaCheckout}))},t.prototype.loadGooglePayment=function(){var t=this;return this._scriptLoader.loadScript("//js.braintreegateway.com/web/3.59.0/js/google-payment.min.js").then((function(){if(!t._window.braintree||!t._window.braintree.googlePayment)throw new i.a;return t._window.braintree.googlePayment}))},t.prototype.loadHostedFields=function(){return Object(r.__awaiter)(this,void 0,void 0,(function(){return Object(r.__generator)(this,(function(t){switch(t.label){case 0:return[4,this._scriptLoader.loadScript("//js.braintreegateway.com/web/3.59.0/js/hosted-fields.min.js")];case 1:if(t.sent(),!this._window.braintree||!this._window.braintree.hostedFields)throw new i.a;return[2,this._window.braintree.hostedFields]}}))}))},t}();e.a=o},function(t,e,n){"use strict";var r=n(0),i=n(111),o=function(){function t(t){this._braintreeScriptLoader=t,this._dataCollectors={}}return t.prototype.initialize=function(t){this._clientToken=t},t.prototype.getClient=function(){var t=this;if(!this._clientToken)throw new i.b(i.a.PaymentNotInitialized);return this._client||(this._client=this._braintreeScriptLoader.loadClient().then((function(e){return e.create({authorization:t._clientToken})}))),this._client},t.prototype.getPaypal=function(){return this._paypal||(this._paypal=Promise.all([this.getClient(),this._braintreeScriptLoader.loadPaypal()]).then((function(t){var e=t[0];return t[1].create({client:e})}))),this._paypal},t.prototype.getPaypalCheckout=function(){return this._paypalCheckout||(this._paypalCheckout=Promise.all([this.getClient(),this._braintreeScriptLoader.loadPaypalCheckout()]).then((function(t){var e=t[0];return t[1].create({client:e})}))),this._paypalCheckout},t.prototype.get3DS=function(){return this._3ds||(this._3ds=Promise.all([this.getClient(),this._braintreeScriptLoader.load3DS()]).then((function(t){var e=t[0];return t[1].create({client:e,version:2})}))),this._3ds},t.prototype.getDataCollector=function(t){var e=t&&t.paypal?"paypal":"default",n=this._dataCollectors[e];return n||(n=Promise.all([this.getClient(),this._braintreeScriptLoader.loadDataCollector()]).then((function(e){var n=e[0];return e[1].create(Object(r.__assign)({client:n,kount:!0},t))})).catch((function(t){if(t&&"DATA_COLLECTOR_KOUNT_NOT_ENABLED"===t.code)return{deviceData:void 0,teardown:function(){return Promise.resolve()}};throw t})),this._dataCollectors[e]=n),n},t.prototype.getVisaCheckout=function(){return this._visaCheckout||(this._visaCheckout=Promise.all([this.getClient(),this._braintreeScriptLoader.loadVisaCheckout()]).then((function(t){var e=t[0];return t[1].create({client:e})}))),this._visaCheckout},t.prototype.getGooglePaymentComponent=function(){return this._googlePay||(this._googlePay=Promise.all([this.getClient(),this._braintreeScriptLoader.loadGooglePayment()]).then((function(t){var e=t[0];return t[1].create({client:e})}))),this._googlePay},t.prototype.createHostedFields=function(t){return Object(r.__awaiter)(this,void 0,void 0,(function(){var e,n;return Object(r.__generator)(this,(function(i){switch(i.label){case 0:return[4,Promise.all([this.getClient(),this._braintreeScriptLoader.loadHostedFields()])];case 1:return e=i.sent(),n=e[0],[2,e[1].create(Object(r.__assign)(Object(r.__assign)({},t),{client:n}))]}}))}))},t.prototype.teardown=function(){var t=this;return Promise.all([this._teardown(this._3ds),this._teardown(this._dataCollectors.default),this._teardown(this._dataCollectors.paypal),this._teardown(this._visaCheckout),this._teardown(this._googlePay)]).then((function(){t._3ds=void 0,t._visaCheckout=void 0,t._dataCollectors={},t._googlePay=void 0}))},t.prototype._teardown=function(t){return t?t.then((function(t){return t.teardown()})):Promise.resolve()},t}();e.a=o},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.StyleConfigured="STYLE_CONFIGURED"}(r||(r={}))},function(t,e,n){"use strict";function r(t){return void 0!==t.id}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";var r=function(){function t(){}return t.prototype.format=function(t){var e=t.split(new RegExp("\\s*/\\s*")),n=e[0],r=void 0===n?"":n,i=e[1],o=void 0===i?"":i,a=r.slice(0,2),s=4===o.length?o.slice(-2):o?o.slice(0,2):r.slice(2);return t.length<2?r:t.length>3&&!s?a:a+" / "+s},t.prototype.toObject=function(t){var e=t.split(new RegExp("\\s*/\\s*")),n=e[0],r=void 0===n?"":n,i=e[1],o=void 0===i?"":i;return/^\d+$/.test(r)&&/^\d+$/.test(o)?{month:1===r.length?"0"+r:r.slice(0,2),year:2===o.length?"20"+o:o.slice(0,4)}:{month:"",year:""}},t}();e.a=r},function(t,e,n){"use strict";var r=n(33),i=n(2),o=function(){function t(){}return t.prototype.format=function(t){var e=Object(r.number)(t).card;if(!e)return t;var n=Object(i.max)(Object(r.creditCardType)(t).map((function(t){return Object(i.max)(t.lengths)}))),o=this.unformat(t).slice(0,n);return e.gaps.filter((function(t){return o.length>t})).reduce((function(t,e,n){return[t.slice(0,e+n),t.slice(e+n)].join(" ")}),o)},t.prototype.unformat=function(t){return Object(r.number)(t).card?t.replace(new RegExp(" ","g"),""):t},t}();e.a=o},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=["per_item_discount","percentage_discount","per_total_discount","shipping_discount","free_shipping"];function i(t){return{code:t.code,discount:t.displayName,discountType:r.indexOf(t.couponType)}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r,i=n(0),o=n(22);!function(t){t[t.CheckoutButtonNotInitialized=0]="CheckoutButtonNotInitialized",t[t.CustomerNotInitialized=1]="CustomerNotInitialized",t[t.PaymentNotInitialized=2]="PaymentNotInitialized",t[t.ShippingNotInitialized=3]="ShippingNotInitialized",t[t.SpamProtectionNotInitialized=4]="SpamProtectionNotInitialized"}(r||(r={}));var a=function(t){function e(e){var n=t.call(this,function(t){switch(t){case r.CustomerNotInitialized:return"Unable to proceed because the customer step of checkout has not been initialized.";case r.PaymentNotInitialized:return"Unable to proceed because the payment step of checkout has not been initialized.";case r.ShippingNotInitialized:return"Unable to proceed because the shipping step of checkout has not been initialized.";case r.SpamProtectionNotInitialized:return"Unable to proceed because the checkout spam protection has not been initialized.";default:return"Unable to proceed because the required component has not been initialized."}}(e))||this;return n.subtype=e,n.name="NotInitializedError",n.type="not_initialized",n}return Object(i.__extends)(e,t),e}(o.a);e.b=a},function(t,e,n){"use strict";var r=n(0),i=n(63),o=n(2);function a(t,e){return void 0===e&&(e=[]),Array.isArray(e)?Object(i.a)(Object(r.__spreadArrays)(t,e)):function(t,e){var n=Object(o.keys)(Object(o.pickBy)(e,(function(t){return!t}))),a=Object(o.keys)(Object(o.filter)(e));return Object(i.a)(Object(r.__spreadArrays)(Object(o.difference)(t,n),a))}(t,e)}n.d(e,"a",(function(){return a}))},,,,,,,,,,,,,,function(t,e){t.exports=__webpack_require__(/*! iframe-resizer */ "./node_modules/iframe-resizer/index.js")},function(t,e){t.exports=__webpack_require__(/*! iframe-resizer/js/iframeResizer.contentWindow */ "./node_modules/iframe-resizer/js/iframeResizer.contentWindow.js")},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(2);function i(t,e){return Array.isArray(t)?t.map((function(t){return i(t,e)})):Object(r.isPlainObject)(t)?Object(r.transform)(Object(r.omitBy)(t,e),(function(t,n,r){t[r]=i(n,e)}),{}):t}},function(t,e,n){"use strict";var r=n(0),i=n(1),o=n(3),a=n(8),s=n(90),c=n(12),u=n(16),d=function(){function t(t,e,n){this._checkoutRequestSender=t,this._configActionCreator=e,this._formFieldsActionCreator=n}return t.prototype.loadCheckout=function(t,e){var n=this;return Object(o.concat)(Object(o.of)(Object(i.createAction)(u.a.LoadCheckoutRequested)),Object(o.merge)(this._configActionCreator.loadConfig(Object(r.__assign)(Object(r.__assign)({},e),{useCache:!0})),this._formFieldsActionCreator.loadFormFields(Object(r.__assign)(Object(r.__assign)({},e),{useCache:!0})),Object(o.defer)((function(){return n._checkoutRequestSender.loadCheckout(t,e).then((function(t){var e=t.body;return Object(i.createAction)(u.a.LoadCheckoutSucceeded,e)}))})))).pipe(Object(a.catchError)((function(t){return Object(s.a)(u.a.LoadCheckoutFailed,t)})))},t.prototype.loadDefaultCheckout=function(t){var e=this;return function(n){return Object(o.concat)(Object(o.of)(Object(i.createAction)(u.a.LoadCheckoutRequested)),Object(o.merge)(e._configActionCreator.loadConfig(),e._formFieldsActionCreator.loadFormFields(Object(r.__assign)(Object(r.__assign)({},t),{useCache:!0}))),Object(o.defer)((function(){return Object(r.__awaiter)(e,void 0,void 0,(function(){var e,o,a;return Object(r.__generator)(this,(function(r){switch(r.label){case 0:if(e=n.getState(),!(o=e.config.getContextConfig())||!o.checkoutId)throw new c.b(c.a.MissingCheckoutConfig);return[4,this._checkoutRequestSender.loadCheckout(o.checkoutId,t)];case 1:return a=r.sent().body,[2,Object(i.createAction)(u.a.LoadCheckoutSucceeded,a)]}}))}))}))).pipe(Object(a.catchError)((function(t){return Object(s.a)(u.a.LoadCheckoutFailed,t)})))}},t.prototype.updateCheckout=function(t,e){var n=this;return function(r){return new o.Observable((function(o){var a=r.getState().checkout.getCheckout();if(!a)throw new c.b(c.a.MissingCheckout);o.next(Object(i.createAction)(u.a.UpdateCheckoutRequested)),n._checkoutRequestSender.updateCheckout(a.id,t,e).then((function(t){var e=t.body;o.next(Object(i.createAction)(u.a.UpdateCheckoutSucceeded,e)),o.complete()})).catch((function(t){o.error(Object(i.createErrorAction)(u.a.UpdateCheckoutFailed,t))}))}))}},t.prototype.loadCurrentCheckout=function(t){var e=this;return function(n){var r=n.getState().checkout.getCheckout();if(!r)throw new c.b(c.a.MissingCheckout);return e.loadCheckout(r.id,t)}},t}();e.a=d},function(t,e,n){"use strict";var r=n(0),i=n(1),o=n(2),a=n(3),s=n(138),c=n(12),u=n(52),d=n(6),p=function(){function t(t,e){this._consignmentRequestSender=t,this._checkoutRequestSender=e}return t.prototype.unassignItemsByAddress=function(t,e){var n=this;return function(r){var i=r.getState();if(!i.checkout.getCheckout())throw new c.b(c.a.MissingCheckout);var o=i.consignments.getConsignmentByAddress(t.shippingAddress);if(!o)throw new u.a("No consignment found for the specified address");var a=n._removeLineItems(t.lineItems,o,i.cart.getCart());return a.length?n.updateConsignment({id:o.id,shippingAddress:t.shippingAddress,lineItems:a},e)(r):n.deleteConsignment(o.id,e)(r)}},t.prototype.assignItemsByAddress=function(t,e){var n=this;return function(r){var i=r.getState(),o=i.consignments.getConsignmentByAddress(t.shippingAddress);return n._createOrUpdateConsignment({id:o&&o.id,shippingAddress:t.shippingAddress,lineItems:n._addLineItems(t.lineItems,o,i.cart.getCart())},e)(r)}},t.prototype.selectShippingOption=function(t,e){var n=this;return function(r){return a.Observable.create((function(o){var a=r.getState(),s=a.checkout.getCheckout(),u=a.consignments.getConsignments();if(!s)throw new c.b(c.a.MissingCheckout);if(!u||!u.length)throw new c.b(c.a.MissingConsignments);var p={id:u[0].id,shippingOptionId:t},h={id:u[0].id};o.next(Object(i.createAction)(d.a.UpdateShippingOptionRequested,void 0,h)),n._consignmentRequestSender.updateConsignment(s.id,p,e).then((function(t){var e=t.body;o.next(Object(i.createAction)(d.a.UpdateShippingOptionSucceeded,e,h)),o.complete()})).catch((function(t){o.error(Object(i.createErrorAction)(d.a.UpdateShippingOptionFailed,t,h))}))}))}},t.prototype.loadShippingOptions=function(t){var e=this;return function(n){return a.Observable.create((function(o){var a=n.getState().checkout.getCheckout();if(!a)throw new c.b(c.a.MissingCheckout);o.next(Object(i.createAction)(d.a.LoadShippingOptionsRequested)),e._checkoutRequestSender.loadCheckout(a.id,Object(r.__assign)(Object(r.__assign)({},t),{params:{include:[s.a.AvailableShippingOptions]}})).then((function(t){var e=t.body;o.next(Object(i.createAction)(d.a.LoadShippingOptionsSucceeded,e)),o.complete()})).catch((function(t){o.error(Object(i.createErrorAction)(d.a.LoadShippingOptionsFailed,t))}))}))}},t.prototype.updateAddress=function(t,e){var n=this;return function(r){var i=n._getUpdateAddressRequestBody(t,r),o=r.getState().consignments.getConsignments();return o&&o.length&&(i.id=o[0].id),n._createOrUpdateConsignment(i,e)(r)}},t.prototype.createConsignments=function(t,e){var n=this;return function(r){return a.Observable.create((function(o){var a=r.getState().checkout.getCheckout();if(!a||!a.id)throw new c.b(c.a.MissingCheckout);o.next(Object(i.createAction)(d.a.CreateConsignmentsRequested)),n._consignmentRequestSender.createConsignments(a.id,t,e).then((function(t){var e=t.body;o.next(Object(i.createAction)(d.a.CreateConsignmentsSucceeded,e)),o.complete()})).catch((function(t){o.error(Object(i.createErrorAction)(d.a.CreateConsignmentsFailed,t))}))}))}},t.prototype.updateConsignment=function(t,e){var n=this;return function(r){return a.Observable.create((function(o){var a=r.getState().checkout.getCheckout();if(!a||!a.id)throw new c.b(c.a.MissingCheckout);var s={id:t.id};o.next(Object(i.createAction)(d.a.UpdateConsignmentRequested,void 0,s)),n._consignmentRequestSender.updateConsignment(a.id,t,e).then((function(t){var e=t.body;o.next(Object(i.createAction)(d.a.UpdateConsignmentSucceeded,e,s)),o.complete()})).catch((function(t){o.error(Object(i.createErrorAction)(d.a.UpdateConsignmentFailed,t,s))}))}))}},t.prototype.deleteConsignment=function(t,e){var n=this;return function(r){return a.Observable.create((function(o){var a=r.getState().checkout.getCheckout(),s={id:t};if(!a||!a.id)throw new c.b(c.a.MissingCheckout);o.next(Object(i.createAction)(d.a.DeleteConsignmentRequested,void 0,s)),n._consignmentRequestSender.deleteConsignment(a.id,t,e).then((function(t){var e=t.body;o.next(Object(i.createAction)(d.a.DeleteConsignmentSucceeded,e,s)),o.complete()})).catch((function(t){o.error(Object(i.createErrorAction)(d.a.DeleteConsignmentFailed,t,s))}))}))}},t.prototype.updateShippingOption=function(t,e){var n=this;return function(r){return a.Observable.create((function(o){var a=r.getState().checkout.getCheckout();if(!a||!a.id)throw new c.b(c.a.MissingCheckout);var s={id:t.id};o.next(Object(i.createAction)(d.a.UpdateShippingOptionRequested,void 0,s)),n._consignmentRequestSender.updateConsignment(a.id,t,e).then((function(t){var e=t.body;o.next(Object(i.createAction)(d.a.UpdateShippingOptionSucceeded,e,s)),o.complete()})).catch((function(t){o.error(Object(i.createErrorAction)(d.a.UpdateShippingOptionFailed,t,s))}))}))}},t.prototype._createOrUpdateConsignment=function(t,e){var n=this;return function(r){var i=r.getState().checkout.getCheckout();if(!i||!i.id)throw new c.b(c.a.MissingCheckout);return n._isUpdateConsignmentRequest(t)?n.updateConsignment(t,e)(r):n.createConsignments([t],e)(r)}},t.prototype._getUpdateAddressRequestBody=function(t,e){var n=e.getState().cart.getCart();if(!n)throw new c.b(c.a.MissingCart);var i=n.lineItems,o=i.physicalItems,a=i.customItems,s=void 0===a?[]:a;return{shippingAddress:t,lineItems:Object(r.__spreadArrays)(o,s).map((function(t){return{itemId:t.id,quantity:t.quantity}}))}},t.prototype._removeLineItems=function(t,e,n){if(!n)throw new c.b(c.a.MissingCart);return this._hydrateLineItems(e.lineItemIds,n).map((function(e){var n=Object(o.find)(t,(function(t){return t.itemId===e.itemId}));return Object(r.__assign)(Object(r.__assign)({},e),{quantity:n?e.quantity-n.quantity:e.quantity})})).filter((function(t){return t.quantity>0}))},t.prototype._addLineItems=function(t,e,n){if(!e)return t;if(!n)throw new c.b(c.a.MissingCart);return t.concat(this._hydrateLineItems(e.lineItemIds,n)).filter((function(t){return t.quantity>0}))},t.prototype._hydrateLineItems=function(t,e){return t.map((function(t){var n=Object(o.find)(e.lineItems.physicalItems,(function(e){return e.id===t}));return{itemId:t,quantity:n?n.quantity:0}}))},t.prototype._isUpdateConsignmentRequest=function(t){return!!t.id},t}();e.a=p},function(t,e,n){"use strict";var r=n(0),i=n(39),o=n(112),a=n(63),s=["consignments.availableShippingOptions","cart.lineItems.physicalItems.options","cart.lineItems.digitalItems.options","customer","promotions.banners"],c=function(){function t(t){this._requestSender=t}return t.prototype.createConsignments=function(t,e,n){var r=void 0===n?{}:n,a=r.timeout,c=r.params,u=(void 0===c?{}:c).include,d="/api/storefront/checkouts/"+t+"/consignments",p={Accept:i.a.JsonV1};return this._requestSender.post(d,{body:e,params:{include:Object(o.a)(s,u)},headers:p,timeout:a})},t.prototype.updateConsignment=function(t,e,n){var a=void 0===n?{}:n,c=a.timeout,u=a.params,d=(void 0===u?{}:u).include,p=e.id,h=Object(r.__rest)(e,["id"]),l="/api/storefront/checkouts/"+t+"/consignments/"+p,m={Accept:i.a.JsonV1};return this._requestSender.put(l,{body:h,params:{include:Object(o.a)(s,d)},headers:m,timeout:c})},t.prototype.deleteConsignment=function(t,e,n){var r=(void 0===n?{}:n).timeout,o="/api/storefront/checkouts/"+t+"/consignments/"+e,c={Accept:i.a.JsonV1},u=Object(a.a)(s);return this._requestSender.delete(o,{params:{include:u},headers:c,timeout:r})},t}();e.a=c},function(t,e,n){"use strict";function r(t){return window.location.origin+"/checkout.php?action=set_external_checkout&provider=masterpass&gateway=stripe&origin="+t}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";var r=n(0),i=n(2),o=n(59),a=n(100),s=n(12),c=n(98),u=n(108),d=n(109),p=n(99),h=n(78),l=n(40),m=function(){function t(){this._cardExpiryFormatter=new u.a,this._cardNumberFormatter=new d.a}return t.prototype.transform=function(t,e){var n=e.billingAddress.getBillingAddress(),u=e.checkout.getCheckout(),d=e.customer.getCustomer(),m=e.order.getOrder(),f=e.paymentMethods.getPaymentMethod(t.methodId,t.gatewayId),_=e.shippingAddress.getShippingAddress(),y=e.consignments.getConsignments(),g=e.consignments.getShippingOption(),b=e.config.getStoreConfig(),v=e.config.getContextConfig(),C=e.instruments.getInstrumentsMeta(),O=e.paymentMethods.getPaymentMethodsMeta(),S=e.order.getOrderMeta(),w=d&&n&&Object(c.a)(d,n),I=C&&t.paymentData&&(Object(l.a)(t.paymentData)||Object(l.b)(t.paymentData))?e.payment.getPaymentToken()+", "+C.vaultAccessToken:e.payment.getPaymentToken();if(!I)throw new s.b(s.a.MissingPaymentToken);return{additionalAction:t.additionalAction,authToken:I,customer:w,billingAddress:n&&Object(o.a)(n),shippingAddress:_&&Object(o.a)(_,y),shippingOption:g&&Object(h.a)(g,!0),cart:u&&Object(a.a)(u),order:m&&Object(p.a)(m,S),orderMeta:S,payment:t.paymentData,paymentMethod:f&&this._transformPaymentMethod(f),quoteMeta:{request:Object(r.__assign)(Object(r.__assign)({},O),{geoCountryCode:v&&v.geoCountryCode})},source:"bigcommerce-checkout-js-sdk",store:Object(i.pick)(b&&b.storeProfile,["storeHash","storeId","storeLanguage","storeName"])}},t.prototype.transformWithHostedFormData=function(t,e,n){var s=e.additionalAction,u=e.authToken,d=e.checkout,l=e.config,m=e.order,f=e.orderMeta,_=e.payment,y=void 0===_?{}:_,g=e.paymentMethod,b=e.paymentMethodMeta,v=d&&d.consignments[0],C=v&&v.shippingAddress,O=v&&v.selectedShippingOption;return{additionalAction:s,authToken:u,paymentMethod:g&&this._transformPaymentMethod(g),customer:m&&m.billingAddress&&d&&Object(c.a)(d.customer,m.billingAddress),billingAddress:m&&m.billingAddress&&Object(o.a)(m.billingAddress),shippingAddress:C&&d&&Object(o.a)(C,d.consignments),shippingOption:O&&Object(h.a)(O,!0),cart:d&&Object(a.a)(d),order:m&&Object(p.a)(m,f),orderMeta:f,payment:this._transformHostedInputValues(t,y,n),quoteMeta:{request:Object(r.__assign)(Object(r.__assign)({},b),{geoCountryCode:l&&l.context.geoCountryCode})},source:"bigcommerce-checkout-js-sdk",store:l&&Object(i.pick)(l.storeConfig.storeProfile,["storeHash","storeId","storeLanguage","storeName"])}},t.prototype._transformPaymentMethod=function(t){return"multi-option"!==t.method||t.gateway?t.initializationData&&t.initializationData.gateway?Object(r.__assign)(Object(r.__assign)({},t),{id:t.initializationData.gateway}):t:Object(r.__assign)(Object(r.__assign)({},t),{gateway:t.id})},t.prototype._transformHostedInputValues=function(t,e,n){return"instrumentId"in e?Object(r.__assign)(Object(r.__assign)({},e),{ccCvv:t.cardCodeVerification,ccNumber:t.cardNumberVerification&&this._cardNumberFormatter.unformat(t.cardNumberVerification),hostedFormNonce:n}):Object(r.__assign)(Object(r.__assign)({},e),{ccCvv:t.cardCode,ccExpiry:this._cardExpiryFormatter.toObject(t.cardExpiry||""),ccName:t.cardName||"",ccNumber:this._cardNumberFormatter.unformat(t.cardNumber||""),hostedFormNonce:n})},t}();e.a=m},function(t,e,n){"use strict";var r=function(){function t(t){this._client=t}return t.prototype.submitPayment=function(t){var e=this;return new Promise((function(n,r){e._client.submitPayment(t,(function(t,i){t?r(e._transformResponse(t)):n(e._transformResponse(i))}))}))},t.prototype.initializeOffsitePayment=function(t,e){var n=this;return new Promise((function(){n._client.initializeOffsitePayment(t,null,e)}))},t.prototype._transformResponse=function(t){return{headers:t.headers,body:t.data,status:t.status,statusText:t.statusText}},t}();e.a=r},function(t,e,n){"use strict";function r(t){return 0===(""+t).indexOf("$$")||0===(""+t).indexOf("_")}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";var r=n(0),i=n(1),o=n(170),a=n(35),s=function(t){function e(e,n){var r=t.call(this,e,{message:n||"An unexpected error has occurred. The checkout process cannot continue as a result."})||this;return r.name="UnrecoverableError",r.type="unrecoverable",r}return Object(r.__extends)(e,t),e}(a.a),c=n(2);function u(t){return t.reduce((function(t,e){return e?Object(r.__spreadArrays)(t,[e]):t}),[]).join(" ")}var d=n(168),p=n(169),h=function(){function t(){this._factoryMethods={},this.register("default",(function(t,e){return new a.a(t,{message:e})})),this.register("internal",(function(t,e){return function(t,e){var n=t.body,r=n.errors,i=void 0===r?[]:r;return new a.a(t,{message:u(i)||n.detail||n.title||e,errors:i.length?i.map((function(t){return{code:n.type,message:t}})):[{code:n.type,message:n.detail||n.title}]})}(t,e)})),this.register("storefront",(function(t,e){return function(t,e){var n=t.body;return new a.a(t,{message:e||n.detail||n.title,errors:[{code:n.code||n.type,message:n.detail||n.title}]})}(t,e)})),this.register("payment",(function(t,e){return Object(d.a)(t,e)})),this.register("timeout",(function(t){return new p.a(t)}))}return t.prototype.register=function(t,e){this._factoryMethods[t]=e},t.prototype.createError=function(t,e){return(this._factoryMethods[this._getType(t)]||this._factoryMethods.default)(t,e)},t.prototype._getType=function(t){if(0===t.status)return"timeout";if(this._isStorefrontErrorResponseBody(t.body))return"storefront";if(this._isInternalErrorResponseBody(t.body)){var e=Object(c.last)(t.body.type.split("/"));return e&&this._factoryMethods[e]?e:"internal"}var n=Object(c.last)(t.body&&t.body.errors);return n&&n.code&&this._factoryMethods[n.code]?n.code:"payment"},t.prototype._isStorefrontErrorResponseBody=function(t){var e=t;return!this._isInternalErrorResponseBody(t)&&"string"==typeof e.title&&"string"==typeof e.type&&"number"==typeof e.status&&"string"==typeof e.detail},t.prototype._isInternalErrorResponseBody=function(t){var e=t;return"object"==typeof e.errors&&"string"==typeof e.title&&"string"==typeof e.type&&"number"==typeof e.status},t}();var l=n(3),m=n(8);var f=n(16),_=n(128),y=n(86);function g(t,e){return function(t){return t.type===y.a.ClearError}(e)?Object(_.a)(t,(function(t){return t===e.payload})):t}var b=n(70);function v(t,e){return void 0===e||Object(b.a)(t,e)?t:e}function C(t,e,n){var i;return t&&t.hasOwnProperty(e)&&Object(b.a)(t[e],n)?t:Object(r.__assign)(Object(r.__assign)({},t),((i={})[e]=n,i))}var O=n(17),S=n(172),w=n(19),I={errors:{},statuses:{}};function A(t,e){return void 0===t&&(t=I),Object(i.combineReducers)({data:E,errors:Object(i.composeReducers)(P,g),statuses:j})(t,e)}function E(t,e){switch(e.type){case w.a.UpdateBillingAddressSucceeded:case w.a.ContinueAsGuestSucceeded:case f.a.LoadCheckoutSucceeded:case O.a.LoadOrderSucceeded:return v(t,e.payload&&e.payload.billingAddress);default:return t}}function P(t,e){switch(void 0===t&&(t=I.errors),e.type){case f.a.LoadCheckoutRequested:case f.a.LoadCheckoutSucceeded:return C(t,"loadError",void 0);case f.a.LoadCheckoutFailed:return C(t,"loadError",e.payload);case w.a.UpdateBillingAddressRequested:case w.a.UpdateBillingAddressSucceeded:return C(t,"updateError",void 0);case w.a.UpdateBillingAddressFailed:return C(t,"updateError",e.payload);case S.a.UpdateSubscriptionsRequested:case S.a.UpdateSubscriptionsSucceeded:case w.a.ContinueAsGuestRequested:case w.a.ContinueAsGuestSucceeded:return C(t,"continueAsGuestError",void 0);case S.a.UpdateSubscriptionsFailed:case w.a.ContinueAsGuestFailed:return C(t,"continueAsGuestError",e.payload);default:return t}}function j(t,e){switch(void 0===t&&(t=I.statuses),e.type){case f.a.LoadCheckoutRequested:return C(t,"isLoading",!0);case f.a.LoadCheckoutSucceeded:case f.a.LoadCheckoutFailed:return C(t,"isLoading",!1);case w.a.UpdateBillingAddressRequested:return C(t,"isUpdating",!0);case w.a.UpdateBillingAddressFailed:case w.a.UpdateBillingAddressSucceeded:return C(t,"isUpdating",!1);case w.a.ContinueAsGuestRequested:case S.a.UpdateSubscriptionsRequested:return C(t,"isContinuingAsGuest",!0);case S.a.UpdateSubscriptionsSucceeded:case S.a.UpdateSubscriptionsFailed:case w.a.ContinueAsGuestFailed:case w.a.ContinueAsGuestSucceeded:return C(t,"isContinuingAsGuest",!1);default:return t}}var k=n(41);var M=function t(e,n,r){var i=(r||{}).matchObject,o=void 0===i?function(t,e){return void 0!==t.id&&t.id===e.id}:i;if(!e)return n;if(!n||e===n)return e;var a=0,s=0,u=function(t,e,n){return a+=t===e?1:0,s+=t===n?1:0,t},d=n.map((function(n,r){var i=e&&e[r];return Object(k.a)(i)&&Object(k.a)(n)?o(i,n)?u(T(i,n),i,n):u(v(i,n),i,n):Object(c.isArray)(i)&&Object(c.isArray)(n)?u(t(i,n),i,n):u(v(i,n),i,n)}));return a===n.length&&e&&e.length===n.length?e:s===n.length?n:d};var T=function t(e,n){return e?n&&e!==n?Object.keys(n).reduce((function(e,r){var i=e[r],o=n[r];return Object(k.a)(i)&&Object(k.a)(o)?C(e,r,t(i,o)):Object(c.isArray)(i)&&Object(c.isArray)(o)?C(e,r,M(i,o)):C(e,r,o)}),e):e:n},R=n(21),D=n(25),z=n(6),L={errors:{},statuses:{}};function N(t,e){return void 0===t&&(t=L),Object(i.combineReducers)({data:F,errors:Object(i.composeReducers)(U,g),statuses:q})(t,e)}function F(t,e){switch(e.type){case w.a.UpdateBillingAddressSucceeded:case f.a.LoadCheckoutSucceeded:case z.a.CreateConsignmentsSucceeded:case z.a.DeleteConsignmentSucceeded:case z.a.UpdateConsignmentSucceeded:case z.a.UpdateShippingOptionSucceeded:case z.a.LoadShippingOptionsSucceeded:case R.a.ApplyCouponSucceeded:case R.a.RemoveCouponSucceeded:case D.a.ApplyGiftCertificateSucceeded:case D.a.RemoveGiftCertificateSucceeded:return T(t,e.payload&&e.payload.cart);default:return t}}function q(t,e){switch(void 0===t&&(t=L.statuses),e.type){case f.a.LoadCheckoutRequested:return C(t,"isLoading",!0);case f.a.LoadCheckoutFailed:case f.a.LoadCheckoutSucceeded:return C(t,"isLoading",!1);default:return t}}function U(t,e){switch(void 0===t&&(t=L.errors),e.type){case f.a.LoadCheckoutRequested:case f.a.LoadCheckoutSucceeded:return C(t,"loadError",void 0);case f.a.LoadCheckoutFailed:return C(t,"loadError",e.payload);default:return t}}var x=n(20),B={data:{},errors:{},statuses:{}},G={initializedContainers:{}},V={},Y={};function H(t,e){var n,r,o;return void 0===t&&(t=B),e.meta&&e.meta.methodId?Object(i.combineReducers)({data:Object(i.combineReducers)((n={},n[e.meta.methodId]=W,n)),errors:Object(i.combineReducers)((r={},r[e.meta.methodId]=K,r)),statuses:Object(i.combineReducers)((o={},o[e.meta.methodId]=J,o))})(t,e):t}function W(t,e){var n;switch(void 0===t&&(t=G),e.type){case x.a.InitializeButtonSucceeded:return e.meta&&e.meta.containerId?T(t,{initializedContainers:(n={},n[e.meta.containerId]=!0,n)}):t;case x.a.DeinitializeButtonSucceeded:return C(t,"initializedContainers",{})}return t}function K(t,e){switch(void 0===t&&(t=V),e.type){case x.a.InitializeButtonRequested:case x.a.InitializeButtonSucceeded:return C(t,"initializeError",void 0);case x.a.InitializeButtonFailed:return C(t,"initializeError",e.payload);case x.a.DeinitializeButtonRequested:case x.a.DeinitializeButtonSucceeded:return C(t,"deinitializeError",void 0);case x.a.DeinitializeButtonFailed:return C(t,"deinitializeError",e.payload);default:return t}}function J(t,e){switch(void 0===t&&(t=Y),e.type){case x.a.InitializeButtonRequested:return C(t,"isInitializing",!0);case x.a.InitializeButtonFailed:case x.a.InitializeButtonSucceeded:return C(t,"isInitializing",!1);case x.a.DeinitializeButtonRequested:return C(t,"isDeinitializing",!0);case x.a.DeinitializeButtonFailed:case x.a.DeinitializeButtonSucceeded:return C(t,"isDeinitializing",!1);default:return t}}var Z=n(37),Q={meta:{},errors:{},statuses:{}};function X(t,e){return void 0===t&&(t=Q),Object(i.combineReducers)({data:$,errors:Object(i.composeReducers)(tt,g),statuses:et})(t,e)}function $(t,e){switch(e.type){case Z.a.LoadConfigSucceeded:return T(t,e.payload);default:return t}}function tt(t,e){switch(void 0===t&&(t=Q.errors),e.type){case Z.a.LoadConfigSucceeded:return C(t,"loadError",void 0);case Z.a.LoadConfigFailed:return C(t,"loadError",e.payload);default:return t}}function et(t,e){switch(void 0===t&&(t=Q.statuses),e.type){case Z.a.LoadConfigRequested:return C(t,"isLoading",!0);case Z.a.LoadConfigSucceeded:case Z.a.LoadConfigFailed:return C(t,"isLoading",!1);default:return t}}var nt={errors:{},statuses:{}};function rt(t,e){return void 0===t&&(t=nt),Object(i.combineReducers)({data:it,errors:Object(i.composeReducers)(ot,g),statuses:at})(t,e)}function it(t,e){switch(e.type){case f.a.LoadCheckoutSucceeded:case R.a.ApplyCouponSucceeded:case z.a.UpdateShippingOptionSucceeded:case R.a.RemoveCouponSucceeded:case O.a.LoadOrderSucceeded:return M(t,e.payload&&e.payload.coupons);default:return t}}function ot(t,e){switch(void 0===t&&(t={}),e.type){case R.a.ApplyCouponRequested:case R.a.ApplyCouponSucceeded:return C(t,"applyCouponError",void 0);case R.a.ApplyCouponFailed:return C(t,"applyCouponError",e.payload);case R.a.RemoveCouponRequested:case R.a.RemoveCouponSucceeded:return C(t,"removeCouponError",void 0);case R.a.RemoveCouponFailed:return C(t,"removeCouponError",e.payload);default:return t}}function at(t,e){switch(void 0===t&&(t={}),e.type){case R.a.ApplyCouponRequested:return C(t,"isApplyingCoupon",!0);case R.a.ApplyCouponSucceeded:case R.a.ApplyCouponFailed:return C(t,"isApplyingCoupon",!1);case R.a.RemoveCouponRequested:return C(t,"isRemovingCoupon",!0);case R.a.RemoveCouponSucceeded:case R.a.RemoveCouponFailed:return C(t,"isRemovingCoupon",!1);default:return t}}var st={errors:{},statuses:{}};function ct(t,e){return void 0===t&&(t=st),Object(i.combineReducers)({data:ut,errors:Object(i.composeReducers)(dt,g),statuses:pt})(t,e)}function ut(t,e){switch(e.type){case f.a.LoadCheckoutSucceeded:case z.a.CreateConsignmentsSucceeded:case z.a.UpdateConsignmentSucceeded:case z.a.DeleteConsignmentSucceeded:case z.a.UpdateShippingOptionSucceeded:case R.a.ApplyCouponSucceeded:case R.a.RemoveCouponSucceeded:case D.a.ApplyGiftCertificateSucceeded:case D.a.RemoveGiftCertificateSucceeded:return M(t,e.payload&&e.payload.giftCertificates);default:return t}}function dt(t,e){switch(void 0===t&&(t=st.errors),e.type){case D.a.ApplyGiftCertificateRequested:case D.a.ApplyGiftCertificateSucceeded:return C(t,"applyGiftCertificateError",void 0);case D.a.ApplyGiftCertificateFailed:return C(t,"applyGiftCertificateError",e.payload);case D.a.RemoveGiftCertificateRequested:case D.a.RemoveGiftCertificateSucceeded:return C(t,"removeGiftCertificateError",void 0);case D.a.RemoveGiftCertificateFailed:return C(t,"removeGiftCertificateError",e.payload);default:return t}}function pt(t,e){switch(void 0===t&&(t=st.statuses),e.type){case D.a.ApplyGiftCertificateRequested:return C(t,"isApplyingGiftCertificate",!0);case D.a.ApplyGiftCertificateSucceeded:case D.a.ApplyGiftCertificateFailed:return C(t,"isApplyingGiftCertificate",!1);case D.a.RemoveGiftCertificateRequested:return C(t,"isRemovingGiftCertificate",!0);case D.a.RemoveGiftCertificateSucceeded:case D.a.RemoveGiftCertificateFailed:return C(t,"isRemovingGiftCertificate",!1);default:return t}}var ht=n(34),lt={errors:{},statuses:{}};function mt(t,e){return void 0===t&&(t=lt),Object(i.combineReducers)({data:ft,errors:Object(i.composeReducers)(_t,g),statuses:yt})(t,e)}function ft(t,e){switch(e.type){case w.a.ContinueAsGuestSucceeded:case f.a.LoadCheckoutSucceeded:return T(t,e.payload&&e.payload.customer);default:return t}}function _t(t,e){switch(void 0===t&&(t=lt.errors),e.type){case ht.a.CreateCustomerRequested:case ht.a.CreateCustomerSucceeded:return C(t,"createError",void 0);case ht.a.CreateCustomerFailed:return C(t,"createError",e.payload);default:return t}}function yt(t,e){switch(void 0===t&&(t=lt.statuses),e.type){case ht.a.CreateCustomerRequested:return C(t,"isCreating",!0);case ht.a.CreateCustomerFailed:case ht.a.CreateCustomerSucceeded:return C(t,"isCreating",!1);default:return t}}var gt=n(10),bt={data:{},errors:{},statuses:{}};function vt(t,e){return void 0===t&&(t=bt),Object(i.combineReducers)({data:Ct,errors:Object(i.composeReducers)(Ot,g),statuses:St})(t,e)}function Ct(t,e){var n,r;switch(void 0===t&&(t=bt.data),e.type){case gt.a.InitializeSucceeded:return T(t,((n={})[e.meta&&e.meta.methodId]={isInitialized:!0},n));case gt.a.DeinitializeSucceeded:return T(t,((r={})[e.meta&&e.meta.methodId]={isInitialized:!1},r))}return t}function Ot(t,e){switch(void 0===t&&(t=bt.errors),e.type){case gt.a.InitializeRequested:case gt.a.InitializeSucceeded:return T(t,{initializeError:void 0,initializeMethodId:void 0});case gt.a.InitializeFailed:return T(t,{initializeError:e.payload,initializeMethodId:e.meta&&e.meta.methodId});case gt.a.DeinitializeRequested:case gt.a.DeinitializeSucceeded:return T(t,{deinitializeError:void 0,deinitializeMethodId:void 0});case gt.a.DeinitializeFailed:return T(t,{deinitializeError:e.payload,deinitializeMethodId:e.meta&&e.meta.methodId});case gt.a.SignInRequested:case gt.a.SignInSucceeded:return T(t,{signInError:void 0,signInMethodId:void 0});case gt.a.SignInFailed:return T(t,{signInError:e.payload,signInMethodId:e.meta&&e.meta.methodId});case gt.a.SignOutRequested:case gt.a.SignOutSucceeded:return T(t,{signOutError:void 0,signOutMethodId:void 0});case gt.a.SignOutFailed:return T(t,{signOutError:e.payload,signOutMethodId:e.meta&&e.meta.methodId});case gt.a.WidgetInteractionStarted:case gt.a.WidgetInteractionFinished:return T(t,{widgetInteractionError:void 0,widgetInteractionMethodId:void 0});case gt.a.WidgetInteractionFailed:return T(t,{widgetInteractionError:e.payload,widgetInteractionMethodId:e.meta.methodId});default:return t}}function St(t,e){switch(void 0===t&&(t=bt.statuses),e.type){case gt.a.InitializeRequested:return T(t,{isInitializing:!0,initializeMethodId:e.meta&&e.meta.methodId});case gt.a.InitializeFailed:case gt.a.InitializeSucceeded:return T(t,{isInitializing:!1,initializeMethodId:void 0});case gt.a.DeinitializeRequested:return T(t,{isDeinitializing:!0,deinitializeMethodId:e.meta&&e.meta.methodId});case gt.a.DeinitializeFailed:case gt.a.DeinitializeSucceeded:return T(t,{isDeinitializing:!1,deinitializeMethodId:void 0});case gt.a.SignInRequested:return T(t,{isSigningIn:!0,signInMethodId:e.meta&&e.meta.methodId});case gt.a.SignInFailed:case gt.a.SignInSucceeded:return T(t,{isSigningIn:!1,signInMethodId:void 0});case gt.a.SignOutRequested:return T(t,{isSigningOut:!0,signOutMethodId:e.meta&&e.meta.methodId});case gt.a.SignOutFailed:case gt.a.SignOutSucceeded:return T(t,{isSigningOut:!1,signOutMethodId:void 0});case gt.a.WidgetInteractionStarted:return T(t,{isWidgetInteracting:!0,widgetInteractionMethodId:e.meta.methodId});case gt.a.WidgetInteractionFinished:case gt.a.WidgetInteractionFailed:return T(t,{isWidgetInteracting:!1,widgetInteractionMethodId:void 0});default:return t}}var wt=n(38),It={errors:{},statuses:{}};function At(t,e){return void 0===t&&(t=It),Object(i.combineReducers)({data:Et,errors:Object(i.composeReducers)(Pt,g),statuses:jt})(t,e)}function Et(t,e){switch(e.type){case wt.a.LoadFormFieldsSucceeded:return T(t,e.payload);default:return t}}function Pt(t,e){switch(void 0===t&&(t=It.errors),e.type){case wt.a.LoadFormFieldsSucceeded:return C(t,"loadError",void 0);case wt.a.LoadFormFieldsFailed:return C(t,"loadError",e.payload);default:return t}}function jt(t,e){switch(void 0===t&&(t=It.statuses),e.type){case wt.a.LoadFormFieldsRequested:return C(t,"isLoading",!0);case wt.a.LoadFormFieldsSucceeded:case wt.a.LoadFormFieldsFailed:return C(t,"isLoading",!1);default:return t}}var kt=n(42),Mt={errors:{},statuses:{}};function Tt(t,e){return void 0===t&&(t=Mt),Object(i.combineReducers)({data:Rt,errors:Object(i.composeReducers)(Dt,g),statuses:zt})(t,e)}function Rt(t,e){switch(e.type){case kt.a.LoadCountriesSucceeded:return M(t,e.payload);default:return t}}function Dt(t,e){switch(void 0===t&&(t=Mt.errors),e.type){case kt.a.LoadCountriesRequested:case kt.a.LoadCountriesSucceeded:return C(t,"loadError",void 0);case kt.a.LoadCountriesFailed:return C(t,"loadError",e.payload);default:return t}}function zt(t,e){switch(void 0===t&&(t=Mt.statuses),e.type){case kt.a.LoadCountriesRequested:return C(t,"isLoading",!0);case kt.a.LoadCountriesSucceeded:case kt.a.LoadCountriesFailed:return C(t,"isLoading",!1);default:return t}}var Lt={errors:{},meta:{},statuses:{}};function Nt(t,e){return void 0===t&&(t=Lt),Object(i.combineReducers)({data:Ft,errors:Object(i.composeReducers)(Ut,g),meta:qt,statuses:xt})(t,e)}function Ft(t,e){switch(e.type){case O.a.LoadOrderSucceeded:case O.a.LoadOrderPaymentsSucceeded:return T(t,Object(c.omit)(e.payload,["billingAddress","coupons"]));default:return t}}function qt(t,e){switch(e.type){case O.a.FinalizeOrderSucceeded:case O.a.SubmitOrderSucceeded:return T(t,Object(r.__assign)(Object(r.__assign)({},e.meta),{callbackUrl:e.payload&&e.payload.order.callbackUrl,orderToken:e.payload&&e.payload.order.token,payment:e.payload&&e.payload.order&&e.payload.order.payment}));default:return t}}function Ut(t,e){switch(void 0===t&&(t=Lt.errors),e.type){case O.a.LoadOrderRequested:case O.a.LoadOrderSucceeded:case O.a.LoadOrderPaymentsSucceeded:case O.a.LoadOrderPaymentsRequested:return C(t,"loadError",void 0);case O.a.LoadOrderFailed:case O.a.LoadOrderPaymentsFailed:return C(t,"loadError",e.payload);default:return t}}function xt(t,e){switch(void 0===t&&(t=Lt.statuses),e.type){case O.a.LoadOrderRequested:case O.a.LoadOrderPaymentsRequested:return C(t,"isLoading",!0);case O.a.LoadOrderSucceeded:case O.a.LoadOrderFailed:case O.a.LoadOrderPaymentsSucceeded:case O.a.LoadOrderPaymentsFailed:return C(t,"isLoading",!1);default:return t}}var Bt=n(60);function Gt(t,e){return void 0===t&&(t={}),Object(i.combineReducers)({data:Vt})(t,e)}function Vt(t,e){switch(e.type){case Bt.a.SubmitPaymentSucceeded:return e.payload;default:return t}}var Yt=n(18),Ht={errors:{},statuses:{}};function Wt(t,e){return void 0===t&&(t=Ht),Object(i.combineReducers)({data:Kt,errors:Object(i.composeReducers)(Zt,g),meta:Jt,statuses:Qt})(t,e)}function Kt(t,e){switch(e.type){case Yt.a.LoadPaymentMethodSucceeded:return function(t,e,n){if(!e)return t;var i=Object(c.pick)(e,"id"),o=Object(c.findIndex)(t,"object"==typeof n?Object(c.pickBy)(n):n||i),a=Object(r.__spreadArrays)(t);if(-1===o)a.push(e);else{var s=t[o];a[o]=Object(k.a)(s)&&Object(k.a)(e)?T(s,e):e}return a}(t||[],e.payload,e.payload&&{id:e.payload.id,gateway:e.payload.gateway});case Yt.a.LoadPaymentMethodsSucceeded:return M(t,e.payload,{matchObject:function(t,e){return t.id===e.id&&t.gateway===e.gateway}});default:return t}}function Jt(t,e){switch(e.type){case Yt.a.LoadPaymentMethodsSucceeded:return T(t,e.meta);default:return t}}function Zt(t,e){switch(void 0===t&&(t=Ht.errors),e.type){case Yt.a.LoadPaymentMethodsRequested:case Yt.a.LoadPaymentMethodsSucceeded:return C(t,"loadError",void 0);case Yt.a.LoadPaymentMethodsFailed:return C(t,"loadError",e.payload);case Yt.a.LoadPaymentMethodRequested:case Yt.a.LoadPaymentMethodSucceeded:return T(t,{loadMethodId:void 0,loadMethodError:void 0});case Yt.a.LoadPaymentMethodFailed:return T(t,{loadMethodId:e.meta.methodId,loadMethodError:e.payload});default:return t}}function Qt(t,e){switch(void 0===t&&(t=Ht.statuses),e.type){case Yt.a.LoadPaymentMethodsRequested:return C(t,"isLoading",!0);case Yt.a.LoadPaymentMethodsSucceeded:case Yt.a.LoadPaymentMethodsFailed:return C(t,"isLoading",!1);case Yt.a.LoadPaymentMethodRequested:return T(t,{isLoadingMethod:!0,loadMethodId:e.meta.methodId});case Yt.a.LoadPaymentMethodSucceeded:case Yt.a.LoadPaymentMethodFailed:return T(t,{isLoadingMethod:!1,loadMethodId:void 0});default:return t}}var Xt=n(11),$t={data:{},errors:{},statuses:{}};function te(t,e){return void 0===t&&(t=$t),Object(i.combineReducers)({data:ee,errors:Object(i.composeReducers)(ne,g),statuses:re})(t,e)}function ee(t,e){var n,r;switch(void 0===t&&(t=$t.data),e.type){case Xt.a.InitializeSucceeded:return T(t,((n={})[e.meta&&e.meta.methodId]={isInitialized:!0},n));case Xt.a.DeinitializeSucceeded:return T(t,((r={})[e.meta&&e.meta.methodId]={isInitialized:!1},r))}return t}function ne(t,e){switch(void 0===t&&(t=$t.errors),e.type){case Xt.a.InitializeRequested:case Xt.a.InitializeSucceeded:return T(t,{initializeError:void 0,initializeMethodId:void 0});case Xt.a.InitializeFailed:return T(t,{initializeError:e.payload,initializeMethodId:e.meta&&e.meta.methodId});case Xt.a.DeinitializeRequested:case Xt.a.DeinitializeSucceeded:return T(t,{deinitializeError:void 0,deinitializeMethodId:void 0});case Xt.a.DeinitializeFailed:return T(t,{deinitializeError:e.payload,deinitializeMethodId:e.meta&&e.meta.methodId});case Xt.a.ExecuteRequested:case Xt.a.ExecuteSucceeded:return T(t,{executeError:void 0,executeMethodId:void 0});case Xt.a.ExecuteFailed:return T(t,{executeError:e.payload,executeMethodId:e.meta&&e.meta.methodId});case Xt.a.FinalizeRequested:case Xt.a.FinalizeSucceeded:return T(t,{finalizeError:void 0,finalizeMethodId:void 0});case Xt.a.FinalizeFailed:return T(t,{finalizeError:e.payload,finalizeMethodId:e.meta&&e.meta.methodId});case Xt.a.WidgetInteractionStarted:case Xt.a.WidgetInteractionFinished:return T(t,{widgetInteractionError:void 0,widgetInteractionMethodId:void 0});case Xt.a.WidgetInteractionFailed:return T(t,{widgetInteractionError:e.payload,widgetInteractionMethodId:e.meta.methodId});default:return t}}function re(t,e){switch(void 0===t&&(t=$t.statuses),e.type){case Xt.a.InitializeRequested:return T(t,{isInitializing:!0,initializeMethodId:e.meta&&e.meta.methodId});case Xt.a.InitializeFailed:case Xt.a.InitializeSucceeded:return T(t,{isInitializing:!1,initializeMethodId:void 0});case Xt.a.DeinitializeRequested:return T(t,{isDeinitializing:!0,deinitializeMethodId:e.meta&&e.meta.methodId});case Xt.a.DeinitializeFailed:case Xt.a.DeinitializeSucceeded:return T(t,{isDeinitializing:!1,deinitializeMethodId:void 0});case Xt.a.ExecuteRequested:return T(t,{isExecuting:!0,executeMethodId:e.meta&&e.meta.methodId});case Xt.a.ExecuteFailed:case Xt.a.ExecuteSucceeded:return T(t,{isExecuting:!1,executeMethodId:void 0});case Xt.a.FinalizeRequested:return T(t,{isFinalizing:!0,finalizeMethodId:e.meta&&e.meta.methodId});case Xt.a.FinalizeFailed:case Xt.a.FinalizeSucceeded:return T(t,{isFinalizing:!1,finalizeMethodId:void 0});case Xt.a.WidgetInteractionStarted:return T(t,{isWidgetInteracting:!0,widgetInteractionMethodId:e.meta.methodId});case Xt.a.WidgetInteractionFinished:case Xt.a.WidgetInteractionFailed:return T(t,{isWidgetInteracting:!1,widgetInteractionMethodId:void 0});default:return t}}var ie=n(24),oe={data:[],errors:{},statuses:{}};function ae(t,e){return void 0===t&&(t=oe),Object(i.combineReducers)({data:se,errors:Object(i.composeReducers)(ue,g),meta:ce,statuses:de})(t,e)}function se(t,e){switch(void 0===t&&(t=oe.data),e.type){case ie.a.LoadInstrumentsSucceeded:return M(t,e.payload&&e.payload.vaultedInstruments||[]);default:return t}}function ce(t,e){switch(e.type){case ie.a.LoadInstrumentsSucceeded:case ie.a.DeleteInstrumentSucceeded:return T(t,e.meta);default:return t}}function ue(t,e){switch(void 0===t&&(t=oe.errors),e.type){case ie.a.LoadInstrumentsRequested:case ie.a.LoadInstrumentsSucceeded:return C(t,"loadError",void 0);case ie.a.DeleteInstrumentRequested:case ie.a.DeleteInstrumentSucceeded:return T(t,{deleteError:void 0,failedInstrument:void 0});case ie.a.LoadInstrumentsFailed:return C(t,"loadError",e.payload);case ie.a.DeleteInstrumentFailed:return T(t,{deleteError:e.payload,failedInstrument:e.meta.instrumentId});default:return t}}function de(t,e){switch(void 0===t&&(t=oe.statuses),e.type){case ie.a.LoadInstrumentsRequested:return C(t,"isLoading",!0);case ie.a.DeleteInstrumentRequested:return T(t,{isDeleting:!0,deletingInstrument:e.meta.instrumentId});case ie.a.LoadInstrumentsSucceeded:case ie.a.LoadInstrumentsFailed:return C(t,"isLoading",!1);case ie.a.DeleteInstrumentSucceeded:case ie.a.DeleteInstrumentFailed:return T(t,{isDeleting:!1,deletingInstrument:void 0});default:return t}}var pe=n(27),he={data:{}};function le(t,e){var n;return void 0===t&&(t=he),e.meta&&e.meta.methodId?Object(i.combineReducers)({data:Object(i.combineReducers)((n={},n[e.meta.methodId]=me,n))})(t,e):t}function me(t,e){switch(e.type){case pe.a.InitializeRemoteBillingSucceeded:return C(t,"billing",e.payload&&e.payload.billing);case pe.a.InitializeRemoteShippingSucceeded:return C(t,"shipping",e.payload&&e.payload.shipping);case pe.a.LoadRemoteSettingsSucceeded:return C(t,"settings",e.payload);case pe.a.UpdateRemoteCheckout:return T(t,e.payload);default:return t}}var fe={errors:{updateShippingOptionError:{},updateError:{},deleteError:{}},statuses:{isUpdating:{},isUpdatingShippingOption:{},isDeleting:{}}};function _e(t,e){return void 0===t&&(t=fe),Object(i.combineReducers)({data:ye,errors:Object(i.composeReducers)(ge,g),statuses:be})(t,e)}function ye(t,e){switch(e.type){case f.a.LoadCheckoutSucceeded:case z.a.LoadShippingOptionsSucceeded:case z.a.CreateConsignmentsSucceeded:case z.a.UpdateConsignmentSucceeded:case z.a.DeleteConsignmentSucceeded:case z.a.UpdateShippingOptionSucceeded:case R.a.ApplyCouponSucceeded:case R.a.RemoveCouponSucceeded:return M(t,e.payload&&e.payload.consignments);case ht.a.SignOutCustomerSucceeded:return M(t,[]);default:return t}}function ge(t,e){var n,r,i,o,a,s;switch(void 0===t&&(t=fe.errors),e.type){case f.a.LoadCheckoutRequested:case f.a.LoadCheckoutSucceeded:case z.a.LoadShippingOptionsSucceeded:case z.a.LoadShippingOptionsRequested:return C(t,"loadError",void 0);case f.a.LoadCheckoutFailed:case z.a.LoadShippingOptionsFailed:return C(t,"loadError",e.payload);case z.a.CreateConsignmentsRequested:case z.a.CreateConsignmentsSucceeded:return C(t,"createError",void 0);case z.a.CreateConsignmentsFailed:return C(t,"createError",e.payload);case z.a.UpdateConsignmentSucceeded:case z.a.UpdateConsignmentRequested:return e.meta?T(t,{updateError:(n={},n[e.meta.id]=void 0,n)}):t;case z.a.UpdateConsignmentFailed:return e.meta?T(t,{updateError:(r={},r[e.meta.id]=e.payload,r)}):t;case z.a.DeleteConsignmentSucceeded:case z.a.DeleteConsignmentRequested:return e.meta?T(t,{deleteError:(i={},i[e.meta.id]=void 0,i)}):t;case z.a.DeleteConsignmentFailed:return e.meta?T(t,{deleteError:(o={},o[e.meta.id]=e.payload,o)}):t;case z.a.UpdateShippingOptionRequested:case z.a.UpdateShippingOptionSucceeded:return e.meta?T(t,{updateShippingOptionError:(a={},a[e.meta.id]=void 0,a)}):t;case z.a.UpdateShippingOptionFailed:return e.meta?T(t,{updateShippingOptionError:(s={},s[e.meta.id]=e.payload,s)}):t;default:return t}}function be(t,e){var n,r,i,o,a,s;switch(void 0===t&&(t=fe.statuses),e.type){case f.a.LoadCheckoutRequested:return C(t,"isLoading",!0);case z.a.LoadShippingOptionsRequested:return C(t,"isLoadingShippingOptions",!0);case f.a.LoadCheckoutSucceeded:case f.a.LoadCheckoutFailed:return C(t,"isLoading",!1);case z.a.LoadShippingOptionsSucceeded:case z.a.LoadShippingOptionsFailed:return C(t,"isLoadingShippingOptions",!1);case z.a.CreateConsignmentsRequested:return C(t,"isCreating",!0);case z.a.CreateConsignmentsSucceeded:case z.a.CreateConsignmentsFailed:return C(t,"isCreating",!1);case z.a.UpdateConsignmentRequested:return e.meta?T(t,{isUpdating:(n={},n[e.meta.id]=!0,n)}):t;case z.a.UpdateConsignmentSucceeded:case z.a.UpdateConsignmentFailed:return e.meta?T(t,{isUpdating:(r={},r[e.meta.id]=!1,r)}):t;case z.a.DeleteConsignmentRequested:return e.meta?T(t,{isDeleting:(i={},i[e.meta.id]=!0,i)}):t;case z.a.DeleteConsignmentSucceeded:case z.a.DeleteConsignmentFailed:return e.meta?T(t,{isDeleting:(o={},o[e.meta.id]=!1,o)}):t;case z.a.UpdateShippingOptionRequested:return e.meta?T(t,{isUpdatingShippingOption:(a={},a[e.meta.id]=!0,a)}):t;case z.a.UpdateShippingOptionSucceeded:case z.a.UpdateShippingOptionFailed:return e.meta?T(t,{isUpdatingShippingOption:(s={},s[e.meta.id]=!1,s)}):t;default:return t}}var ve=n(43),Ce={errors:{},statuses:{}};function Oe(t,e){return void 0===t&&(t=Ce),Object(i.combineReducers)({data:Se,errors:Object(i.composeReducers)(we,g),statuses:Ie})(t,e)}function Se(t,e){switch(e.type){case ve.a.LoadShippingCountriesSucceeded:return M(t,e.payload);default:return t}}function we(t,e){switch(void 0===t&&(t=Ce.errors),e.type){case ve.a.LoadShippingCountriesRequested:case ve.a.LoadShippingCountriesSucceeded:return C(t,"loadError",void 0);case ve.a.LoadShippingCountriesFailed:return C(t,"loadError",e.payload);default:return t}}function Ie(t,e){switch(void 0===t&&(t=Ce.statuses),e.type){case ve.a.LoadShippingCountriesRequested:return C(t,"isLoading",!0);case ve.a.LoadShippingCountriesSucceeded:case ve.a.LoadShippingCountriesFailed:return C(t,"isLoading",!1);default:return t}}var Ae=n(9),Ee={data:{},errors:{},statuses:{}};function Pe(t,e){return void 0===t&&(t=Ee),Object(i.combineReducers)({data:je,errors:Object(i.composeReducers)(ke,g),statuses:Me})(t,e)}function je(t,e){var n,r;switch(void 0===t&&(t=Ee.data),e.type){case Ae.a.InitializeSucceeded:return T(t,((n={})[e.meta&&e.meta.methodId]={isInitialized:!0},n));case Ae.a.DeinitializeSucceeded:return T(t,((r={})[e.meta&&e.meta.methodId]={isInitialized:!1},r))}return t}function ke(t,e){switch(void 0===t&&(t=Ee.errors),e.type){case Ae.a.InitializeRequested:case Ae.a.InitializeSucceeded:return T(t,{initializeError:void 0,initializeMethodId:void 0});case Ae.a.InitializeFailed:return T(t,{initializeError:e.payload,initializeMethodId:e.meta&&e.meta.methodId});case Ae.a.DeinitializeRequested:case Ae.a.DeinitializeSucceeded:return T(t,{deinitializeError:void 0,deinitializeMethodId:void 0});case Ae.a.DeinitializeFailed:return T(t,{deinitializeError:e.payload,deinitializeMethodId:e.meta&&e.meta.methodId});case Ae.a.UpdateAddressRequested:case Ae.a.UpdateAddressSucceeded:return T(t,{updateAddressError:void 0,updateAddressMethodId:void 0});case Ae.a.UpdateAddressFailed:return T(t,{updateAddressError:e.payload,updateAddressMethodId:e.meta&&e.meta.methodId});case Ae.a.SelectOptionRequested:case Ae.a.SelectOptionSucceeded:return T(t,{selectOptionError:void 0,selectOptionMethodId:void 0});case Ae.a.SelectOptionFailed:return T(t,{selectOptionError:e.payload,selectOptionMethodId:e.meta&&e.meta.methodId});case Ae.a.WidgetInteractionStarted:case Ae.a.WidgetInteractionFinished:return T(t,{widgetInteractionError:void 0,widgetInteractionMethodId:void 0});case Ae.a.WidgetInteractionFailed:return T(t,{widgetInteractionError:e.payload,widgetInteractionMethodId:e.meta&&e.meta.methodId});default:return t}}function Me(t,e){switch(void 0===t&&(t=Ee.statuses),e.type){case Ae.a.InitializeRequested:return T(t,{isInitializing:!0,initializeMethodId:e.meta&&e.meta.methodId});case Ae.a.InitializeFailed:case Ae.a.InitializeSucceeded:return T(t,{isInitializing:!1,initializeMethodId:void 0});case Ae.a.DeinitializeRequested:return T(t,{isDeinitializing:!0,deinitializeMethodId:e.meta&&e.meta.methodId});case Ae.a.DeinitializeFailed:case Ae.a.DeinitializeSucceeded:return T(t,{isDeinitializing:!1,deinitializeMethodId:void 0});case Ae.a.UpdateAddressRequested:return T(t,{isUpdatingAddress:!0,updateAddressMethodId:e.meta&&e.meta.methodId});case Ae.a.UpdateAddressFailed:case Ae.a.UpdateAddressSucceeded:return T(t,{isUpdatingAddress:!1,updateAddressMethodId:void 0});case Ae.a.SelectOptionRequested:return T(t,{isSelectingOption:!0,selectOptionMethodId:e.meta&&e.meta.methodId});case Ae.a.SelectOptionFailed:case Ae.a.SelectOptionSucceeded:return T(t,{isSelectingOption:!1,selectOptionMethodId:void 0});case Ae.a.WidgetInteractionStarted:return T(t,{isWidgetInteracting:!0,widgetInteractionMethodId:e.meta&&e.meta.methodId});case Ae.a.WidgetInteractionFinished:case Ae.a.WidgetInteractionFailed:return T(t,{isWidgetInteracting:!1,widgetInteractionMethodId:void 0});default:return t}}var Te=n(44),Re={errors:{},statuses:{}};function De(t,e){return void 0===t&&(t=Re),Object(i.combineReducers)({data:ze,errors:Object(i.composeReducers)(Le,g),statuses:Ne})(t,e)}function ze(t,e){switch(e.type){case Te.a.SendSignInEmailSucceeded:return T(t,e.payload);default:return t}}function Le(t,e){switch(void 0===t&&(t=Re.errors),e.type){case Te.a.SendSignInEmailRequested:case Te.a.SendSignInEmailSucceeded:return C(t,"sendError",void 0);case Te.a.SendSignInEmailFailed:return C(t,"sendError",e.payload);default:return t}}function Ne(t,e){switch(void 0===t&&(t=Re.statuses),e.type){case Te.a.SendSignInEmailRequested:return C(t,"isSending",!0);case Te.a.SendSignInEmailFailed:case Te.a.SendSignInEmailSucceeded:return C(t,"isSending",!1);default:return t}}var Fe=n(47),qe={errors:{},statuses:{}};function Ue(t,e){return void 0===t&&(t=qe),Object(i.combineReducers)({errors:Object(i.composeReducers)(xe,g),statuses:Be})(t,e)}function xe(t,e){switch(void 0===t&&(t=qe.errors),e.type){case Fe.a.ApplyStoreCreditRequested:case Fe.a.ApplyStoreCreditSucceeded:return C(t,"applyError",void 0);case Fe.a.ApplyStoreCreditFailed:return C(t,"applyError",e.payload);default:return t}}function Be(t,e){switch(void 0===t&&(t=qe.statuses),e.type){case Fe.a.ApplyStoreCreditRequested:return C(t,"isApplying",!0);case Fe.a.ApplyStoreCreditSucceeded:case Fe.a.ApplyStoreCreditFailed:return C(t,"isApplying",!1);default:return t}}var Ge={errors:{},statuses:{}};function Ve(t,e){return void 0===t&&(t=Ge),Object(i.combineReducers)({errors:Object(i.composeReducers)(Ye,g),statuses:He})(t,e)}function Ye(t,e){switch(void 0===t&&(t=Ge.errors),e.type){case S.a.UpdateSubscriptionsRequested:case S.a.UpdateSubscriptionsSucceeded:return C(t,"updateError",void 0);case S.a.UpdateSubscriptionsFailed:return C(t,"updateError",e.payload);default:return t}}function He(t,e){switch(void 0===t&&(t=Ge.statuses),e.type){case S.a.UpdateSubscriptionsRequested:return C(t,"isUpdating",!0);case S.a.UpdateSubscriptionsFailed:case S.a.UpdateSubscriptionsSucceeded:return C(t,"isUpdating",!1);default:return t}}var We=n(65),Ke={errors:{},statuses:{}};function Je(t,e){return void 0===t&&(t=Ke),Object(i.combineReducers)({data:Ze,errors:Object(i.composeReducers)(Qe,g),statuses:Xe})(t,e)}function Ze(t,e){switch(e.type){case f.a.LoadCheckoutSucceeded:case f.a.UpdateCheckoutSucceeded:case Fe.a.ApplyStoreCreditSucceeded:case w.a.UpdateBillingAddressSucceeded:case R.a.ApplyCouponSucceeded:case R.a.RemoveCouponSucceeded:case z.a.CreateConsignmentsSucceeded:case z.a.UpdateConsignmentSucceeded:case z.a.DeleteConsignmentSucceeded:case z.a.UpdateShippingOptionSucceeded:case z.a.LoadShippingOptionsSucceeded:case D.a.ApplyGiftCertificateSucceeded:case D.a.RemoveGiftCertificateSucceeded:case We.a.VerifyCheckoutSucceeded:return T(t,Object(c.omit)(e.payload,["billingAddress","cart","consignments","customer","coupons","giftCertificates"]));case O.a.SubmitOrderSucceeded:return C(t,"orderId",e.payload&&e.payload.order.orderId);default:return t}}function Qe(t,e){switch(void 0===t&&(t=Ke.errors),e.type){case f.a.LoadCheckoutRequested:case f.a.LoadCheckoutSucceeded:return C(t,"loadError",void 0);case f.a.LoadCheckoutFailed:return C(t,"loadError",e.payload);case f.a.UpdateCheckoutRequested:case f.a.UpdateCheckoutSucceeded:return C(t,"updateError",void 0);case f.a.UpdateCheckoutFailed:return C(t,"updateError",e.payload);default:return t}}function Xe(t,e){switch(void 0===t&&(t=Ke.statuses),e.type){case f.a.LoadCheckoutRequested:return C(t,"isLoading",!0);case f.a.LoadCheckoutFailed:case f.a.LoadCheckoutSucceeded:return C(t,"isLoading",!1);case f.a.UpdateCheckoutRequested:return C(t,"isUpdating",!0);case f.a.UpdateCheckoutFailed:case f.a.UpdateCheckoutSucceeded:return C(t,"isUpdating",!1);case We.a.ExecuteRequested:return C(t,"isExecutingSpamCheck",!0);case We.a.ExecuteFailed:case We.a.ExecuteSucceeded:return C(t,"isExecutingSpamCheck",!1);default:return t}}var $e=n(5),tn=n(12),en=n(171);function nn(t,e){if(null==t)throw e?e():new Error("An unexpected error has occurred.");return t}function rn(t){return function(t,e){var n=Object.create(t);return function(t,e){var n=Object.getPrototypeOf(t);for(;n;)e(n),n=Object.getPrototypeOf(n)}(t,(function(r){Object.getOwnPropertyNames(r).forEach((function(r){"constructor"!==r&&"function"==typeof n[r]&&"_"!==r.charAt(0)&&(n[r]=e(t,r,n))}))})),n}(t,(function(t,e){return function(){for(var n,o=[],a=0;a<arguments.length;a++)o[a]=arguments[a];return Object(i.deepFreeze)((n=t[e]).call.apply(n,Object(r.__spreadArrays)([t],o)))}}))}function on(){var t=Object(en.a)((function(t){return t.data}),(function(t){return function(e,n){void 0===e&&(e=[]);var r=Object(c.find)(e,{code:n});return(t?t.shippingAddress:[]).map((function(t){return a(t,e,r)}))}})),e=Object(en.a)((function(t){return t.data}),(function(t){return function(e,n){void 0===e&&(e=[]);var r=Object(c.find)(e,{code:n});return(t?t.billingAddress:[]).map((function(t){return a(t,e,r)}))}})),n=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t?t.customerAccount:[]}})),i=Object(en.a)((function(t){return t.errors.loadError}),(function(t){return function(){return t}})),o=Object(en.a)((function(t){return!!t.statuses.isLoading}),(function(t){return function(){return t}}));function a(t,e,n){return"countryCode"===t.name?function(t,e,n){void 0===e&&(e=[]);if(!e.length)return t;var i=(n||{}).code,o=void 0===i?"":i,a=e.map((function(t){return{value:t.code,label:t.name}}));return Object(r.__assign)(Object(r.__assign)({},t),{options:{items:a},default:o,type:"array",fieldType:"dropdown",itemtype:"string"})}(t,e,n):"stateOrProvince"===t.name?function(t,e){var n=e||{},i=n.subdivisions,o=void 0===i?[]:i,a=n.requiresState;if(!o.length)return Object(r.__assign)(Object(r.__assign)({},t),{required:null!=a&&a});var s=o.map((function(t){return{value:t.code,label:t.name}}));return Object(r.__assign)(Object(r.__assign)({},t),{name:"stateOrProvinceCode",options:{items:s},required:null==a||a,type:"array",fieldType:"dropdown",itemtype:"string"})}(t,n):"postalCode"===t.name?function(t,e){var n=(e||{}).hasPostalCodes,i=void 0===n?[]:n;if(void 0===i)return t;return Object(r.__assign)(Object(r.__assign)({},t),{required:Boolean(i)})}(t,n):t}return Object($e.memoizeOne)((function(r){return void 0===r&&(r=It),{getShippingAddressFields:t(r),getBillingAddressFields:e(r),getCustomerAccountFields:n(r),getLoadError:i(r),isLoading:o(r)}}))}var an=n(58),sn=n(36);var cn={"adyenv2.scheme":{provider:"adyenv2",method:"scheme"},"adyenv2.bcmc":{provider:"adyenv2",method:"bcmc"},"adyenv2.ideal":{provider:"adyenv2",method:"ideal"},"adyenv2.sepadirectdebit":{provider:"adyenv2",method:"sepadirectdebit"},"adyenv2.directEbanking":{provider:"adyenv2",method:"directEbanking"},"adyenv2.giropay":{provider:"adyenv2",method:"giropay"},barclays:{provider:"barclays",method:"credit_card"},braintree:{provider:"braintree",method:"credit_card"},braintreepaypal:{provider:"braintree",method:"paypal"},authorizenet:{provider:"authorizenet",method:"credit_card"},elavon:{provider:"elavon",method:"credit_card"},checkoutcom:{provider:"checkoutcom",method:"credit_card"},stripe:{provider:"stripe",method:"credit_card"},"stripev3.card":{provider:"stripev3",method:"card"},cybersource:{provider:"cybersource",method:"credit_card"},converge:{provider:"converge",method:"credit_card"},bluesnapv2:{provider:"bluesnapv2",method:"credit_card"},orbital:{provider:"orbital",method:"credit_card"},paymetric:{provider:"paymetric",method:"credit_card"},bolt:{provider:"bolt",method:"credit_card"},"barclaycard.credit_card":{provider:"barclaycard",method:"credit_card"}};function un(t){return Object(c.pickBy)({firstName:t.firstName,lastName:t.lastName,company:t.company,address1:t.address1,address2:t.address2,city:t.city,stateOrProvince:t.stateOrProvince,countryCode:t.countryCode,postalCode:t.postalCode,phone:t.phone,customFields:t.customFields},c.identity)}function dn(){var t=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t}})),e=Object(en.a)((function(t){return t.data}),(function(t){return function(e){if(t&&t.length)return Object(c.find)(t,{id:e})}})),n=Object(en.a)((function(t){return t.data}),(function(t){return function(e){if(t&&t.length)return Object(c.find)(t,(function(t){return n=t.shippingAddress,r=e,Object(c.isEqual)(un(n),un(r));var n,r}))}})),r=Object(en.a)((function(t){return t.data}),(function(t){return function(){if(t&&t.length)return t[0].selectedShippingOption}})),i=Object(en.a)((function(t){return t.errors.loadError}),(function(t){return function(){return t}})),o=Object(en.a)((function(t){return t.errors.createError}),(function(t){return function(){return t}})),a=Object(en.a)((function(t){return t.errors.loadShippingOptionsError}),(function(t){return function(){return t}})),s=Object(en.a)(t,(function(t,e){return e.cart.getCart}),(function(t,e){return function(){var n=e();if(!n)return[];var r=(t()||[]).reduce((function(t,e){return t.concat(e.lineItemIds)}),[]);return(n.lineItems.physicalItems||[]).filter((function(t){return r.indexOf(t.id)<0}))}})),u=Object(en.a)((function(t){return t.errors.updateError}),(function(t){return function(e){return e?t[e]:Object(c.find)(t)}})),d=Object(en.a)((function(t){return t.errors.deleteError}),(function(t){return function(e){return e?t[e]:Object(c.find)(t)}})),p=Object(en.a)(n,u,o,(function(t,e,n){return function(r){var i=t(r);return i?e(i.id):n()}})),h=Object(en.a)((function(t){return t.errors.updateShippingOptionError}),(function(t){return function(e){return e?t[e]:Object(c.find)(t)}})),l=Object(en.a)((function(t){return t.statuses.isLoading}),(function(t){return function(){return!0===t}})),m=Object(en.a)((function(t){return t.statuses.isLoadingShippingOptions}),(function(t){return function(){return!0===t}})),f=Object(en.a)((function(t){return t.statuses.isCreating}),(function(t){return function(){return!0===t}})),_=Object(en.a)((function(t){return t.statuses.isUpdating}),(function(t){return function(e){return e?!0===t[e]:!0===Object(c.find)(t)}})),y=Object(en.a)((function(t){return t.statuses.isDeleting}),(function(t){return function(e){return e?!0===t[e]:!0===Object(c.find)(t)}})),g=Object(en.a)(n,_,f,(function(t,e,n){return function(r){var i=t(r);return i?e(i.id):n()}})),b=Object(en.a)((function(t){return t.statuses.isUpdatingShippingOption}),(function(t){return function(e){return e?!0===t[e]:!0===Object(c.find)(t)}}));return Object($e.memoizeOne)((function(c,v){return void 0===c&&(c=fe),{getConsignments:t(c),getConsignmentById:e(c),getConsignmentByAddress:n(c),getShippingOption:r(c),getLoadError:i(c),getCreateError:o(c),getLoadShippingOptionsError:a(c),getUnassignedItems:s(c,{cart:v}),getUpdateError:u(c),getDeleteError:d(c),getItemAssignmentError:p(c),getUpdateShippingOptionError:h(c),isLoading:l(c),isLoadingShippingOptions:m(c),isCreating:f(c),isUpdating:_(c),isDeleting:y(c),isAssigningItems:g(c),isUpdatingShippingOption:b(c)}}))}var pn={errors:{},statuses:{}};function hn(){var t,e,n,i,o,a,s,u,d,p,h,l,m,f,_,y,g,b,v,C,O,S,w,A,E,P,j,k,M,T,R,D,z,N,F,q,U=(t=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t}})),e=Object(en.a)(t,(function(t){return function(){return nn(t(),(function(){return new tn.b(tn.a.MissingBillingAddress)}))}})),n=Object(en.a)((function(t){return t.errors.updateError}),(function(t){return function(){return t}})),i=Object(en.a)((function(t){return t.errors.continueAsGuestError}),(function(t){return function(){return t}})),o=Object(en.a)((function(t){return t.errors.loadError}),(function(t){return function(){return t}})),a=Object(en.a)((function(t){return!!t.statuses.isUpdating}),(function(t){return function(){return t}})),s=Object(en.a)((function(t){return!!t.statuses.isContinuingAsGuest}),(function(t){return function(){return t}})),u=Object(en.a)((function(t){return!!t.statuses.isLoading}),(function(t){return function(){return t}})),Object($e.memoizeOne)((function(r){return void 0===r&&(r=I),{getBillingAddress:t(r),getBillingAddressOrThrow:e(r),getUpdateError:n(r),getContinueAsGuestError:i(r),getLoadError:o(r),isUpdating:a(r),isContinuingAsGuest:s(r),isLoading:u(r)}}))),x=function(){var t=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t}})),e=Object(en.a)(t,(function(t){return function(){return nn(t(),(function(){return new tn.b(tn.a.MissingCart)}))}})),n=Object(en.a)((function(t){return t.errors.loadError}),(function(t){return function(){return t}})),r=Object(en.a)((function(t){return!!t.statuses.isLoading}),(function(t){return function(){return t}}));return Object($e.memoizeOne)((function(i){return void 0===i&&(i=L),{getCart:t(i),getCartOrThrow:e(i),getLoadError:n(i),isLoading:r(i)}}))}(),G=(d=Object(en.a)((function(t){return t}),(function(t){return function(){return t}})),p=Object(en.a)((function(t){return t.statuses}),(function(t){return Object($e.memoize)((function(e){if(e){var n=t[e];return!0===(n&&n.isInitializing)}return Object(c.some)(t,{isInitializing:!0})}))})),h=Object(en.a)((function(t){return t.data}),(function(t){return Object($e.memoize)((function(e,n){var r=t[e];return!!r&&(n?!0===r.initializedContainers[n]:Object(c.some)(r.initializedContainers,(function(t){return!0===t})))}))})),l=Object(en.a)((function(t){return t.statuses}),(function(t){return Object($e.memoize)((function(e){if(e){var n=t[e];return!0===(n&&n.isDeinitializing)}return Object(c.some)(t,{isDeinitializing:!0})}))})),m=Object(en.a)((function(t){return t.errors}),(function(t){return Object($e.memoize)((function(e){var n=e?t[e]:Object(c.find)(Object(c.values)(t),(function(t){return!(!t||!t.initializeError)}));return n&&n.initializeError}))})),f=Object(en.a)((function(t){return t.errors}),(function(t){return Object($e.memoize)((function(e){var n=e?t[e]:Object(c.find)(Object(c.values)(t),(function(t){return!(!t||!t.deinitializeError)}));return n&&n.deinitializeError}))})),Object($e.memoizeOne)((function(t){return void 0===t&&(t=B),{getState:d(t),isInitializing:p(t),isInitialized:h(t),isDeinitializing:l(t),getInitializeError:m(t),getDeinitializeError:f(t)}}))),V=function(){var t=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t}})),e=Object(en.a)((function(t){return t.data}),(function(t){return function(e){if(t){var n=t.context.flashMessages;if(n)return void 0!==e?n.filter((function(t){var n=t.type;return e===n})):n}}})),n=Object(en.a)((function(t){return t.data}),(function(t,e){var n=e.formState;return n&&n.data}),(function(t,e){return function(){return t&&e?Object(r.__assign)(Object(r.__assign)({},t.storeConfig),{formFields:e}):void 0}})),i=Object(en.a)(n,(function(t){return function(){return nn(t(),(function(){return new tn.b(tn.a.MissingCheckoutConfig)}))}})),o=Object(en.a)((function(t){return t.data&&t.data.context}),(function(t){return function(){return t}})),a=Object(en.a)((function(t){return t.meta&&t.meta.externalSource}),(function(t){return function(){return t}})),s=Object(en.a)((function(t){return t.meta&&t.meta.variantIdentificationToken}),(function(t){return function(){return t}})),c=Object(en.a)((function(t){return t.errors.loadError}),(function(t){return function(){return t}})),u=Object(en.a)((function(t){return!!t.statuses.isLoading}),(function(t){return function(){return t}}));return Object($e.memoizeOne)((function(r,d){return void 0===r&&(r=Q),{getConfig:t(r),getFlashMessages:e(r),getStoreConfig:n(r,{formState:d}),getStoreConfigOrThrow:i(r,{formState:d}),getContextConfig:o(r),getExternalSource:a(r),getVariantIdentificationToken:s(r),getLoadError:c(r),isLoading:u(r)}}))}(),Y=function(){var t=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t}})),e=Object(en.a)((function(t){return t.errors.loadError}),(function(t){return function(){return t}})),n=Object(en.a)((function(t){return!!t.statuses.isLoading}),(function(t){return function(){return t}}));return Object($e.memoizeOne)((function(r){return void 0===r&&(r=Mt),{getCountries:t(r),getLoadError:e(r),isLoading:n(r)}}))}(),H=(_=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t}})),y=Object(en.a)((function(t){return t.errors.removeCouponError}),(function(t){return function(){return t}})),g=Object(en.a)((function(t){return t.errors.applyCouponError}),(function(t){return function(){return t}})),b=Object(en.a)((function(t){return!!t.statuses.isApplyingCoupon}),(function(t){return function(){return t}})),v=Object(en.a)((function(t){return!!t.statuses.isRemovingCoupon}),(function(t){return function(){return t}})),Object($e.memoizeOne)((function(t){return void 0===t&&(t=nt),{getCoupons:_(t),getRemoveError:y(t),getApplyError:g(t),isApplying:b(t),isRemoving:v(t)}}))),W=(C=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t}})),O=Object(en.a)((function(t){return t.errors.createError}),(function(t){return function(){return t}})),S=Object(en.a)((function(t){return!!t.statuses.isCreating}),(function(t){return function(){return t}})),Object($e.memoizeOne)((function(t){return void 0===t&&(t=lt),{getCustomer:C(t),getCreateAccountError:O(t),isCreatingCustomerAccount:S(t)}}))),K=function(){var t=Object(en.a)((function(t){return t.errors.signInMethodId}),(function(t){return t.errors.signInError}),(function(t,e){return function(n){if(!n||t===n)return e}})),e=Object(en.a)((function(t){return t.errors.signOutMethodId}),(function(t){return t.errors.signOutError}),(function(t,e){return function(n){if(!n||t===n)return e}})),n=Object(en.a)((function(t){return t.errors.initializeMethodId}),(function(t){return t.errors.initializeError}),(function(t,e){return function(n){if(!n||t===n)return e}})),r=Object(en.a)((function(t){return t.errors.widgetInteractionMethodId}),(function(t){return t.errors.widgetInteractionError}),(function(t,e){return function(n){if(!n||t===n)return e}})),i=Object(en.a)((function(t){return t.statuses.signInMethodId}),(function(t){return t.statuses.isSigningIn}),(function(t,e){return function(n){return(!n||t===n)&&!!e}})),o=Object(en.a)((function(t){return t.statuses.signOutMethodId}),(function(t){return t.statuses.isSigningOut}),(function(t,e){return function(n){return(!n||t===n)&&!!e}})),a=Object(en.a)((function(t){return t.statuses.initializeMethodId}),(function(t){return t.statuses.isInitializing}),(function(t,e){return function(n){return(!n||t===n)&&!!e}})),s=Object(en.a)((function(t){return t.data}),(function(t){return function(e){return!(!t[e]||!t[e].isInitialized)}})),c=Object(en.a)((function(t){return t.statuses.widgetInteractionMethodId}),(function(t){return t.statuses.isWidgetInteracting}),(function(t,e){return function(n){return(!n||t===n)&&!!e}}));return Object($e.memoizeOne)((function(u){return void 0===u&&(u=bt),{getSignInError:t(u),getSignOutError:e(u),getInitializeError:n(u),getWidgetInteractionError:r(u),isSigningIn:i(u),isSigningOut:o(u),isInitializing:a(u),isInitialized:s(u),isWidgetInteracting:c(u)}}))}(),J=function(){var t=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t}})),e=Object(en.a)((function(t){return t.errors.removeGiftCertificateError}),(function(t){return function(){return t}})),n=Object(en.a)((function(t){return t.errors.applyGiftCertificateError}),(function(t){return function(){return t}})),r=Object(en.a)((function(t){return!!t.statuses.isApplyingGiftCertificate}),(function(t){return function(){return t}})),i=Object(en.a)((function(t){return!!t.statuses.isRemovingGiftCertificate}),(function(t){return function(){return t}}));return Object($e.memoizeOne)((function(o){return void 0===o&&(o=st),{getGiftCertificates:t(o),getRemoveError:e(o),getApplyError:n(o),isApplying:r(o),isRemoving:i(o)}}))}(),Z=function(){var t=Object(en.a)((function(t){return t.data}),(function(t){return function(e){if(t){var n=e.gateway?e.gateway+"."+e.id:e.id,r=cn[n];return r?Object(c.filter)(t,r):[]}}})),e=Object(en.a)((function(t){return t.data}),(function(t){return void 0===t&&(t=[]),function(e){var n=Object(c.values)(cn);return t.find((function(t){return t.bigpayToken===e&&"card"===t.type&&n.some((function(e){return Object(c.isMatch)(t,e)}))}))}})),n=Object(en.a)((function(t){return t.data}),(function(t){return function(){if(t)return Object(c.flatMap)(cn,(function(e){return Object(c.filter)(t,(function(t){return Object(c.isMatch)(t,e)}))}))}})),r=Object(en.a)((function(t){return t.meta}),(function(t){return function(){return t}})),i=Object(en.a)((function(t){return t.errors.loadError}),(function(t){return function(){return t}})),o=Object(en.a)((function(t){return t.errors.failedInstrument}),(function(t){return t.errors.deleteError}),(function(t,e){return function(n){if(!n||t===n)return e}})),a=Object(en.a)((function(t){return t.statuses.isLoading}),(function(t){return function(){return!!t}})),s=Object(en.a)((function(t){return t.statuses.deletingInstrument}),(function(t){return t.statuses.isDeleting}),(function(t,e){return function(n){return(!n||t===n)&&!!e}}));return Object($e.memoizeOne)((function(c){return void 0===c&&(c=oe),{getCardInstrument:e(c),getInstruments:n(c),getInstrumentsByPaymentMethod:t(c),getInstrumentsMeta:r(c),getLoadError:i(c),getDeleteError:o(c),isLoading:a(c),isDeleting:s(c)}}))}(),X=on(),$=function(){var t=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t}})),e=Object(en.a)((function(t){return t.meta}),(function(t){return function(){return t}})),n=Object(en.a)((function(t){return t.data}),(function(t){return function(e,n){return n?Object(c.find)(t,{id:e,gateway:n}):Object(c.find)(t,{id:e})}})),r=Object(en.a)(n,(function(t){return function(e,n){return nn(t(e,n),(function(){return new tn.b(tn.a.MissingPaymentMethod)}))}})),i=Object(en.a)((function(t){return t.errors.loadError}),(function(t){return function(){return t}})),o=Object(en.a)((function(t){return t.errors.loadMethodId}),(function(t){return t.errors.loadMethodError}),(function(t,e){return function(n){if(!n||t===n)return e}})),a=Object(en.a)((function(t){return t.statuses.isLoading}),(function(t){return function(){return!!t}})),s=Object(en.a)((function(t){return t.statuses.loadMethodId}),(function(t){return t.statuses.isLoadingMethod}),(function(t,e){return function(n){return(!n||t===n)&&!!e}}));return Object($e.memoizeOne)((function(c){return void 0===c&&(c=Ht),{getPaymentMethods:t(c),getPaymentMethodsMeta:e(c),getPaymentMethod:n(c),getPaymentMethodOrThrow:r(c),getLoadError:i(c),getLoadMethodError:o(c),isLoading:a(c),isLoadingMethod:s(c)}}))}(),tt=function(){var t=Object(en.a)((function(t){return t.errors.initializeMethodId}),(function(t){return t.errors.initializeError}),(function(t,e){return function(n){if(!n||t===n)return e}})),e=Object(en.a)((function(t){return t.errors.executeMethodId}),(function(t){return t.errors.executeError}),(function(t,e){return function(n){if(!n||t===n)return e}})),n=Object(en.a)((function(t){return t.errors.finalizeMethodId}),(function(t){return t.errors.finalizeError}),(function(t,e){return function(n){if(!n||t===n)return e}})),r=Object(en.a)((function(t){return t.errors.widgetInteractionMethodId}),(function(t){return t.errors.widgetInteractionError}),(function(t,e){return function(n){if(!n||t===n)return e}})),i=Object(en.a)((function(t){return t.statuses.initializeMethodId}),(function(t){return t.statuses.isInitializing}),(function(t,e){return function(n){return(!n||t===n)&&!!e}})),o=Object(en.a)((function(t){return t.data}),(function(t){return function(e){return!(!t[e]||!t[e].isInitialized)}})),a=Object(en.a)((function(t){return t.statuses.executeMethodId}),(function(t){return t.statuses.isExecuting}),(function(t,e){return function(n){return(!n||t===n)&&!!e}})),s=Object(en.a)((function(t){return t.statuses.finalizeMethodId}),(function(t){return t.statuses.isFinalizing}),(function(t,e){return function(n){return(!n||t===n)&&!!e}})),c=Object(en.a)((function(t){return t.statuses.widgetInteractionMethodId}),(function(t){return t.statuses.isWidgetInteracting}),(function(t,e){return function(n){return(!n||t===n)&&!!e}}));return Object($e.memoizeOne)((function(u){return void 0===u&&(u=$t),{getInitializeError:t(u),getExecuteError:e(u),getFinalizeError:n(u),getWidgetInteractingError:r(u),isInitializing:i(u),isInitialized:o(u),isExecuting:a(u),isFinalizing:s(u),isWidgetInteracting:c(u)}}))}(),et=(w=Object(en.a)((function(t){return t.data}),(function(t){return function(e){return t[e]}})),Object($e.memoizeOne)((function(t){return void 0===t&&(t=he),{getCheckout:w(t)}}))),rt=(A=Object(en.a)((function(t){return t.data}),(function(t){return function(){if(t&&t[0])return t[0].shippingAddress}})),Object($e.memoizeOne)((function(t){return void 0===t&&(t=fe),{getShippingAddress:A(t)}}))),it=function(){var t=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t}})),e=Object(en.a)((function(t){return t.errors.loadError}),(function(t){return function(){return t}})),n=Object(en.a)((function(t){return t.statuses.isLoading}),(function(t){return function(){return!!t}}));return Object($e.memoizeOne)((function(r){return void 0===r&&(r=Ce),{getShippingCountries:t(r),getLoadError:e(r),isLoading:n(r)}}))}(),ot=function(){var t=Object(en.a)((function(t){return t.errors.updateAddressMethodId}),(function(t){return t.errors.updateAddressError}),(function(t,e){return function(n){if(!n||t===n)return e}})),e=Object(en.a)((function(t){return t.errors.selectOptionMethodId}),(function(t){return t.errors.selectOptionError}),(function(t,e){return function(n){if(!n||t===n)return e}})),n=Object(en.a)((function(t){return t.errors.initializeMethodId}),(function(t){return t.errors.initializeError}),(function(t,e){return function(n){if(!n||t===n)return e}})),r=Object(en.a)((function(t){return t.errors.widgetInteractionMethodId}),(function(t){return t.errors.widgetInteractionError}),(function(t,e){return function(n){if(!n||t===n)return e}})),i=Object(en.a)((function(t){return t.statuses.updateAddressMethodId}),(function(t){return t.statuses.isUpdatingAddress}),(function(t,e){return function(n){return(!n||t===n)&&!!e}})),o=Object(en.a)((function(t){return t.statuses.selectOptionMethodId}),(function(t){return t.statuses.isSelectingOption}),(function(t,e){return function(n){return(!n||t===n)&&!!e}})),a=Object(en.a)((function(t){return t.statuses.initializeMethodId}),(function(t){return t.statuses.isInitializing}),(function(t,e){return function(n){return(!n||t===n)&&!!e}})),s=Object(en.a)((function(t){return t.data}),(function(t){return function(e){return!(!t[e]||!t[e].isInitialized)}})),c=Object(en.a)((function(t){return t.statuses.widgetInteractionMethodId}),(function(t){return t.statuses.isWidgetInteracting}),(function(t,e){return function(n){return(!n||t===n)&&!!e}}));return Object($e.memoizeOne)((function(u){return void 0===u&&(u=Ee),{getUpdateAddressError:t(u),getSelectOptionError:e(u),getInitializeError:n(u),getWidgetInteractionError:r(u),isUpdatingAddress:i(u),isSelectingOption:o(u),isInitializing:a(u),isInitialized:s(u),isWidgetInteracting:c(u)}}))}(),at=dn(),ct=function(){var t=Object(en.a)((function(t){return t.data}),(function(t,e){return e.billingAddress.getBillingAddress}),(function(t,e){return e.cart.getCart}),(function(t,e){return e.customer.getCustomer}),(function(t,e){return e.consignments.getConsignments}),(function(t,e){return e.coupons.getCoupons}),(function(t,e){return e.giftCertificates.getGiftCertificates}),(function(t,e,n,i,o,a,s){return function(){var c=e(),u=n(),d=i(),p=o()||[],h=a()||[],l=s()||[];if(t&&u&&d)return Object(r.__assign)(Object(r.__assign)({},t),{billingAddress:c,cart:u,customer:d,consignments:p,coupons:h,giftCertificates:l})}})),e=Object(en.a)(t,(function(t){return function(){return nn(t(),(function(){return new tn.b(tn.a.MissingCheckout)}))}})),n=Object(en.a)(t,(function(t){return function(e){var n=t();if(n){var r=n.grandTotal||0,i=n.customer.storeCredit||0;return e?Math.max(r-i,0):n.outstandingBalance}}})),i=Object(en.a)((function(t){return t.errors.loadError}),(function(t){return function(){return t}})),o=Object(en.a)((function(t){return t.errors.updateError}),(function(t){return function(){return t}})),a=Object(en.a)((function(t){return t.statuses.isExecutingSpamCheck}),(function(t){return function(){return!0===t}})),s=Object(en.a)((function(t){return t.statuses.isLoading}),(function(t){return function(){return!0===t}})),c=Object(en.a)((function(t){return t.statuses.isUpdating}),(function(t){return function(){return!0===t}}));return Object($e.memoizeOne)((function(r,u,d,p,h,l,m){return void 0===r&&(r=Ke),{getCheckout:t(r,{billingAddress:u,cart:d,consignments:p,coupons:h,customer:l,giftCertificates:m}),getCheckoutOrThrow:e(r,{billingAddress:u,cart:d,consignments:p,coupons:h,customer:l,giftCertificates:m}),getOutstandingBalance:n(r,{billingAddress:u,cart:d,consignments:p,coupons:h,customer:l,giftCertificates:m}),getLoadError:i(r),getUpdateError:o(r),isExecutingSpamCheck:a(r),isLoading:s(r),isUpdating:c(r)}}))}(),ut=function(){var t=Object(en.a)((function(t){return t.data}),(function(t,e){return e.billingAddress.getBillingAddress()}),(function(t,e){return e.coupons.getCoupons()}),(function(t,e,n){return void 0===n&&(n=[]),function(){if(t&&e)return Object(r.__assign)(Object(r.__assign)({},t),{billingAddress:e,coupons:n})}})),e=Object(en.a)(t,(function(t){return function(){return nn(t(),(function(){return new tn.b(tn.a.MissingOrder)}))}})),n=Object(en.a)((function(t){return t.meta}),(function(t){return function(){return t}})),i=Object(en.a)((function(t){return t.errors.loadError}),(function(t){return function(){return t}})),o=Object(en.a)((function(t){return!!t.statuses.isLoading}),(function(t){return function(){return t}}));return Object($e.memoizeOne)((function(r,a,s){return void 0===r&&(r=Lt),{getOrder:t(r,{billingAddress:a,coupons:s}),getOrderOrThrow:e(r,{billingAddress:a,coupons:s}),getOrderMeta:n(r),getLoadError:i(r),isLoading:o(r)}}))}(),dt=(E=Object(en.a)((function(t){return t.order.getOrderMeta}),(function(t){return function(){var e=t();return e&&e.payment}})),P=Object(en.a)((function(t){return t.order.getOrder}),(function(t){return function(){var e=t();return Object(c.find)(e&&e.payments,(function(t){var e=t.providerId;return"giftcertificate"!==e&&"storecredit"!==e}))}})),j=Object(en.a)((function(t){return t.checkout.getCheckout}),(function(t){return function(){var e=t();return Object(c.find)(e&&e.payments,(function(t){return t.providerType===an.a}))}})),k=Object(en.a)(E,j,P,(function(t,e,n){return function(){var r=t();if(r&&r.id)return{providerId:r.id,gatewayId:r.gateway};var i=e()||n();return i&&i.providerId?{providerId:i.providerId,gatewayId:i.gatewayId}:void 0}})),M=Object(en.a)(E,j,P,(function(t,e,n){return function(){var r=t();if(r&&r.status)return r.status.replace("PAYMENT_STATUS_","");var i=e()||n();return i?i.detail.step:void 0}})),T=Object(en.a)((function(t){return t.order.getOrderMeta}),(function(t){return function(){var e=t();return e&&e.token}})),R=Object(en.a)(E,(function(t){return function(){var e=t();return e&&e.redirectUrl}})),D=Object(en.a)((function(t){return t.checkout.getOutstandingBalance}),(function(t){return function(e){void 0===e&&(e=!1);var n=t(e);return!!n&&n>0}})),z=Object(en.a)(M,(function(t){return function(e){return!(!e||!e.nonce)||t()===sn.a||t()===sn.b}})),Object($e.memoizeOne)((function(t,e){return{getPaymentId:k({checkout:t,order:e}),getPaymentStatus:M({checkout:t,order:e}),getPaymentToken:T({checkout:t,order:e}),getPaymentRedirectUrl:R({checkout:t,order:e}),isPaymentDataRequired:D({checkout:t,order:e}),isPaymentDataSubmitted:z({checkout:t,order:e})}}))),pt=function(){var t=Object(en.a)((function(t){return t.errors.applyError}),(function(t){return function(){return t}})),e=Object(en.a)((function(t){return!!t.statuses.isApplying}),(function(t){return function(){return t}}));return Object($e.memoizeOne)((function(n){return void 0===n&&(n=pn),{getApplyError:t(n),isApplying:e(n)}}))}(),ht=function(){var t=Object(en.a)((function(t){return t.errors.updateError}),(function(t){return function(){return t}})),e=Object(en.a)((function(t){return!!t.statuses.isUpdating}),(function(t){return function(){return t}}));return Object($e.memoizeOne)((function(n){return void 0===n&&(n=Ge),{getUpdateError:t(n),isUpdating:e(n)}}))}(),mt=(N=Object(en.a)((function(t){return t.data}),(function(t){return function(){return t}})),F=Object(en.a)((function(t){return t.errors.sendError}),(function(t){return function(){return t}})),q=Object(en.a)((function(t){return!!t.statuses.isSending}),(function(t){return function(){return t}})),Object($e.memoizeOne)((function(t){return void 0===t&&(t=Re),{getEmail:N(t),getSendError:F(t),isSending:q(t)}})));return function(t,e){void 0===e&&(e={});var n,r=U(t.billingAddress),i=x(t.cart),o=G(t.checkoutButton),a=Y(t.countries),s=H(t.coupons),c=W(t.customer),u=K(t.customerStrategies),d=X(t.formFields),p=J(t.giftCertificates),h=Z(t.instruments),l=$(t.paymentMethods),m=tt(t.paymentStrategies),f=et(t.remoteCheckout),_=rt(t.consignments),y=it(t.shippingCountries),g=ot(t.shippingStrategies),b=ht(t.subscriptions),v=pt(t.storeCredit),C=mt(t.signInEmail),O=at(t.consignments,i),S=ct(t.checkout,r,i,O,s,c,p),w=ut(t.order,r,s),I=dt(S,w),A={billingAddress:r,cart:i,checkout:S,checkoutButton:o,config:V(t.config,t.formFields),consignments:O,countries:a,coupons:s,customer:c,customerStrategies:u,form:d,giftCertificates:p,instruments:h,order:w,payment:I,paymentMethods:l,paymentStrategies:m,remoteCheckout:f,shippingAddress:_,shippingCountries:y,shippingStrategies:g,signInEmail:C,subscriptions:b,storeCredit:v};return e.shouldWarnMutation?(n=A,Object.keys(n).reduce((function(t,e){return t[e]=rn(n[e]),t}),{})):A}}function ln(t,e){void 0===t&&(t={});var n,a,c=(a=new h,["catalog_only","empty_cart","invalid_order_id","invalid_order_token","missing_order_token","missing_provider_token","missing_shipping_method","order_completion_error","order_could_not_be_finalized_error","order_create_failed","provider_fatal_error","provider_setup_error","stock_too_low"].forEach((function(t){a.register(t,(function(t,e){return new s(t,e)}))})),a.register("invalid_payment_provider",(function(t){return new o.a(t)})),a.register("payment_config_not_found",(function(t){return new o.a(t)})),n=a,function(t){return Object(l.from)(t).pipe(Object(m.catchError)((function(t){if(t instanceof Error||t.payload instanceof Error)throw t;if((i=t.payload)&&"object"==typeof i&&["body","headers","status","statusText"].every((function(t){return i.hasOwnProperty(t)}))){var e=t.payload.body&&t.payload.body.detail;throw Object(r.__assign)(Object(r.__assign)({},t),{payload:n.createError(t.payload,e)})}var i;throw t})))}),u=hn();return Object(i.createDataStore)(Object(i.combineReducers)({billingAddress:A,cart:N,checkout:Je,checkoutButton:H,config:X,consignments:_e,countries:Tt,coupons:rt,customer:mt,customerStrategies:vt,formFields:At,giftCertificates:ct,instruments:ae,order:Nt,payment:Gt,paymentMethods:Wt,paymentStrategies:te,remoteCheckout:le,shippingCountries:Oe,shippingStrategies:Pe,signInEmail:De,subscriptions:Ve,storeCredit:Ue}),t,Object(r.__assign)({actionTransformer:c,stateTransformer:function(t){return u(t)}},e))}n.d(e,"a",(function(){return ln}))},function(t,e,n){"use strict";var r=n(39),i=n(112),o=n(89),a=n(0),s=function(t){function e(e){var n=t.call(this,e,{message:e.body.title})||this;return n.name="CheckoutNotAvailableError",n.type="checkout_not_available",n}return Object(a.__extends)(e,t),e}(n(35).a),c=function(){function t(t){this._requestSender=t}return t.prototype.loadCheckout=function(t,e){var n=void 0===e?{}:e,a=n.params,c=(void 0===a?{}:a).include,u=n.timeout,d="/api/storefront/checkout/"+t,p={Accept:r.a.JsonV1};return this._requestSender.get(d,{params:{include:Object(i.a)(o.a,c)},headers:p,timeout:u}).catch((function(t){if(t.status>=400&&t.status<500)throw new s(t);throw t}))},t.prototype.updateCheckout=function(t,e,n){var a=void 0===n?{}:n,s=a.params,c=(void 0===s?{}:s).include,u=a.timeout,d="/api/storefront/checkout/"+t,p={Accept:r.a.JsonV1};return this._requestSender.put(d,{params:{include:Object(i.a)(o.a,c)},body:e,headers:p,timeout:u})},t}();e.a=c},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.AvailableShippingOptions="consignments.availableShippingOptions",t.PhysicalItemsCategoryNames="cart.lineItems.physicalItems.categoryNames",t.DigitalItemsCategoryNames="cart.lineItems.digitalItems.categoryNames"}(r||(r={}))},,,,,function(t,e,n){"use strict";function r(t){return{code:t.code,discountedAmount:t.used,remainingBalance:t.remaining,giftCertificate:{balance:t.balance,code:t.code,purchaseDate:t.purchaseDate}}}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";var r=n(3),i=n(8),o=n(80),a=n(56),s=function(){function t(t,e){this._targetWindow=e,this._targetOrigin="*"===t?"*":Object(o.a)(t).origin}return t.prototype.post=function(t,e){var n=this;if(window!==this._targetWindow){if(!this._targetWindow)throw new Error("Unable to post message because target window is not set.");var o=e&&Object(r.fromEvent)(window,"message").pipe(Object(i.filter)((function(t){return t.origin===n._targetOrigin&&Object(a.a)(t.data,t.data.type)&&-1!==[e.successType,e.errorType].indexOf(t.data.type)})),Object(i.map)((function(t){if(e.errorType===t.data.type)throw t.data;return t.data})),Object(i.take)(1)).toPromise();return this._targetWindow.postMessage(t,this._targetOrigin),o}},t.prototype.setTarget=function(t){this._targetWindow=t},t}();e.a=s},function(t,e,n){"use strict";var r=n(0),i=n(80),o=n(97),a=n(56),s=function(){function t(t){this._sourceOrigin=Object(i.a)(t).origin,this._isListening=!1,this._listeners={}}return t.prototype.listen=function(){this._isListening||(this._isListening=!0,window.addEventListener("message",this._handleMessage))},t.prototype.stopListen=function(){this._isListening&&(this._isListening=!1,window.removeEventListener("message",this._handleMessage))},t.prototype.addListener=function(t,e){var n=this._listeners[t];n||(this._listeners[t]=n=[]),-1===n.indexOf(e)&&n.push(e)},t.prototype.removeListener=function(t,e){var n=this._listeners[t];if(n){var r=n.indexOf(e);r>=0&&n.splice(r,1)}},t.prototype.trigger=function(t){var e=this._listeners[t.type];e&&e.forEach((function(e){return e(t)}))},t.prototype._handleMessage=function(t){t.origin===this._sourceOrigin&&Object(a.a)(t.data,t.data.type)&&this.trigger(t.data)},Object(r.__decorate)([o.a],t.prototype,"_handleMessage",null),t}();e.a=s},function(t,e,n){"use strict";var r=n(51),i=n.n(r),o=function(){function t(t){this._namespace=t}return t.prototype.getItem=function(t){var e=i.a.getItem(this.withNamespace(t));if(null===e)return null;try{return JSON.parse(e)}catch(e){return this.removeItem(this.withNamespace(t)),null}},t.prototype.getItemOnce=function(t){var e=this.getItem(t);return this.removeItem(t),e},t.prototype.setItem=function(t,e){return i.a.setItem(this.withNamespace(t),JSON.stringify(e))},t.prototype.removeItem=function(t){return i.a.removeItem(this.withNamespace(t))},t.prototype.withNamespace=function(t){return this._namespace+"."+t},t}();e.a=o},function(t,e,n){"use strict";var r=n(71),i=n(46),o=n(136),a=n(87),s=n(88),c=n(0);var u=n(2),d=n(52);var p=n(97),h=n(5),l=n(150),m=n(70),f=n(135);function _(t){var e=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Object(c.__extends)(e,t),e}(t);return Object.getOwnPropertyNames(t.prototype).forEach((function(n){var r=Object.getOwnPropertyDescriptor(t.prototype,n);r&&"constructor"!==n&&Object.defineProperty(e.prototype,n,function(t,e,n){if("function"!=typeof n.value)return n;var r=new l.a,i=n.value,o=Object(h.memoize)(i);return Object(p.a)(t,e,{get:function(){var t=this,a=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var a=o.call.apply(o,Object(c.__spreadArrays)([t],e));if(1===r.getUsedCount.apply(r,e))return a;var s=i.call.apply(i,Object(c.__spreadArrays)([t],e));return Object(m.a)(s,a,{keyFilter:function(t){return!Object(f.a)(t)}})?a:(o.cache.set(r.getKey.apply(r,e),s),s)};return Object.defineProperty(this,e,Object(c.__assign)(Object(c.__assign)({},n),{value:a})),a},set:function(t){r=new l.a,i=t,o=Object(h.memoize)(i)}})}(t.prototype,n,r))})),e}var y=function(){function t(t){this._checkoutButton=t.checkoutButton}return t.prototype.getInitializeButtonError=function(t){return this._checkoutButton.getInitializeError(t)},t.prototype.getDeinitializeButtonError=function(t){return this._checkoutButton.getDeinitializeError(t)},t=Object(c.__decorate)([_],t)}(),g=function(){function t(t){this._checkoutButton=t.checkoutButton}return t.prototype.isInitializingButton=function(t){return this._checkoutButton.isInitializing(t)},t.prototype.isDeinitializingButton=function(t){return this._checkoutButton.isDeinitializing(t)},t=Object(c.__decorate)([_],t)}();function b(t){return{errors:new y(t),statuses:new g(t)}}var v,C=function(){function t(t,e){var n=this;this._store=t,this._buttonStrategyActionCreator=e,this._state=b(this._store.getState()),this._store.subscribe((function(t){n._state=b(t)}))}return t.prototype.getState=function(){return this._state},t.prototype.subscribe=function(t){for(var e,n=this,r=[],i=1;i<arguments.length;i++)r[i-1]=arguments[i];return(e=this._store).subscribe.apply(e,Object(c.__spreadArrays)([function(){return t(n.getState())},function(t){return t.checkoutButton.getState()}],r.map((function(t){return function(e){return t(b(e))}}))))},t.prototype.initializeButton=function(t){var e,n=this,r=(e=t.containerId,/^\w[\w\-\:\.]*$/.test(e)?[t.containerId]:function(t,e){var n=document.querySelectorAll(t);if(!n.length)throw new d.a("Unable to find any element with the specified selector: "+t);return Array.prototype.slice.call(n).map((function(t){return t.id||(t.id=Object(u.uniqueId)(e)),t.id}))}(t.containerId,t.methodId+"-container"));return Promise.all(r.map((function(e){var r=n._buttonStrategyActionCreator.initialize(Object(c.__assign)(Object(c.__assign)({},t),{containerId:e})),i="checkoutButtonStrategy:"+t.methodId+":"+e;return n._store.dispatch(r,{queueId:i})}))).then((function(){return n.getState()}))},t.prototype.deinitializeButton=function(t){var e=this,n=this._buttonStrategyActionCreator.deinitialize(t),r="checkoutButtonStrategy:"+t.methodId;return this._store.dispatch(n,{queueId:r}).then((function(){return e.getState()}))},t=Object(c.__decorate)([p.a],t)}(),O=n(1),S=n(3),w=n(8),I=n(90),A=n(20),E=function(){function t(t,e){this._registry=t,this._paymentMethodActionCreator=e}return t.prototype.initialize=function(t){var e=this;return function(n){var r={methodId:t.methodId,containerId:t.containerId};return n.getState().checkoutButton.isInitialized(t.methodId,t.containerId)?Object(S.empty)():Object(S.concat)(Object(S.of)(Object(O.createAction)(A.a.InitializeButtonRequested,void 0,r)),e._paymentMethodActionCreator.loadPaymentMethod(t.methodId,{timeout:t.timeout,useCache:!0}),Object(S.defer)((function(){return e._registry.get(t.methodId).initialize(t).then((function(){return Object(O.createAction)(A.a.InitializeButtonSucceeded,void 0,r)}))}))).pipe(Object(w.catchError)((function(t){return Object(I.a)(A.a.InitializeButtonFailed,t,r)})))}},t.prototype.deinitialize=function(t){var e=this;return function(n){var r={methodId:t.methodId};return n.getState().checkoutButton.isInitialized(t.methodId)?Object(S.concat)(Object(S.of)(Object(O.createAction)(A.a.DeinitializeButtonRequested,void 0,r)),Object(S.defer)((function(){return e._registry.get(t.methodId).deinitialize().then((function(){return Object(O.createAction)(A.a.DeinitializeButtonSucceeded,void 0,r)}))}))).pipe(Object(w.catchError)((function(t){return Object(I.a)(A.a.DeinitializeButtonFailed,t,r)}))):Object(S.empty)()}},t}(),P=n(31),j=n(129),k=n(137),M=n(179),T=n(173),R=n(174),D=n(176),z=n(177),L=n(197),N=n(105),F=n(104),q=n(198),U=n(182),x=n(184),B=n(185),G=n(186),V=n(187),Y=n(183),H=n(190),W=n(196);!function(t){t.AMAZON_PAY_V2="amazonpay",t.BRAINTREE_PAYPAL="braintreepaypal",t.BRAINTREE_PAYPAL_CREDIT="braintreepaypalcredit",t.GOOGLEPAY_ADYENV2="googlepayadyenv2",t.GOOGLEPAY_AUTHORIZENET="googlepayauthorizenet",t.GOOGLEPAY_BRAINTREE="googlepaybraintree",t.GOOGLEPAY_CHECKOUTCOM="googlepaycheckoutcom",t.GOOGLEPAY_STRIPE="googlepaystripe",t.MASTERPASS="masterpass",t.PAYPALEXPRESS="paypalexpress",t.PAYPALCOMMERCE="paypalcommerce"}(v||(v={}));var K=v,J=n(12),Z=n(103),Q=n(202),X=function(){function t(t,e,n){this._store=t,this._checkoutActionCreator=e,this._amazonPayV2PaymentProcessor=n}return t.prototype.initialize=function(t){return Object(c.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i,o;return Object(c.__generator)(this,(function(a){switch(a.label){case 0:if(e=t.containerId,n=t.methodId,r=t.amazonpay,!e||!n)throw new d.a('Unable to proceed because "containerId" or "methodId" argument is not provided.');return i=this._store.getState().paymentMethods.getPaymentMethodOrThrow(n),[4,this._amazonPayV2PaymentProcessor.initialize(i)];case 1:return a.sent(),o=this,[4,this._createSignInButton(e,i,r)];case 2:return o._walletButton=a.sent(),[2]}}))}))},t.prototype.deinitialize=function(){return this._walletButton&&this._walletButton.parentNode&&(this._walletButton.parentNode.removeChild(this._walletButton),this._walletButton=void 0),Promise.resolve()},t.prototype._createSignInButton=function(t,e,n){return Object(c.__awaiter)(this,void 0,void 0,(function(){var r,i,o;return Object(c.__generator)(this,(function(a){switch(a.label){case 0:if(!(r=document.getElementById(t)))throw new d.a("Unable to create sign-in button without valid container ID.");return null==n?[3,1]:(o=n,[3,3]);case 1:return[4,this._getAmazonPayV2ButtonOptions(e)];case 2:o=a.sent(),a.label=3;case 3:return i=o,this._amazonPayV2PaymentProcessor.createButton("#"+t,i),[2,r]}}))}))},t.prototype._getAmazonPayV2ButtonOptions=function(t){return Object(c.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i,o,a,s,u,d,p,h;return Object(c.__generator)(this,(function(c){switch(c.label){case 0:return[4,this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())];case 1:if(e=c.sent(),n=e.cart.getCart(),r=e.config.getStoreConfigOrThrow().storeProfile.shopPath,i=t.config,o=i.merchantId,a=i.testMode,s=t.initializationData,u=s.checkoutLanguage,d=s.ledgerCurrency,p=s.checkoutSessionMethod,h=s.extractAmazonCheckoutSessionId,!o||!d||!r)throw new J.b(J.a.MissingPaymentMethod);return[2,{merchantId:o,createCheckoutSession:{url:r+"/remote-checkout/"+t.id+"/payment-session",method:p,extractAmazonCheckoutSessionId:h},sandbox:!!a,ledgerCurrency:d,checkoutLanguage:u,productType:n&&0===Object(Q.a)(n)?Z.a.PayOnly:Z.a.PayAndShip,placement:Z.b.Cart}]}}))}))},t}(),$=n(111),tt=function(){function t(t,e,n,r,i,o){void 0===o&&(o=!1),this._store=t,this._checkoutActionCreator=e,this._braintreeSDKCreator=n,this._paypalScriptLoader=r,this._formPoster=i,this._offerCredit=o}return t.prototype.initialize=function(t){var e=this,n=(this._offerCredit?t.braintreepaypalcredit:t.braintreepaypal)||{},r=this._store.getState(),i=this._paymentMethod=r.paymentMethods.getPaymentMethod(t.methodId);if(!i||!i.clientToken)throw new J.b(J.a.MissingPaymentMethod);return this._braintreeSDKCreator.initialize(i.clientToken),Promise.all([this._braintreeSDKCreator.getPaypalCheckout(),this._paypalScriptLoader.loadPaypal()]).then((function(r){var o=r[0],a=r[1];e._paypalCheckout=o;var s=[],d=[];return n.allowCredit?s.push(a.FUNDING.CREDIT):d.push(a.FUNDING.CREDIT),a.Button.render({env:i.config.testMode?"sandbox":"production",commit:!!n.shouldProcessPayment,funding:{allowed:s,disallowed:d},style:Object(c.__assign)({shape:"rect",label:e._offerCredit?"credit":void 0},Object(u.pick)(n.style,"layout","size","color","label","shape","tagline","fundingicons")),payment:function(){return e._setupPayment(n.shippingAddress,n.onPaymentError)},onAuthorize:function(t){return e._tokenizePayment(t,n.shouldProcessPayment,n.onAuthorizeError)}},t.containerId)}))},t.prototype.deinitialize=function(){return this._paypalCheckout=void 0,this._paymentMethod=void 0,this._braintreeSDKCreator.teardown(),Promise.resolve()},t.prototype._setupPayment=function(t,e){var n=this;return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout()).then((function(e){var r=e.checkout.getCheckout(),i=e.config.getStoreConfig(),o=e.customer.getCustomer(),a=void 0===t?o&&o.addresses&&o.addresses[0]:t;if(!n._paypalCheckout)throw new $.b($.a.CheckoutButtonNotInitialized);if(!r)throw new J.b(J.a.MissingCheckout);if(!i)throw new J.b(J.a.MissingCheckoutConfig);return n._paypalCheckout.createPayment({flow:"checkout",enableShippingAddress:!0,shippingAddressEditable:!1,shippingAddressOverride:a?n._mapToBraintreeAddress(a):void 0,amount:r.outstandingBalance,currency:i.currency.code,offerCredit:n._offerCredit})})).catch((function(t){throw e&&e(t),t}))},t.prototype._tokenizePayment=function(t,e,n){var r=this;if(!this._paypalCheckout||!this._paymentMethod)throw new $.b($.a.CheckoutButtonNotInitialized);var i=this._paymentMethod.id;return Promise.all([this._paypalCheckout.tokenizePayment(t),this._braintreeSDKCreator.getDataCollector({paypal:!0})]).then((function(t){var n=t[0],o=t[1].deviceData;return r._formPoster.postForm("/checkout.php",{payment_type:"paypal",provider:i,action:e?"process_payment":"set_external_checkout",nonce:n.nonce,device_data:o,shipping_address:JSON.stringify(r._mapToLegacyShippingAddress(n)),billing_address:JSON.stringify(r._mapToLegacyBillingAddress(n))}),n})).catch((function(t){throw n&&n(t),t}))},t.prototype._mapToLegacyShippingAddress=function(t){var e=t.details.shippingAddress,n=(e&&e.recipientName||"").split(" "),r=n[0],i=n[1];return{email:t.details.email,first_name:r,last_name:i,phone_number:t.details.phone,address_line_1:e&&e.line1,address_line_2:e&&e.line2,city:e&&e.city,state:e&&e.state,country_code:e&&e.countryCode,postal_code:e&&e.postalCode}},t.prototype._mapToLegacyBillingAddress=function(t){var e=t.details.billingAddress,n=t.details.shippingAddress;return e?{email:t.details.email,first_name:t.details.firstName,last_name:t.details.lastName,phone_number:t.details.phone,address_line_1:e.line1,address_line_2:e.line2,city:e.city,state:e.state,country_code:e.countryCode,postal_code:e.postalCode}:{email:t.details.email,first_name:t.details.firstName,last_name:t.details.lastName,phone_number:t.details.phone,address_line_1:n&&n.line1,address_line_2:n&&n.line2,city:n&&n.city,state:n&&n.state,country_code:n&&n.countryCode,postal_code:n&&n.postalCode}},t.prototype._mapToBraintreeAddress=function(t){return{line1:t.address1,line2:t.address2,city:t.city,state:t.stateOrProvinceCode,postalCode:t.postalCode,countryCode:t.countryCode,phone:t.phone,recipientName:t.firstName+" "+t.lastName}},t}(),et=function(){function t(t,e,n,r){this._store=t,this._formPoster=e,this._checkoutActionCreator=n,this._googlePayPaymentProcessor=r}return t.prototype.initialize=function(t){return Object(c.__awaiter)(this,void 0,void 0,(function(){var e,n;return Object(c.__generator)(this,(function(r){switch(r.label){case 0:if(e=t.containerId,n=t.methodId,!e||!n)throw new d.a('Unable to proceed because "containerId" argument is not provided.');return this._methodId=n,[4,this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())];case 1:return r.sent(),[4,this._googlePayPaymentProcessor.initialize(this._getMethodId())];case 2:return r.sent(),this._walletButton=this._createSignInButton(e),[2]}}))}))},t.prototype.deinitialize=function(){return this._walletButton&&this._walletButton.parentNode&&(this._walletButton.parentNode.removeChild(this._walletButton),this._walletButton=void 0),this._googlePayPaymentProcessor.deinitialize()},t.prototype._createSignInButton=function(t){var e=document.getElementById(t);if(!e)throw new d.a("Unable to create sign-in button without valid container ID.");var n=this._googlePayPaymentProcessor.createButton(this._handleWalletButtonClick);return e.appendChild(n),n},t.prototype._getMethodId=function(){if(!this._methodId)throw new $.b($.a.PaymentNotInitialized);return this._methodId},t.prototype._handleWalletButtonClick=function(t){return Object(c.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i;return Object(c.__generator)(this,(function(o){switch(o.label){case 0:t.preventDefault(),e=this._store.getState().cart.getCartOrThrow(),n=Object(Q.a)(e)>0,o.label=1;case 1:return o.trys.push([1,7,,8]),[4,this._googlePayPaymentProcessor.displayWallet()];case 2:return r=o.sent(),[4,this._googlePayPaymentProcessor.handleSuccess(r)];case 3:return o.sent(),n&&r.shippingAddress?[4,this._googlePayPaymentProcessor.updateShippingAddress(r.shippingAddress)]:[3,5];case 4:o.sent(),o.label=5;case 5:return[4,this._onPaymentSelectComplete()];case 6:return o.sent(),[3,8];case 7:if((i=o.sent())&&"CANCELED"!==i.message)throw i;return[3,8];case 8:return[2]}}))}))},t.prototype._onPaymentSelectComplete=function(){this._formPoster.postForm("/checkout.php",{headers:{Accept:"text/html","Content-Type":"application/x-www-form-urlencoded"}})},Object(c.__decorate)([p.a],t.prototype,"_handleWalletButtonClick",null),t}(),nt=n(132),rt=function(){function t(t,e,n){this._store=t,this._checkoutActionCreator=e,this._masterpassScriptLoader=n}return t.prototype.initialize=function(t){var e=this,n=t.containerId,r=t.methodId;if(!n||!r)throw new d.a('Unable to proceed because "containerId" argument is not provided.');return this._methodId=r,this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout()).then((function(t){var n=t.paymentMethods.getPaymentMethod(r);if(!n||!n.initializationData.checkoutId)throw new J.b(J.a.MissingPaymentMethod);return e._masterpassScriptLoader.load(n.config.testMode)})).then((function(t){e._masterpassClient=t,e._signInButton=e._createSignInButton(n)}))},t.prototype.deinitialize=function(){return this._signInButton&&this._signInButton.parentNode&&(this._signInButton.removeEventListener("click",this._handleWalletButtonClick),this._signInButton.parentNode.removeChild(this._signInButton),this._signInButton=void 0),Promise.resolve()},t.prototype._createSignInButton=function(t){var e=document.getElementById(t);if(!e)throw new Error("Need a container to place the button");var n=document.createElement("input");return n.type="image",n.src="https://static.masterpass.com/dyn/img/btn/global/mp_chk_btn_160x037px.svg",e.appendChild(n),n.addEventListener("click",this._handleWalletButtonClick),n},t.prototype._createMasterpassPayload=function(){var t=this._store.getState(),e=t.checkout.getCheckout(),n=this._methodId?t.paymentMethods.getPaymentMethod(this._methodId):null;if(!e)throw new J.b(J.a.MissingCheckout);if(!n)throw new J.b(J.a.MissingPaymentMethod);return{checkoutId:n.initializationData.checkoutId,allowedCardTypes:n.initializationData.allowedCardTypes,amount:e.cart.cartAmount.toString(),currency:e.cart.currency.code,cartId:e.cart.id,suppressShippingAddress:!1,callbackUrl:Object(nt.a)("cart")}},t.prototype._handleWalletButtonClick=function(){if(!this._masterpassClient)throw new $.b($.a.CheckoutButtonNotInitialized);this._masterpassClient.checkout(this._createMasterpassPayload())},Object(c.__decorate)([p.a],t.prototype,"_handleWalletButtonClick",null),t}(),it=n(72),ot=function(){function t(t,e,n,r,i){void 0===i&&(i=""),this._store=t,this._checkoutActionCreator=e,this._paypalScriptLoader=n,this._formPoster=r,this._host=i}return t.prototype.initialize=function(t){var e=this,n=t.paypal,r=this._store.getState(),i=this._paymentMethod=r.paymentMethods.getPaymentMethod(t.methodId);if(!n)throw new d.a;if(!i)throw new J.b(J.a.MissingPaymentMethod);return this._paypalScriptLoader.loadPaypal(i.config.merchantId).then((function(r){var o;if(!i||!i.config.merchantId)throw new J.b(J.a.MissingPaymentMethod);var a=i.config.merchantId,s=i.config.testMode?"sandbox":"production",d=((o={})[s]=n.clientId,o),p=[],h=[];return n.allowCredit?p.push(r.FUNDING.CREDIT):h.push(r.FUNDING.CREDIT),r.Button.render({env:s,client:d,commit:n.shouldProcessPayment,funding:{allowed:p,disallowed:h},style:Object(c.__assign)({shape:"rect"},Object(u.pick)(n.style,"layout","size","color","label","shape","tagline","fundingicons")),payment:function(t,r){return e._setupPayment(a,r,n.onPaymentError)},onAuthorize:function(t,r){return e._tokenizePayment(t,r,n.shouldProcessPayment,n.onAuthorizeError)}},t.containerId)}))},t.prototype.deinitialize=function(){return this._paymentMethod=void 0,Promise.resolve()},t.prototype._setupPayment=function(t,e,n){var r=this;if(!e)throw new $.b($.a.CheckoutButtonNotInitialized);return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout()).then((function(n){var i=n.cart.getCart(),o=i?i.id:"";return e.request.post(r._host+"/api/storefront/payment/paypalexpress",{merchantId:t,cartId:o},{headers:{"X-API-INTERNAL":it.a}})})).then((function(t){return t.id})).catch((function(t){throw n&&n(t),t}))},t.prototype._tokenizePayment=function(t,e,n,r){var i=this;if(!this._paymentMethod)throw new $.b($.a.CheckoutButtonNotInitialized);if(!e)throw new $.b($.a.CheckoutButtonNotInitialized);if(!t.paymentID||!t.payerID)throw new J.b(J.a.MissingPayment);var o=this._paymentMethod.id;return e.payment.get(t.paymentID).then((function(e){i._formPoster.postForm("/checkout.php",{payment_type:"paypal",provider:o,action:n?"process_payment":"set_external_checkout",paymentId:t.paymentID,payerId:t.payerID,payerInfo:JSON.stringify(e.payer.payer_info)})}))},t}(),at=function(){function t(t,e,n,r){this._store=t,this._checkoutActionCreator=e,this._formPoster=n,this._paypalCommercePaymentProcessor=r}return t.prototype.initialize=function(t){var e;return Object(c.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a,s,u=this;return Object(c.__generator)(this,(function(c){switch(c.label){case 0:if(n=this._store.getState(),!(r=n.paymentMethods.getPaymentMethodOrThrow(t.methodId).initializationData).clientId)throw new d.a;return[4,this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())];case 1:return n=c.sent(),i=n.cart.getCartOrThrow(),o={onApprove:function(t){return u._tokenizePayment(t)},onClick:function(t){return u._handleClickButtonProvider(t)}},t.paypalCommerce&&t.paypalCommerce.style&&(o.style=t.paypalCommerce.style),a=null===(e=t.paypalCommerce)||void 0===e?void 0:e.messagingContainer,s=Boolean(a&&document.getElementById(a)),[4,this._paypalCommercePaymentProcessor.initialize(this._getParamsScript(r,i))];case 2:return c.sent(),this._paypalCommercePaymentProcessor.renderButtons(i.id,"#"+t.containerId,o),s&&this._paypalCommercePaymentProcessor.renderMessages(i.cartAmount,"#"+a),[2,Promise.resolve()]}}))}))},t.prototype.deinitialize=function(){return this._isCredit=void 0,Promise.resolve()},t.prototype._handleClickButtonProvider=function(t){var e=t.fundingSource;this._isCredit="credit"===e||"paylater"===e},t.prototype._tokenizePayment=function(t){var e=t.orderID;if(!e)throw new J.b(J.a.MissingPayment);return this._formPoster.postForm("/checkout.php",{payment_type:"paypal",action:"set_external_checkout",provider:this._isCredit?"paypalcommercecredit":"paypalcommerce",order_id:e})},t.prototype._getParamsScript=function(t,e){var n=t.clientId,r=t.intent,i=t.isPayPalCreditAvailable,o=t.merchantId,a=["card"];return i||a.push("credit"),{"client-id":n,"merchant-id":o,commit:!1,currency:e.currency.code,components:["buttons","messages"],"disable-funding":a,intent:r}},t}();function st(t){var e=t&&t.host,n=Object(o.a)(),c=Object(i.createRequestSender)({host:e}),u=Object(r.createFormPoster)({host:e});return new C(n,new E(function(t,e,n,r){var i=new M.a,o=Object(P.getScriptLoader)(),a=new j.a(new k.a(e),new T.a(new R.a(e)),new D.a(new z.a(e))),s=Object(W.a)(o,e);return i.register(K.BRAINTREE_PAYPAL,(function(){return new tt(t,a,new N.a(new F.a(o)),new H.a(o),n)})),i.register(K.BRAINTREE_PAYPAL_CREDIT,(function(){return new tt(t,a,new N.a(new F.a(o)),new H.a(o),n,!0)})),i.register(K.MASTERPASS,(function(){return new rt(t,a,new Y.a(o))})),i.register(K.GOOGLEPAY_ADYENV2,(function(){return new et(t,n,a,Object(q.a)(t,new U.a))})),i.register(K.GOOGLEPAY_AUTHORIZENET,(function(){return new et(t,n,a,Object(q.a)(t,new x.a))})),i.register(K.GOOGLEPAY_BRAINTREE,(function(){return new et(t,n,a,Object(q.a)(t,new B.a(new N.a(new F.a(o)))))})),i.register(K.GOOGLEPAY_CHECKOUTCOM,(function(){return new et(t,n,a,Object(q.a)(t,new G.a(e)))})),i.register(K.GOOGLEPAY_STRIPE,(function(){return new et(t,n,a,Object(q.a)(t,new V.a))})),i.register(K.PAYPALEXPRESS,(function(){return new ot(t,a,new H.a(o),n,r)})),i.register(K.PAYPALCOMMERCE,(function(){return new at(t,a,n,s)})),i.register(K.AMAZON_PAY_V2,(function(){return new X(t,a,Object(L.a)())})),i}(n,c,u,e),new a.a(new s.a(c))))}n.d(e,"a",(function(){return st}))},function(t,e,n){"use strict";var r,i=n(46),o=n(145),a=n(144),s=n(146),c=n(80),u=n(0),d=n(97),p=n(23),h=function(t){function e(e){var n=t.call(this,e,{message:e.body.title})||this;return n.name="InvalidLoginTokenError",n.type="invalid_login_token",n}return Object(u.__extends)(e,t),e}(n(35).a),l=n(22);!function(t){t.MissingContainer="missing_container",t.MissingContent="missing_content",t.UnknownError="unknown_error"}(r||(r={}));var m=function(t){function e(e,n){void 0===n&&(n=r.UnknownError);var i=t.call(this,e||"Unable to embed the checkout form.")||this;return i.subtype=n,i.name="NotEmbeddableError",i.type="not_embeddable",i}return Object(u.__extends)(e,t),e}(l.a),f=n(106),_=function(){function t(t,e,n,r,i,o,a,s){var c=this;this._iframeCreator=t,this._messageListener=e,this._messagePoster=n,this._loadingIndicator=r,this._requestSender=i,this._storage=o,this._location=a,this._options=s,this._isAttached=!1,this._options.onComplete&&this._messageListener.addListener(p.a.CheckoutComplete,this._options.onComplete),this._options.onError&&this._messageListener.addListener(p.a.CheckoutError,this._options.onError),this._options.onLoad&&this._messageListener.addListener(p.a.CheckoutLoaded,this._options.onLoad),this._options.onFrameLoad&&this._messageListener.addListener(p.a.FrameLoaded,this._options.onFrameLoad),this._options.onSignOut&&this._messageListener.addListener(p.a.SignedOut,this._options.onSignOut),this._messageListener.addListener(p.a.FrameLoaded,(function(){return c._configureStyles()}))}return t.prototype.attach=function(){var t=this;return this._isAttached?Promise.resolve(this):(this._isAttached=!0,this._messageListener.listen(),this._loadingIndicator.show(this._options.containerId),this._allowCookie().then((function(){return t._attemptLogin()})).then((function(e){return t._iframeCreator.createFrame(e,t._options.containerId)})).then((function(e){t._iframe=e,t._configureStyles(),t._loadingIndicator.hide()})).catch((function(e){return t._isAttached=!1,t._retryAllowCookie(e).catch((function(){throw t._messageListener.trigger({type:p.a.FrameError,payload:e}),t._loadingIndicator.hide(),e}))})).then((function(){return t})))},t.prototype.detach=function(){this._isAttached&&(this._isAttached=!1,this._messageListener.stopListen(),this._iframe&&this._iframe.parentNode&&(this._iframe.parentNode.removeChild(this._iframe),this._iframe.iFrameResizer.close()))},t.prototype._configureStyles=function(){this._iframe&&this._iframe.contentWindow&&this._options.styles&&(this._messagePoster.setTarget(this._iframe.contentWindow),this._messagePoster.post({type:f.a.StyleConfigured,payload:this._options.styles}))},t.prototype._attemptLogin=function(){return/^\/login\/token/.test(Object(c.a)(this._options.url).pathname)?this._requestSender.post(this._options.url).then((function(t){return t.body.redirectUrl})).catch((function(t){return Promise.reject(new h(t))})):Promise.resolve(this._options.url)},t.prototype._allowCookie=function(){if(this._storage.getItem("isCookieAllowed"))return Promise.resolve();this._storage.setItem("isCookieAllowed",!0),this._storage.setItem("lastAllowCookieAttempt",Date.now());var t=Object(c.a)(this._options.url).origin+"/embedded-checkout/allow-cookie?returnUrl="+encodeURIComponent(this._location.href);return document.body.style.visibility="hidden",this._location.replace(t),new Promise((function(){}))},t.prototype._retryAllowCookie=function(t){var e=Number(this._storage.getItem("lastAllowCookieAttempt"));return(!e||Date.now()-e>6e5)&&t instanceof m&&t.subtype===r.MissingContent?(this._storage.removeItem("lastAllowCookieAttempt"),this._storage.removeItem("isCookieAllowed"),this._allowCookie()):Promise.reject()},t=Object(u.__decorate)([d.a],t)}(),y={size:70,color:"#d9d9d9",backgroundColor:"#ffffff"},g="embedded-checkout-loading-indicator-rotation",b=function(){function t(t){this._styles=Object(u.__assign)(Object(u.__assign)({},y),t&&t.styles),this._defineAnimation(),this._container=this._buildContainer(),this._indicator=this._buildIndicator(),this._container.appendChild(this._indicator)}return t.prototype.show=function(t){if(t){var e=document.getElementById(t);if(!e)throw new Error("Unable to attach the loading indicator because the parent ID is not valid.");e.appendChild(this._container)}this._container.style.visibility="visible",this._container.style.opacity="1"},t.prototype.hide=function(){var t=this,e=function(){t._container.style.visibility="hidden",t._container.removeEventListener("transitionend",e)};this._container.addEventListener("transitionend",e),this._container.style.opacity="0"},t.prototype._buildContainer=function(){var t=document.createElement("div");return t.style.display="block",t.style.bottom="0",t.style.left="0",t.style.height="100%",t.style.width="100%",t.style.position="absolute",t.style.right="0",t.style.top="0",t.style.transition="all 250ms ease-out",t.style.opacity="0",t},t.prototype._buildIndicator=function(){var t=document.createElement("div");return t.style.display="block",t.style.width=this._styles.size+"px",t.style.height=this._styles.size+"px",t.style.borderRadius=this._styles.size+"px",t.style.border="solid 1px",t.style.borderColor=this._styles.backgroundColor+" "+this._styles.backgroundColor+" "+this._styles.color+" "+this._styles.color,t.style.margin="0 auto",t.style.position="absolute",t.style.left="0",t.style.right="0",t.style.top="50%",t.style.transform="translateY(-50%) rotate(0deg)",t.style.transformStyle="preserve-3d",t.style.animation=g+" 500ms infinite cubic-bezier(0.69, 0.31, 0.56, 0.83)",t},t.prototype._defineAnimation=function(){if(!document.getElementById(g)){var t=document.createElement("style");t.id=g,document.head.appendChild(t),t.sheet instanceof CSSStyleSheet&&t.sheet.insertRule("\n                @keyframes "+g+" {\n                    0% { transform: translateY(-50%) rotate(0deg); }\n                    100% { transform: translateY(-50%) rotate(360deg); }\n                }\n            ",0)}},t}(),v=n(56),C=n(191),O=function(){function t(t){this._options=t}return t.prototype.createFrame=function(t,e){var n=document.getElementById(e),i=(this._options||{}).timeout,o=void 0===i?6e4:i;if(!n)throw new m("Unable to embed the iframe because the container element could not be found.",r.MissingContainer);var a=document.createElement("iframe");return a.src=t,a.style.border="none",a.style.display="none",a.style.width="100%",a.allowPaymentRequest=!0,n.appendChild(a),this._toResizableFrame(a,o).catch((function(t){throw n.removeChild(a),t}))},t.prototype._toResizableFrame=function(t,e){return new Promise((function(n,i){var o=window.setTimeout((function(){i(new m("Unable to embed the iframe because the content could not be loaded."))}),e),a=function(e){if(e.origin===Object(c.a)(t.src).origin&&(Object(v.a)(e.data,p.a.FrameError)&&(s(),i(new m(e.data.payload.message,r.MissingContent))),Object(v.a)(e.data,p.a.FrameLoaded))){t.style.display="";var o=e.data.payload&&e.data.payload.contentId,a=Object(C.a)({scrolling:!1,sizeWidth:!1,heightCalculationMethod:o?"taggedElement":"lowestElement"},t);s(),n(a[a.length-1])}},s=function(){window.removeEventListener("message",a),window.clearTimeout(o)};window.addEventListener("message",a)}))},t}();n.d(e,"a",(function(){return w}));var S="BigCommerce.EmbeddedCheckout";function w(t){var e=Object(c.a)(t.url).origin;return new _(new O,new o.a(e),new a.a(e),new b({styles:t.styles&&t.styles.loadingIndicator}),Object(i.createRequestSender)(),new s.a(S),window.location,t).attach()}},function(t,e,n){"use strict";var r=n(191),i=n(145),o=n(144),a=n(23);function s(t){if(t.payload&&t.payload.contentId){var e=document.getElementById(t.payload.contentId);e&&!e.hasAttribute("data-iframe-height")&&e.setAttribute("data-iframe-height","")}}var c=n(0);function u(t){return"string"==typeof t.message&&"string"==typeof t.type&&("string"==typeof t.subtype||!t.subtype)&&t instanceof Error}var d=n(97),p=n(106),h=function(){function t(t,e,n,r){void 0===r&&(r={}),this._messageListener=t,this._messagePoster=e,this._untargetedMessagePoster=n,this._messageHandlers=r,this._messageListener.listen()}return t.prototype.postComplete=function(){var t={type:a.a.CheckoutComplete};this._postMessage(t)},t.prototype.postError=function(t){var e={type:a.a.CheckoutError,payload:this._transformError(t)};this._postMessage(e)},t.prototype.postFrameError=function(t){var e={type:a.a.FrameError,payload:this._transformError(t)};this._postMessage(e,{untargeted:!0})},t.prototype.postFrameLoaded=function(t){var e={type:a.a.FrameLoaded,payload:t};this._postMessage(e)},t.prototype.postLoaded=function(){var t={type:a.a.CheckoutLoaded};this._postMessage(t)},t.prototype.postSignedOut=function(){var t={type:a.a.SignedOut};this._postMessage(t)},t.prototype.receiveStyles=function(t){this._messageListener.addListener(p.a.StyleConfigured,(function(e){var n=e.payload;t(n)}))},t.prototype._postMessage=function(t,e){if(this._notifyMessageHandlers(t),e&&e.untargeted)return this._untargetedMessagePoster.post(t);this._messagePoster.post(t)},t.prototype._notifyMessageHandlers=function(t){var e=this;Object.keys(this._messageHandlers).forEach((function(n){if(t.type===n){var r=e._messageHandlers[n];r&&r.call(null,t)}}))},t.prototype._transformError=function(t){return{message:t.message,type:u(t)?t.type:void 0,subtype:u(t)?t.subtype:void 0}},t=Object(c.__decorate)([d.a],t)}(),l=function(){function t(){}return t.prototype.postComplete=function(){},t.prototype.postError=function(){},t.prototype.postFrameError=function(){},t.prototype.postFrameLoaded=function(){},t.prototype.postLoaded=function(){},t.prototype.postSignedOut=function(){},t.prototype.receiveStyles=function(){},t=Object(c.__decorate)([d.a],t)}();function m(t){var e;Object(r.b)();var n=t.parentWindow||window.parent;return window===n?new l:new h(new i.a(t.parentOrigin),new o.a(t.parentOrigin,n),new o.a("*",n),((e={})[a.a.FrameLoaded]=s,e))}n.d(e,"a",(function(){return m}))},function(t,e,n){"use strict";var r=n(0),i=n(2),o=n(66),a=n.n(o);function s(t){return t.hasOwnProperty("cacheKey")}var c=function(){function t(t){this._lastId=0,this._map={maps:[]},this._usedMaps=[],this._options=Object(r.__assign)({maxSize:0,isEqual:a.a,onExpire:i.noop},t)}return t.prototype.getKey=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=this._resolveMap.apply(this,t),r=n.index,i=n.parentMap,o=n.map;return o&&o.cacheKey?o.usedCount++:o=this._generateMap(i,t.slice(r)),this._removeLeastUsedMap(o),o.cacheKey},t.prototype.getUsedCount=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=this._resolveMap.apply(this,t).map;return n?n.usedCount:0},t.prototype._resolveMap=function(){for(var t,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];for(var r=0,i=this._map;i.maps.length;){for(var o=!1,a=0;a<i.maps.length;a++){var c=i.maps[a];if(this._options.isEqual(c.value,e[r])){if((t=i.maps).unshift.apply(t,i.maps.splice(a,1)),(0===e.length||r===e.length-1)&&s(c))return{index:r,map:c,parentMap:i};o=!0,i=c,r++;break}}if(!o)break}return{index:r,parentMap:i}},t.prototype._generateMap=function(t,e){var n,r=0,i=t;do{n={maps:[],parentMap:i,usedCount:1,value:e[r]},i.maps.unshift(n),i=n,r++}while(r<e.length);var o=n;return o.cacheKey=""+ ++this._lastId,o},t.prototype._removeLeastUsedMap=function(t){if(this._options.maxSize){var e=this._usedMaps.indexOf(t);if(this._usedMaps.splice(-1===e?0:e,-1===e?0:1,t),!(this._usedMaps.length<=this._options.maxSize)){var n=this._usedMaps.pop();n&&(this._removeMap(n),this._options.onExpire(n.cacheKey))}}},t.prototype._removeMap=function(t){t.parentMap&&(t.parentMap.maps.splice(t.parentMap.maps.indexOf(t),1),function(t){return t.hasOwnProperty("parentMap")}(t.parentMap)||this._removeMap(t.parentMap))},t}();e.a=c},function(t,e){t.exports=__webpack_require__(/*! messageformat */ "./node_modules/messageformat/lib/messageformat.js")},,,,,,,,,,,,,,,,,function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(0),i=n(35);function o(t,e){var n=t.body.errors,r=void 0===n?[]:n;return new i.a(t,{message:a(r)||e,errors:r})}function a(t){if(Array.isArray(t))return t.reduce((function(t,e){return e&&e.message?Object(r.__spreadArrays)(t,[e.message]):t}),[]).join(" ")}},function(t,e,n){"use strict";var r=n(0),i=function(t){function e(e){var n=t.call(this,e,{message:"The request has timed out or aborted."})||this;return n.name="TimeoutError",n.type="timeout",n}return Object(r.__extends)(e,t),e}(n(35).a);e.a=i},function(t,e,n){"use strict";var r=n(0),i=function(t){function e(e){var n=t.call(this,e,{message:"There is a problem processing your payment. Please try again later."})||this;return n.name="PaymentMethodInvalidError",n.type="payment_method_invalid",n}return Object(r.__extends)(e,t),e}(n(35).a);e.a=i},function(t,e,n){"use strict";var r=n(77),i=n(85);e.a=Object(i.a)(r.createSelector)},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t.UpdateSubscriptionsRequested="UPDATE_SUBSCRIPTIONS_REQUESTED",t.UpdateSubscriptionsSucceeded="UPDATE_SUBSCRIPTIONS_SUCCEEDED",t.UpdateSubscriptionsFailed="UPDATE_SUBSCRIPTIONS_FAILED"}(r||(r={}))},function(t,e,n){"use strict";var r=n(0),i=n(1),o=n(3),a=n(92),s=n(37),c=function(){function t(t){this._configRequestSender=t}return t.prototype.loadConfig=function(t){var e=this;return o.Observable.create((function(n){n.next(Object(i.createAction)(s.a.LoadConfigRequested)),e._configRequestSender.loadConfig(t).then((function(t){n.next(Object(i.createAction)(s.a.LoadConfigSucceeded,t.body)),n.complete()})).catch((function(t){n.error(Object(i.createErrorAction)(s.a.LoadConfigFailed,t))}))}))},Object(r.__decorate)([a.a],t.prototype,"loadConfig",null),t}();e.a=c},function(t,e,n){"use strict";var r=n(39),i=n(72),o=function(){function t(t){this._requestSender=t}return t.prototype.loadConfig=function(t){var e=(void 0===t?{}:t).timeout;return this._requestSender.get("/api/storefront/checkout-settings",{timeout:e,headers:{Accept:r.a.JsonV1,"X-API-INTERNAL":i.a}})},t}();e.a=o},function(t,e,n){"use strict";var r=n(39),i=function(){function t(t){this._requestSender=t}return t.prototype.updateSubscriptions=function(t,e){var n=(void 0===e?{}:e).timeout,i={Accept:r.a.JsonV1};return this._requestSender.post("/api/storefront/subscriptions",{body:t,headers:i,timeout:n})},t}();e.a=i},function(t,e,n){"use strict";var r=n(0),i=n(1),o=n(3),a=n(8),s=n(92),c=n(90),u=n(38),d=function(){function t(t){this._formFieldsRequestSender=t}return t.prototype.loadFormFields=function(t){var e=this;return Object(o.concat)(Object(o.of)(Object(i.createAction)(u.a.LoadFormFieldsRequested)),Object(o.defer)((function(){return Object(r.__awaiter)(e,void 0,void 0,(function(){var e;return Object(r.__generator)(this,(function(n){switch(n.label){case 0:return[4,this._formFieldsRequestSender.loadFields(t)];case 1:return e=n.sent().body,[2,Object(i.createAction)(u.a.LoadFormFieldsSucceeded,e)]}}))}))}))).pipe(Object(a.catchError)((function(t){return Object(c.a)(u.a.LoadFormFieldsFailed,t)})))},Object(r.__decorate)([s.a],t.prototype,"loadFormFields",null),t}();e.a=d},function(t,e,n){"use strict";var r=n(39),i=n(72),o=function(){function t(t){this._requestSender=t}return t.prototype.loadFields=function(t){var e=(void 0===t?{}:t).timeout;return this._requestSender.get("/api/storefront/form-fields",{timeout:e,headers:{Accept:r.a.JsonV1,"X-API-INTERNAL":i.a}})},t}();e.a=o},function(t,e,n){"use strict";var r=n(0),i=n(39),o={include:["cart.lineItems.physicalItems.options","cart.lineItems.digitalItems.options","customer","promotions.banners"].join(",")},a=function(){function t(t){this._requestSender=t}return t.prototype.createAddress=function(t,e,n){var r=(void 0===n?{}:n).timeout,a="/api/storefront/checkouts/"+t+"/billing-address",s={Accept:i.a.JsonV1};return this._requestSender.post(a,{body:e,params:o,headers:s,timeout:r})},t.prototype.updateAddress=function(t,e,n){var a=(void 0===n?{}:n).timeout,s=e.id,c=Object(r.__rest)(e,["id"]),u="/api/storefront/checkouts/"+t+"/billing-address/"+s,d={Accept:i.a.JsonV1};return this._requestSender.put(u,{params:o,body:c,headers:d,timeout:a})},t}();e.a=a},function(t,e,n){"use strict";var r=n(0),i=n(52),o=function(){function t(t){this._factories={},this._instances={},this._options=Object(r.__assign)({defaultToken:"default"},t)}return t.prototype.get=function(t,e){try{return this._getInstance(t||this._options.defaultToken,e||t||this._options.defaultToken)}catch(t){return this._getInstance(this._options.defaultToken,e||this._options.defaultToken)}},t.prototype.register=function(t,e){if(this._hasFactory(t))throw new i.a("'"+t+"' is already registered.");this._factories[t]=e},t.prototype._hasFactory=function(t){return!!this._factories[t]},t.prototype._hasInstance=function(t){return!!this._instances[t]},t.prototype._getInstance=function(t,e){if(!this._hasInstance(e)){var n=this._factories[t];if(!n)throw new i.a("'"+t+"' is not registered.");this._instances[e]=n()}return this._instances[e]},t}();e.a=o},function(t,e,n){"use strict";var r=n(0),i=function(t){function e(e){var n=t.call(this,e||"Not implemented.")||this;return n.name="NotImplementedError",n.type="not_implemented",n}return Object(r.__extends)(e,t),e}(n(22).a);e.a=i},function(t,e,n){"use strict";var r=n(0),i=function(t){function e(e){var n=t.call(this,"Unable to synchronize your checkout details with a third party provider. Please try again later.")||this;return n.error=e,n.name="RemoteCheckoutSynchronizationError",n.type="remote_checkout_synchronization",n}return Object(r.__extends)(e,t),e}(n(22).a);e.a=i},function(t,e,n){"use strict";var r=n(2),i=n(29),o=function(){function t(){}return t.prototype.initialize=function(t,e,n){return Promise.resolve(this._getGooglePayPaymentDataRequest(t,e,n))},t.prototype.teardown=function(){return Promise.resolve()},t.prototype.parseResponse=function(t){var e=t.paymentMethodData,n=e.type,r=e.tokenizationData.token,i=e.info,o=i.cardNetwork,a=i.cardDetails;return Promise.resolve({type:n,nonce:r,details:{cardType:o,lastFour:a}})},t.prototype._getGooglePayPaymentDataRequest=function(t,e,n){var o=t.outstandingBalance,a=t.cart.currency.code,s=e.initializationData,c=s.gatewayMerchantId,u=s.storeCountry,d=s.googleMerchantName,p=s.googleMerchantId;return{apiVersion:2,apiVersionMinor:0,merchantInfo:{authJwt:s.platformToken,merchantId:p,merchantName:d},allowedPaymentMethods:[{type:"CARD",parameters:{allowedAuthMethods:["PAN_ONLY","CRYPTOGRAM_3DS"],allowedCardNetworks:e.supportedCards.map((function(t){return"MC"===t?"MASTERCARD":t})),billingAddressRequired:!0,billingAddressParameters:{format:i.a.Full,phoneNumberRequired:!0}},tokenizationSpecification:{type:"PAYMENT_GATEWAY",parameters:{gateway:"adyen",gatewayMerchantId:c}}}],transactionInfo:{countryCode:u,currencyCode:a,totalPriceStatus:"FINAL",totalPrice:Object(r.round)(o,2).toFixed(2)},emailRequired:!0,shippingAddressRequired:!n,shippingAddressParameters:{phoneNumberRequired:!0}}},t}();e.a=o},function(t,e,n){"use strict";var r=n(45),i=function(){function t(t,e){void 0===e&&(e=window),this._scriptLoader=t,this._window=e}return t.prototype.load=function(t){var e=this;return this._scriptLoader.loadScript("//"+(t?"sandbox.":"")+"masterpass.com/integration/merchant.js").then((function(){if(!e._window.masterpass)throw new r.a;return e._window.masterpass}))},t}();e.a=i},function(t,e,n){"use strict";var r=n(0),i=n(2),o=n(29),a={apiVersion:2,apiVersionMinor:0},s=function(){function t(){}return t.prototype.initialize=function(t,e,n){return Promise.resolve(this._getGooglePaymentDataRequest(t,e,n))},t.prototype.teardown=function(){return Promise.resolve()},t.prototype.parseResponse=function(t){var e=t.paymentMethodData,n=e.type,r=e.tokenizationData.token,i=e.info,o=i.cardNetwork,a=i.cardDetails;return Promise.resolve({type:n,nonce:btoa(r),details:{cardType:o,lastFour:a}})},t.prototype._getGooglePaymentDataRequest=function(t,e,n){var o=t.outstandingBalance,s=t.cart.currency.code,c=e.initializationData,u=c.paymentGatewayId,d=c.storeCountry,p=c.googleMerchantName,h=c.googleMerchantId,l=c.platformToken,m=e.supportedCards,f=this._getPaymentGatewaySpecification(u),_=this._getCardPaymentMethod(f,m);return Object(r.__assign)(Object(r.__assign)({},a),{allowedPaymentMethods:[_],transactionInfo:{totalPriceStatus:"FINAL",totalPrice:Object(i.round)(o,2).toFixed(2),currencyCode:s,countryCode:d},merchantInfo:{merchantName:p,merchantId:h,authJwt:l},emailRequired:!0,shippingAddressRequired:!n,shippingAddressParameters:{phoneNumberRequired:!0}})},t.prototype._getPaymentGatewaySpecification=function(t){return{type:"PAYMENT_GATEWAY",parameters:{gateway:"authorizenet",gatewayMerchantId:t}}},t.prototype._getCardPaymentMethod=function(t,e){return{type:"CARD",parameters:{allowedAuthMethods:["PAN_ONLY","CRYPTOGRAM_3DS"],allowedCardNetworks:e.map((function(t){return"MC"===t?"MASTERCARD":t})),billingAddressRequired:!0,billingAddressParameters:{format:o.a.Full,phoneNumberRequired:!0}},tokenizationSpecification:t}},t}();e.a=s},function(t,e,n){"use strict";var r=n(2),i=n(12),o=n(29),a=function(){function t(t){this._braintreeSDKCreator=t}return t.prototype.initialize=function(t,e,n){var r=this;if(!e.clientToken)throw new i.b(i.a.MissingPaymentMethod);return this._braintreeSDKCreator.initialize(e.clientToken),this._braintreeSDKCreator.getGooglePaymentComponent().then((function(i){return r._googlePaymentInstance=i,r._createGooglePayPayload(t,e.initializationData,n)}))},t.prototype.teardown=function(){return this._braintreeSDKCreator.teardown()},t.prototype.parseResponse=function(t){var e=JSON.parse(t.paymentMethodData.tokenizationData.token).androidPayCards[0];return Promise.resolve({nonce:e.nonce,type:e.type,description:e.description,details:{cardType:e.details.cardType,lastFour:e.details.lastFour,lastTwo:e.details.lastTwo},binData:e.binData})},t.prototype._createGooglePayPayload=function(t,e,n){if(!e.platformToken)throw new i.b(i.a.MissingPaymentMethod);var o={merchantInfo:{authJwt:e.platformToken,merchantName:e.googleMerchantName,merchantId:e.googleMerchantId},transactionInfo:{currencyCode:t.cart.currency.code,totalPriceStatus:"FINAL",totalPrice:Object(r.round)(t.outstandingBalance,2).toFixed(2)},cardRequirements:{billingAddressRequired:!0,billingAddressFormat:"FULL"},shippingAddressRequired:!n,emailRequired:!0,phoneNumberRequired:!0};return this._mapGooglePayBraintreeDataRequestToGooglePayDataRequestV2(this._googlePaymentInstance.createPaymentDataRequest(o))},t.prototype._mapGooglePayBraintreeDataRequestToGooglePayDataRequestV2=function(t){return{apiVersion:2,apiVersionMinor:0,merchantInfo:{authJwt:t.merchantInfo.authJwt,merchantId:t.merchantInfo.merchantId,merchantName:t.merchantInfo.merchantName},allowedPaymentMethods:[{type:"CARD",parameters:{allowedAuthMethods:["PAN_ONLY","CRYPTOGRAM_3DS"],allowedCardNetworks:t.cardRequirements.allowedCardNetworks,billingAddressRequired:!0,billingAddressParameters:{format:o.a.Full,phoneNumberRequired:!0}},tokenizationSpecification:{type:"PAYMENT_GATEWAY",parameters:{gateway:"braintree","braintree:apiVersion":"v1","braintree:authorizationFingerprint":t.paymentMethodTokenizationParameters.parameters["braintree:authorizationFingerprint"],"braintree:merchantId":t.paymentMethodTokenizationParameters.parameters["braintree:merchantId"],"braintree:sdkVersion":t.paymentMethodTokenizationParameters.parameters["braintree:sdkVersion"]}}}],transactionInfo:t.transactionInfo,emailRequired:!0,shippingAddressRequired:t.shippingAddressRequired,shippingAddressParameters:{phoneNumberRequired:t.phoneNumberRequired}}},t}();e.a=a},function(t,e,n){"use strict";var r=n(0),i=n(2),o=n(52),a=n(39),s=n(91),c=n(29),u=function(){function t(t){this._requestSender=t,this._publishableKey="",this._testMode=!0}return t.prototype.initialize=function(t,e,n){return Object(r.__awaiter)(this,void 0,void 0,(function(){return Object(r.__generator)(this,(function(r){return this._publishableKey=e.initializationData.checkoutcomkey,this._testMode=!!e.config.testMode,[2,this._mapGooglePayCheckoutcomDataRequestToGooglePayDataRequestV2(t,e.initializationData,n)]}))}))},t.prototype.teardown=function(){return Promise.resolve()},t.prototype.parseResponse=function(t){return Object(r.__awaiter)(this,void 0,void 0,(function(){var e;return Object(r.__generator)(this,(function(n){switch(n.label){case 0:try{e=JSON.parse(t.paymentMethodData.tokenizationData.token)}catch(t){throw new o.a("Unable to parse response from Google Pay.")}if(!e.signature||!e.protocolVersion||!e.signedMessage)throw new s.a("Unable to parse response from Google Pay.");return[4,this._convertToken(this._testMode,this._publishableKey,e)];case 1:return[2,{nonce:n.sent(),type:"CreditCard",description:t.paymentMethodData.description,details:{cardType:t.paymentMethodData.info.cardNetwork,lastFour:t.paymentMethodData.info.cardDetails}}]}}))}))},t.prototype._convertToken=function(t,e,n){return Object(r.__awaiter)(this,void 0,void 0,(function(){var i;return Object(r.__generator)(this,(function(r){switch(r.label){case 0:if(!n||!n.protocolVersion)throw new s.a("Unable to parse response from GooglePay.");return[4,this._requestCheckoutcomTokenize(t,e,{type:"googlepay",token_data:n})];case 1:if(!(i=r.sent())||!i.token)throw new s.a("Unable to parse response from Checkout.com");return[2,i.token]}}))}))},t.prototype._requestCheckoutcomTokenize=function(t,e,n){return void 0===n&&(n={}),Object(r.__awaiter)(this,void 0,void 0,(function(){var i;return Object(r.__generator)(this,(function(r){switch(r.label){case 0:return"https://api.sandbox.checkout.com/tokens","https://api.checkout.com/tokens",i=t?"https://api.sandbox.checkout.com/tokens":"https://api.checkout.com/tokens",[4,this._requestSender.post(i,{credentials:!1,body:n,headers:{"Content-Type":a.a.Json,Authorization:e,"X-XSRF-TOKEN":null}})];case 1:return[2,r.sent().body]}}))}))},t.prototype._mapGooglePayCheckoutcomDataRequestToGooglePayDataRequestV2=function(t,e,n){return{apiVersion:2,apiVersionMinor:0,merchantInfo:{authJwt:e.platformToken,merchantId:e.googleMerchantId,merchantName:e.googleMerchantName},allowedPaymentMethods:[{type:"CARD",parameters:{allowedAuthMethods:["PAN_ONLY","CRYPTOGRAM_3DS"],allowedCardNetworks:["AMEX","DISCOVER","JCB","MASTERCARD","VISA"],billingAddressRequired:!0,billingAddressParameters:{format:c.a.Full,phoneNumberRequired:!0}},tokenizationSpecification:{type:"PAYMENT_GATEWAY",parameters:{gateway:"checkoutltd",gatewayMerchantId:e.checkoutcomkey}}}],transactionInfo:{currencyCode:t.cart.currency.code,totalPriceStatus:"FINAL",totalPrice:Object(i.round)(t.outstandingBalance,2).toFixed(2)},emailRequired:!0,shippingAddressRequired:!n,shippingAddressParameters:{phoneNumberRequired:!0}}},t}();e.a=u},function(t,e,n){"use strict";var r=n(2),i=n(52),o=n(29),a=function(){function t(){}return t.prototype.initialize=function(t,e,n){return Promise.resolve(this._getGooglePayPaymentDataRequest(t,e,n))},t.prototype.teardown=function(){return Promise.resolve()},t.prototype.parseResponse=function(t){try{var e=JSON.parse(t.paymentMethodData.tokenizationData.token);return Promise.resolve({nonce:e.id,type:e.type,details:{cardType:e.card.brand,lastFour:e.card.last4}})}catch(t){throw new i.a("Unable to parse response from Google Pay.")}},t.prototype._getGooglePayPaymentDataRequest=function(t,e,n){var i=t.outstandingBalance,a=t.cart.currency.code,s=e.initializationData,c=s.googleMerchantName,u=s.googleMerchantId,d=s.platformToken,p=s.stripeVersion,h=s.stripePublishableKey,l=s.stripeConnectedAccount;return{apiVersion:2,apiVersionMinor:0,merchantInfo:{authJwt:d,merchantId:u,merchantName:c},allowedPaymentMethods:[{type:"CARD",parameters:{allowedAuthMethods:["PAN_ONLY","CRYPTOGRAM_3DS"],allowedCardNetworks:e.supportedCards.map((function(t){return"MC"===t?"MASTERCARD":t})),billingAddressRequired:!0,billingAddressParameters:{format:o.a.Full,phoneNumberRequired:!0}},tokenizationSpecification:{type:"PAYMENT_GATEWAY",parameters:{gateway:"stripe","stripe:version":p,"stripe:publishableKey":h+"/"+l}}}],transactionInfo:{currencyCode:a,totalPriceStatus:"FINAL",totalPrice:Object(r.round)(i,2).toFixed(2)},emailRequired:!0,shippingAddressRequired:!n,shippingAddressParameters:{phoneNumberRequired:!0}}},t}();e.a=a},function(t,e,n){"use strict";var r=n(0),i=function(t){function e(e){var n=t.call(this,e||"Unable to proceed due to invalid configuration provided for the hosted payment form.")||this;return n.name="InvalidHostedFormConfigError",n.type="invalid_hosted_form_config",n}return Object(r.__extends)(e,t),e}(n(22).a);e.a=i},function(t,e,n){"use strict";var r=n(0),i=n(2),o=function(t){function e(e){var n=t.call(this,Object(r.__spreadArrays)(["Unable to proceed due to invalid user input values"],Object(i.flatMap)(Object(i.values)(e),(function(t){return Object(i.map)(t,(function(t){return t.message}))}))).join(". "))||this;return n.errors=e,n.name="InvalidHostedFormValueError",n.type="invalid_hosted_form_value",n}return Object(r.__extends)(e,t),e}(n(22).a);e.a=o},function(t,e,n){"use strict";var r=n(0),i=n(45),o=function(){function t(t){this._scriptLoader=t,this._window=window}return t.prototype.loadPaypal=function(t){return void 0===t&&(t=""),Object(r.__awaiter)(this,void 0,void 0,(function(){var e,n;return Object(r.__generator)(this,(function(r){switch(r.label){case 0:return e="//www.paypalobjects.com/api/checkout.min.js",n={async:!0,attributes:{"data-merchant-id":t}},t?[4,this._scriptLoader.loadScript(e,n)]:[3,2];case 1:return r.sent(),[3,4];case 2:return[4,this._scriptLoader.loadScript(e)];case 3:r.sent(),r.label=4;case 4:if(!this._window.paypal)throw new i.a;return[2,this._window.paypal]}}))}))},t}();e.a=o},function(t,e,n){"use strict";function r(t,e){return(0,n(126).iframeResizer)(t,e)}function i(){n(127)}n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return i}))},,,function(t,e,n){"use strict";n.r(e);var r=n(46),i=n(31),o=n(201),a=n(178),s=n(86),c=function(){function t(){}return t.prototype.clearError=function(t){return{type:s.a.ClearError,payload:t}},t}();function u(){try{return "development"||false}catch(t){return"development"}}var d=n(0),p=function(){function t(t){this._console=t}return t.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._logToConsole.apply(this,Object(d.__spreadArrays)(["log"],t))},t.prototype.info=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._logToConsole.apply(this,Object(d.__spreadArrays)(["info"],t))},t.prototype.warn=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._logToConsole.apply(this,Object(d.__spreadArrays)(["warn"],t))},t.prototype.error=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._logToConsole.apply(this,Object(d.__spreadArrays)(["error"],t))},t.prototype.debug=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._logToConsole.apply(this,Object(d.__spreadArrays)(["debug"],t))},t.prototype._logToConsole=function(t){for(var e,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];this._console&&this._console[t]&&(e=this._console[t]).call.apply(e,Object(d.__spreadArrays)([this._console],n))},t}(),h=function(){function t(){}return t.prototype.log=function(){},t.prototype.info=function(){},t.prototype.warn=function(){},t.prototype.error=function(){},t.prototype.debug=function(){},t}();var l,m=(void 0===(l="test"!==u())&&(l=!0),l?new p(console):new h);function f(){return m}var _=n(173),y=n(174),g=n(1),b=n(3),v=n(12),C=n(21),O=function(){function t(t){this._couponRequestSender=t}return t.prototype.applyCoupon=function(t,e){var n=this;return function(r){return b.Observable.create((function(i){var o=r.getState().checkout.getCheckout();if(!o)throw new v.b(v.a.MissingCheckout);i.next(Object(g.createAction)(C.a.ApplyCouponRequested)),n._couponRequestSender.applyCoupon(o.id,t,e).then((function(t){var e=t.body;i.next(Object(g.createAction)(C.a.ApplyCouponSucceeded,e)),i.complete()})).catch((function(t){i.error(Object(g.createErrorAction)(C.a.ApplyCouponFailed,t))}))}))}},t.prototype.removeCoupon=function(t,e){var n=this;return function(r){return b.Observable.create((function(i){var o=r.getState().checkout.getCheckout();if(!o)throw new v.b(v.a.MissingCheckout);i.next(Object(g.createAction)(C.a.RemoveCouponRequested)),n._couponRequestSender.removeCoupon(o.id,t,e).then((function(t){var e=t.body;i.next(Object(g.createAction)(C.a.RemoveCouponSucceeded,e)),i.complete()})).catch((function(t){i.error(Object(g.createErrorAction)(C.a.RemoveCouponFailed,t))}))}))}},t}(),S=n(89),w=n(138),I=n(39),A=n(63),E=function(){function t(t){this._requestSender=t}return t.prototype.applyCoupon=function(t,e,n){var r=(void 0===n?{}:n).timeout,i="/api/storefront/checkouts/"+t+"/coupons",o={Accept:I.a.JsonV1};return this._requestSender.post(i,{headers:o,timeout:r,params:{include:Object(A.a)(Object(d.__spreadArrays)(S.a,[w.a.AvailableShippingOptions]))},body:{couponCode:e}})},t.prototype.removeCoupon=function(t,e,n){var r=(void 0===n?{}:n).timeout,i="/api/storefront/checkouts/"+t+"/coupons/"+e,o={Accept:I.a.JsonV1};return this._requestSender.delete(i,{headers:o,timeout:r,params:{include:Object(A.a)(Object(d.__spreadArrays)(S.a,[w.a.AvailableShippingOptions]))}})},t}(),P=n(25),j=function(){function t(t){this._giftCertificateRequestSender=t}return t.prototype.applyGiftCertificate=function(t,e){var n=this;return function(r){return b.Observable.create((function(i){var o=r.getState().checkout.getCheckout();if(!o)throw new v.b(v.a.MissingCheckout);i.next(Object(g.createAction)(P.a.ApplyGiftCertificateRequested)),n._giftCertificateRequestSender.applyGiftCertificate(o.id,t,e).then((function(t){var e=t.body;i.next(Object(g.createAction)(P.a.ApplyGiftCertificateSucceeded,e)),i.complete()})).catch((function(t){i.error(Object(g.createErrorAction)(P.a.ApplyGiftCertificateFailed,t))}))}))}},t.prototype.removeGiftCertificate=function(t,e){var n=this;return function(r){return b.Observable.create((function(i){var o=r.getState().checkout.getCheckout();if(!o)throw new v.b(v.a.MissingCheckout);i.next(Object(g.createAction)(P.a.RemoveGiftCertificateRequested)),n._giftCertificateRequestSender.removeGiftCertificate(o.id,t,e).then((function(t){var e=t.body;i.next(Object(g.createAction)(P.a.RemoveGiftCertificateSucceeded,e)),i.complete()})).catch((function(t){i.error(Object(g.createErrorAction)(P.a.RemoveGiftCertificateFailed,t))}))}))}},t}(),k=function(){function t(t){this._requestSender=t}return t.prototype.applyGiftCertificate=function(t,e,n){var r=(void 0===n?{}:n).timeout,i="/api/storefront/checkouts/"+t+"/gift-certificates",o={Accept:I.a.JsonV1};return this._requestSender.post(i,{headers:o,timeout:r,params:{include:Object(A.a)(S.a)},body:{giftCertificateCode:e}})},t.prototype.removeGiftCertificate=function(t,e,n){var r=(void 0===n?{}:n).timeout,i="/api/storefront/checkouts/"+t+"/gift-certificates/"+e,o={Accept:I.a.JsonV1};return this._requestSender.delete(i,{headers:o,timeout:r,params:{include:Object(A.a)(S.a)}})},t}(),M=n(8),T=n(90);function R(t){var e=t;return"object"==typeof e&&"object"==typeof e.payload&&"string"==typeof e.payload.token}var D=n(34),z=function(){function t(t,e,n){this._customerRequestSender=t,this._checkoutActionCreator=e,this._spamProtectionActionCreator=n}return t.prototype.createCustomer=function(t,e){var n=this;return function(r){var i=r.getState().config.getStoreConfigOrThrow().checkoutSettings.isStorefrontSpamProtectionEnabled,o=function(i){return Object(b.from)(n._customerRequestSender.createAccount(Object(d.__assign)(Object(d.__assign)({},t),{token:i}),e)).pipe(Object(M.switchMap)((function(){return Object(b.concat)(n._checkoutActionCreator.loadCurrentCheckout(e)(r),Object(b.of)(Object(g.createAction)(D.a.CreateCustomerSucceeded)))})))};return Object(b.concat)(Object(b.of)(Object(g.createAction)(D.a.CreateCustomerRequested)),i?Object(b.from)(n._spamProtectionActionCreator.execute()(r)).pipe(Object(M.switchMap)((function(t){var e;return R(t)?Object(b.concat)(Object(b.of)(t),o(null===(e=t.payload)||void 0===e?void 0:e.token)):Object(b.of)(t)}))):o()).pipe(Object(M.catchError)((function(t){return Object(T.a)(D.a.CreateCustomerFailed,t)})))}},t.prototype.signInCustomer=function(t,e){var n=this;return function(r){return Object(b.concat)(Object(b.of)(Object(g.createAction)(D.a.SignInCustomerRequested)),Object(b.from)(n._customerRequestSender.signInCustomer(t,e)).pipe(Object(M.switchMap)((function(t){var i=t.body;return Object(b.concat)(n._checkoutActionCreator.loadCurrentCheckout(e)(r),Object(b.of)(Object(g.createAction)(D.a.SignInCustomerSucceeded,i.data)))})))).pipe(Object(M.catchError)((function(t){return Object(T.a)(D.a.SignInCustomerFailed,t)})))}},t.prototype.signOutCustomer=function(t){var e=this;return function(n){return Object(b.concat)(Object(b.of)(Object(g.createAction)(D.a.SignOutCustomerRequested)),Object(b.from)(e._customerRequestSender.signOutCustomer(t)).pipe(Object(M.switchMap)((function(r){var i=r.body;return Object(b.concat)(e._checkoutActionCreator.loadCurrentCheckout(t)(n),Object(b.of)(Object(g.createAction)(D.a.SignOutCustomerSucceeded,i.data)))})))).pipe(Object(M.catchError)((function(t){return Object(T.a)(D.a.SignOutCustomerFailed,t)})))}},t}(),L=function(){function t(t){this._requestSender=t}return t.prototype.createAccount=function(t,e){var n=(void 0===e?{}:e).timeout;return this._requestSender.post("/api/storefront/customer",{timeout:n,body:t})},t.prototype.signInCustomer=function(t,e){var n=(void 0===e?{}:e).timeout;return this._requestSender.post("/internalapi/v1/checkout/customer",{timeout:n,body:t})},t.prototype.signOutCustomer=function(t){var e=(void 0===t?{}:t).timeout;return this._requestSender.delete("/internalapi/v1/checkout/customer",{timeout:e})},t}(),N=n(10),F=function(){function t(t){this._strategyRegistry=t}return t.prototype.signIn=function(t,e){var n=this;return b.Observable.create((function(r){var i=e&&e.methodId,o={methodId:i};r.next(Object(g.createAction)(N.a.SignInRequested,void 0,o)),n._strategyRegistry.get(i).signIn(t,e).then((function(){r.next(Object(g.createAction)(N.a.SignInSucceeded,void 0,o)),r.complete()})).catch((function(t){r.error(Object(g.createErrorAction)(N.a.SignInFailed,t,o))}))}))},t.prototype.signOut=function(t){var e=this;return b.Observable.create((function(n){var r=t&&t.methodId,i={methodId:r};n.next(Object(g.createAction)(N.a.SignOutRequested,void 0,i)),e._strategyRegistry.get(r).signOut(t).then((function(){n.next(Object(g.createAction)(N.a.SignOutSucceeded,void 0,i)),n.complete()})).catch((function(t){n.error(Object(g.createErrorAction)(N.a.SignOutFailed,t,i))}))}))},t.prototype.initialize=function(t){var e=this;return function(n){return b.Observable.create((function(r){var i=n.getState(),o=t&&t.methodId,a={methodId:o};if(o&&i.customerStrategies.isInitialized(o))return r.complete();r.next(Object(g.createAction)(N.a.InitializeRequested,void 0,a)),e._strategyRegistry.get(o).initialize(t).then((function(){r.next(Object(g.createAction)(N.a.InitializeSucceeded,void 0,a)),r.complete()})).catch((function(t){r.error(Object(g.createErrorAction)(N.a.InitializeFailed,t,a))}))}))}},t.prototype.deinitialize=function(t){var e=this;return function(n){return b.Observable.create((function(r){var i=n.getState(),o=t&&t.methodId,a={methodId:o};if(o&&!i.customerStrategies.isInitialized(o))return r.complete();r.next(Object(g.createAction)(N.a.DeinitializeRequested,void 0,a)),e._strategyRegistry.get(o).deinitialize(t).then((function(){r.next(Object(g.createAction)(N.a.DeinitializeSucceeded,void 0,a)),r.complete()})).catch((function(t){r.error(Object(g.createErrorAction)(N.a.DeinitializeFailed,t,a))}))}))}},t.prototype.widgetInteraction=function(t,e){return b.Observable.create((function(n){var r={methodId:e&&e.methodId};n.next(Object(g.createAction)(N.a.WidgetInteractionStarted,void 0,r)),t().then((function(){n.next(Object(g.createAction)(N.a.WidgetInteractionFinished,void 0,r)),n.complete()})).catch((function(t){n.error(Object(g.createErrorAction)(N.a.WidgetInteractionFailed,t,r))}))}))},t}(),q=n(71),U=n(137),x=n(129),B=n(179),G=n(176),V=n(177),Y=n(87),H=n(88),W=function(){function t(t){this._scriptLoader=t,this._window=window}return t.prototype.loadWidget=function(t,e){var n=t.config,r=n.merchantId,i=n.testMode,o=t.initializationData,a=(void 0===o?{}:o).region,s=void 0===a?"us":a,c="https://"+("us"!==s.toLowerCase()?"static-eu.":"static-na.")+"payments-amazon.com/OffAmazonPayments/"+s.toLowerCase()+"/"+(i?"sandbox/":"")+("us"!==s.toLowerCase()?"lpa/":"")+"js/Widgets.js?sellerId="+r;return this._configureWidget(t,e),this._scriptLoader.loadScript(c)},t.prototype._configureWidget=function(t,e){var n=this,r=function(){n._window.amazon&&(n._window.amazon.Login.setClientId(t.initializationData.clientId),n._window.amazon.Login.setUseCookie(!0))};this._window.amazon&&this._window.amazon.Login?r():this._window.onAmazonLoginReady=r,this._window.OffAmazonPayments&&e?e():this._window.onAmazonPaymentsReady=e},t}(),K=n(197),J=n(104),Z=n(105),Q=function(){function t(t,e){this._braintreeSDKCreator=t,this._requestSender=e}return t.prototype.initialize=function(t,e){return this._braintreeSDKCreator.initialize(t),this._braintreeSDKCreator.getVisaCheckout().then((function(t){return t.createInitOptions({settings:{locale:e.locale,shipping:{collectShipping:e.collectShipping}},paymentRequest:{currencyCode:e.currencyCode,subtotal:String(e.subtotal)}})}))},t.prototype.deinitialize=function(){return this._braintreeSDKCreator.teardown()},t.prototype.handleSuccess=function(t,e,n){var r=this;return this._braintreeSDKCreator.getVisaCheckout().then((function(i){return Promise.all([i.tokenize(t),r._braintreeSDKCreator.getDataCollector()]).then((function(t){var i=t[0],o=t[1],a=i.shippingAddress,s=void 0===a?r._toVisaCheckoutAddress(e):a,c=i.billingAddress,u=void 0===c?r._toVisaCheckoutAddress(n):c;return r._postForm(Object(d.__assign)(Object(d.__assign)({},i),{shippingAddress:s,billingAddress:u}),o)}))}))},t.prototype._postForm=function(t,e){var n=t.userData,r=t.billingAddress,i=t.shippingAddress,o=t.details,a=n.userEmail,s=e.deviceData;return this._requestSender.post("/checkout.php",{headers:{Accept:"text/html","Content-Type":"application/x-www-form-urlencoded"},body:{payment_type:t.type,nonce:t.nonce,provider:"braintreevisacheckout",action:"set_external_checkout",device_data:s,card_information:this._getCardInformation(o),billing_address:this._getAddress(a,r),shipping_address:this._getAddress(a,i)}})},t.prototype._toVisaCheckoutAddress=function(t){return t?{firstName:t.firstName,lastName:t.lastName,phoneNumber:t.phone,streetAddress:t.address1,extendedAddress:t.address2,locality:t.city,region:t.stateOrProvinceCode,countryCode:t.countryCode,postalCode:t.postalCode}:{}},t.prototype._getAddress=function(t,e){return void 0===e&&(e={}),{email:t,first_name:e.firstName,last_name:e.lastName,phone_number:e.phoneNumber,address_line_1:e.streetAddress,address_line_2:e.extendedAddress,city:e.locality,state:e.region,country_code:e.countryCode,postal_code:e.postalCode}},t.prototype._getCardInformation=function(t){return{type:t.cardType,number:t.lastTwo}},t}();function X(t,e){var n=new J.a(t),r=new Z.a(n);return new Q(r,e)}var $=n(45),tt=function(){function t(t,e){void 0===e&&(e=window),this._scriptLoader=t,this._window=e}return t.prototype.load=function(t){var e=this;return this._scriptLoader.loadScript("//"+(t?"sandbox-":"")+"assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js").then((function(){if(!e._window.V)throw new $.a;return e._window.V}))},t}(),et=function(){function t(t,e){void 0===e&&(e=window),this._scriptLoader=t,this._window=e}return t.prototype.load=function(t){var e=this;return this._scriptLoader.loadScript("//pwc"+(t?"psb":"")+".chase.com/pwc/checkout/js/v20170521/list.action?type=raw&applId=PWC&channelId=CWC&version=1").then((function(){if(!e._window.JPMC)throw new $.a;return e._window.JPMC}))},t}(),nt=n(198),rt=n(182),it=n(184),ot=n(185),at=n(186),st=n(187),ct=n(183),ut=function(){function t(t){this._requestSender=t}return t.prototype.initializeBilling=function(t,e,n){var r=(void 0===n?{}:n).timeout,i="/remote-checkout/"+t+"/billing";return this._requestSender.get(i,{params:e,timeout:r})},t.prototype.initializeShipping=function(t,e,n){var r=(void 0===n?{}:n).timeout,i="/remote-checkout/"+t+"/shipping";return this._requestSender.get(i,{params:e,timeout:r})},t.prototype.initializePayment=function(t,e,n){var r=(void 0===n?{}:n).timeout,i="/remote-checkout/"+t+"/payment";return this._requestSender.get(i,{params:e,timeout:r})},t.prototype.loadSettings=function(t,e){var n=(void 0===e?{}:e).timeout,r="/remote-checkout/"+t+"/settings";return this._requestSender.get(r,{timeout:n})},t.prototype.signOut=function(t,e){var n=(void 0===e?{}:e).timeout,r="/remote-checkout/"+t+"/signout";return this._requestSender.get(r,{timeout:n})},t.prototype.generateToken=function(t){var e=(void 0===t?{}:t).timeout;return this._requestSender.get("/remote-checkout-token",{timeout:e})},t.prototype.trackAuthorizationEvent=function(t){var e=(void 0===t?{}:t).timeout;return this._requestSender.post("/remote-checkout/events/shopper-checkout-service-provider-authorization-requested",{timeout:e})},t}(),dt=n(27),pt=function(){function t(t){this._remoteCheckoutRequestSender=t}return t.prototype.initializeBilling=function(t,e,n){var r=this;return b.Observable.create((function(i){i.next(Object(g.createAction)(dt.a.InitializeRemoteBillingRequested,void 0,{methodId:t})),r._remoteCheckoutRequestSender.initializeBilling(t,e,n).then((function(e){var n=e.body,r=void 0===n?{}:n;i.next(Object(g.createAction)(dt.a.InitializeRemoteBillingSucceeded,r,{methodId:t})),i.complete()})).catch((function(e){i.error(Object(g.createErrorAction)(dt.a.InitializeRemoteBillingFailed,e,{methodId:t}))}))}))},t.prototype.initializeShipping=function(t,e,n){var r=this;return b.Observable.create((function(i){i.next(Object(g.createAction)(dt.a.InitializeRemoteShippingRequested,void 0,{methodId:t})),r._remoteCheckoutRequestSender.initializeShipping(t,e,n).then((function(e){var n=e.body,r=void 0===n?{}:n;i.next(Object(g.createAction)(dt.a.InitializeRemoteShippingSucceeded,r,{methodId:t})),i.complete()})).catch((function(e){i.error(Object(g.createErrorAction)(dt.a.InitializeRemoteShippingFailed,e,{methodId:t}))}))}))},t.prototype.initializePayment=function(t,e,n){var r=this;return b.Observable.create((function(i){i.next(Object(g.createAction)(dt.a.InitializeRemotePaymentRequested,void 0,{methodId:t})),r._remoteCheckoutRequestSender.initializePayment(t,e,n).then((function(e){var n=e.body,r=void 0===n?{}:n;i.next(Object(g.createAction)(dt.a.InitializeRemotePaymentSucceeded,r,{methodId:t})),i.complete()})).catch((function(e){i.error(Object(g.createErrorAction)(dt.a.InitializeRemotePaymentFailed,e,{methodId:t}))}))}))},t.prototype.loadSettings=function(t,e){var n=this;return b.Observable.create((function(r){r.next(Object(g.createAction)(dt.a.LoadRemoteSettingsRequested,void 0,{methodId:t})),n._remoteCheckoutRequestSender.loadSettings(t,e).then((function(e){var n=e.body;r.next(Object(g.createAction)(dt.a.LoadRemoteSettingsSucceeded,n,{methodId:t})),r.complete()})).catch((function(e){r.error(Object(g.createErrorAction)(dt.a.LoadRemoteSettingsFailed,e,{methodId:t}))}))}))},t.prototype.signOut=function(t,e){var n=this;return b.Observable.create((function(r){r.next(Object(g.createAction)(dt.a.SignOutRemoteCustomerRequested,void 0,{methodId:t})),n._remoteCheckoutRequestSender.signOut(t,e).then((function(){r.next(Object(g.createAction)(dt.a.SignOutRemoteCustomerSucceeded,void 0,{methodId:t})),r.complete()})).catch((function(e){r.error(Object(g.createErrorAction)(dt.a.SignOutRemoteCustomerFailed,e,{methodId:t}))}))}))},t.prototype.updateCheckout=function(t,e){return Object(g.createAction)(dt.a.UpdateRemoteCheckout,e,{methodId:t})},t}(),ht=n(22),lt=function(t){function e(){var e=t.call(this,"You haven't complete our spam protection challenge. Please try again.")||this;return e.name="SpamProtectionChallengeNotCompletedError",e.type="spam_protection_challenge_not_completed",e}return Object(d.__extends)(e,t),e}(ht.a),mt=function(t){function e(){var e=t.call(this,"We were not able to complete your spam protection verification. Please try again.")||this;return e.name="SpamProtectionFailedError",e.type="spam_protection_failed",e}return Object(d.__extends)(e,t),e}(ht.a),ft=n(65),_t=function(){function t(t,e){this._googleRecaptcha=t,this._requestSender=e}return t.prototype.initialize=function(t){var e=this;return function(n){return Object(b.concat)(Object(b.of)(Object(g.createAction)(ft.a.InitializeRequested,void 0)),Object(b.defer)((function(){return Object(d.__awaiter)(e,void 0,void 0,(function(){var e,r,i,o,a;return Object(d.__generator)(this,(function(s){switch(s.label){case 0:return e=t?t.containerId:"spamProtectionContainer",t||document.getElementById(e)||((r=document.createElement("div")).setAttribute("id",e),document.body.appendChild(r)),i=n.getState(),o=i.config.getStoreConfigOrThrow(),a=o.checkoutSettings.googleRecaptchaSitekey,[4,this._googleRecaptcha.load(e,a)];case 1:return s.sent(),[2,Object(g.createAction)(ft.a.InitializeSucceeded)]}}))}))}))).pipe(Object(M.catchError)((function(t){return Object(T.a)(ft.a.InitializeFailed,t)})))}},t.prototype.verifyCheckoutSpamProtection=function(){var t=this;return function(e){return Object(b.defer)((function(){var n=e.getState().checkout.getCheckout();if(!n)throw new v.b(v.a.MissingCheckout);return Object(b.concat)(Object(b.of)(Object(g.createAction)(ft.a.VerifyCheckoutRequested)),Object(b.from)(t.execute()(e)).pipe(Object(M.switchMap)((function(e){return R(e)&&e.payload?Object(b.from)(t._requestSender.validate(n.id,e.payload.token)).pipe(Object(M.switchMap)((function(t){var n=t.body;return Object(b.concat)(Object(b.of)(e),Object(b.of)(Object(g.createAction)(ft.a.VerifyCheckoutSucceeded,n)))}))):Object(b.of)(e)})))).pipe(Object(M.catchError)((function(t){return Object(T.a)(ft.a.VerifyCheckoutFailed,t)})))}))}},t.prototype.execute=function(){var t=this;return function(e){return Object(b.concat)(Object(b.of)(Object(g.createAction)(ft.a.ExecuteRequested)),t.initialize()(e),t._googleRecaptcha.execute().pipe(Object(M.take)(1)).pipe(Object(M.switchMap)((function(e){var n=e.error,r=e.token;return Object(d.__awaiter)(t,void 0,void 0,(function(){return Object(d.__generator)(this,(function(t){if(n instanceof lt)throw n;if(n||!r)throw new mt;return[2,Object(g.createAction)(ft.a.ExecuteSucceeded,{token:r})]}))}))})))).pipe(Object(M.catchError)((function(t){return Object(T.a)(ft.a.ExecuteFailed,t)})))}},t}(),yt=function(){function t(t){void 0===t&&(t=window),this._window=t}return t.prototype.create=function(t){return new this._window.MutationObserver(t)},t}(),gt=n(5),bt=n(111),vt=function(t){function e(){var e=t.call(this,"Spam protection is not loaded. Please try again.")||this;return e.name="SpamProtectionNotLoadedError",e.type="spam_protection_failed",e}return Object(d.__extends)(e,t),e}(ht.a),Ct=function(){function t(t,e){var n=this;this.googleRecaptchaScriptLoader=t,this.mutationObserverFactory=e,this._memoized=Object(gt.memoize)((function(t,e,r){var i=new b.Subject;if(!r)throw new Error;return n._widgetId=t.render(r.id,{sitekey:e,size:"invisible",callback:function(){i.next({token:t.getResponse(n._widgetId)}),t.reset(n._widgetId)},"error-callback":function(){i.next({error:new mt})}}),i}),{isEqual:function(t,e){return t===e}})}return t.prototype.load=function(t,e){var n=this;return this.googleRecaptchaScriptLoader.load().then((function(r){n._event$=n._memoized(r,e,document.getElementById(t)),n._recaptcha=r}))},t.prototype.execute=function(){var t=this;return Object(b.defer)((function(){var e=t._event$,n=t._recaptcha;if(!e||!n)throw new bt.b(bt.a.SpamProtectionNotInitialized);return Object(b.defer)((function(){var t=document.querySelector('iframe[src*="bframe"]');return t?Object(b.of)(t):Object(b.throwError)(new vt)})).pipe(Object(M.retryWhen)((function(t){return t.pipe(Object(M.delay)(250),Object(M.switchMap)((function(t,e){return e<28?Object(b.of)(t):Object(b.throwError)(t)})))})),Object(M.switchMap)((function(r){return t._watchRecaptchaChallengeWindow(e,r),n.execute(t._widgetId),e})),Object(M.catchError)((function(t){return Object(b.of)({error:t})})))}))},t.prototype._watchRecaptchaChallengeWindow=function(t,e){var n=e.parentElement;if(!n)throw new vt;var r=n.parentElement;if(!r)throw new vt;this.mutationObserverFactory.create((function(){"hidden"===r.style.visibility&&t.next({error:new lt})})).observe(r,{attributes:!0,attributeFilter:["style"]})},t}(),Ot=function(){function t(t,e){void 0===e&&(e=window),this._scriptLoader=t,this._window=e}return t.prototype.load=function(){return this._loadPromise||(this._loadPromise=this._loadScript()),this._loadPromise},t.prototype._loadScript=function(){var t=this,e=["onload=initRecaptcha","render=explicit"].join("&");return new Promise((function(n,r){t._window.initRecaptcha=function(){return n(t._window.grecaptcha)},t._scriptLoader.loadScript("//www.google.com/recaptcha/api.js?"+e).catch((function(e){t._loadPromise=void 0,r(e)}))}))},t}();function St(t){return new Ct(new Ot(t),new yt)}var wt=function(){function t(t){this._requestSender=t}return t.prototype.validate=function(t,e,n){var r=(void 0===n?{}:n).timeout,i="/api/storefront/checkouts/"+t+"/spam-protection",o={Accept:I.a.JsonV1};return this._requestSender.post(i,{body:{token:e},headers:o,timeout:r})},t}(),It=n(52),At=n(180),Et=function(){function t(t,e,n,r,i){this._store=t,this._paymentMethodActionCreator=e,this._remoteCheckoutActionCreator=n,this._remoteCheckoutRequestSender=r,this._scriptLoader=i,this._window=window}return t.prototype.initialize=function(t){var e=this,n=t.amazon,r=t.methodId;if(!n||!r)throw new It.a('Unable to proceed because "options.amazon" argument is not provided.');return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(r)).then((function(t){return new Promise((function(i,o){if(e._paymentMethod=t.paymentMethods.getPaymentMethod(r),!e._paymentMethod)throw new v.b(v.a.MissingPaymentMethod);var a=n.onError,s=void 0===a?function(){}:a;e._scriptLoader.loadWidget(e._paymentMethod,(function(){e._createSignInButton(Object(d.__assign)(Object(d.__assign)({},n),{onError:function(t){o(t),s(t)}})),i()})).catch(o)}))})).then((function(){return e._store.getState()}))},t.prototype.deinitialize=function(){return this._paymentMethod=void 0,Promise.resolve(this._store.getState())},t.prototype.signIn=function(){throw new At.a('In order to sign in via AmazonPay, the shopper must click on "Login with Amazon" button.')},t.prototype.signOut=function(t){var e=this._store.getState().payment.getPaymentId();return e?this._store.dispatch(this._remoteCheckoutActionCreator.signOut(e.providerId,t)):Promise.resolve(this._store.getState())},t.prototype._createSignInButton=function(t){var e=this;if(!this._paymentMethod||!this._window.OffAmazonPayments)throw new bt.b(bt.a.CustomerNotInitialized);if(!this._paymentMethod.config.merchantId)throw new v.b(v.a.MissingPaymentMethod);var n=this._paymentMethod.initializationData;return new this._window.OffAmazonPayments.Button(t.container,this._paymentMethod.config.merchantId,{color:t.color||"Gold",size:t.size||"small",type:"PwA",useAmazonAddressBook:!0,onError:t.onError,authorization:function(){e._handleAuthorization(n)}})},t.prototype._handleAuthorization=function(t){var e=this;this._remoteCheckoutRequestSender.generateToken().then((function(n){var r=n.body;if(!e._window.amazon)throw new bt.b(bt.a.ShippingNotInitialized);e._window.amazon.Login.authorize({popup:!1,scope:"payments:shipping_address payments:billing_address payments:widget profile",state:""+t.tokenPrefix+r.token},t.redirectUrl),e._remoteCheckoutRequestSender.trackAuthorizationEvent()}))},t}(),Pt=n(103),jt=n(202),kt=function(){function t(t,e,n,r){this._store=t,this._paymentMethodActionCreator=e,this._remoteCheckoutActionCreator=n,this._amazonPayV2PaymentProcessor=r}return t.prototype.initialize=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i;return Object(d.__generator)(this,(function(o){switch(o.label){case 0:if(e=t.methodId,n=t.amazonpay,!e||!n)throw new It.a('Unable to proceed because "options.methodId" or "options.amazonpay" argument is not provided.');return[4,this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(e))];case 1:return r=o.sent(),i=r.paymentMethods.getPaymentMethodOrThrow(e),[4,this._amazonPayV2PaymentProcessor.initialize(i)];case 2:return o.sent(),this._walletButton=this._createSignInButton(n.container,e),[2,this._store.getState()]}}))}))},t.prototype.deinitialize=function(){return this._walletButton&&this._walletButton.parentNode&&(this._walletButton.parentNode.removeChild(this._walletButton),this._walletButton=void 0),Promise.resolve(this._store.getState())},t.prototype.signIn=function(){throw new At.a('In order to sign in via Amazon, the shopper must click on "Amazon Pay" button.')},t.prototype.signOut=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n;return Object(d.__generator)(this,(function(r){switch(r.label){case 0:return e=this._store.getState(),(n=e.payment.getPaymentId())?[4,this._amazonPayV2PaymentProcessor.signout()]:[2,Promise.resolve(this._store.getState())];case 1:return r.sent(),[2,this._store.dispatch(this._remoteCheckoutActionCreator.signOut(n.providerId,t))]}}))}))},t.prototype._createSignInButton=function(t,e){var n=document.getElementById(t);if(!n)throw new It.a("Unable to create sign-in button without valid container ID.");var r=this._store.getState(),i=r.paymentMethods.getPaymentMethod(e),o=r.config.getStoreConfig(),a=r.cart.getCart();if(!o)throw new v.b(v.a.MissingCheckoutConfig);if(!i)throw new v.b(v.a.MissingPaymentMethod);var s=i.config,c=s.merchantId,u=s.testMode,d=i.initializationData,p=d.checkoutLanguage,h=d.ledgerCurrency,l=d.checkoutSessionMethod,m=d.extractAmazonCheckoutSessionId;if(!c)throw new It.a("Unable to create sign-in button without valid merchant ID.");var f={merchantId:c,sandbox:!!u,checkoutLanguage:p,ledgerCurrency:h,productType:a&&0===Object(jt.a)(a)?Pt.a.PayOnly:Pt.a.PayAndShip,createCheckoutSession:{method:l,url:o.storeProfile.shopPath+"/remote-checkout/"+e+"/payment-session",extractAmazonCheckoutSessionId:m},placement:Pt.b.Checkout};return this._amazonPayV2PaymentProcessor.createButton("#"+t,f),n},t}(),Mt=function(){function t(t,e,n,r,i,o,a){this._store=t,this._checkoutActionCreator=e,this._paymentMethodActionCreator=n,this._customerStrategyActionCreator=r,this._remoteCheckoutActionCreator=i,this._braintreeVisaCheckoutPaymentProcessor=o,this._visaCheckoutScriptLoader=a,this._buttonClassName="visa-checkout-wrapper"}return t.prototype.initialize=function(t){var e=this,n=t.braintreevisacheckout,r=t.methodId;if(!n||!r)throw new It.a('Unable to proceed because "options.braintreevisacheckout" argument is not provided.');return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(r)).then((function(t){e._paymentMethod=t.paymentMethods.getPaymentMethod(r);var i=t.checkout.getCheckout(),o=t.config.getStoreConfig();if(!i)throw new v.b(v.a.MissingCheckout);if(!o)throw new v.b(v.a.MissingCheckoutConfig);if(!e._paymentMethod||!e._paymentMethod.clientToken)throw new v.b(v.a.MissingPaymentMethod);var a=n.container,s=n.onError,c=void 0===s?function(){}:s,u={locale:o.storeProfile.storeLanguage,collectShipping:!0,subtotal:i.subtotal,currencyCode:o.currency.code};return Promise.all([e._visaCheckoutScriptLoader.load(e._paymentMethod.config.testMode),e._braintreeVisaCheckoutPaymentProcessor.initialize(e._paymentMethod.clientToken,u)]).then((function(t){var n=t[0],r=t[1],i=e._createSignInButton(a,e._buttonClassName);return n.init(r),n.on("payment.success",(function(t){return e._paymentInstrumentSelected(t).catch((function(t){return c(t)}))})),n.on("payment.error",(function(t,e){return c(e)})),i})).then((function(t){t.style.visibility="visible"}))})).then((function(){return e._store.getState()}))},t.prototype.signIn=function(){throw new At.a('In order to sign in via VisaCheckout, the shopper must click on "Visa Checkout" button.')},t.prototype.signOut=function(t){return this._store.dispatch(this._remoteCheckoutActionCreator.signOut("braintreevisacheckout",t))},t.prototype.deinitialize=function(){var t=this;return this._paymentMethod=void 0,this._braintreeVisaCheckoutPaymentProcessor.deinitialize().then((function(){return t._store.getState()}))},t.prototype._paymentInstrumentSelected=function(t){var e=this,n=this._store.getState();if(!this._paymentMethod)throw new Error("Payment method not initialized");var r=this._paymentMethod.id;return this._store.dispatch(this._customerStrategyActionCreator.widgetInteraction((function(){return e._braintreeVisaCheckoutPaymentProcessor.handleSuccess(t,n.shippingAddress.getShippingAddress(),n.billingAddress.getBillingAddress()).then((function(){return e._store.dispatch(e._checkoutActionCreator.loadCurrentCheckout())}))}),{methodId:r}),{queueId:"widgetInteraction"})},t.prototype._createSignInButton=function(t,e){var n=document.querySelector("#"+t);if(!n)throw new Error("Need a container to place the button");return n.querySelector("."+e)||this._insertVisaCheckoutButton(n,e)},t.prototype._insertVisaCheckoutButton=function(t,e){var n=document.createElement("div");return n.style.display="flex",n.style.flexDirection="column",n.style.visibility="hidden",n.className=e,n.innerHTML='\n            <img\n                alt="Visa Checkout"\n                class="v-button"\n                role="button"\n                src="https://secure.checkout.visa.com/wallet-services-web/xo/button.png?acceptCanadianVisaDebit=false&cobrand=true&size=154"\n                />\n            <a class="v-learn v-learn-default" style="text-align: right; display: block; font-size: 10px; color: #003366;" href="#" data-locale="en_US">Tell Me More</a>',t.appendChild(n),n},t}(),Tt=function(){function t(t,e,n,r,i,o){this._store=t,this._paymentMethodActionCreator=e,this._remoteCheckoutActionCreator=n,this._chasePayScriptLoader=r,this._requestSender=i,this._formPoster=o}return t.prototype.initialize=function(t){var e=this,n=t.chasepay,r=t.methodId;if(!n||!r)throw new It.a('Unable to proceed because "options.chasepay" argument is not provided.');return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(r)).then((function(t){e._paymentMethod=t.paymentMethods.getPaymentMethod(r);var i=t.cart.getCart(),o=t.config.getStoreConfig();if(!i)throw new v.b(v.a.MissingCart);if(!o)throw new v.b(v.a.MissingCheckoutConfig);if(!e._paymentMethod||!e._paymentMethod.initializationData.digitalSessionId)throw new bt.b(bt.a.PaymentNotInitialized);var a=n.container;return e._chasePayScriptLoader.load(e._paymentMethod.config.testMode).then((function(t){var n=t.ChasePay;n.configure({language:o.storeProfile.storeLanguage}),n.isChasePayUp&&n.insertButtons({containers:[a]}),n.on(n.EventType.START_CHECKOUT,(function(){e._store.dispatch(e._paymentMethodActionCreator.loadPaymentMethod(r)).then((function(){var t=e._store.getState().paymentMethods.getPaymentMethod(r),i=t&&t.initializationData&&t.initializationData.digitalSessionId;i&&n.startCheckout(i)}))})),n.on(n.EventType.COMPLETE_CHECKOUT,(function(t){var n=e._store.getState().paymentMethods.getPaymentMethod(r),i=n&&n.initializationData&&n.initializationData.merchantRequestId;i&&e._setExternalCheckoutData(t,i).then((function(){e._reloadPage()}))}))}))})).then((function(){return e._store.getState()}))},t.prototype.deinitialize=function(){return Promise.resolve(this._store.getState())},t.prototype.signIn=function(){throw new At.a('In order to sign in via Chase Pay®, the shopper must click on "Chase Pay®" button.')},t.prototype.signOut=function(t){var e=this._store.getState().payment.getPaymentId();return e?this._store.dispatch(this._remoteCheckoutActionCreator.signOut(e.providerId,t)):Promise.resolve(this._store.getState())},t.prototype._setExternalCheckoutData=function(t,e){var n={headers:{Accept:"text/html","Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},body:{sessionToken:t.sessionToken,merchantRequestId:e},method:"post"};return this._requestSender.sendRequest("checkout.php?provider=chasepay&action=set_external_checkout",n)},t.prototype._reloadPage=function(){this._formPoster.postForm("/checkout.php",{headers:{Accept:"text/html","Content-Type":"application/x-www-form-urlencoded"},params:{fromChasePay:!0}})},t}(),Rt=function(){function t(t,e){this._store=t,this._customerActionCreator=e}return t.prototype.signIn=function(t,e){return this._store.dispatch(this._customerActionCreator.signInCustomer(t,e))},t.prototype.signOut=function(t){return this._store.dispatch(this._customerActionCreator.signOutCustomer(t))},t.prototype.initialize=function(){return Promise.resolve(this._store.getState())},t.prototype.deinitialize=function(){return Promise.resolve(this._store.getState())},t}(),Dt=n(97),zt=function(){function t(t,e,n,r){this._store=t,this._remoteCheckoutActionCreator=e,this._googlePayPaymentProcessor=n,this._formPoster=r}return t.prototype.initialize=function(t){var e=this,n=t.methodId,r=this._getGooglePayOptions(t);if(!n)throw new v.b(v.a.MissingPaymentMethod);return this._googlePayPaymentProcessor.initialize(n).then((function(){e._walletButton=e._createSignInButton(r.container)})).then((function(){return e._store.getState()}))},t.prototype.deinitialize=function(){var t=this;return this._walletButton&&this._walletButton.parentNode&&(this._walletButton.parentNode.removeChild(this._walletButton),this._walletButton=void 0),this._googlePayPaymentProcessor.deinitialize().then((function(){return t._store.getState()}))},t.prototype.signIn=function(){throw new At.a('In order to sign in via Google Pay, the shopper must click on "Google Pay" button.')},t.prototype.signOut=function(t){var e=this._store.getState().payment.getPaymentId();return e?this._store.dispatch(this._remoteCheckoutActionCreator.signOut(e.providerId,t)):Promise.resolve(this._store.getState())},t.prototype._createSignInButton=function(t){var e=document.querySelector("#"+t);if(!e)throw new It.a("Unable to create sign-in button without valid container ID.");var n=this._googlePayPaymentProcessor.createButton(this._handleWalletButtonClick);return e.appendChild(n),n},t.prototype._getGooglePayOptions=function(t){if("googlepayadyenv2"===t.methodId&&t.googlepayadyenv2)return t.googlepayadyenv2;if("googlepayauthorizenet"===t.methodId&&t.googlepayauthorizenet)return t.googlepayauthorizenet;if("googlepaybraintree"===t.methodId&&t.googlepaybraintree)return t.googlepaybraintree;if("googlepaycheckoutcom"===t.methodId&&t.googlepaycheckoutcom)return t.googlepaycheckoutcom;if("googlepaystripe"===t.methodId&&t.googlepaystripe)return t.googlepaystripe;throw new It.a},t.prototype._handleWalletButtonClick=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i;return Object(d.__generator)(this,(function(o){switch(o.label){case 0:t.preventDefault(),e=this._store.getState().cart.getCartOrThrow(),n=Object(jt.a)(e)>0,o.label=1;case 1:return o.trys.push([1,7,,8]),[4,this._googlePayPaymentProcessor.displayWallet()];case 2:return r=o.sent(),[4,this._googlePayPaymentProcessor.handleSuccess(r)];case 3:return o.sent(),n&&r.shippingAddress?[4,this._googlePayPaymentProcessor.updateShippingAddress(r.shippingAddress)]:[3,5];case 4:o.sent(),o.label=5;case 5:return[4,this._onPaymentSelectComplete()];case 6:return o.sent(),[3,8];case 7:if((i=o.sent())&&"CANCELED"!==i.message)throw i;return[3,8];case 8:return[2]}}))}))},t.prototype._onPaymentSelectComplete=function(){this._formPoster.postForm("/checkout.php",{headers:{Accept:"text/html","Content-Type":"application/x-www-form-urlencoded"}})},Object(d.__decorate)([Dt.a],t.prototype,"_handleWalletButtonClick",null),t}(),Lt=n(132),Nt=function(){function t(t,e,n,r){this._store=t,this._paymentMethodActionCreator=e,this._remoteCheckoutActionCreator=n,this._masterpassScriptLoader=r}return t.prototype.initialize=function(t){var e=this,n=t.masterpass,r=t.methodId;if(!n||!r)throw new It.a('Unable to proceed because "options.masterpass" argument is not provided.');return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(r)).then((function(t){if(e._paymentMethod=t.paymentMethods.getPaymentMethod(r),!e._paymentMethod||!e._paymentMethod.initializationData.checkoutId)throw new v.b(v.a.MissingPaymentMethod);var i=t.cart.getCart();if(!i)throw new v.b(v.a.MissingCart);var o=n.container,a={checkoutId:e._paymentMethod.initializationData.checkoutId,allowedCardTypes:e._paymentMethod.initializationData.allowedCardTypes,amount:i.cartAmount.toString(),currency:i.currency.code,cartId:i.id,suppressShippingAddress:!1,callbackUrl:Object(Lt.a)("checkout")};return e._masterpassScriptLoader.load(e._paymentMethod.config.testMode).then((function(t){e._signInButton=e._createSignInButton(o),e._signInButton.addEventListener("click",(function(){t.checkout(a)}))}))})).then((function(){return e._store.getState()}))},t.prototype.deinitialize=function(){return this._paymentMethod=void 0,this._signInButton&&this._signInButton.parentNode&&(this._signInButton.parentNode.removeChild(this._signInButton),this._signInButton=void 0),Promise.resolve(this._store.getState())},t.prototype.signIn=function(){throw new At.a('In order to sign in via Masterpass, the shopper must click on "Masterpass" button.')},t.prototype.signOut=function(t){var e=this._store.getState().payment.getPaymentId();return e?this._store.dispatch(this._remoteCheckoutActionCreator.signOut(e.providerId,t)):Promise.resolve(this._store.getState())},t.prototype._createSignInButton=function(t){var e=document.querySelector("#"+t);if(!e)throw new It.a("Unable to create sign-in button without valid container ID.");var n=document.createElement("input");return n.type="image",n.src="https://static.masterpass.com/dyn/img/btn/global/mp_chk_btn_160x037px.svg",e.appendChild(n),n},t}(),Ft=function(){function t(t,e){this._store=t,this._remoteCheckoutActionCreator=e}return t.prototype.signIn=function(){throw new At.a('In order to sign in via Masterpass, the shopper must click on "Masterpass" button.')},t.prototype.signOut=function(t){var e=this._store.getState().payment.getPaymentId();return e?this._store.dispatch(this._remoteCheckoutActionCreator.signOut(e.providerId,t)):Promise.resolve(this._store.getState())},t.prototype.initialize=function(){return Promise.resolve(this._store.getState())},t.prototype.deinitialize=function(){return Promise.resolve(this._store.getState())},t}();var qt=n(42),Ut=function(){function t(t){this._countryRequestSender=t}return t.prototype.loadCountries=function(t){var e=this;return b.Observable.create((function(n){n.next(Object(g.createAction)(qt.a.LoadCountriesRequested)),e._countryRequestSender.loadCountries(t).then((function(t){n.next(Object(g.createAction)(qt.a.LoadCountriesSucceeded,t.body.data)),n.complete()})).catch((function(t){n.error(Object(g.createErrorAction)(qt.a.LoadCountriesFailed,t))}))}))},t}(),xt=function(){function t(t,e){this._requestSender=t,this._config=e}return t.prototype.loadCountries=function(t){var e=(void 0===t?{}:t).timeout,n={"Accept-Language":this._config.locale};return this._requestSender.get("/internalapi/v1/store/countries",{headers:n,timeout:e})},t}(),Bt=n(2),Gt=function(){function t(t){this._requestSender=t}return t.prototype.loadOrder=function(t,e){var n=void 0===e?{}:e,r=n.timeout,i=n.params,o="/api/storefront/orders/"+t,a={Accept:I.a.JsonV1};return this._requestSender.get(o,{params:{include:Object(A.a)(Object(d.__spreadArrays)(["payments","lineItems.physicalItems.socialMedia","lineItems.physicalItems.options","lineItems.digitalItems.socialMedia","lineItems.digitalItems.options"],i&&i.include||[]))},headers:a,timeout:r})},t.prototype.submitOrder=function(t,e){var n=void 0===e?{}:e,r=n.headers,i=n.timeout;return this._requestSender.post("/internalapi/v1/checkout/order",{body:t,headers:Object(Bt.omitBy)({"X-Checkout-Variant":r&&r.checkoutVariant,"X-Checkout-SDK-Version":"1.123.0"},Bt.isNil),timeout:i})},t.prototype.finalizeOrder=function(t,e){var n=(void 0===e?{}:e).timeout,r="/internalapi/v1/checkout/order/"+t;return this._requestSender.post(r,{timeout:n})},t}(),Vt=function(t){function e(){var e=t.call(this,"You haven't complete our spam check. Please try again.")||this;return e.name="SpamProtectionNotCompletedError",e.type="spam_protection_not_completed",e}return Object(d.__extends)(e,t),e}(ht.a),Yt=n(17),Ht=function(){function t(t,e){this._orderRequestSender=t,this._checkoutValidator=e}return t.prototype.loadOrder=function(t,e){var n=this;return new b.Observable((function(r){r.next(Object(g.createAction)(Yt.a.LoadOrderRequested)),n._orderRequestSender.loadOrder(t,e).then((function(t){r.next(Object(g.createAction)(Yt.a.LoadOrderSucceeded,t.body)),r.complete()})).catch((function(t){r.error(Object(g.createErrorAction)(Yt.a.LoadOrderFailed,t))}))}))},t.prototype.loadOrderPayments=function(t,e){var n=this;return new b.Observable((function(r){r.next(Object(g.createAction)(Yt.a.LoadOrderPaymentsRequested)),n._orderRequestSender.loadOrder(t,e).then((function(t){r.next(Object(g.createAction)(Yt.a.LoadOrderPaymentsSucceeded,t.body)),r.complete()})).catch((function(t){r.error(Object(g.createErrorAction)(Yt.a.LoadOrderPaymentsFailed,t))}))}))},t.prototype.loadCurrentOrder=function(t){var e=this;return function(n){return Object(b.defer)((function(){var r=e._getCurrentOrderId(n.getState());if(!r)throw new v.b(v.a.MissingOrderId);return e.loadOrder(r,t)}))}},t.prototype.submitOrder=function(t,e){var n=this;return function(r){return Object(b.concat)(Object(b.of)(Object(g.createAction)(Yt.a.SubmitOrderRequested)),Object(b.defer)((function(){var i=r.getState(),o=i.config.getExternalSource(),a=i.config.getVariantIdentificationToken(),s=i.checkout.getCheckout();if(!s)throw new v.b(v.a.MissingCheckout);if(s.shouldExecuteSpamCheck)throw new Vt;return Object(b.from)(n._checkoutValidator.validate(s,e).then((function(){return n._orderRequestSender.submitOrder(n._mapToOrderRequestBody(t,s.customerMessage,o),Object(d.__assign)(Object(d.__assign)({},e),{headers:{checkoutVariant:a}}))}))).pipe(Object(M.switchMap)((function(t){return Object(b.concat)(n.loadOrder(t.body.data.order.orderId,e),Object(b.of)(Object(g.createAction)(Yt.a.SubmitOrderSucceeded,t.body.data,Object(d.__assign)(Object(d.__assign)({},t.body.meta),{token:t.headers.token}))))})))})).pipe(Object(M.catchError)((function(t){return Object(T.a)(Yt.a.SubmitOrderFailed,t)}))))}},t.prototype.finalizeOrder=function(t,e){var n=this;return Object(b.concat)(Object(b.of)(Object(g.createAction)(Yt.a.FinalizeOrderRequested)),Object(b.from)(this._orderRequestSender.finalizeOrder(t,e)).pipe(Object(M.switchMap)((function(r){return Object(b.concat)(n.loadOrder(t,e),Object(b.of)(Object(g.createAction)(Yt.a.FinalizeOrderSucceeded,r.body.data)))})))).pipe(Object(M.catchError)((function(t){return Object(T.a)(Yt.a.FinalizeOrderFailed,t)})))},t.prototype._getCurrentOrderId=function(t){var e=t.order.getOrder(),n=t.checkout.getCheckout();return e&&e.orderId||n&&n.orderId},t.prototype._mapToOrderRequestBody=function(t,e,n){var r=t.payment,i=Object(d.__rest)(t,["payment"]);return r?Object(d.__assign)(Object(d.__assign)({},i),{customerMessage:e,externalSource:n,payment:{paymentData:r.paymentData,name:r.methodId,gateway:r.gatewayId}}):Object(d.__assign)(Object(d.__assign)({},i),{customerMessage:e,externalSource:n})},t}(),Wt=n(102);var Kt,Jt=function(t){function e(){var e=t.call(this,"The current order does not need to be finalized at this stage.")||this;return e.name="OrderFinalizationNotRequiredError",e.type="order_finalization_not_required",e}return Object(d.__extends)(e,t),e}(ht.a),Zt=n(11);!function(t){t.ADYENV2="adyenv2",t.ADYENV2_GOOGLEPAY="googlepayadyenv2",t.AFFIRM="affirm",t.AFTERPAY="afterpay",t.AMAZON="amazon",t.AUTHORIZENET_GOOGLE_PAY="googlepayauthorizenet",t.AMAZONPAYV2="amazonpay",t.BARCLAYS="barclays",t.BLUESNAPV2="bluesnapv2",t.BOLT="bolt",t.CHECKOUTCOM="checkoutcom",t.CREDIT_CARD="creditcard",t.CHECKOUTCOM_GOOGLE_PAY="googlepaycheckoutcom",t.CYBERSOURCE="cybersource",t.KLARNA="klarna",t.KLARNAV2="klarnav2",t.LAYBUY="laybuy",t.LEGACY="legacy",t.OFFLINE="offline",t.OFFSITE="offsite",t.PAYPAL="paypal",t.PAYPAL_EXPRESS="paypalexpress",t.PAYPAL_EXPRESS_CREDIT="paypalexpresscredit",t.PAYPAL_COMMERCE="paypalcommerce",t.PAYPAL_COMMERCE_CREDIT="paypalcommercecredit",t.PAYPAL_COMMERCE_CREDIT_CARD="paypalcommercecreditcards",t.PAYPAL_COMMERCE_ALTERNATIVE_METHODS="paypalcommercealternativemethods",t.SAGE_PAY="sagepay",t.SQUARE="squarev2",t.STRIPEV3="stripev3",t.NO_PAYMENT_DATA_REQUIRED="nopaymentdatarequired",t.BRAINTREE="braintree",t.BRAINTREE_PAYPAL="braintreepaypal",t.BRAINTREE_PAYPAL_CREDIT="braintreepaypalcredit",t.BRAINTREE_VISA_CHECKOUT="braintreevisacheckout",t.BRAINTREE_GOOGLE_PAY="googlepaybraintree",t.CHASE_PAY="chasepay",t.WE_PAY="wepay",t.MASTERPASS="masterpass",t.STRIPE_GOOGLE_PAY="googlepaystripe",t.SEZZLE="sezzle",t.ZIP="zip",t.CONVERGE="converge"}(Kt||(Kt={}));var Qt=Kt,Xt=function(){function t(t,e,n){this._strategyRegistry=t,this._orderActionCreator=e,this._spamProtectionActionCreator=n}return t.prototype.execute=function(t,e){var n=this,r=t.payment,i=void 0===r?{}:r,o=t.useStoreCredit,a={methodId:i.methodId};return function(r){var s=r.getState().checkout.getCheckoutOrThrow().shouldExecuteSpamCheck;return Object(b.concat)(s?n._spamProtectionActionCreator.verifyCheckoutSpamProtection()(r):Object(b.empty)(),Object(b.of)(Object(g.createAction)(Zt.a.ExecuteRequested,void 0,a)),Object(b.defer)((function(){var s,c=r.getState();if(c.payment.isPaymentDataRequired(o)){var u=c.paymentMethods.getPaymentMethod(i.methodId,i.gatewayId);if(!u)throw new v.b(v.a.MissingPaymentMethod);s=n._strategyRegistry.getByMethod(u)}else s=n._strategyRegistry.get(Qt.NO_PAYMENT_DATA_REQUIRED);return s.execute(t,Object(d.__assign)(Object(d.__assign)({},e),{methodId:i.methodId,gatewayId:i.gatewayId})).then((function(){return Object(g.createAction)(Zt.a.ExecuteSucceeded,void 0,a)}))}))).pipe(Object(M.catchError)((function(t){return Object(T.a)(Zt.a.ExecuteFailed,t,a)})))}},t.prototype.finalize=function(t){var e=this;return function(n){return Object(b.concat)(Object(b.of)(Object(g.createAction)(Zt.a.FinalizeRequested)),e._loadOrderPaymentsIfNeeded(n,t),Object(b.defer)((function(){var r=n.getState(),i=r.payment.getPaymentId()||{},o=i.providerId,a=void 0===o?"":o,s=i.gatewayId,c=void 0===s?"":s,u=r.paymentMethods.getPaymentMethod(a,c);if(!u)throw new Jt;return e._strategyRegistry.getByMethod(u).finalize(Object(d.__assign)(Object(d.__assign)({},t),{methodId:u.id,gatewayId:u.gateway})).then((function(){return Object(g.createAction)(Zt.a.FinalizeSucceeded,void 0,{methodId:u.id})}))}))).pipe(Object(M.catchError)((function(t){var e=n.getState().payment.getPaymentId();return Object(T.a)(Zt.a.FinalizeFailed,t,{methodId:e&&e.providerId})})))}},t.prototype.initialize=function(t){var e=this,n=t.methodId,r=t.gatewayId;return function(i){return Object(b.defer)((function(){var o=i.getState(),a=o.paymentMethods.getPaymentMethod(n,r);if(!a)throw new v.b(v.a.MissingPaymentMethod);return n&&o.paymentStrategies.isInitialized(n)?Object(b.empty)():Object(b.concat)(Object(b.of)(Object(g.createAction)(Zt.a.InitializeRequested,void 0,{methodId:n})),e._strategyRegistry.getByMethod(a).initialize(Object(d.__assign)(Object(d.__assign)({},t),{methodId:n,gatewayId:r})).then((function(){return Object(g.createAction)(Zt.a.InitializeSucceeded,void 0,{methodId:n})})))})).pipe(Object(M.catchError)((function(t){return Object(T.a)(Zt.a.InitializeFailed,t,{methodId:n})})))}},t.prototype.deinitialize=function(t){var e=this,n=t.methodId,r=t.gatewayId;return function(i){return Object(b.defer)((function(){var o=i.getState(),a=o.paymentMethods.getPaymentMethod(n,r);if(!a)throw new v.b(v.a.MissingPaymentMethod);return n&&!o.paymentStrategies.isInitialized(n)?Object(b.empty)():Object(b.concat)(Object(b.of)(Object(g.createAction)(Zt.a.DeinitializeRequested,void 0,{methodId:n})),e._strategyRegistry.getByMethod(a).deinitialize(Object(d.__assign)(Object(d.__assign)({},t),{methodId:n,gatewayId:r})).then((function(){return Object(g.createAction)(Zt.a.DeinitializeSucceeded,void 0,{methodId:n})})))})).pipe(Object(M.catchError)((function(t){return Object(T.a)(Zt.a.DeinitializeFailed,t,{methodId:n})})))}},t.prototype.widgetInteraction=function(t,e){var n={methodId:e&&e.methodId};return Object(b.concat)(Object(b.of)(Object(g.createAction)(Zt.a.WidgetInteractionStarted,void 0,n)),Object(b.defer)((function(){return t().then((function(){return Object(g.createAction)(Zt.a.WidgetInteractionFinished,void 0,n)}))}))).pipe(Object(M.catchError)((function(t){return Object(T.a)(Zt.a.WidgetInteractionFailed,t,n)})))},t.prototype._loadOrderPaymentsIfNeeded=function(t,e){var n=t.getState().checkout.getCheckout();return n&&n.orderId?this._orderActionCreator.loadOrderPayments(n.orderId,e):Object(b.empty)()},t}(),$t=function(){function t(){}return t.prototype.isEqual=function(t,e){return Object(Bt.isEqual)(this._normalize(t),this._normalize(e))},t.prototype._normalize=function(t){return{cartAmount:t.cartAmount,currency:t.currency,id:t.id,lineItems:{digitalItems:t.lineItems.digitalItems.slice().sort((function(t,e){return(""+t.productId+t.variantId).localeCompare(""+e.productId+e.variantId)})).map((function(t){return{extendedSalePrice:t.extendedSalePrice,productId:t.productId,quantity:t.quantity,variantId:t.variantId}})),giftCertificates:t.lineItems.giftCertificates.slice().sort((function(t,e){return(""+t.id).localeCompare(""+e.id)})).map((function(t){return{amount:t.amount,recipient:t.recipient}})),physicalItems:t.lineItems.physicalItems.slice().sort((function(t,e){return(""+t.productId+t.variantId).localeCompare(""+e.productId+e.variantId)})).map((function(t){return{extendedSalePrice:t.extendedSalePrice,productId:t.productId,quantity:t.quantity,variantId:t.variantId,giftWrapping:t.giftWrapping}}))}}},t}(),te=function(t){function e(){var e=t.call(this,"An update to your shopping cart has been detected and your available shipping costs have been updated.")||this;return e.name="CartChangedError",e.type="cart_changed",e}return Object(d.__extends)(e,t),e}(ht.a),ee=function(){function t(t){this._checkoutRequestSender=t}return t.prototype.validate=function(t,e){var n=this;if(!t)throw new v.b(v.a.MissingCheckout);return this._checkoutRequestSender.loadCheckout(t.id,e).then((function(e){var r=new $t;if(!(t.outstandingBalance===e.body.outstandingBalance&&n._compareCoupons(t.coupons,e.body.coupons)&&n._compareGiftCertificates(t.giftCertificates,e.body.giftCertificates)&&r.isEqual(t.cart,e.body.cart)))throw new te}))},t.prototype._compareCoupons=function(t,e){return Object(Bt.isEqual)(Object(Bt.map)(t,"code"),Object(Bt.map)(e,"code"))},t.prototype._compareGiftCertificates=function(t,e){return Object(Bt.isEqual)(Object(Bt.map)(t,"code"),Object(Bt.map)(e,"code"))},t}(),ne=function(t){var e=this,n=new Promise((function(t,n){e.cancel=n}));this.promise=Promise.race([t,n])},re=function(t){function e(e){var n=t.call(this,e||"Unable to proceed because the required element is unexpectedly detached from the page.")||this;return n.name="UnexpectedDetachmentError",n.type="unexpected_detachment",n}return Object(d.__extends)(e,t),e}(ht.a),ie=function(){function t(t){this._mutationObserver=t}return t.prototype.ensurePresence=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o;return Object(d.__generator)(this,(function(a){switch(a.label){case 0:n=new ne(e),(r=this._mutationObserver.create((function(e){e.forEach((function(e){0!==Array.from(e.removedNodes).filter((function(e){return t.some((function(t){return e===t||e.contains(t)}))})).length&&n.cancel(new re)}))}))).observe(document.body,{childList:!0,subtree:!0}),a.label=1;case 1:return a.trys.push([1,3,,4]),[4,n.promise];case 2:return i=a.sent(),r.disconnect(),[2,i];case 3:throw o=a.sent(),r.disconnect(),o;case 4:return[2]}}))}))},t}(),oe=n(144),ae=n(145),se=function(t){function e(){var e=t.call(this,"Please complete our human verification challenge and try again.")||this;return e.name="CardingProtectionChallengeNotCompletedError",e.type="carding_protection_challenge_not_completed",e}return Object(d.__extends)(e,t),e}(ht.a),ce=function(t){function e(){var e=t.call(this,"We were not able to verify that you are not a robot. Please try again.")||this;return e.name="CardingProtectionFailedError",e.type="carding_protection_failed",e}return Object(d.__extends)(e,t),e}(ht.a),ue=function(){function t(t){this._googleRecaptcha=t}return t.prototype.handle=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e=this;return Object(d.__generator)(this,(function(n){switch(n.label){case 0:if(!this._isPaymentHumanVerificationRequest(t))throw t;return[4,this._initialize(t.body.additional_action_required.data.key)];case 1:return n.sent(),[2,this._googleRecaptcha.execute().pipe(Object(M.take)(1)).pipe(Object(M.switchMap)((function(t){var n=t.error,r=t.token;return Object(d.__awaiter)(e,void 0,void 0,(function(){return Object(d.__generator)(this,(function(t){if(n instanceof lt)throw new se;if(n||!r)throw new ce;return[2,{type:"recaptcha_v2_verification",data:{human_verification_token:r}}]}))}))}))).toPromise()]}}))}))},t.prototype._initialize=function(t){var e=document.getElementById("cardingProtectionContainer");return e&&e.parentNode&&e.parentNode.removeChild(e),(e=document.createElement("div")).setAttribute("id","cardingProtectionContainer"),document.body.appendChild(e),this._googleRecaptcha.load("cardingProtectionContainer",t)},t.prototype._isPaymentHumanVerificationRequest=function(t){var e=t.body||{},n=e.additional_action_required;return"additional_action_required"===e.status&&n&&"recaptcha_v2_verification"===n.type},t}(),de=n(168),pe=n(80),he=n(188),le=function(t){function e(e){var n=t.call(this,e||"Unable to proceed due to an unknown error with the hosted payment form.")||this;return n.name="InvalidHostedFormError",n.type="invalid_hosted_form",n}return Object(d.__extends)(e,t),e}(ht.a),me=n(189),fe=n(67),_e=n(48),ye=function(){function t(t,e,n,r,i,o,a,s,c){this._type=t,this._containerId=e,this._placeholder=n,this._accessibilityLabel=r,this._styles=i,this._eventPoster=o,this._eventListener=a,this._detachmentObserver=s,this._cardInstrument=c,this._iframe=document.createElement("iframe"),this._iframe.src="/checkout/payment/hosted-field?version=1.123.0",this._iframe.style.border="none",this._iframe.style.height="100%",this._iframe.style.overflow="hidden",this._iframe.style.width="100%"}return t.prototype.getType=function(){return this._type},t.prototype.attach=function(){return Object(d.__awaiter)(this,void 0,void 0,(function(){var t,e,n=this;return Object(d.__generator)(this,(function(r){switch(r.label){case 0:if(!(t=document.getElementById(this._containerId)))throw new he.a("Unable to proceed because the provided container ID is not valid.");return t.appendChild(this._iframe),this._eventListener.listen(),e=Object(b.fromEvent)(this._iframe,"load").pipe(Object(M.switchMap)((function(t){var e=t.target;return Object(d.__awaiter)(n,void 0,void 0,(function(){var t;return Object(d.__generator)(this,(function(n){switch(n.label){case 0:if(!(t=e&&e.contentWindow))throw new Error("The content window of the iframe cannot be accessed.");return this._eventPoster.setTarget(t),[4,this._eventPoster.post({type:fe.a.AttachRequested,payload:{accessibilityLabel:this._accessibilityLabel,cardInstrument:this._cardInstrument,fontUrls:this._getFontUrls(),placeholder:this._placeholder,styles:this._styles,type:this._type}},{successType:_e.a.AttachSucceeded,errorType:_e.a.AttachFailed})];case 1:return n.sent(),[2]}}))}))})),Object(M.take)(1)).toPromise(),[4,this._detachmentObserver.ensurePresence([this._iframe],e)];case 1:return r.sent(),[2]}}))}))},t.prototype.detach=function(){this._iframe.parentElement&&(this._iframe.parentElement.removeChild(this._iframe),this._eventListener.stopListen())},t.prototype.submitForm=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r;return Object(d.__generator)(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),n=this._eventPoster.post({type:fe.a.SubmitRequested,payload:{fields:t,data:e}},{successType:_e.a.SubmitSucceeded,errorType:_e.a.SubmitFailed}),[4,this._detachmentObserver.ensurePresence([this._iframe],n)];case 1:return i.sent(),[3,3];case 2:if(r=i.sent(),this._isSubmitErrorEvent(r)){if("hosted_form_error"===r.payload.error.code)throw new le(r.payload.error.message);if(r.payload.response)throw Object(de.a)(r.payload.response);throw new Error(r.payload.error.message)}throw r;case 3:return[2]}}))}))},t.prototype.validateForm=function(){return Object(d.__awaiter)(this,void 0,void 0,(function(){var t,e;return Object(d.__generator)(this,(function(n){switch(n.label){case 0:return t=this._eventPoster.post({type:fe.a.ValidateRequested},{successType:_e.a.Validated}),[4,this._detachmentObserver.ensurePresence([this._iframe],t)];case 1:if(!(e=n.sent().payload).isValid)throw new me.a(e.errors);return[2]}}))}))},t.prototype._getFontUrls=function(){var t=this,e=document.querySelectorAll("link[href*='fonts.googleapis.com'][rel='stylesheet']");return Array.prototype.slice.call(e).filter((function(t){return"fonts.googleapis.com"===Object(pe.a)(t.href).hostname})).filter((function(e){return Object(Bt.values)(t._styles).map((function(t){return t&&t.fontFamily})).filter((function(t){return"string"==typeof t})).some((function(t){return t.split(/,\s/).some((function(t){return-1!==e.href.indexOf(t.replace(" ","+"))}))}))})).map((function(t){return t.href}))},t.prototype._isSubmitErrorEvent=function(t){return t.type===_e.a.SubmitFailed},t}(),ge=function(){function t(t,e,n,r,i){var o=this;this._fields=t,this._eventListener=e,this._payloadTransformer=n,this._eventCallbacks=r,this._paymentHumanVerificationHandler=i,this._handleEnter=function(t){var e=t.payload;return Object(d.__awaiter)(o,void 0,void 0,(function(){var t,n;return Object(d.__generator)(this,(function(r){switch(r.label){case 0:return r.trys.push([0,2,,3]),[4,this.validate()];case 1:return r.sent(),[3,3];case 2:if("InvalidHostedFormValueError"!==(t=r.sent()).name)throw t;return[3,3];case 3:return n=this._eventCallbacks.onEnter,(void 0===n?Bt.noop:n)(e),[2]}}))}))};var a=this._eventCallbacks,s=a.onBlur,c=void 0===s?Bt.noop:s,u=a.onCardTypeChange,p=void 0===u?Bt.noop:u,h=a.onFocus,l=void 0===h?Bt.noop:h,m=a.onValidate,f=void 0===m?Bt.noop:m;this._eventListener.addListener(_e.a.Blurred,(function(t){var e=t.payload;return c(e)})),this._eventListener.addListener(_e.a.CardTypeChanged,(function(t){var e=t.payload;return p(e)})),this._eventListener.addListener(_e.a.Focused,(function(t){var e=t.payload;return l(e)})),this._eventListener.addListener(_e.a.Validated,(function(t){var e=t.payload;return f(e)})),this._eventListener.addListener(_e.a.Entered,this._handleEnter),this._eventListener.addListener(_e.a.CardTypeChanged,(function(t){var e=t.payload;return o._cardType=e.cardType})),this._eventListener.addListener(_e.a.BinChanged,(function(t){var e=t.payload;return o._bin=e.bin}))}return t.prototype.getBin=function(){return this._bin},t.prototype.getCardType=function(){return this._cardType},t.prototype.attach=function(){return Object(d.__awaiter)(this,void 0,void 0,(function(){var t,e;return Object(d.__generator)(this,(function(n){switch(n.label){case 0:return this._eventListener.listen(),t=this._getFirstField(),e=Object(Bt.without)(this._fields,t),[4,t.attach()];case 1:return n.sent(),[4,Promise.all(e.map((function(t){return t.attach()})))];case 2:return n.sent(),[2]}}))}))},t.prototype.detach=function(){this._eventListener.stopListen(),this._fields.forEach((function(t){t.detach()}))},t.prototype.submit=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n;return Object(d.__generator)(this,(function(r){switch(r.label){case 0:return r.trys.push([0,2,,5]),[4,this._getFirstField().submitForm(this._fields.map((function(t){return t.getType()})),this._payloadTransformer.transform(t))];case 1:return[2,r.sent()];case 2:return e=r.sent(),[4,this._paymentHumanVerificationHandler.handle(e)];case 3:return n=r.sent(),[4,this._getFirstField().submitForm(this._fields.map((function(t){return t.getType()})),this._payloadTransformer.transform(t,n))];case 4:return[2,r.sent()];case 5:return[2]}}))}))},t.prototype.validate=function(){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(t){switch(t.label){case 0:return[4,this._getFirstField().validateForm()];case 1:return[2,t.sent()]}}))}))},t.prototype._getFirstField=function(){var t=this._fields[0];if(!t)throw new he.a("Unable to proceed because the payment form has no field defined.");return t},t}(),be=n(40),ve=function(){function t(t){this._store=t}return t.prototype.transform=function(t,e){var n=this._store.getState(),r=n.checkout.getCheckout(),i=n.config.getConfig(),o=n.instruments.getInstrumentsMeta(),a=n.order.getOrder(),s=n.order.getOrderMeta(),c=Object(Bt.omit)(t.paymentData,"ccExpiry","ccName","ccNumber","ccCvv"),u=n.paymentMethods.getPaymentMethod(t.methodId,t.gatewayId),d=n.paymentMethods.getPaymentMethodsMeta(),p=o&&c&&Object(be.a)(c)?n.payment.getPaymentToken()+", "+o.vaultAccessToken:n.payment.getPaymentToken();if(!p)throw new v.b(v.a.MissingPaymentToken);return{additionalAction:e,authToken:p,checkout:r,config:i,order:a,orderMeta:s,payment:c,paymentMethod:u,paymentMethodMeta:d}},t}(),Ce=function(){function t(t){this._store=t}return t.prototype.create=function(t,e){var n=this,r=Object.keys(e.fields).reduce((function(r,i){var o=e.fields[i];return o?Object(d.__spreadArrays)(r,[new ye(i,o.containerId,o.placeholder||"",o.accessibilityLabel||"",e.styles||{},new oe.a(t),new ae.a(t),new ie(new yt),"instrumentId"in o?n._getCardInstrument(o.instrumentId):void 0)]):r}),[]);return new ge(r,new ae.a(t),new ve(this._store),Object(Bt.pick)(e,"onBlur","onEnter","onFocus","onCardTypeChange","onValidate"),new ue(St(Object(i.createScriptLoader)())))},t.prototype._getCardInstrument=function(t){var e=(0,this._store.getState().instruments.getCardInstrument)(t);if(!e)throw new v.b(v.a.MissingPaymentInstrument);return e},t}(),Oe=n(47),Se=function(){function t(t){this._storeCreditRequestSender=t}return t.prototype.applyStoreCredit=function(t,e){var n=this;return function(r){return Object(b.concat)(Object(b.of)(Object(g.createAction)(Oe.a.ApplyStoreCreditRequested)),Object(b.defer)((function(){return Object(d.__awaiter)(n,void 0,void 0,(function(){var n,i,o;return Object(d.__generator)(this,(function(a){switch(a.label){case 0:if(n=r.getState(),!(i=n.checkout.getCheckout()))throw new v.b(v.a.MissingCheckout);return[4,t?this._storeCreditRequestSender.applyStoreCredit(i.id,e):this._storeCreditRequestSender.removeStoreCredit(i.id,e)];case 1:return o=a.sent().body,[2,Object(g.createAction)(Oe.a.ApplyStoreCreditSucceeded,o)]}}))}))}))).pipe(Object(M.catchError)((function(t){return Object(T.a)(Oe.a.ApplyStoreCreditFailed,t)})))}},t}(),we=function(){function t(t){this._requestSender=t}return t.prototype.applyStoreCredit=function(t,e){var n=(void 0===e?{}:e).timeout,r="/api/storefront/checkouts/"+t+"/store-credit",i={Accept:I.a.JsonV1};return this._requestSender.post(r,{headers:i,timeout:n,params:{include:Object(A.a)(S.a)}})},t.prototype.removeStoreCredit=function(t,e){var n=(void 0===e?{}:e).timeout,r="/api/storefront/checkouts/"+t+"/store-credit",i={Accept:I.a.JsonV1};return this._requestSender.delete(r,{headers:i,timeout:n,params:{include:Object(A.a)(S.a)}})},t}(),Ie=n(200),Ae=n(175),Ee=n(60),Pe=function(){function t(t,e,n,r){var i=this;this._paymentRequestSender=t,this._orderActionCreator=e,this._paymentRequestTransformer=n,this._paymentHumanVerificationHandler=r,this.initializeOffsitePayment=function(t){var e=t.methodId,n=t.gatewayId,r=t.instrumentId,o=t.target,a=t.promise,s=t.shouldSaveInstrument,c=t.shouldSetAsDefaultInstrument;return function(t){var u;r?u={formattedPayload:{bigpay_token:r}}:s&&(u={formattedPayload:{vault_payment_instrument:s,set_as_default_stored_instrument:c||null}});var d=i._paymentRequestTransformer.transform({gatewayId:n,methodId:e,paymentData:u},t.getState());return Object(b.concat)(Object(b.of)(Object(g.createAction)(Ee.a.InitializeOffsitePaymentRequested)),Promise.race([i._paymentRequestSender.initializeOffsitePayment(d,o),a].filter(Boolean)).then((function(){return Object(g.createAction)(Ee.a.InitializeOffsitePaymentSucceeded)}))).pipe(Object(M.catchError)((function(t){return Object(T.a)(Ee.a.InitializeOffsitePaymentFailed,t)})))}}}return t.prototype.submitPayment=function(t){var e=this;return function(n){return Object(b.concat)(Object(b.of)(Object(g.createAction)(Ee.a.SubmitPaymentRequested)),Object(b.defer)((function(){return Object(d.__awaiter)(e,void 0,void 0,(function(){var e,r;return Object(d.__generator)(this,(function(i){switch(i.label){case 0:return i.trys.push([0,2,,5]),[4,this._paymentRequestSender.submitPayment(this._paymentRequestTransformer.transform(t,n.getState()))];case 1:return[2,i.sent()];case 2:return e=i.sent(),[4,this._paymentHumanVerificationHandler.handle(e)];case 3:return r=i.sent(),[4,this._paymentRequestSender.submitPayment(this._paymentRequestTransformer.transform(Object(d.__assign)(Object(d.__assign)({},t),{additionalAction:r}),n.getState()))];case 4:return[2,i.sent()];case 5:return[2]}}))}))})).pipe(Object(M.switchMap)((function(t){var r=t.body;return Object(b.concat)(e._orderActionCreator.loadCurrentOrder()(n),Object(b.of)(Object(g.createAction)(Ee.a.SubmitPaymentSucceeded,r)))})))).pipe(Object(M.catchError)((function(t){return Object(T.a)(Ee.a.SubmitPaymentFailed,t)})))}},t}(),je=n(134),ke=n(133),Me=n(58),Te=function(t){function e(e,n){var r=t.call(this,n)||this;return r._store=e,r}return Object(d.__extends)(e,t),e.prototype.getByMethod=function(t){if(!t)return this.get();var e=this._getToken(t),n=[t.gateway,t.id].filter((function(t){return null!=t})).join("-");return this.get(e,n)},e.prototype._getToken=function(t){if("klarna"===t.gateway)return Qt.KLARNAV2;if(t.id===Qt.PAYPAL_COMMERCE_CREDIT||t.gateway===Qt.PAYPAL_COMMERCE_ALTERNATIVE_METHODS)return Qt.PAYPAL_COMMERCE;var e=t.gateway||t.id;return this._hasFactoryForMethod(e)?e:t.type===Me.b?Qt.OFFLINE:this._isLegacyMethod(t)?Qt.LEGACY:t.type===Me.a?Qt.OFFSITE:Qt.CREDIT_CARD},e.prototype._hasFactoryForMethod=function(t){return this._hasFactory(t)},e.prototype._isLegacyMethod=function(t){var e=this._store.getState().config.getStoreConfig();if(!e)throw new v.b(v.a.MissingCheckoutConfig);var n=e.paymentSettings.clientSidePaymentProviders;return!(!n||"adyen"===t.gateway||"barclaycard"===t.gateway)&&!Object(Bt.some)(n,(function(e){return t.id===e||t.gateway===e}))},e}(B.a);function Re(){return{color_depth:screen.colorDepth||24,java_enabled:"function"==typeof navigator.javaEnabled&&navigator.javaEnabled(),language:navigator.language||navigator.userLanguage,screen_height:screen.height,screen_width:screen.width,time_zone_offset:(new Date).getTimezoneOffset().toString()}}var De,ze,Le,Ne,Fe,qe=n(35),Ue=function(t){function e(e){var n=this,r="Unable to submit payment for the order because the payload is invalid.";return e&&(r=r+" Make sure the following fields are provided correctly: "+e.join(", ")+"."),(n=t.call(this,r)||this).name="PaymentArgumentInvalidError",n}return Object(d.__extends)(e,t),e}(It.a),xe=function(t){function e(e){var n=t.call(this,e||"Payment process was cancelled.")||this;return n.name="PaymentMethodCancelledError",n.type="payment_cancelled",n}return Object(d.__extends)(e,t),e}(ht.a);function Be(t){return t&&"string"==typeof t.data.paymentMethod.encryptedSecurityCode||"string"==typeof t.data.paymentMethod.encryptedExpiryMonth}!function(t){t.ThreeDS2Fingerprint="threeDS2Fingerprint",t.ThreeDS2Challenge="threeDS2Challenge",t.Redirect="redirect",t.QRCode="qrCode",t.Voucher="voucher"}(De||(De={})),function(t){t.SecuredFields="securedfields"}(ze||(ze={})),function(t){t.ACH="ach",t.AliPay="alipay",t.Bancontact="bcmc",t.CreditCard="scheme",t.Klarna="klarna",t.KlarnaPayNow="klarna_paynow",t.KlarnaAccount="klarna_account",t.iDEAL="ideal",t.GiroPay="giropay",t.GooglePay="paywithgoogle",t.SEPA="sepadirectdebit",t.Sofort="directEbanking",t.Vipps="vipps",t.WeChatPayQR="wechatpayQR"}(Le||(Le={})),function(t){t.POST="POST"}(Ne||(Ne={})),function(t){t.ChallengeShopper="ChallengeShopper",t.Error="Error",t.IdentifyShopper="IdentifyShopper"}(Fe||(Fe={}));var Ge,Ve=function(){function t(t,e,n,r){this._store=t,this._paymentActionCreator=e,this._orderActionCreator=n,this._scriptLoader=r}return t.prototype.initialize=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i,o,a,s;return Object(d.__generator)(this,(function(c){switch(c.label){case 0:if(!(e=t.adyenv2))throw new It.a('Unable to initialize payment because "options.adyenv2" argument is not provided.');return this._paymentInitializeOptions=e,n=this._store.getState().paymentMethods.getPaymentMethodOrThrow(t.methodId),r={key:"",value:""},n.initializationData.originKey?(r.key="originKey",r.value=n.initializationData.originKey):(r.key="clientKey",r.value=n.initializationData.clientKey),i=this,[4,this._scriptLoader.load((s={environment:n.initializationData.environment,locale:navigator.language},s[r.key]=r.value,s.paymentMethodsResponse=n.initializationData.paymentMethodsResponse,s))];case 1:return i._adyenClient=c.sent(),o=this,[4,this._mountPaymentComponent(n)];case 2:return o._paymentComponent=c.sent(),n.method!==Le.CreditCard&&n.method!==Le.Bancontact?[3,4]:(a=this,[4,this._mountCardVerificationComponent()]);case 3:a._cardVerificationComponent=c.sent(),c.label=4;case 4:return[2,Promise.resolve(this._store.getState())]}}))}))},t.prototype.execute=function(t,e){var n=this,r=t.payment,i=Object(d.__rest)(t,["payment"]),o=r&&r.paymentData,a=o&&o.shouldSaveInstrument,s=o&&o.shouldSetAsDefaultInstrument;if(!r)throw new Ue(["payment"]);return this._store.dispatch(this._orderActionCreator.submitOrder(i,e)).then((function(){var t=n._componentState;if(!t)throw new bt.b(bt.a.PaymentNotInitialized);if(o&&Object(be.a)(o)){var e={};if(Be(t)){var i=t.data.paymentMethod,c=i.encryptedCardNumber,u=i.encryptedSecurityCode;e={credit_card_number_confirmation:c,expiry_month:i.encryptedExpiryMonth,expiry_year:i.encryptedExpiryYear,verification_value:u}}if(Be(t)||-1!==["ideal","sepadirectdebit","directEbanking","giropay"].indexOf(t.data.paymentMethod.type))return n._store.dispatch(n._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},r),{paymentData:{formattedPayload:{bigpay_token:Object(d.__assign)(Object(d.__assign)({},e),{token:o.instrumentId}),browser_info:Re(),set_as_default_stored_instrument:s||null}}})))}return n._store.dispatch(n._paymentActionCreator.submitPayment({methodId:r.methodId,paymentData:{formattedPayload:{credit_card_token:{token:JSON.stringify(Object(d.__assign)(Object(d.__assign)({},t.data.paymentMethod),{origin:window.location.origin}))},browser_info:Re(),vault_payment_instrument:a||null,set_as_default_stored_instrument:s||null}}}))})).catch((function(t){return n._processAdditionalAction(t,a,s)}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.deinitialize=function(){return this._paymentComponent&&(this._paymentComponent.unmount(),this._paymentComponent=void 0),this._cardVerificationComponent&&(this._cardVerificationComponent.unmount(),this._cardVerificationComponent=void 0),Promise.resolve(this._store.getState())},t.prototype._getAdyenClient=function(){if(!this._adyenClient)throw new bt.b(bt.a.PaymentNotInitialized);return this._adyenClient},t.prototype._getPaymentInitializeOptions=function(){if(!this._paymentInitializeOptions)throw new It.a('"options.adyenv2" argument was not provided during initialization.');return this._paymentInitializeOptions},t.prototype._getThreeDS2ChallengeWidgetSize=function(){var t=this._getPaymentInitializeOptions().threeDS2Options.widgetSize;return t||"05"},t.prototype._handleAction=function(t){var e=this;return new Promise((function(n,r){var i=e._getPaymentInitializeOptions(),o=i.threeDS2ContainerId,a=i.additionalActionOptions,s=a.onBeforeLoad,c=a.containerId,u=a.onLoad,d=a.onComplete,p=JSON.parse(t.action),h=e._getAdyenClient().createFromAction(p,{onAdditionalDetails:function(t){var e={methodId:p.paymentMethodType,paymentData:{nonce:JSON.stringify(t.data)}};d&&d(),n(e)},size:e._getThreeDS2ChallengeWidgetSize(),onError:function(t){return r(t)}});s&&s(p.type===De.ThreeDS2Challenge||p.type===De.QRCode),h.mount("#"+(c||o)),u&&u((function(){r(new xe),h.unmount()}))}))},t.prototype._mapAdyenPlaceholderData=function(t){return t?{holderName:t.firstName+" "+t.lastName,billingAddress:{street:t.address1,houseNumberOrName:t.address2,postalCode:t.postalCode,city:t.city,stateOrProvince:t.stateOrProvinceCode,country:t.countryCode}}:{}},t.prototype._mountCardVerificationComponent=function(){var t,e=this,n=this._getPaymentInitializeOptions(),r=this._getAdyenClient();return new Promise((function(i,o){if(n.cardVerificationContainerId){t=r.create(ze.SecuredFields,Object(d.__assign)(Object(d.__assign)({},n.options),{onChange:function(t){return e._updateComponentState(t)},onError:function(t){return e._updateComponentState(t)}}));try{t.mount("#"+n.cardVerificationContainerId)}catch(t){o(new bt.b(bt.a.PaymentNotInitialized))}}i(t)}))},t.prototype._mountPaymentComponent=function(t){var e,n=this,r=this._getPaymentInitializeOptions(),i=this._getAdyenClient();return new Promise((function(o,a){switch(t.method){case Le.CreditCard:case Le.ACH:case Le.Bancontact:var s=n._store.getState().billingAddress.getBillingAddress();e=i.create(t.method,Object(d.__assign)(Object(d.__assign)({},r.options),{onChange:function(t){return n._updateComponentState(t)},data:n._mapAdyenPlaceholderData(s)}));try{e.mount("#"+r.containerId)}catch(t){a(new bt.b(bt.a.PaymentNotInitialized))}break;case Le.iDEAL:case Le.SEPA:if(r.hasVaultedInstruments)n._updateComponentState({data:{paymentMethod:{type:t.method}}});else{e=i.create(t.method,Object(d.__assign)(Object(d.__assign)({},r.options),{onChange:function(t){return n._updateComponentState(t)}}));try{e.mount("#"+r.containerId)}catch(t){a(new bt.b(bt.a.PaymentNotInitialized))}}break;case Le.AliPay:case Le.GiroPay:case Le.Sofort:case Le.Klarna:case Le.KlarnaPayNow:case Le.KlarnaAccount:case Le.Vipps:case Le.WeChatPayQR:n._updateComponentState({data:{paymentMethod:{type:t.method}}})}o(e)}))},t.prototype._processAdditionalAction=function(t,e,n){return Object(d.__awaiter)(this,void 0,void 0,(function(){var r,i;return Object(d.__generator)(this,(function(o){switch(o.label){case 0:return t instanceof qe.a&&Object(Bt.some)(t.body.errors,{code:"additional_action_required"})?[4,this._handleAction(t.body.provider_data)]:[2,Promise.reject(t)];case 1:r=o.sent(),o.label=2;case 2:return o.trys.push([2,4,,5]),[4,this._store.dispatch(this._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},r),{paymentData:Object(d.__assign)(Object(d.__assign)({},r.paymentData),{shouldSaveInstrument:e,shouldSetAsDefaultInstrument:n})})))];case 3:return[2,o.sent()];case 4:return i=o.sent(),[2,this._processAdditionalAction(i,e,n)];case 5:return[2]}}))}))},t.prototype._updateComponentState=function(t){this._componentState=t},t}(),Ye=function(){function t(t,e,n){void 0===n&&(n=window),this._scriptLoader=t,this._stylesheetLoader=e,this._window=n}return t.prototype.load=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(e){switch(e.label){case 0:return[4,Promise.all([this._stylesheetLoader.loadStylesheet("https://checkoutshopper-"+t.environment+".adyen.com/checkoutshopper/sdk/3.10.1/adyen.css"),this._scriptLoader.loadScript("https://checkoutshopper-"+t.environment+".adyen.com/checkoutshopper/sdk/3.10.1/adyen.js")])];case 1:if(e.sent(),!this._window.AdyenCheckout)throw new $.a;return[2,new this._window.AdyenCheckout(t)]}}))}))},t}(),He=n(79);!function(t){t.DigitalItemsCategories="lineItems.digitalItems.categories",t.PhysicalItemsCategories="lineItems.physicalItems.categories"}(Ge||(Ge={}));var We=n(170),Ke=function(){function t(t,e,n,r,i){this._store=t,this._orderActionCreator=e,this._paymentActionCreator=n,this._paymentMethodActionCreator=r,this._affirmScriptLoader=i}return t.prototype.initialize=function(t){var e=this;return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(t.methodId)).then((function(n){var r=n.paymentMethods.getPaymentMethod(t.methodId);if(!r||!r.clientToken)throw new v.b(v.a.MissingPaymentMethod);var i=r.config.testMode,o=r.clientToken;return e._affirmScriptLoader.load(o,i)})).then((function(t){return e._affirm=t,e._store.getState()}))},t.prototype.execute=function(t,e){var n=this,r=t.payment&&t.payment.methodId,i=t.useStoreCredit,o=this._affirm;if(!o)throw new bt.b(bt.a.PaymentNotInitialized);if(!r)throw new Ue(["payment.methodId"]);var a=Object(d.__assign)(Object(d.__assign)({},e),{params:{include:[Ge.PhysicalItemsCategories,Ge.DigitalItemsCategories]}});return this._store.dispatch(this._orderActionCreator.submitOrder({useStoreCredit:i},a)).then((function(){return o.checkout(n._getCheckoutInformation()),new Promise((function(t,e){o.checkout.open({onFail:function(t){"canceled"===t.reason?e(new xe):e(new We.a)},onSuccess:function(e){t(e)}}),o.ui.error.on("close",(function(){e(new xe)}))}))})).then((function(t){var e={methodId:r,paymentData:{nonce:t.checkout_token}};return n._store.dispatch(n._paymentActionCreator.submitPayment(e))}))},t.prototype.deinitialize=function(){return this._affirm&&(this._affirm=void 0),Promise.resolve(this._store.getState())},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype._getCheckoutInformation=function(){var t=this._store.getState(),e=t.config.getStoreConfig(),n=t.consignments.getConsignments(),r=t.order.getOrder();if(!e)throw new v.b(v.a.MissingCheckoutConfig);if(!r)throw new v.b(v.a.MissingCheckout);var i=new He.a(r.currency.decimalPlaces),o=this._getBillingAddress();return{merchant:{user_confirmation_url:e.links.checkoutLink,user_cancel_url:e.links.checkoutLink,user_confirmation_url_action:"POST"},shipping:this._getShippingAddress()||o,billing:o,items:this._getItems(i,r),metadata:{shipping_type:this._getShippingType(n),mode:"modal",platform_type:"BigCommerce",platform_version:"",platform_affirm:""},discounts:this._getDiscounts(i,r),order_id:r.orderId?r.orderId.toString():"",shipping_amount:i.toInteger(r.shippingCostTotal),tax_amount:i.toInteger(r.taxTotal),total:i.toInteger(r.orderAmount)}},t.prototype._getShippingType=function(t){if(!t)return"";var e=t[0];return e&&e.selectedShippingOption?e.selectedShippingOption.type:""},t.prototype._getBillingAddress=function(){var t=this._store.getState().billingAddress.getBillingAddress();if(!t)throw new v.b(v.a.MissingBillingAddress);return{name:{first:t.firstName,last:t.lastName,full:t.firstName+" "+t.lastName},address:{line1:t.address1,line2:t.address2,city:t.city,state:t.stateOrProvinceCode,zipcode:t.postalCode,country:t.countryCode},phone_number:t.phone,email:t.email}},t.prototype._getShippingAddress=function(){var t=this._store.getState().shippingAddress.getShippingAddress();if(t)return{name:{first:t.firstName,last:t.lastName,full:t.firstName+" "+t.lastName},address:{line1:t.address1,line2:t.address2,city:t.city,state:t.stateOrProvinceCode,zipcode:t.postalCode,country:t.countryCode},phone_number:t.phone}},t.prototype._getItems=function(t,e){for(var n=[],r=0,i=e.lineItems.physicalItems;r<i.length;r++){var o=i[r];n.push({display_name:o.name,sku:o.sku,unit_price:t.toInteger(o.salePrice),qty:o.quantity,item_image_url:o.imageUrl,item_url:o.url,categories:this._getCategories(o.categories)})}for(var a=0,s=e.lineItems.digitalItems;a<s.length;a++){o=s[a];n.push({display_name:o.name,sku:o.sku,unit_price:t.toInteger(o.salePrice),qty:o.quantity,item_image_url:o.imageUrl,item_url:o.url,categories:this._getCategories(o.categories)})}for(var c=0,u=e.lineItems.giftCertificates;c<u.length;c++){o=u[c];n.push({display_name:o.name,sku:"",unit_price:t.toInteger(o.amount),qty:1,item_image_url:"",item_url:""})}if(e.lineItems.customItems)for(var d=0,p=e.lineItems.customItems;d<p.length;d++){o=p[d];n.push({display_name:o.name,sku:o.sku,unit_price:t.toInteger(o.listPrice),qty:o.quantity,item_image_url:"",item_url:""})}return n},t.prototype._getDiscounts=function(t,e){for(var n={},r=0,i=e.coupons;r<i.length;r++){var o=i[r];o.discountedAmount>0&&(n[o.code]={discount_amount:t.toInteger(o.discountedAmount),discount_display_name:o.displayName})}return e.discountAmount>0&&(n.DISCOUNTED_AMOUNT={discount_amount:t.toInteger(e.discountAmount),discount_display_name:"discount"}),n},t.prototype._getCategories=function(t){return t?t.map((function(t){return t.map((function(t){return t.name}))})):[[]]},t}();var Je=function(){function t(t){void 0===t&&(t=window),this._window=t}return t.prototype.load=function(t,e){void 0===t&&(t="");var n=this._getScriptURI(e);if(function(t,e,n,r,i,o,a,s){var c=t[n]||{},u=document.createElement(o),d=document.getElementsByTagName(o)[0],p=function(t,e,n){return function(){t[e]._.push([n,arguments])}};c[r]=p(c,r,"set");var h=c[r];c[i]={},c[i]._=[],h._=[],c._=[],c[i][a]=p(c,i,a),c[s]=function(){c._.push([a,arguments])};for(var l=0,m="set add save post open empty reset on off trigger ready setProduct".split(" ");l<m.length;l++)h[m[l]]=p(c,r,m[l]);for(var f=0,_=["get","token","url","items"];f<_.length;f++)h[_[f]]=function(){};u.async=!0,u.src=e[o],d.parentNode&&d.parentNode.insertBefore(u,d),delete e[o],h(e),t[n]=c}(window,{public_api_key:t,script:n},"affirm","checkout","ui","script","ready","jsReady"),!this._window.affirm)throw new $.a;return Promise.resolve(this._window.affirm)},t.prototype._getScriptURI=function(t){return void 0===t&&(t=!1),t?"//cdn1-sandbox.affirm.com/js/v2/affirm.js":"//cdn1.affirm.com/js/v2/affirm.js"},t}(),Ze=function(){function t(t,e,n,r,i,o,a){this._store=t,this._checkoutValidator=e,this._orderActionCreator=n,this._paymentActionCreator=r,this._paymentMethodActionCreator=i,this._storeCreditActionCreator=o,this._afterpayScriptLoader=a}return t.prototype.initialize=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i,o;return Object(d.__generator)(this,(function(a){switch(a.label){case 0:if(e=this._store.getState(),n=e.paymentMethods.getPaymentMethod(t.methodId,t.gatewayId),r=e.config.getStoreConfig(),i=r?r.storeProfile.storeCountry:"",!n)throw new v.b(v.a.MissingPaymentMethod);return o=this,[4,this._afterpayScriptLoader.load(n,this._mapCountryToISO2(i))];case 1:return o._afterpaySdk=a.sent(),[2,this._store.getState()]}}))}))},t.prototype.deinitialize=function(){return this._afterpaySdk&&(this._afterpaySdk=void 0),Promise.resolve(this._store.getState())},t.prototype.execute=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a;return Object(d.__generator)(this,(function(s){switch(s.label){case 0:if(!(n=t.payment&&t.payment.gatewayId))throw new Ue(["payment.gatewayId"]);return r=this._store.getState(),i=r.config.getStoreConfig(),o=i?i.storeProfile.storeCountry:"",void 0===(a=t.useStoreCredit)?[3,2]:[4,this._store.dispatch(this._storeCreditActionCreator.applyStoreCredit(a))];case 1:r=s.sent(),s.label=2;case 2:return[4,this._checkoutValidator.validate(r.checkout.getCheckout(),e)];case 3:return s.sent(),[4,this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(n,e))];case 4:return r=s.sent(),[4,this._redirectToAfterpay(o,r.paymentMethods.getPaymentMethod(n))];case 5:return s.sent(),[2,new Promise((function(){}))]}}))}))},t.prototype.finalize=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i;return Object(d.__generator)(this,(function(o){switch(o.label){case 0:if(e=this._store.getState(),n=e.payment.getPaymentId(),r=e.config.getContextConfig(),!n)throw new v.b(v.a.MissingCheckout);if(!r||!r.payment.token)throw new v.b(v.a.MissingCheckoutConfig);return i={methodId:n.providerId,paymentData:{nonce:r.payment.token}},[4,this._store.dispatch(this._orderActionCreator.submitOrder({},t))];case 1:return o.sent(),[2,this._store.dispatch(this._paymentActionCreator.submitPayment(i))]}}))}))},t.prototype._redirectToAfterpay=function(t,e){if(!this._afterpaySdk||!e||!e.clientToken)throw new bt.b(bt.a.PaymentNotInitialized);this._afterpaySdk.initialize({countryCode:this._mapCountryToISO2(t)}),this._afterpaySdk.redirect({token:e.clientToken})},t.prototype._mapCountryToISO2=function(t){switch(t){case"Australia":return"AU";case"New Zealand":return"NZ";case"United States":return"US";default:return"AU"}},t}(),Qe="//portal.afterpay.com/afterpay-async.js",Xe="//portal-sandbox.afterpay.com/afterpay-async.js",$e="//portal.afterpay.com/afterpay-async.js",tn="//portal.us-sandbox.afterpay.com/afterpay-async.js",en=function(){function t(t){this._scriptLoader=t}return t.prototype.load=function(t,e){var n=t.config.testMode||!1,r=this._getScriptURI(e,n);return this._scriptLoader.loadScript(r).then((function(){return window.AfterPay}))},t.prototype._getScriptURI=function(t,e){return"US"===t?e?tn:$e:e?Xe:Qe},t}(),nn=n(59),rn=n(135),on=n(128);function an(t,e){return Object(Bt.isEqual)(sn(t),sn(e))}function sn(t){var e,n=["id","provinceCode"];return Object.keys((e=t,Object(on.a)(e,(function(t,e){return Object(rn.a)(e)}))||{})).reduce((function(e,r){var i;return-1===n.indexOf(r)&&t[r]?Object(d.__assign)(Object(d.__assign)({},e),((i={})[r]=t[r],i)):e}),{})}function cn(t){return{id:t.id,firstName:t.firstName,lastName:t.lastName,company:t.company,address1:t.addressLine1,address2:t.addressLine2,city:t.city,stateOrProvince:t.province,stateOrProvinceCode:t.provinceCode,postalCode:t.postCode,country:t.country,countryCode:t.countryCode,phone:t.phone,customFields:t.customFields}}var un=n(181),dn=function(){function t(t,e,n,r,i){this._store=t,this._orderActionCreator=e,this._billingAddressActionCreator=n,this._remoteCheckoutActionCreator=r,this._scriptLoader=i,this._window=window,this._isPaymentMethodSelected=!1}return t.prototype.initialize=function(t){var e=this,n=t.amazon,r=t.methodId,i=this._store.getState().paymentMethods.getPaymentMethod(r);if(!n)throw new It.a('Unable to initialize payment because "options.amazon" argument is not provided.');if(!i)throw new v.b(v.a.MissingPaymentMethod);return this._walletOptions=n,this._paymentMethod=i,new Promise((function(t,r){e._scriptLoader.loadWidget(i,(function(){e._createWallet(n).then(t).catch(r)})).catch(r)})).then((function(){return e._store.getState()}))},t.prototype.deinitialize=function(){return this._walletOptions=void 0,Promise.resolve(this._store.getState())},t.prototype.execute=function(t,e){var n=this,r=this._getOrderReferenceId(),i=this._getMerchantId();if(!r||!i)throw new bt.b(bt.a.PaymentNotInitialized);if(!t.payment)throw new It.a('Unable to proceed because "payload.payment.methodId" argument is not provided.');if(!this._isPaymentMethodSelected)throw new v.b(v.a.MissingPaymentMethod);var o=t.payment,a=(o.paymentData,Object(d.__rest)(o,["paymentData"])),s=t.useStoreCredit;return e&&this._paymentMethod&&this._paymentMethod.config.is3dsEnabled?this._processPaymentWith3ds(i,r,a.methodId,s,e):this._store.dispatch(this._remoteCheckoutActionCreator.initializePayment(a.methodId,{referenceId:r,useStoreCredit:s})).then((function(){return n._store.dispatch(n._orderActionCreator.submitOrder(Object(d.__assign)(Object(d.__assign)({},t),{payment:a}),e))})).catch((function(t){return t instanceof qe.a&&"provider_widget_error"===t.body.type&&n._walletOptions?n._createWallet(n._walletOptions).then((function(){return Promise.reject(t)})):Promise.reject(t)}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype._getMerchantId=function(){return this._paymentMethod&&this._paymentMethod.config.merchantId},t.prototype._getOrderReferenceId=function(){var t=this._store.getState().remoteCheckout.getCheckout("amazon");return t?t.referenceId:void 0},t.prototype._getOrderReferenceIdFromInitializationData=function(){return this._paymentMethod?this._paymentMethod.initializationData.orderReferenceId:void 0},t.prototype._createWallet=function(t){var e=this;return new Promise((function(n,r){var i=t.container,o=t.onError,a=void 0===o?Bt.noop:o,s=t.onPaymentSelect,c=void 0===s?Bt.noop:s,u=t.onReady,d=void 0===u?Bt.noop:u,p=e._getOrderReferenceId()||e._getOrderReferenceIdFromInitializationData(),h=e._getMerchantId();if(!document.getElementById(i))return r(new It.a("Unable to create AmazonPay Wallet widget without valid container ID."));if(!e._window.OffAmazonPayments)return r(new bt.b(bt.a.PaymentNotInitialized));if(!h)return r(new v.b(v.a.MissingPaymentMethod));var l={amazonOrderReferenceId:p,design:{designMode:"responsive"},scope:"payments:billing_address payments:shipping_address payments:widget profile",sellerId:h,onError:function(t){r(t),a(t)},onPaymentSelect:function(t){e._synchronizeBillingAddress().then((function(){e._isPaymentMethodSelected=!0,c(t)})).catch(a)},onReady:function(t){n(),d(t)}};e._getOrderReferenceId()||(l.onReady=function(t){e._updateOrderReference(t).then((function(){n(),d(t)})).catch(a)});var m=new e._window.OffAmazonPayments.Widgets.Wallet(l);return m.bind(i),m}))},t.prototype._synchronizeBillingAddress=function(){var t=this,e=this._getOrderReferenceId(),n=this._paymentMethod&&this._paymentMethod.id;if(!n||!e)throw new un.a;return this._store.dispatch(this._remoteCheckoutActionCreator.initializeBilling(n,{referenceId:e})).then((function(e){var n=e.remoteCheckout.getCheckout("amazon"),r=n&&n.billing&&n.billing.address,i=e.billingAddress.getBillingAddress(),o=i&&Object(nn.a)(i);if(!1===r)throw new un.a;return!r||an(r,o||{})?t._store.getState():t._store.dispatch(t._billingAddressActionCreator.updateAddress(cn(r)))}))},t.prototype._updateOrderReference=function(t){return this._store.dispatch(this._remoteCheckoutActionCreator.updateCheckout("amazon",{referenceId:t.getAmazonOrderReferenceId()}))},t.prototype._processPaymentWith3ds=function(t,e,n,r,i){var o=this;return new Promise((function(a,s){return o._window.OffAmazonPayments?o._window.OffAmazonPayments.initConfirmationFlow(t,e,(function(t){return o._store.dispatch(o._orderActionCreator.submitOrder({useStoreCredit:r},i)).then((function(){return o._store.dispatch(o._remoteCheckoutActionCreator.initializePayment(n,{referenceId:e,useStoreCredit:r}))})).then((function(){return t.success(),new Promise((function(){}))})).catch((function(e){return t.error(),s(e)}))})):s(new bt.b(bt.a.PaymentNotInitialized))}))},t}(),pn=function(){function t(t,e,n,r,i,o){this._store=t,this._paymentStrategyActionCreator=e,this._paymentMethodActionCreator=n,this._orderActionCreator=r,this._paymentActionCreator=i,this._amazonPayV2PaymentProcessor=o}return t.prototype.initialize=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i,o,a;return Object(d.__generator)(this,(function(s){switch(s.label){case 0:if(e=t.methodId,n=t.amazonpay,!e||!n)throw new It.a('Unable to proceed because "options.amazonpay" argument is not provided.');return[4,this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(e))];case 1:return r=s.sent(),i=r.paymentMethods.getPaymentMethodOrThrow(e),[4,this._amazonPayV2PaymentProcessor.initialize(i)];case 2:return s.sent(),o=i.initializationData.paymentToken,a=n.editButtonId,o&&a?this._bindEditButton(a,o,"changePayment"):this._walletButton=this._createSignInButton(i),[2,this._store.getState()]}}))}))},t.prototype.execute=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a,s,c;return Object(d.__generator)(this,(function(u){switch(u.label){case 0:if(!(n=t.payment))throw new Ue(["payment"]);return r=n.methodId,[4,this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(r))];case 1:return i=u.sent(),o=i.paymentMethods.getPaymentMethodOrThrow(r),(a=o.initializationData.paymentToken)?(s={methodId:r,paymentData:{nonce:a}},[4,this._store.dispatch(this._orderActionCreator.submitOrder(t,e))]):[3,6];case 2:u.sent(),u.label=3;case 3:return u.trys.push([3,5,,6]),[4,this._store.dispatch(this._paymentActionCreator.submitPayment(s))];case 4:return[2,u.sent()];case 5:if((c=u.sent())instanceof qe.a&&"additional_action_required"===c.body.status)return[2,new Promise((function(){window.location.replace(c.body.additional_action_required.data.redirect_url)}))];throw c;case 6:if(!this._walletButton)throw new bt.b(bt.a.PaymentNotInitialized);return this._walletButton.click(),[2,new Promise(Bt.noop)]}}))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.deinitialize=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(t){switch(t.label){case 0:return this._walletButton&&this._walletButton.parentNode&&(this._walletButton.parentNode.removeChild(this._walletButton),this._walletButton=void 0),[4,this._amazonPayV2PaymentProcessor.deinitialize()];case 1:return t.sent(),[2,Promise.resolve(this._store.getState())]}}))}))},t.prototype._bindEditButton=function(t,e,n){var r=this,i=document.getElementById(t);if(i&&i.parentNode){var o=i.cloneNode(!0);i.parentNode.replaceChild(o,i),o.addEventListener("click",(function(){return r._showLoadingSpinner((function(){return new Promise(Bt.noop)}))})),this._amazonPayV2PaymentProcessor.bindButton(t,e,n)}},t.prototype._showLoadingSpinner=function(t){return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction((function(){return t?t():Promise.reject()})),{queueId:"widgetInteraction"})},t.prototype._createContainer=function(){var t=document.getElementById("AmazonPayButton");return t||((t=document.createElement("div")).id="AmazonPayButton",t.style.display="none",document.body.appendChild(t))},t.prototype._createSignInButton=function(t){var e=this._store.getState(),n=e.cart.getCart(),r=e.config.getStoreConfig();if(!r)throw new v.b(v.a.MissingCheckoutConfig);if(!t)throw new v.b(v.a.MissingPaymentMethod);var i=t.config,o=i.merchantId,a=i.testMode,s=t.initializationData,c=s.checkoutLanguage,u=s.ledgerCurrency,d=s.checkoutSessionMethod,p=s.extractAmazonCheckoutSessionId;if(!o)throw new v.b(v.a.MissingPaymentMethod);var h={merchantId:o,sandbox:!!a,checkoutLanguage:c,ledgerCurrency:u,productType:n&&0===Object(jt.a)(n)?Pt.a.PayOnly:Pt.a.PayAndShip,createCheckoutSession:{method:d,url:r.links.siteLink+"/remote-checkout/"+t.id+"/payment-session",extractAmazonCheckoutSessionId:p},placement:Pt.b.Checkout},l=this._createContainer();return this._amazonPayV2PaymentProcessor.createButton("#"+l.id,h),l},t}(),hn=function(){function t(t,e,n,r){this._store=t,this._orderActionCreator=e,this._paymentActionCreator=n,this._hostedFormFactory=r}return t.prototype.execute=function(t,e){var n,r;return this._isHostedPaymentFormEnabled(null===(n=t.payment)||void 0===n?void 0:n.methodId,null===(r=t.payment)||void 0===r?void 0:r.gatewayId)&&this._shouldRenderHostedForm?this._executeWithHostedForm(t,e):this._executeWithoutHostedForm(t,e)},t.prototype.finalize=function(t){return Promise.reject(new Jt)},t.prototype.initialize=function(t){var e=this;if(!this._isHostedPaymentFormEnabled(null==t?void 0:t.methodId,null==t?void 0:t.gatewayId)||!this._isHostedFieldAvailable(t))return this._shouldRenderHostedForm=!1,Promise.resolve(this._store.getState());var n=t&&t.creditCard&&t.creditCard.form,r=(this._store.getState().config.getStoreConfig()||{}).paymentSettings,i=(void 0===r?{}:r).bigpayBaseUrl,o=void 0===i?"":i;if(!n)throw new It.a;var a=this._hostedFormFactory.create(o,n);return a.attach().then((function(){return e._shouldRenderHostedForm=!0,e._hostedForm=a,e._store.getState()}))},t.prototype.deinitialize=function(t){return this._hostedForm&&this._hostedForm.detach(),Promise.resolve(this._store.getState())},t.prototype._executeWithoutHostedForm=function(t,e){var n=this,r=t.payment,i=Object(d.__rest)(t,["payment"]),o=r&&r.paymentData;if(!r||!o)throw new Ue(["payment.paymentData"]);return this._store.dispatch(this._orderActionCreator.submitOrder(i,e)).then((function(){return n._store.dispatch(n._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},r),{paymentData:o})))}))},t.prototype._executeWithHostedForm=function(t,e){var n=this,r=t.payment,i=Object(d.__rest)(t,["payment"]),o=this._hostedForm;if(!o)throw new bt.b(bt.a.PaymentNotInitialized);if(!r||!r.methodId)throw new Ue(["payment.methodId"]);return o.validate().then((function(){return n._store.dispatch(n._orderActionCreator.submitOrder(i,e))})).then((function(){return o.submit(r)})).then((function(){return n._store.dispatch(n._orderActionCreator.loadCurrentOrder())}))},t.prototype._isHostedPaymentFormEnabled=function(t,e){return!!t&&!0===(0,this._store.getState().paymentMethods.getPaymentMethodOrThrow)(t,e).config.isHostedFormEnabled},t.prototype._isHostedFieldAvailable=function(t){return!Object(Bt.values)(t&&t.creditCard&&t.creditCard.form.fields).every(Bt.isNil)},t}(),ln=function(t){function e(e,n,r,i,o){var a=t.call(this,e,n,r,i)||this;return a._threeDSecureFlow=o,a}return Object(d.__extends)(e,t),e.prototype.initialize=function(e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r;return Object(d.__generator)(this,(function(i){switch(i.label){case 0:return[4,t.prototype.initialize.call(this,e)];case 1:return i.sent(),n=this._store.getState().paymentMethods.getPaymentMethodOrThrow,(r=n(e.methodId)).config.is3dsEnabled?[4,this._threeDSecureFlow.prepare(r)]:[3,3];case 2:i.sent(),i.label=3;case 3:return[2,this._store.getState()]}}))}))},e.prototype.execute=function(e,n){return Object(d.__awaiter)(this,void 0,void 0,(function(){var r,i,o;return Object(d.__generator)(this,(function(a){return r=e.payment,i=(void 0===r?{}:r).methodId,o=void 0===i?"":i,(0,this._store.getState().paymentMethods.getPaymentMethodOrThrow)(o).config.is3dsEnabled?[2,this._threeDSecureFlow.start(t.prototype.execute.bind(this),e,n,this._hostedForm)]:[2,t.prototype.execute.call(this,e,n)]}))}))},e}(hn),mn=n(36),fn=function(){function t(t,e,n){this._store=t,this._orderActionCreator=e,this._paymentActionCreator=n}return t.prototype.execute=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a,s;return Object(d.__generator)(this,(function(c){switch(c.label){case 0:if(!(n=t.payment))throw new Ue(["payment"]);if(!this._initializeOptions)throw new bt.b(bt.a.PaymentNotInitialized);return[4,this._store.dispatch(this._orderActionCreator.submitOrder(t,e))];case 1:return c.sent(),r=this._initializeOptions,i=r.onLoad,o=r.style,a=this._createIframe("bluesnapv2_hosted_payment_page",o),s=new ne(new Promise(Bt.noop)),i(a,(function(){return s.cancel(new xe)})),[2,this._store.dispatch(this._paymentActionCreator.initializeOffsitePayment({methodId:n.methodId,gatewayId:n.gatewayId,shouldSaveInstrument:!1,target:a.name,promise:s.promise}))]}}))}))},t.prototype.finalize=function(t){var e=this._store.getState(),n=e.order.getOrder(),r=e.payment.getPaymentStatus();return!n||r!==mn.a&&r!==mn.b?Promise.reject(new Jt):this._store.dispatch(this._orderActionCreator.finalizeOrder(n.orderId,t))},t.prototype.initialize=function(t){return this._initializeOptions=t&&t.bluesnapv2,Promise.resolve(this._store.getState())},t.prototype.deinitialize=function(){return Promise.resolve(this._store.getState())},t.prototype._createIframe=function(t,e){var n=document.createElement("iframe");if(n.name=t,e){var r=e.border,i=e.height,o=e.width;n.style.border=r,n.style.height=i,n.style.width=o}return n},t}();var _n=function(){function t(t,e,n,r,i,o){this._store=t,this._orderActionCreator=e,this._paymentActionCreator=n,this._paymentMethodActionCreator=r,this._storeCreditActionCreator=i,this._boltScriptLoader=o,this._useBoltClient=!1}return t.prototype.initialize=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i,o,a;return Object(d.__generator)(this,(function(s){switch(s.label){case 0:if(e=t.bolt,n=t.methodId,this._useBoltClient=!(!e||!e.useBigCommerceCheckout),!this._useBoltClient)return[3,2];if(r=this._store.getState(),!(i=r.paymentMethods.getPaymentMethod(n))||!i.initializationData.publishableKey)throw new v.b(v.a.MissingPaymentMethod);return o=i.initializationData.publishableKey,a=this,[4,this._boltScriptLoader.load(o,i.config.testMode)];case 1:a._boltClient=s.sent(),s.label=2;case 2:return[2,Promise.resolve(this._store.getState())]}}))}))},t.prototype.deinitialize=function(){return this._boltClient=void 0,Promise.resolve(this._store.getState())},t.prototype.execute=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(n){return this._useBoltClient?[2,this._executeWithBoltClient(t,e)]:[2,this._executeWithBoltCheckout(t,e)]}))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype._executeWithBoltClient=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a,s,c,u,p,h;return Object(d.__generator)(this,(function(l){switch(l.label){case 0:if(n=t.payment,r=Object(d.__rest)(t,["payment"]),!n)throw new Ue(["payment"]);if(!this._boltClient)throw new bt.b(bt.a.PaymentNotInitialized);return i=this._boltClient,[4,this._store.dispatch(this._orderActionCreator.submitOrder(r,e))];case 1:return l.sent(),void 0===(o=this._store.getState().checkout.getCheckoutOrThrow().isStoreCreditApplied)?[3,3]:[4,this._store.dispatch(this._storeCreditActionCreator.applyStoreCredit(o))];case 2:l.sent(),l.label=3;case 3:return[4,this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(n.methodId,e))];case 4:if(a=l.sent(),!(s=a.paymentMethods.getPaymentMethod(n.methodId))||!s.clientToken)throw new v.b(v.a.MissingPaymentMethod);return c=s.clientToken,[4,new Promise((function(t,e){var n={success:function(e,n){t(e),n()},close:function(){e(new xe)}};i.configure({orderToken:c},{},n).open()}))];case 5:return u=l.sent(),p=n.paymentData.shouldSaveInstrument,h={methodId:n.methodId,paymentData:{nonce:u.reference,shouldSaveInstrument:p}},[2,this._store.dispatch(this._paymentActionCreator.submitPayment(h))]}}))}))},t.prototype._executeWithBoltCheckout=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o;return Object(d.__generator)(this,(function(a){switch(a.label){case 0:if(n=t.payment,r=Object(d.__rest)(t,["payment"]),!n)throw new Ue(["payment"]);if(i=n.methodId,o=n.paymentData,!i)throw new v.b(v.a.MissingPaymentMethod);if(!o||!Boolean(o.nonce))throw new v.b(v.a.MissingPayment);return[4,this._store.dispatch(this._orderActionCreator.submitOrder(r,e))];case 1:return a.sent(),[2,this._store.dispatch(this._paymentActionCreator.submitPayment({methodId:i,paymentData:o}))]}}))}))},t}(),yn=function(){function t(t,e){void 0===e&&(e=window),this._scriptLoader=t,this._window=e}return t.prototype.load=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n;return Object(d.__generator)(this,(function(r){switch(r.label){case 0:return n={async:!0,attributes:{id:"bolt-connect","data-publishable-key":t}},[4,this._scriptLoader.loadScript("//connect"+(e?"-sandbox":"")+".bolt.com/connect-bigcommerce.js",n)];case 1:if(r.sent(),!this._window.BoltCheckout)throw new $.a;return[2,this._window.BoltCheckout]}}))}))},t}();var gn,bn=function(){function t(t){var e=this._createElements(t),n=e.element,r=e.closeElement,i=e.mainElement;this._element=n,this._closeElement=r,this._mainElement=i}return t.prototype.show=function(t){var e=this;this._mainElement.parentElement||(this._registerClick(t),document.body.appendChild(this._mainElement),setTimeout((function(){return e._element.style.opacity="1"})))},t.prototype.remove=function(){var t=this;this._mainElement.parentElement&&(this._unregisterClick&&this._unregisterClick(),this._removeAfterTransition(),setTimeout((function(){return t._element.style.opacity="0"})))},t.prototype._createElements=function(t){var e,n,r,i,o=document.createElement("div"),a=t||{},s=a.background,c=void 0===s?"rgba(0, 0, 0, 0.8)":s,u=a.id,d=void 0===u?"checkoutOverlay":u,p=a.transitionDuration,h=void 0===p?400:p,l=a.hasCloseButton,m=a.innerHtml,f=o;if(d&&(o.id=d),m){var _=document.createElement("div");i=d+"--overlayText",_.className=i,_.appendChild(m),o.appendChild(_)}return l&&(r=d+"--close",(e=document.createElement("div")).className=r,n=d+"--layout",(f=document.createElement("div")).className=n,f.appendChild(o),f.appendChild(e)),f.appendChild(function(t){var e=t.id,n=t.background,r=t.transitionDuration,i=t.classLayout,o=t.classOverlayText,a=t.classClose,s=document.createElement("style"),c=i?", ."+i:"";return s.id=e+"--styles",s.type="text/css",s.innerText="\n        #"+e+c+" {\n            display: block;\n            height: 100%;\n            width: 100%;\n            left: 0;\n            top: 0;\n            position: fixed;\n            z-index: 2147483647;\n        }\n        #"+e+" {\n            transition: opacity "+r+"ms ease-out;\n            background: "+n+";\n            opacity: 0;\n        }\n    ",o&&(s.innerText+="\n             #"+e+" {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n             }\n             #"+e+" ."+o+" {\n                color: white;\n                max-width: 330px;\n                font-size: 1.2em;\n                text-align: center;\n             }\n        "),a&&(s.innerText+="\n            #"+e+" {\n                opacity: 1;\n            }\n            ."+i+" ."+a+" {\n                position: fixed;\n                right: 16px;\n                top: 16px;\n                width: 16px;\n                height: 16px;\n                opacity: 0.6;\n                cursor: pointer;\n                z-index: 3147483647;\n            }\n            ."+i+" ."+a+"::after, ."+i+" ."+a+"::before {\n                position: absolute;\n                left: 8px;\n                content: '';\n                height: 16px;\n                width: 2px;\n                background-color: #fff;\n            }\n            ."+i+" ."+a+"::after {\n                transform: rotate(-45deg);\n            }\n            ."+i+" ."+a+"::before {\n                transform: rotate(45deg);\n            }\n        "),s}({id:d,background:c,transitionDuration:h,classLayout:n,classOverlayText:i,classClose:r})),{element:o,closeElement:e,mainElement:f}},t.prototype._addEventListener=function(t,e){t&&e&&t.addEventListener("click",e)},t.prototype._removeEventListener=function(t,e){t&&e&&t.removeEventListener("click",e)},t.prototype._registerClick=function(t){var e=this;if(this._unregisterClick&&this._unregisterClick(),t){var n=t.onClick,r=t.onClickClose;this._addEventListener(this._element,n),this._addEventListener(this._closeElement,r),this._unregisterClick=function(){e._removeEventListener(e._element,n),e._removeEventListener(e._closeElement,r),e._unregisterClick=void 0}}},t.prototype._removeAfterTransition=function(){var t=this,e=function(n){"opacity"===n.propertyName&&(t._mainElement.parentElement&&t._mainElement.remove(),t._element.removeEventListener("transitionend",e))};this._element.addEventListener("transitionend",e)},t}(),vn=function(t){function e(e,n){var r=t.call(this,n||"Unable to proceed because the payment form contains invalid data.")||this;return r.details=e,r.name="PaymentInvalidFormError",r.type="payment_invalid_form",r}return Object(d.__extends)(e,t),e}(ht.a);!function(t){t.CardCode="cardCode",t.CardCodeVerification="cardCodeVerification",t.CardExpiry="cardExpiry",t.CardName="cardName",t.CardNumber="cardNumber",t.CardNumberVerification="cardNumberVerification"}(gn||(gn={}));var Cn,On=function(){function t(t,e){var n,r=this;this._options=t,this._styles=e,this._handleBlur=function(){var t;r._applyStyles(null===(t=r._styles)||void 0===t?void 0:t.default)},this._handleFocus=function(){var t;r._applyStyles(null===(t=r._styles)||void 0===t?void 0:t.focus)},this._input=document.createElement("input"),this._input.style.backgroundColor="transparent",this._input.style.border="0",this._input.style.display="block",this._input.style.height="100%",this._input.style.margin="0",this._input.style.outline="none",this._input.style.padding="0",this._input.style.width="100%",this._input.placeholder=this._options.placeholder||"",this._input.addEventListener("blur",this._handleBlur),this._input.addEventListener("focus",this._handleFocus),this._applyStyles(null===(n=this._styles)||void 0===n?void 0:n.default)}return t.prototype.getValue=function(){return this._input.value},t.prototype.attach=function(){var t=document.getElementById(this._options.containerId);if(!t)throw new It.a;t.appendChild(this._input)},t.prototype.detach=function(){var t;null===(t=this._input.parentNode)||void 0===t||t.removeChild(this._input)},t.prototype.on=function(t,e){this._input.addEventListener(t,e)},t.prototype.off=function(t,e){this._input.removeEventListener(t,e)},t.prototype._applyStyles=function(t){var e=this;t&&Object.keys(t).forEach((function(n){e._input.style[n]=t[n]||""}))},t}();function Sn(t){return!!t.cardNumber}!function(t){t[t.CreditCard=0]="CreditCard",t[t.StoredCardVerification=1]="StoredCardVerification"}(Cn||(Cn={}));var wn=function(){function t(t){var e=this;this._braintreeSDKCreator=t,this._handleBlur=function(t){var n,r;null===(r=null===(n=e._formOptions)||void 0===n?void 0:n.onBlur)||void 0===r||r.call(n,{fieldType:e._mapFieldType(t.emittedBy)})},this._handleNameBlur=function(){var t,n;null===(n=null===(t=e._formOptions)||void 0===t?void 0:t.onBlur)||void 0===n||n.call(t,{fieldType:gn.CardName})},this._handleFocus=function(t){var n,r;null===(r=null===(n=e._formOptions)||void 0===n?void 0:n.onFocus)||void 0===r||r.call(n,{fieldType:e._mapFieldType(t.emittedBy)})},this._handleNameFocus=function(){var t,n;null===(n=null===(t=e._formOptions)||void 0===t?void 0:t.onFocus)||void 0===n||n.call(t,{fieldType:gn.CardName})},this._handleCardTypeChange=function(t){var n,r,i;null===(r=null===(n=e._formOptions)||void 0===n?void 0:n.onCardTypeChange)||void 0===r||r.call(n,{cardType:null===(i=t.cards[0])||void 0===i?void 0:i.type})},this._handleInputSubmitRequest=function(t){var n,r;null===(r=null===(n=e._formOptions)||void 0===n?void 0:n.onEnter)||void 0===r||r.call(n,{fieldType:e._mapFieldType(t.emittedBy)})},this._handleValidityChange=function(t){var n,r;null===(r=null===(n=e._formOptions)||void 0===n?void 0:n.onValidate)||void 0===r||r.call(n,{isValid:Object.keys(t.fields).every((function(e){var n;return null===(n=t.fields[e])||void 0===n?void 0:n.isValid})),errors:e._mapValidationErrors(t.fields)})}}return t.prototype.initialize=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n;return Object(d.__generator)(this,(function(r){switch(r.label){case 0:return this._formOptions=t,this._type=Sn(t.fields)?Cn.CreditCard:Cn.StoredCardVerification,e=this._mapFieldOptions(t.fields),Object(Bt.isEmpty)(e)?[2,!1]:(n=this,[4,this._braintreeSDKCreator.createHostedFields({fields:e,styles:t.styles&&this._mapStyleOptions(t.styles)})]);case 1:return n._cardFields=r.sent(),this._cardFields.on("blur",this._handleBlur),this._cardFields.on("focus",this._handleFocus),this._cardFields.on("cardTypeChange",this._handleCardTypeChange),this._cardFields.on("validityChange",this._handleValidityChange),this._cardFields.on("inputSubmitRequest",this._handleInputSubmitRequest),Sn(t.fields)&&(this._cardNameField=new On(t.fields.cardName,t.styles),this._cardNameField.on("blur",this._handleNameBlur),this._cardNameField.on("focus",this._handleNameFocus),this._cardNameField.attach()),[2,!0]}}))}))},t.prototype.deinitialize=function(){var t,e;return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(n){switch(n.label){case 0:return[4,null===(t=this._cardFields)||void 0===t?void 0:t.teardown()];case 1:return n.sent(),null===(e=this._cardNameField)||void 0===e||e.detach(),[2]}}))}))},t.prototype.tokenize=function(t){var e,n,r,i,o;return Object(d.__awaiter)(this,void 0,void 0,(function(){var a,s,c;return Object(d.__generator)(this,(function(u){switch(u.label){case 0:if(!this._cardFields)throw new bt.b(bt.a.PaymentNotInitialized);u.label=1;case 1:return u.trys.push([1,3,,4]),[4,this._cardFields.tokenize(Object(Bt.omitBy)({billingAddress:t&&this._mapBillingAddress(t),cardholderName:null===(e=this._cardNameField)||void 0===e?void 0:e.getValue()},Bt.isNil))];case 2:return a=u.sent().nonce,null===(r=null===(n=this._formOptions)||void 0===n?void 0:n.onValidate)||void 0===r||r.call(n,{isValid:!0,errors:{}}),[2,{nonce:a}];case 3:if(s=u.sent(),c=this._mapTokenizeError(s))throw null===(o=null===(i=this._formOptions)||void 0===i?void 0:i.onValidate)||void 0===o||o.call(i,{isValid:!1,errors:c}),new vn(c);throw s;case 4:return[2]}}))}))},t.prototype.tokenizeForStoredCardVerification=function(){var t,e,n,r,i;return Object(d.__awaiter)(this,void 0,void 0,(function(){var o,a,s;return Object(d.__generator)(this,(function(c){switch(c.label){case 0:if(!this._cardFields)throw new bt.b(bt.a.PaymentNotInitialized);c.label=1;case 1:return c.trys.push([1,3,,4]),[4,this._cardFields.tokenize(Object(Bt.omitBy)({cardholderName:null===(t=this._cardNameField)||void 0===t?void 0:t.getValue()},Bt.isNil))];case 2:return o=c.sent().nonce,null===(n=null===(e=this._formOptions)||void 0===e?void 0:e.onValidate)||void 0===n||n.call(e,{isValid:!0,errors:{}}),[2,{nonce:o}];case 3:if(a=c.sent(),s=this._mapTokenizeError(a))throw null===(i=null===(r=this._formOptions)||void 0===r?void 0:r.onValidate)||void 0===i||i.call(r,{isValid:!1,errors:s}),new vn(s);throw a;case 4:return[2]}}))}))},t.prototype._mapBillingAddress=function(t){return{countryName:t.country,postalCode:t.postalCode,streetAddress:t.address2?t.address1+" "+t.address2:t.address1}},t.prototype._mapFieldOptions=function(t){return Sn(t)?Object(Bt.omitBy)({number:{container:"#"+t.cardNumber.containerId,placeholder:t.cardNumber.placeholder},expirationDate:{container:"#"+t.cardExpiry.containerId,placeholder:t.cardExpiry.placeholder},cvv:t.cardCode&&{container:"#"+t.cardCode.containerId,placeholder:t.cardCode.placeholder}},Bt.isNil):Object(Bt.omitBy)({number:t.cardNumberVerification&&{container:"#"+t.cardNumberVerification.containerId,placeholder:t.cardNumberVerification.placeholder},cvv:t.cardCodeVerification&&{container:"#"+t.cardCodeVerification.containerId,placeholder:t.cardCodeVerification.placeholder}},Bt.isNil)},t.prototype._mapStyleOptions=function(t){var e=function(t){return void 0===t&&(t={}),Object(Bt.omitBy)({color:t.color,"font-family":t.fontFamily,"font-size":t.fontSize,"font-weight":t.fontWeight},Bt.isNil)};return{input:e(t.default),".invalid":e(t.error),":focus":e(t.focus)}},t.prototype._mapFieldType=function(t){switch(t){case"number":return this._type===Cn.StoredCardVerification?gn.CardNumberVerification:gn.CardNumber;case"expirationDate":return gn.CardExpiry;case"cvv":return this._type===Cn.StoredCardVerification?gn.CardCodeVerification:gn.CardCode;default:throw new Error("Unexpected field type")}},t.prototype._mapValidationErrors=function(t){var e=this;return Object.keys(t).reduce((function(n,r){var i,o;return Object(d.__assign)(Object(d.__assign)({},n),((i={})[e._mapFieldType(r)]=(null===(o=t[r])||void 0===o?void 0:o.isValid)?void 0:[e._createInvalidError(e._mapFieldType(r))],i))}),{})},t.prototype._mapTokenizeError=function(t){var e,n,r,i=this;return"HOSTED_FIELDS_FIELDS_EMPTY"===t.code?((e={})[this._mapFieldType("cvv")]=[this._createRequiredError(this._mapFieldType("cvv"))],e[this._mapFieldType("expirationDate")]=[this._createRequiredError(this._mapFieldType("expirationDate"))],e[this._mapFieldType("number")]=[this._createRequiredError(this._mapFieldType("number"))],e):null===(r=null===(n=null==t?void 0:t.details)||void 0===n?void 0:n.invalidFieldKeys)||void 0===r?void 0:r.reduce((function(t,e){var n;return Object(d.__assign)(Object(d.__assign)({},t),((n={})[i._mapFieldType(e)]=[i._createInvalidError(i._mapFieldType(e))],n))}),{})},t.prototype._createRequiredError=function(t){switch(t){case gn.CardCodeVerification:case gn.CardCode:return{fieldType:t,message:"CVV is required",type:"required"};case gn.CardNumberVerification:case gn.CardNumber:return{fieldType:t,message:"Credit card number is required",type:"required"};case gn.CardExpiry:return{fieldType:t,message:"Expiration date is required",type:"required"};case gn.CardName:return{fieldType:t,message:"Full name is required",type:"required"};default:return{fieldType:t,message:"Field is required",type:"required"}}},t.prototype._createInvalidError=function(t){switch(t){case gn.CardCodeVerification:return{fieldType:t,message:"Invalid card code",type:"invalid_card_code"};case gn.CardNumberVerification:return{fieldType:t,message:"Invalid card number",type:"invalid_card_number"};case gn.CardCode:return{fieldType:t,message:"Invalid card code",type:"invalid_card_code"};case gn.CardExpiry:return{fieldType:t,message:"Invalid card expiry",type:"invalid_card_expiry"};case gn.CardNumber:return{fieldType:t,message:"Invalid card number",type:"invalid_card_number"};default:return{fieldType:t,message:"Invalid field",type:"invalid"}}},t}(),In=function(){function t(t,e,n){this._braintreeSDKCreator=t,this._braintreeHostedForm=e,this._overlay=n}return t.prototype.initialize=function(t,e){this._braintreeSDKCreator.initialize(t),this._threeDSecureOptions=e&&e.threeDSecure},t.prototype.preloadPaypal=function(){return this._braintreeSDKCreator.getPaypal()},t.prototype.tokenizeCard=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n;return Object(d.__generator)(this,(function(r){switch(r.label){case 0:return n=this._mapToCreditCard(t.paymentData,e),[4,this._braintreeSDKCreator.getClient()];case 1:return[4,r.sent().request(n)];case 2:return[2,{nonce:r.sent().creditCards[0].nonce}]}}))}))},t.prototype.verifyCard=function(t,e,n){return Object(d.__awaiter)(this,void 0,void 0,(function(){var r,i,o;return Object(d.__generator)(this,(function(a){switch(a.label){case 0:return[4,Promise.all([this.tokenizeCard(t,e),this._braintreeSDKCreator.get3DS()])];case 1:return r=a.sent(),i=r[0].nonce,o=r[1],[2,this._present3DSChallenge(o,n,i)]}}))}))},t.prototype.paypal=function(t){var e=this,n=t.shouldSaveInstrument,r=Object(d.__rest)(t,["shouldSaveInstrument"]);return this._braintreeSDKCreator.getPaypal().then((function(t){return e._overlay.show({onClick:function(){return t.focusWindow()}}),t.tokenize(Object(d.__assign)({enableShippingAddress:!0,flow:n?"vault":"checkout",useraction:"commit"},r))})).then((function(t){return e._overlay.remove(),t})).catch((function(t){throw e._overlay.remove(),t}))},t.prototype.getSessionId=function(){return this._braintreeSDKCreator.getDataCollector().then((function(t){return t.deviceData}))},t.prototype.appendSessionId=function(t){var e=this;return t.then((function(t){return Promise.all([t,e._braintreeSDKCreator.getDataCollector()])})).then((function(t){var e=t[0],n=t[1].deviceData;return Object(d.__assign)(Object(d.__assign)({},e),{deviceSessionId:n})}))},t.prototype.deinitialize=function(){return this._braintreeSDKCreator.teardown()},t.prototype.initializeHostedForm=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(e){switch(e.label){case 0:return[4,this._braintreeHostedForm.initialize(t)];case 1:return[2,e.sent()]}}))}))},t.prototype.deinitializeHostedForm=function(){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(t){switch(t.label){case 0:return[4,this._braintreeHostedForm.deinitialize()];case 1:return t.sent(),[2]}}))}))},t.prototype.tokenizeHostedForm=function(t){return this._braintreeHostedForm.tokenize(t)},t.prototype.tokenizeHostedFormForStoredCardVerification=function(){return this._braintreeHostedForm.tokenizeForStoredCardVerification()},t.prototype.verifyCardWithHostedForm=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i;return Object(d.__generator)(this,(function(o){switch(o.label){case 0:return[4,Promise.all([this._braintreeHostedForm.tokenize(t),this._braintreeSDKCreator.get3DS()])];case 1:return n=o.sent(),r=n[0].nonce,i=n[1],[2,this._present3DSChallenge(i,e,r)]}}))}))},t.prototype._present3DSChallenge=function(t,e,n){var r=this;if(!this._threeDSecureOptions)throw new bt.b(bt.a.PaymentNotInitialized);var i=this._threeDSecureOptions,o=i.addFrame,a=i.removeFrame,s=function(){return Object(d.__awaiter)(r,void 0,void 0,(function(){var e;return Object(d.__generator)(this,(function(n){switch(n.label){case 0:return[4,t.cancelVerifyCard()];case 1:return e=n.sent(),c.cancel(new xe),[2,e]}}))}))},c=new ne(t.verifyCard({addFrame:function(t,e){o(t,e,s)},amount:e,nonce:n,removeFrame:a,onLookupComplete:function(t,e){e()}}));return c.promise},t.prototype._mapToCreditCard=function(t,e){return{data:{creditCard:{cardholderName:t.ccName,number:t.ccNumber,cvv:t.ccCvv,expirationDate:t.ccExpiry.month+"/"+t.ccExpiry.year,options:{validate:!1},billingAddress:e&&{countryName:e.country,postalCode:e.postalCode,streetAddress:e.address2?e.address1+" "+e.address2:e.address1}}},endpoint:"payment_methods/credit_cards",method:"post"}},t}();var An=n(91),En=function(){function t(t,e,n,r,i){this._store=t,this._orderActionCreator=e,this._paymentActionCreator=n,this._paymentMethodActionCreator=r,this._braintreePaymentProcessor=i}return t.prototype.initialize=function(t){var e;return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a;return Object(d.__generator)(this,(function(s){switch(s.label){case 0:return[4,this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(t.methodId))];case 1:if(n=s.sent(),!(r=n.paymentMethods.getPaymentMethod(t.methodId))||!r.clientToken)throw new v.b(v.a.MissingPaymentMethod);s.label=2;case 2:return s.trys.push([2,6,,7]),this._braintreePaymentProcessor.initialize(r.clientToken,t.braintree),this._isHostedPaymentFormEnabled(t.methodId,t.gatewayId)&&(null===(e=t.braintree)||void 0===e?void 0:e.form)?(i=this,[4,this._braintreePaymentProcessor.initializeHostedForm(t.braintree.form)]):[3,4];case 3:i._isHostedFormInitialized=s.sent(),s.label=4;case 4:return this._is3dsEnabled=r.config.is3dsEnabled,o=this,[4,this._braintreePaymentProcessor.getSessionId()];case 5:return o._deviceSessionId=s.sent(),[3,7];case 6:return a=s.sent(),this._handleError(a),[3,7];case 7:return[2,this._store.getState()]}}))}))},t.prototype.execute=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a,s,c,u,p,h,l,m,f;return Object(d.__generator)(this,(function(_){switch(_.label){case 0:if(n=t.payment,r=Object(d.__rest)(t,["payment"]),!n)throw new Ue(["payment"]);return[4,this._store.dispatch(this._orderActionCreator.submitOrder(r,e))];case 1:if(i=_.sent(),o=i.billingAddress.getBillingAddressOrThrow,a=i.order.getOrderOrThrow,!(0,i.payment.isPaymentDataRequired)(r.useStoreCredit))return[2,i];_.label=2;case 2:return _.trys.push([2,7,,8]),c=(s=this._store).dispatch,p=(u=this._paymentActionCreator).submitPayment,h=[Object(d.__assign)({},n)],l={},this._isHostedFormInitialized?[4,this._prepareHostedPaymentData(n,o(),a().orderAmount)]:[3,4];case 3:return m=_.sent(),[3,6];case 4:return[4,this._preparePaymentData(n,o(),a().orderAmount)];case 5:m=_.sent(),_.label=6;case 6:return[2,c.apply(s,[p.apply(u,[d.__assign.apply(void 0,h.concat([(l.paymentData=m,l)]))])])];case 7:return f=_.sent(),this._handleError(f),[3,8];case 8:return[2]}}))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.deinitialize=function(){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(t){switch(t.label){case 0:return this._isHostedFormInitialized=!1,[4,Promise.all([this._braintreePaymentProcessor.deinitialize(),this._braintreePaymentProcessor.deinitializeHostedForm()])];case 1:return t.sent(),[2,this._store.getState()]}}))}))},t.prototype._handleError=function(t){if("BraintreeError"===t.name)throw new An.a(t.message);throw t},t.prototype._preparePaymentData=function(t,e,n){return Object(d.__awaiter)(this,void 0,void 0,(function(){var r,i,o,a,s,c,u;return Object(d.__generator)(this,(function(p){switch(p.label){case 0:return r={deviceSessionId:this._deviceSessionId},this._isSubmittingWithStoredCard(t)||this._isStoringNewCard(t)?[2,Object(d.__assign)(Object(d.__assign)({},r),t.paymentData)]:this._shouldPerform3DSVerification(t)?(i=[Object(d.__assign)({},r)],o=this._mapToNonceInstrument,a=[Object(d.__assign)({},t.paymentData)],[4,this._braintreePaymentProcessor.verifyCard(t,e,n)]):[3,2];case 1:return[2,d.__assign.apply(void 0,i.concat([o.apply(this,[d.__assign.apply(void 0,a.concat([p.sent()]))])]))];case 2:return s=[Object(d.__assign)({},r)],c=this._mapToNonceInstrument,u=[Object(d.__assign)({},t.paymentData)],[4,this._braintreePaymentProcessor.tokenizeCard(t,e)];case 3:return[2,d.__assign.apply(void 0,s.concat([c.apply(this,[d.__assign.apply(void 0,u.concat([p.sent()]))])]))]}}))}))},t.prototype._prepareHostedPaymentData=function(t,e,n){return Object(d.__awaiter)(this,void 0,void 0,(function(){var r,i,o,a,s,c,u,p,h,l;return Object(d.__generator)(this,(function(m){switch(m.label){case 0:return r={deviceSessionId:this._deviceSessionId},this._shouldPerform3DSVerification(t)?(i=[Object(d.__assign)({},r)],o=this._mapToNonceInstrument,a=[Object(d.__assign)({},t.paymentData)],[4,this._braintreePaymentProcessor.verifyCardWithHostedForm(e,n)]):[3,2];case 1:return[2,d.__assign.apply(void 0,i.concat([o.apply(this,[d.__assign.apply(void 0,a.concat([m.sent()]))])]))];case 2:return this._isSubmittingWithStoredCard(t)?(s=[Object(d.__assign)({},r)],c=this._mapToVaultedInstrumentWithNonceVerification,u=[Object(d.__assign)({},t.paymentData)],[4,this._braintreePaymentProcessor.tokenizeHostedFormForStoredCardVerification()]):[3,4];case 3:return[2,d.__assign.apply(void 0,s.concat([c.apply(this,[d.__assign.apply(void 0,u.concat([m.sent()]))])]))];case 4:return p=[Object(d.__assign)({},r)],h=this._mapToNonceInstrument,l=[Object(d.__assign)({},t.paymentData)],[4,this._braintreePaymentProcessor.tokenizeHostedForm(e)];case 5:return[2,d.__assign.apply(void 0,p.concat([h.apply(this,[d.__assign.apply(void 0,l.concat([m.sent()]))])]))]}}))}))},t.prototype._mapToNonceInstrument=function(t){return Object(Bt.pick)(t,"nonce","shouldSaveInstrument","shouldSetAsDefaultInstrument")},t.prototype._mapToVaultedInstrumentWithNonceVerification=function(t){return Object(Bt.pick)(t,"nonce","instrumentId")},t.prototype._isHostedPaymentFormEnabled=function(t,e){return!!t&&!0===(0,this._store.getState().paymentMethods.getPaymentMethodOrThrow)(t,e).config.isHostedFormEnabled},t.prototype._isSubmittingWithStoredCard=function(t){return!(!t.paymentData||!Object(be.a)(t.paymentData))},t.prototype._isStoringNewCard=function(t){var e;return!!(t.paymentData&&(null===(e=t.paymentData)||void 0===e?void 0:e.shouldSaveInstrument))},t.prototype._shouldPerform3DSVerification=function(t){return!(!this._is3dsEnabled||this._isSubmittingWithStoredCard(t))},t}();var Pn=function(){function t(t,e,n,r,i,o){void 0===o&&(o=!1),this._store=t,this._orderActionCreator=e,this._paymentActionCreator=n,this._paymentMethodActionCreator=r,this._braintreePaymentProcessor=i,this._credit=o}return t.prototype.initialize=function(t){var e=this,n=t.braintree,r=t.methodId;return this._paymentMethod=this._store.getState().paymentMethods.getPaymentMethod(r),this._paymentMethod&&this._paymentMethod.nonce?Promise.resolve(this._store.getState()):this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(r)).then((function(t){if(e._paymentMethod=t.paymentMethods.getPaymentMethod(r),!e._paymentMethod||!e._paymentMethod.clientToken)throw new v.b(v.a.MissingPaymentMethod);return e._braintreePaymentProcessor.initialize(e._paymentMethod.clientToken,n),e._braintreePaymentProcessor.preloadPaypal()})).then((function(){return e._store.getState()})).catch((function(t){return e._handleError(t)}))},t.prototype.execute=function(t,e){var n=this,r=t.payment,i=Object(d.__rest)(t,["payment"]);if(!r)throw new Ue(["payment"]);return(r?this._preparePaymentData(r,i.useStoreCredit):Promise.resolve(r)).then((function(t){return Promise.all([t,n._store.dispatch(n._orderActionCreator.submitOrder(i,e))])})).then((function(t){var e=t[0];return n._store.dispatch(n._paymentActionCreator.submitPayment(e))})).catch((function(t){return n._handleError(t)}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.deinitialize=function(){var t=this;return this._braintreePaymentProcessor.deinitialize().then((function(){return t._store.getState()}))},t.prototype._handleError=function(t){if(!function(t){return"BraintreeError"===t.name}(t))throw t;if("PAYPAL_POPUP_CLOSED"===t.code)throw new xe(t.message);throw new An.a(t.message)},t.prototype._preparePaymentData=function(t,e){var n=this,r=this._store.getState(),i=r.checkout.getOutstandingBalance(e),o=r.config.getStoreConfig();if(!i)throw new v.b(v.a.MissingCheckout);if(!o)throw new v.b(v.a.MissingCheckoutConfig);if(!this._paymentMethod)throw new bt.b(bt.a.PaymentNotInitialized);var a=o.currency,s=o.storeProfile.storeLanguage,c=this._paymentMethod,u=c.nonce,p=c.config.isVaultingEnabled,h=t.paymentData,l=void 0===h?{}:h;if(u)return Promise.resolve(Object(d.__assign)(Object(d.__assign)({},t),{paymentData:this._formattedPayload(u)}));if(Object(be.a)(l)||Object(be.c)(l)){if(!p)throw new It.a("Vaulting is disabled but a vaulted instrument was being used for this transaction");return Promise.resolve(t)}if(l.shouldSaveInstrument&&!p)throw new It.a("Vaulting is disabled but shouldSaveInstrument is set to true");var m,f=r.shippingAddress.getShippingAddress(),_=f?{recipientName:(m=f).firstName+" "+m.lastName,line1:m.address1,line2:m.address2,city:m.city,state:m.stateOrProvinceCode,postalCode:m.postalCode,countryCode:m.countryCode,phone:m.phone}:void 0;return Promise.all([this._braintreePaymentProcessor.paypal({amount:i,locale:s,currency:a.code,offerCredit:this._credit,shippingAddressOverride:_,shouldSaveInstrument:l.shouldSaveInstrument||!1}),this._braintreePaymentProcessor.getSessionId()]).then((function(e){var r=e[0],i=void 0===r?{}:r,o=i.nonce,a=i.details,s=e[1];return Object(d.__assign)(Object(d.__assign)({},t),{paymentData:n._formattedPayload(o,a&&a.email,s,l.shouldSaveInstrument,l.shouldSetAsDefaultInstrument)})}))},t.prototype._formattedPayload=function(t,e,n,r,i){return{formattedPayload:{vault_payment_instrument:r||null,set_as_default_stored_instrument:i||null,device_info:n||null,paypal_account:{token:t,email:e||null}}}},t}(),jn=function(){function t(t,e,n,r,i,o,a,s){this._store=t,this._checkoutActionCreator=e,this._paymentMethodActionCreator=n,this._paymentStrategyActionCreator=r,this._paymentActionCreator=i,this._orderActionCreator=o,this._braintreeVisaCheckoutPaymentProcessor=a,this._visaCheckoutScriptLoader=s}return t.prototype.initialize=function(t){var e=this,n=t.braintreevisacheckout,r=t.methodId;if(!n)throw new It.a('Unable to initialize payment because "options.braintreevisacheckout" argument is not provided.');return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(r)).then((function(t){e._paymentMethod=t.paymentMethods.getPaymentMethod(r);var i=t.checkout.getCheckout(),o=t.config.getStoreConfig();if(!i)throw new v.b(v.a.MissingCheckout);if(!o)throw new v.b(v.a.MissingCheckoutConfig);if(!e._paymentMethod||!e._paymentMethod.clientToken)throw new v.b(v.a.MissingPaymentMethod);var a=n.onError,s=void 0===a?function(){}:a,c=n.onPaymentSelect,u=void 0===c?function(){}:c,d={locale:o.storeProfile.storeLanguage,collectShipping:!1,subtotal:i.subtotal,currencyCode:o.currency.code};return Promise.all([e._visaCheckoutScriptLoader.load(e._paymentMethod.config.testMode),e._braintreeVisaCheckoutPaymentProcessor.initialize(e._paymentMethod.clientToken,d)]).then((function(t){var n=t[0],r=t[1];n.init(r),n.on("payment.success",(function(t){return e._paymentInstrumentSelected(t).then((function(){return u()})).catch((function(t){return s(t)}))})),n.on("payment.error",(function(t,e){return s(e)}))}))})).then((function(){return e._store.getState()}))},t.prototype.execute=function(t,e){var n=this,r=t.payment,i=Object(d.__rest)(t,["payment"]);if(!r)throw new It.a('Unable to submit payment because "payload.payment" argument is not provided.');if(!this._paymentMethod||!this._paymentMethod.initializationData||!this._paymentMethod.initializationData.nonce)throw new v.b(v.a.MissingPaymentMethod);var o=this._paymentMethod.initializationData.nonce;return this._store.dispatch(this._orderActionCreator.submitOrder(i,e)).then((function(){return n._store.dispatch(n._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},r),{paymentData:{nonce:o}})))})).catch((function(t){return n._handleError(t)}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.deinitialize=function(){var t=this;return this._braintreeVisaCheckoutPaymentProcessor.deinitialize().then((function(){return t._store.getState()}))},t.prototype._paymentInstrumentSelected=function(t){var e=this,n=this._store.getState();if(!this._paymentMethod)throw new Error("Payment method not initialized");var r=this._paymentMethod.id;return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction((function(){return e._braintreeVisaCheckoutPaymentProcessor.handleSuccess(t,n.shippingAddress.getShippingAddress(),n.billingAddress.getBillingAddress()).then((function(){return Promise.all([e._store.dispatch(e._checkoutActionCreator.loadCurrentCheckout()),e._store.dispatch(e._paymentMethodActionCreator.loadPaymentMethod(r))])}))}),{methodId:r}),{queueId:"widgetInteraction"})},t.prototype._handleError=function(t){if("BraintreeError"===t.name)throw new An.a(t.message);throw t},t}();var kn,Mn,Tn,Rn,Dn,zn,Ln,Nn=function(){function t(t,e,n){this._store=t,this._paymentActionCreator=e,this._cardinalClient=n}return t.prototype.prepare=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(e){switch(e.label){case 0:return[4,this._cardinalClient.load(t.id,t.config.testMode)];case 1:return e.sent(),[2]}}))}))},t.prototype.start=function(t,e,n,r){var i,o,a;return Object(d.__awaiter)(this,void 0,void 0,(function(){var s,c,u,p,h,l,m,f,_,y,g,b;return Object(d.__generator)(this,(function(d){switch(d.label){case 0:s=this._store.getState().instruments.getCardInstrument,c=e.payment,p=(u=void 0===c?{methodId:""}:c).paymentData,h=void 0===p?{}:p,d.label=1;case 1:return d.trys.push([1,3,,13]),[4,t(e,n)];case 2:return[2,d.sent()];case 3:return(l=d.sent())instanceof qe.a&&"additional_action_required"===l.body.status?(m=null===(o=null===(i=l.body.additional_action_required)||void 0===i?void 0:i.data)||void 0===o?void 0:o.token,f=null===(a=l.body.three_ds_result)||void 0===a?void 0:a.payer_auth_request,[4,this._cardinalClient.configure(m)]):[3,12];case 4:return d.sent(),(_=this._getBin(h,s,r))?[4,this._cardinalClient.runBinProcess(_)]:[3,6];case 5:d.sent(),d.label=6;case 6:return d.trys.push([6,8,,12]),[4,this._submitPayment(u,{xid:f},r)];case 7:return[2,d.sent()];case 8:return(y=d.sent())instanceof qe.a&&Object(Bt.some)(y.body.errors,{code:"three_d_secure_required"})?(g=y.body.three_ds_result,b=null==g?void 0:g.payer_auth_request,[4,this._cardinalClient.getThreeDSecureData(g,this._getOrderData())]):[3,11];case 9:return d.sent(),[4,this._submitPayment(u,{token:b},r)];case 10:return[2,d.sent()];case 11:throw y;case 12:throw l;case 13:return[2]}}))}))},t.prototype._getOrderData=function(){var t=this._store.getState(),e=t.billingAddress.getBillingAddressOrThrow(),n=t.shippingAddress.getShippingAddress(),r=t.checkout.getCheckoutOrThrow().cart,i=r.currency.code,o=r.cartAmount;return{billingAddress:e,shippingAddress:n,currencyCode:i,id:t.order.getOrderOrThrow().orderId.toString(),amount:o}},t.prototype._submitPayment=function(t,e,n){return Object(d.__awaiter)(this,void 0,void 0,(function(){var r;return Object(d.__generator)(this,(function(i){switch(i.label){case 0:return r=Object(Bt.merge)({},t,{paymentData:{threeDSecure:e}}),n?[3,2]:[4,this._store.dispatch(this._paymentActionCreator.submitPayment(r))];case 1:return[2,i.sent()];case 2:return[4,n.submit(r)];case 3:return i.sent(),[2,this._store.getState()]}}))}))},t.prototype._getBin=function(t,e,n){var r=Object(be.a)(t)&&e(t.instrumentId),i=function(t){var e=t;return!Object(be.a)(e)&&"string"==typeof e.ccName&&"string"==typeof e.ccNumber&&"object"==typeof e.ccExpiry&&"string"==typeof e.ccExpiry.month&&"string"==typeof e.ccExpiry.year}(t)&&t.ccNumber;return(r?r.iin:n?null==n?void 0:n.getBin():i)||""},t}(),Fn=[100004,1010,1011,1020];!function(t){t.Init="init",t.Complete="complete",t.Confirm="confirm"}(kn||(kn={})),function(t){t.SetupCompleted="payments.setupComplete",t.Validated="payments.validated"}(Mn||(Mn={})),function(t){t.Success="SUCCESS",t.NoAction="NOACTION",t.Failure="FAILURE",t.Error="ERROR"}(Tn||(Tn={})),function(t){t.CCA="CCA",t.Paypal="Paypal",t.Wallet="Wallet",t.VisaCheckout="VisaCheckout",t.ApplePay="ApplePay",t.DiscoverWallet="DiscoverWallet"}(Rn||(Rn={})),function(t){t.BinProcess="bin.process"}(Dn||(Dn={})),function(t){t.CCA="cca"}(zn||(zn={})),function(t){t.Yes="Y",t.No="N"}(Ln||(Ln={}));var qn,Un=function(){function t(t){this._scriptLoader=t,this._provider="",this._testMode=!1,this._configurationToken=""}return t.prototype.load=function(t,e){return void 0===e&&(e=!1),this._provider=t,this._testMode=e,this._sdk||(this._sdk=this._scriptLoader.load(t,e)),this._sdk.then((function(){}))},t.prototype.configure=function(t){var e=this;if(this._configurationToken){if(this._configurationToken===t)return Promise.resolve();this._sdk=this._scriptLoader.load(this._provider+"."+Date.now(),this._testMode)}return this._getClientSDK().then((function(n){return new Promise((function(r,i){n.on(Mn.SetupCompleted,(function(){n.off(Mn.SetupCompleted),n.off(Mn.Validated),e._configurationToken=t,r()})),n.on(Mn.Validated,(function(t){switch(n.off(Mn.SetupCompleted),n.off(Mn.Validated),t.ActionCode){case Tn.Error:Object(Bt.includes)(Fn,t.ErrorNumber)&&i(new v.b(v.a.MissingPaymentMethod)),i(new An.a(t.ErrorDescription))}})),n.setup(kn.Init,{jwt:t})}))}))},t.prototype.runBinProcess=function(t){return this._getClientSDK().then((function(e){return e.trigger(Dn.BinProcess,t).catch((function(){}))})).then((function(t){if(!t||!t.Status)throw new bt.b(bt.a.PaymentNotInitialized)}))},t.prototype.getThreeDSecureData=function(t,e){var n=this;return this._getClientSDK().then((function(r){return new Promise((function(i,o){r.on(Mn.Validated,(function(t,e){if(r.off(Mn.Validated),!e)return o(new An.a(t.ErrorDescription?t.ErrorDescription:"An error was encountered while processing the transaction."));if(!t.ActionCode)return i({token:e});switch(t.ActionCode){case Tn.Success:return i({token:e});case Tn.NoAction:return t.ErrorNumber>0?o(new An.a(t.ErrorDescription)):t.Payment&&t.Payment.ExtendedData&&t.Payment.ExtendedData.SignatureVerification===Ln.Yes?i({token:e}):o(new An.a("Transaction signature could not be validated."));case Tn.Failure:return o(new An.a("User failed authentication or an error was encountered while processing the transaction."));case Tn.Error:return o(new An.a(t.ErrorDescription))}}));var a={AcsUrl:t.acs_url,Payload:t.merchant_data},s=n._mapToPartialOrder(e,t.payer_auth_request);r.continue(zn.CCA,a,s)}))}))},t.prototype._mapToPartialOrder=function(t,e){var n={BillingAddress:this._mapToCardinalAddress(t.billingAddress)};return t.paymentData&&(n.Account=this._mapToCardinalAccount(t.paymentData)),t.billingAddress.email&&(n.Email1=t.billingAddress.email),t.shippingAddress&&(n.ShippingAddress=this._mapToCardinalAddress(t.shippingAddress)),{Consumer:n,OrderDetails:{OrderNumber:t.id,Amount:t.amount,CurrencyCode:t.currencyCode,OrderChannel:"S",TransactionId:e}}},t.prototype._mapToCardinalAccount=function(t){return{AccountNumber:Number(t.ccNumber),ExpirationMonth:Number(t.ccExpiry.month),ExpirationYear:Number(t.ccExpiry.year),NameOnAccount:t.ccName,CardCode:Number(t.ccCvv)}},t.prototype._mapToCardinalAddress=function(t){var e={FirstName:t.firstName,LastName:t.lastName,Address1:t.address1,City:t.city,State:t.stateOrProvince,PostalCode:t.postalCode,CountryCode:t.countryCode};return t.address2&&(e.Address2=t.address2),t.phone&&(e.Phone1=t.phone),e},t.prototype._getClientSDK=function(){if(!this._sdk)throw new bt.b(bt.a.PaymentNotInitialized);return this._sdk},t}(),xn=function(){function t(t,e){void 0===e&&(e=window),this._scriptLoader=t,this._window=e}return t.prototype.load=function(t,e){var n=this,r=e?"https://songbirdstag.cardinalcommerce.com/edge/v1/songbird.js":"https://songbird.cardinalcommerce.com/edge/v1/songbird.js";return this._scriptLoader.loadScript(r+"?v="+t).then((function(){if(!n._window.Cardinal)throw new $.a;return n._window.Cardinal}))},t}(),Bn=function(){function t(t,e,n,r){this._store=t,this._paymentActionCreator=e,this._paymentMethodActionCreator=n,this._cardinalClient=r}return t.prototype.prepare=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n;return Object(d.__generator)(this,(function(r){switch(r.label){case 0:return[4,this._cardinalClient.load(t.id,t.config.testMode)];case 1:return r.sent(),n=(e=this._cardinalClient).configure,[4,this._getClientToken(t)];case 2:return[4,n.apply(e,[r.sent()])];case 3:return r.sent(),[2]}}))}))},t.prototype.start=function(t,e,n,r){return Object(d.__awaiter)(this,void 0,void 0,(function(){var i,o,a,s,c,u,p,h,l,m,f,_,y;return Object(d.__generator)(this,(function(d){switch(d.label){case 0:return i=this._store.getState(),o=i.instruments.getCardInstrument,a=i.paymentMethods.getPaymentMethodOrThrow,s=e.payment,u=(c=void 0===s?{}:s).methodId,p=void 0===u?"":u,h=c.paymentData,l=void 0===h?{}:h,m=Object(be.a)(l)&&o(l.instrumentId),(f=m?m.iin:r&&r.getBin())?[4,this._cardinalClient.runBinProcess(f)]:[3,2];case 1:d.sent(),d.label=2;case 2:return d.trys.push([2,4,,9]),[4,t(Object(Bt.merge)(e,{payment:{paymentData:{threeDSecure:{token:a(p).clientToken}}}}),n)];case 3:return[2,d.sent()];case 4:if(!((_=d.sent())instanceof qe.a&&Object(Bt.some)(_.body.errors,{code:"three_d_secure_required"})))throw _;return[4,this._cardinalClient.getThreeDSecureData(_.body.three_ds_result,this._getOrderData())];case 5:return y=d.sent(),r?[3,7]:[4,this._store.dispatch(this._paymentActionCreator.submitPayment(Object(Bt.merge)(e.payment,{paymentData:{threeDSecure:y}})))];case 6:return[2,d.sent()];case 7:return[4,r.submit(Object(Bt.merge)(e.payment,{paymentData:{threeDSecure:y}}))];case 8:return d.sent(),[2,this._store.getState()];case 9:return[2]}}))}))},t.prototype._getClientToken=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(e){switch(e.label){case 0:return t.clientToken?[2,t.clientToken]:[4,this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(t.id))];case 1:return[2,(0,e.sent().paymentMethods.getPaymentMethodOrThrow)(t.id).clientToken||""]}}))}))},t.prototype._getOrderData=function(){var t=this._store.getState(),e=t.billingAddress.getBillingAddressOrThrow(),n=t.shippingAddress.getShippingAddress(),r=t.checkout.getCheckoutOrThrow(),i=t.order.getOrderOrThrow();return{billingAddress:e,shippingAddress:n,currencyCode:r.cart.currency.code,id:i.orderId.toString(),amount:r.cart.cartAmount}},t}();!function(t){t.StartCheckout="startCheckout",t.CompleteCheckout="completeCheckout",t.CancelCheckout="cancelCheckout"}(qn||(qn={}));var Gn,Vn,Yn=function(){function t(t,e,n,r,i,o,a,s,c){this._store=t,this._checkoutActionCreator=e,this._orderActionCreator=n,this._paymentActionCreator=r,this._paymentMethodActionCreator=i,this._paymentStrategyActionCreator=o,this._requestSender=a,this._chasePayScriptLoader=s,this._wepayRiskClient=c,this._walletEvent$=new b.Subject}return t.prototype.initialize=function(t){var e=this;if(this._methodId=t.methodId,!t.chasepay)throw new It.a('Unable to initialize payment because "options.chasepay" argument is not provided.');var n=t.chasepay.walletButton&&document.getElementById(t.chasepay.walletButton);return n&&(this._walletButton=n,this._walletButton.addEventListener("click",this._handleWalletButtonClick)),this._configureWallet(t.chasepay).then((function(){return e._store.getState()}))},t.prototype.deinitialize=function(){return this._walletButton&&this._walletButton.removeEventListener("click",this._handleWalletButtonClick),this._walletButton=void 0,this._chasePayClient=void 0,Promise.resolve(this._store.getState())},t.prototype.execute=function(t,e){var n=this;return this._getPayment().catch((function(t){if(t.subtype===v.a.MissingPayment)return n._displayWallet().then((function(){return n._getPayment()}));throw t})).then((function(r){return n._createOrder(r,t.useStoreCredit,e)}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype._configureWallet=function(t){var e=this,n=this._store.getState(),r=n.paymentMethods.getPaymentMethod(this._methodId),i=n.config.getStoreConfig();if(!r)throw new v.b(v.a.MissingPaymentMethod);if(!i)throw new v.b(v.a.MissingCheckoutConfig);return this._chasePayScriptLoader.load(r.config.testMode).then((function(n){var r=n.ChasePay;e._chasePayClient=r,t.logoContainer&&document.getElementById(t.logoContainer)&&e._chasePayClient.insertBrandings({color:"white",containers:[t.logoContainer]}),e._chasePayClient.configure({language:i.storeProfile.storeLanguage}),e._chasePayClient.on(qn.CancelCheckout,(function(){e._walletEvent$.next({type:qn.CancelCheckout}),t.onCancel&&t.onCancel()})),e._chasePayClient.on(qn.CompleteCheckout,(function(n){e._setSessionToken(n.sessionToken).then((function(){e._walletEvent$.next({type:qn.CompleteCheckout}),t.onPaymentSelect&&t.onPaymentSelect()}))}))}))},t.prototype._displayWallet=function(){var t=this;return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction((function(){return t._store.dispatch(t._paymentMethodActionCreator.loadPaymentMethod(t._methodId)).then((function(e){var n=e.paymentMethods.getPaymentMethod(t._methodId);if(!t._chasePayClient)throw new bt.b(bt.a.PaymentNotInitialized);if(!n)throw new v.b(v.a.MissingPaymentMethod);t._chasePayClient.showLoadingAnimation(),t._chasePayClient.startCheckout(n.initializationData.digitalSessionId)})),new Promise((function(e,n){t._walletEvent$.pipe(Object(M.take)(1)).subscribe((function(t){t.type===qn.CancelCheckout?n(new xe):t.type===qn.CompleteCheckout&&e()}))}))}),{methodId:this._methodId}),{queueId:"widgetInteraction"})},t.prototype._setSessionToken=function(t){var e=this,n=this._store.getState().paymentMethods.getPaymentMethod(this._methodId),r=n&&n.initializationData.merchantRequestId;return this._requestSender.post("checkout.php",{headers:{Accept:"text/html","Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},body:{action:"set_external_checkout",provider:this._methodId,sessionToken:t,merchantRequestId:r}}).then((function(){return Promise.all([e._store.dispatch(e._checkoutActionCreator.loadCurrentCheckout()),e._store.dispatch(e._paymentMethodActionCreator.loadPaymentMethod(e._methodId))])})).then((function(){return e._store.getState()}))},t.prototype._getPayment=function(){var t=this;return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId)).then((function(){return"wepay"===t._methodId?t._wepayRiskClient.initialize().then((function(t){return t.getRiskToken()})):""})).then((function(e){var n=t._store.getState().paymentMethods.getPaymentMethod(t._methodId);if(!n)throw new v.b(v.a.MissingPaymentMethod);if(!n.initializationData.paymentCryptogram)throw new v.b(v.a.MissingPayment);var r={method:t._methodId,cryptogramId:n.initializationData.paymentCryptogram,eci:n.initializationData.eci,transactionId:btoa(n.initializationData.reqTokenId),ccExpiry:{month:n.initializationData.expDate.toString().substr(0,2),year:n.initializationData.expDate.toString().substr(2,2)},ccNumber:n.initializationData.accountNum,accountMask:n.initializationData.accountMask,extraData:e?{riskToken:e}:void 0};return{methodId:t._methodId,paymentData:r}}))},t.prototype._createOrder=function(t,e,n){var r=this;return this._store.dispatch(this._orderActionCreator.submitOrder({useStoreCredit:e},n)).then((function(){return r._store.dispatch(r._paymentActionCreator.submitPayment(t))}))},t.prototype._handleWalletButtonClick=function(t){t.preventDefault(),this._displayWallet()},Object(d.__decorate)([Dt.a],t.prototype,"_handleWalletButtonClick",null),t}(),Hn=function(t){function e(e,n,r,i,o){var a=t.call(this,e,n,r,i)||this;return a._formPoster=o,a}return Object(d.__extends)(e,t),e.prototype.execute=function(e,n){var r=this;return t.prototype.execute.call(this,e,n).catch((function(t){return t instanceof qe.a&&Object(Bt.some)(t.body.errors,{code:"three_d_secure_required"})?new Promise((function(){r._formPoster.postForm(t.body.three_ds_result.acs_url,{PaReq:t.body.three_ds_result.payer_auth_request,TermUrl:t.body.three_ds_result.callback_url,MD:t.body.three_ds_result.merchant_data})})):Promise.reject(t)}))},e.prototype.finalize=function(t){var e=this._store.getState(),n=e.order.getOrder();return n&&e.payment.getPaymentStatus()===mn.b?this._store.dispatch(this._orderActionCreator.finalizeOrder(n.orderId,t)):Promise.reject(new Jt)},e}(hn),Wn=function(t){function e(e,n,r,i,o){var a=t.call(this,e,n,r,i)||this;return a._store=e,a._orderActionCreator=n,a._paymentActionCreator=r,a._hostedFormFactory=i,a._formPoster=o,a}return Object(d.__extends)(e,t),e.prototype.finalize=function(t){var e=this._store.getState(),n=e.order.getOrder();return n&&e.payment.getPaymentStatus()===mn.b?this._store.dispatch(this._orderActionCreator.finalizeOrder(n.orderId,t)):Promise.reject(new Jt)},e.prototype._executeWithoutHostedForm=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a=this;return Object(d.__generator)(this,(function(s){switch(s.label){case 0:if(n=t.payment,r=Object(d.__rest)(t,["payment"]),i=n&&n.paymentData,!n||!i)throw new Ue(["payment.paymentData"]);return[4,this._store.dispatch(this._orderActionCreator.submitOrder(r,e))];case 1:s.sent(),s.label=2;case 2:return s.trys.push([2,4,,5]),[4,this._store.dispatch(this._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},n),{paymentData:i})))];case 3:return[2,s.sent()];case 4:return(o=s.sent())instanceof qe.a&&Object(Bt.some)(o.body.errors,{code:"three_d_secure_required"})?[2,new Promise((function(){return a._formPoster.postForm(o.body.three_ds_result.acs_url,{PaReq:o.body.three_ds_result.payer_auth_request||null,TermUrl:o.body.three_ds_result.callback_url||null,MD:o.body.three_ds_result.merchant_data||null})}))]:[2,Promise.reject(o)];case 5:return[2]}}))}))},e.prototype._executeWithHostedForm=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a=this;return Object(d.__generator)(this,(function(s){switch(s.label){case 0:if(n=t.payment,r=Object(d.__rest)(t,["payment"]),!(i=this._hostedForm))throw new bt.b(bt.a.PaymentNotInitialized);if(!n||!n.methodId)throw new Ue(["payment.methodId"]);s.label=1;case 1:return s.trys.push([1,5,,6]),[4,i.validate()];case 2:return s.sent(),[4,this._store.dispatch(this._orderActionCreator.submitOrder(r,e))];case 3:return s.sent(),[4,i.submit(n)];case 4:return s.sent(),[3,6];case 5:return(o=s.sent())instanceof qe.a&&Object(Bt.some)(o.body.errors,{code:"three_d_secure_required"})?[2,new Promise((function(){return a._formPoster.postForm(o.body.three_ds_result.acs_url,{PaReq:o.body.three_ds_result.payer_auth_request||null,TermUrl:o.body.three_ds_result.callback_url||null,MD:o.body.three_ds_result.merchant_data||null})}))]:[2,Promise.reject(o)];case 6:return[4,this._store.dispatch(this._orderActionCreator.loadCurrentOrder())];case 7:return[2,s.sent()]}}))}))},e}(hn),Kn=function(t){function e(e,n,r,i,o){var a=t.call(this,e,n,r,i)||this;return a._threeDSecureFlow=o,a}return Object(d.__extends)(e,t),e.prototype.initialize=function(e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r;return Object(d.__generator)(this,(function(i){switch(i.label){case 0:return[4,t.prototype.initialize.call(this,e)];case 1:return i.sent(),n=this._store.getState().paymentMethods.getPaymentMethodOrThrow,(r=n(e.methodId)).config.is3dsEnabled?[4,this._threeDSecureFlow.prepare(r)]:[3,3];case 2:i.sent(),i.label=3;case 3:return[2,this._store.getState()]}}))}))},e.prototype.execute=function(e,n){return Object(d.__awaiter)(this,void 0,void 0,(function(){var r,i,o;return Object(d.__generator)(this,(function(a){return r=e.payment,i=(void 0===r?{}:r).methodId,o=void 0===i?"":i,(0,this._store.getState().paymentMethods.getPaymentMethodOrThrow)(o).config.is3dsEnabled?[2,this._threeDSecureFlow.start(t.prototype.execute.bind(this),e,n,this._hostedForm)]:[2,t.prototype.execute.call(this,e,n)]}))}))},e}(hn),Jn=function(){function t(t,e,n,r){this._store=t,this._orderActionCreator=e,this._paymentActionCreator=n,this._formPoster=r}return t.prototype.execute=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a=this;return Object(d.__generator)(this,(function(s){switch(s.label){case 0:if(n=t.payment,r=Object(d.__rest)(t,["payment"]),i=n&&n.paymentData,!n||!i)throw new Ue(["payment.paymentData"]);return[4,this._store.dispatch(this._orderActionCreator.submitOrder(r,e))];case 1:s.sent(),s.label=2;case 2:return s.trys.push([2,4,,5]),[4,this._store.dispatch(this._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},n),{paymentData:i})))];case 3:return[2,s.sent()];case 4:return o=s.sent(),this._isAdditionalActionRequired(o)?[2,new Promise((function(){a._formPoster.postForm(o.body.additional_action_required.data.redirect_url,{})}))]:[2,Promise.reject(o)];case 5:return[2]}}))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.initialize=function(){return Promise.resolve(this._store.getState())},t.prototype.deinitialize=function(){return Promise.resolve(this._store.getState())},t.prototype._isAdditionalActionRequired=function(t){var e=t.body,n=e.additional_action_required;return"additional_action_required"===e.status&&n&&"offsite_redirect"===n.type},t}(),Zn=function(){function t(t,e,n,r,i,o,a,s){this._store=t,this._checkoutActionCreator=e,this._paymentMethodActionCreator=n,this._paymentStrategyActionCreator=r,this._paymentActionCreator=i,this._orderActionCreator=o,this._googlePayPaymentProcessor=a,this._googlePayAdyenV2PaymentProcessor=s}return t.prototype.initialize=function(t){var e=this;return this._methodId=t.methodId,this._googlePayPaymentProcessor.initialize(this._methodId).then((function(){if(e._googlePayOptions=e._getGooglePayOptions(t),!e._googlePayOptions)throw new It.a('Unable to initialize payment because "options.googlepay" argument is not provided.');var n=e._googlePayOptions.walletButton&&document.getElementById(e._googlePayOptions.walletButton);return n&&(e._walletButton=n,e._walletButton.addEventListener("click",e._handleWalletButtonClick)),e._store.getState()}))},t.prototype.deinitialize=function(){var t=this;return this._walletButton&&this._walletButton.removeEventListener("click",this._handleWalletButtonClick),this._walletButton=void 0,this._googlePayPaymentProcessor.deinitialize().then((function(){return t._store.getState()}))},t.prototype.execute=function(t,e){var n=this;if(!this._googlePayOptions)throw new It.a('Unable to initialize payment because "options.googlepay" argument is not provided.');var r=this._googlePayOptions,i=r.onError,o=void 0===i?function(){}:i,a=r.onPaymentSelect,s=void 0===a?function(){}:a;return Promise.resolve(this._getPayment()).then((function(t){return t.paymentData.nonce&&t.paymentData.cardInformation?t:n._googlePayPaymentProcessor.displayWallet().then((function(t){return n._paymentInstrumentSelected(t)})).then((function(){return s()})).then((function(){return n._getPayment()})).catch((function(t){"CANCELED"!==t.statusCode&&o(t)}))})).then((function(){return n._store.dispatch(n._orderActionCreator.submitOrder({useStoreCredit:t.useStoreCredit},e)).then((function(){return n._store.dispatch(n._paymentActionCreator.submitPayment(n._getPayment()))})).catch((function(t){var e;return(null===(e=n._googlePayAdyenV2PaymentProcessor)||void 0===e?void 0:e.processAdditionalAction(t))||Promise.reject(t)}))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype._getGooglePayOptions=function(t){if("googlepayadyenv2"===t.methodId&&t.googlepayadyenv2){if(!this._googlePayAdyenV2PaymentProcessor)throw new bt.b(bt.a.PaymentNotInitialized);return this._googlePayAdyenV2PaymentProcessor.initialize(t),t.googlepayadyenv2}if("googlepayauthorizenet"===t.methodId&&t.googlepayauthorizenet)return t.googlepayauthorizenet;if("googlepaycheckoutcom"===t.methodId&&t.googlepaycheckoutcom)return t.googlepaycheckoutcom;if("googlepaybraintree"===t.methodId&&t.googlepaybraintree)return t.googlepaybraintree;if("googlepaystripe"===t.methodId&&t.googlepaystripe)return t.googlepaystripe;throw new It.a},t.prototype._getPayment=function(){if(!this._methodId)throw new bt.b(bt.a.PaymentNotInitialized);var t,e=this._store.getState().paymentMethods.getPaymentMethod(this._methodId);if(!e)throw new v.b(v.a.MissingPaymentMethod);if(!e.initializationData.nonce)throw new v.b(v.a.MissingPayment);t="googlepayadyenv2"===this._methodId?JSON.stringify({type:Le.GooglePay,googlePayToken:e.initializationData.nonce,browser_info:Re()}):e.initializationData.nonce;var n={method:this._methodId,nonce:t,cardInformation:e.initializationData.card_information};return{methodId:this._methodId,paymentData:n}},t.prototype._handleWalletButtonClick=function(t){var e=this;if(t.preventDefault(),!this._methodId||!this._googlePayOptions)throw new bt.b(bt.a.PaymentNotInitialized);var n=this._googlePayOptions,r=n.onError,i=void 0===r?function(){}:r,o=n.onPaymentSelect,a=void 0===o?function(){}:o;return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction((function(){return e._googlePayPaymentProcessor.displayWallet().then((function(t){return e._paymentInstrumentSelected(t)})).then((function(){return a()})).catch((function(t){"CANCELED"!==t.statusCode&&i(t)}))}),{methodId:this._methodId}),{queueId:"widgetInteraction"})},t.prototype._paymentInstrumentSelected=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e;return Object(d.__generator)(this,(function(n){switch(n.label){case 0:if(!this._methodId)throw new bt.b(bt.a.PaymentNotInitialized);return e=this._methodId,[4,this._googlePayPaymentProcessor.handleSuccess(t)];case 1:return n.sent(),[4,Promise.all([this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(e))])];case 2:return[2,n.sent()]}}))}))},Object(d.__decorate)([Dt.a],t.prototype,"_handleWalletButtonClick",null),t}(),Qn=function(){function t(t,e,n){this._store=t,this._paymentActionCreator=e,this._scriptLoader=n}return t.prototype.initialize=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i,o,a;return Object(d.__generator)(this,(function(s){switch(s.label){case 0:if(e=this._store.getState(),n=e.paymentMethods.getPaymentMethodOrThrow(t.methodId),!(r=e.config.getStoreConfig()))throw new v.b(v.a.MissingCheckoutConfig);return i={key:"",value:""},n.initializationData.originKey?(i.key="originKey",i.value=n.initializationData.originKey):(i.key="clientKey",i.value=n.initializationData.clientKey),o=this,[4,this._scriptLoader.load((a={environment:n.config.testMode?"TEST":" PRODUCTION",locale:r.storeProfile.storeLanguage},a[i.key]=i.value,a.paymentMethodsResponse=n.initializationData.paymentMethodsResponse,a))];case 1:return o._adyenClient=s.sent(),[2]}}))}))},t.prototype.processAdditionalAction=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n;return Object(d.__generator)(this,(function(r){switch(r.label){case 0:return t instanceof qe.a&&Object(Bt.some)(t.body.errors,{code:"additional_action_required"})?[4,this._handleAction(t.body.provider_data)]:[2,Promise.reject(t)];case 1:e=r.sent(),r.label=2;case 2:return r.trys.push([2,4,,5]),[4,this._store.dispatch(this._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},e),{paymentData:Object(d.__assign)({},e.paymentData)})))];case 3:return[2,r.sent()];case 4:return n=r.sent(),[2,this.processAdditionalAction(n)];case 5:return[2]}}))}))},t.prototype._handleAction=function(t){var e=this;return new Promise((function(n,r){var i=JSON.parse(t.action);e._getAdyenClient().createFromAction(i,{onAdditionalDetails:function(t){var e={methodId:i.paymentMethodType,paymentData:{nonce:JSON.stringify(t.data)}};n(e)},size:"05",onError:function(t){return r(t)}}).mount("body"),r(new xe)}))},t.prototype._getAdyenClient=function(){if(!this._adyenClient)throw new bt.b(bt.a.PaymentNotInitialized);return this._adyenClient},t}(),Xn=["AT","CH","DE","DK","ES","FI","GB","NL","NO","NZ","SE"],$n=["AU"],tr=function(){function t(t,e,n,r,i){this._store=t,this._orderActionCreator=e,this._paymentMethodActionCreator=n,this._remoteCheckoutActionCreator=r,this._klarnaScriptLoader=i}return t.prototype.initialize=function(t){var e=this;return this._klarnaScriptLoader.load().then((function(t){e._klarnaCredit=t})).then((function(){return e._unsubscribe=e._store.subscribe((function(n){n.paymentStrategies.isInitialized(t.methodId)&&e._loadWidget(t)}),(function(t){var e=t.checkout.getCheckout();return e&&e.outstandingBalance}),(function(t){var e=t.checkout.getCheckout();return e&&e.coupons})),e._loadWidget(t)})).then((function(){return e._store.getState()}))},t.prototype.deinitialize=function(){return this._unsubscribe&&this._unsubscribe(),Promise.resolve(this._store.getState())},t.prototype.execute=function(t,e){var n=this;if(!t.payment)throw new It.a('Unable to proceed because "payload.payment" argument is not provided.');var r=t.payment,i=(r.paymentData,Object(d.__rest)(r,["paymentData"]));return this._authorize().then((function(t){var e=t.authorization_token;return n._store.dispatch(n._remoteCheckoutActionCreator.initializePayment(i.methodId,{authorizationToken:e}))})).then((function(){return n._store.dispatch(n._orderActionCreator.submitOrder(Object(d.__assign)(Object(d.__assign)({},t),{payment:i,useStoreCredit:t.useStoreCredit}),e))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype._loadWidget=function(t){var e=this;if(!t.klarna)throw new It.a('Unable to load widget because "options.klarna" argument is not provided.');var n=t.methodId,r=t.klarna,i=r.container,o=r.onLoad;return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(n)).then((function(t){return new Promise((function(r){var a=t.paymentMethods.getPaymentMethod(n);if(!a)throw new v.b(v.a.MissingPaymentMethod);if(!e._klarnaCredit||!a.clientToken)throw new bt.b(bt.a.PaymentNotInitialized);e._klarnaCredit.init({client_token:a.clientToken}),e._klarnaCredit.load({container:i},(function(t){o&&o(t),r(t)}))}))}))},t.prototype._getUpdateSessionData=function(t,e){if(!Object(Bt.includes)(Object(d.__spreadArrays)(Xn,$n),t.countryCode))return{};var n={billing_address:this._mapToKlarnaAddress(t,t.email)};return e&&(n.shipping_address=this._mapToKlarnaAddress(e,t.email)),n},t.prototype._needsStateCode=function(t){return Object(Bt.includes)($n,t)},t.prototype._mapToKlarnaAddress=function(t,e){var n={street_address:t.address1,city:t.city,country:t.countryCode,given_name:t.firstName,family_name:t.lastName,postal_code:t.postalCode,region:this._needsStateCode(t.countryCode)?t.stateOrProvinceCode:t.stateOrProvince,email:e};return t.address2&&(n.street_address2=t.address2),t.phone&&(n.phone=t.phone),n},t.prototype._authorize=function(){var t=this;return new Promise((function(e,n){var r=t._store.getState().billingAddress.getBillingAddress(),i=t._store.getState().shippingAddress.getShippingAddress();if(!r)throw new v.b(v.a.MissingBillingAddress);if(!t._klarnaCredit)throw new bt.b(bt.a.PaymentNotInitialized);var o=t._getUpdateSessionData(r,i);t._klarnaCredit.authorize(o,(function(t){return t.approved?e(t):t.show_form?n(new xe):void n(new We.a)}))}))},t}(),er=function(){function t(t){this._scriptLoader=t}return t.prototype.load=function(){return this._scriptLoader.loadScript("//credit.klarnacdn.net/lib/v1/api.js").then((function(){return window.Klarna.Credit}))},t}(),nr=function(){function t(t,e,n,r,i){this._store=t,this._orderActionCreator=e,this._paymentMethodActionCreator=n,this._remoteCheckoutActionCreator=r,this._klarnav2ScriptLoader=i}return t.prototype.initialize=function(t){var e=this;return this._klarnav2ScriptLoader.load().then((function(t){e._klarnaPayments=t})).then((function(){return e._unsubscribe=e._store.subscribe((function(n){n.paymentStrategies.isInitialized(t.methodId)&&e._loadPaymentsWidget(t)}),(function(t){var e=t.checkout.getCheckout();return e&&e.outstandingBalance}),(function(t){var e=t.checkout.getCheckout();return e&&e.coupons})),e._loadPaymentsWidget(t)})).then((function(){return e._store.getState()}))},t.prototype.deinitialize=function(){return this._unsubscribe&&this._unsubscribe(),Promise.resolve(this._store.getState())},t.prototype.execute=function(t,e){var n=this;if(!t.payment)throw new It.a('Unable to proceed because "payload.payment" argument is not provided.');var r=t.payment,i=(r.paymentData,Object(d.__rest)(r,["paymentData"])),o=i.gatewayId;if(!o)throw new It.a('Unable to proceed because "payload.payment.gatewayId" argument is not provided.');return this._authorize(i.methodId).then((function(t){var e=t.authorization_token;return n._store.dispatch(n._remoteCheckoutActionCreator.initializePayment(o,{authorizationToken:e}))})).then((function(){return n._store.dispatch(n._orderActionCreator.submitOrder(Object(d.__assign)(Object(d.__assign)({},t),{payment:i,useStoreCredit:t.useStoreCredit}),e))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype._loadPaymentsWidget=function(t){var e=this;if(!t.klarnav2)throw new It.a('Unable to load widget because "options.klarnav2" argument is not provided.');var n=t.methodId,r=t.gatewayId,i=t.klarnav2,o=i.container,a=i.onLoad,s=this._store.getState();if(!r)throw new It.a('Unable to proceed because "payload.payment.gatewayId" argument is not provided.');return this._updateOrder(r).then((function(){return new Promise((function(t){var r=s.paymentMethods.getPaymentMethodOrThrow(n);if(!e._klarnaPayments||!r.clientToken)throw new bt.b(bt.a.PaymentNotInitialized);e._klarnaPayments.init({client_token:r.clientToken}),e._klarnaPayments.load({container:o,payment_method_category:r.id},(function(e){a&&a(e),t(e)}))}))}))},t.prototype._getUpdateSessionData=function(t,e){if(!Object(Bt.includes)(Object(d.__spreadArrays)(Xn,$n),t.countryCode))return{};var n={billing_address:this._mapToKlarnaAddress(t,t.email)};return e&&(n.shipping_address=this._mapToKlarnaAddress(e,t.email)),n},t.prototype._needsStateCode=function(t){return Object(Bt.includes)($n,t)},t.prototype._mapToKlarnaAddress=function(t,e){var n={street_address:t.address1,city:t.city,country:t.countryCode,given_name:t.firstName,family_name:t.lastName,postal_code:t.postalCode,region:this._needsStateCode(t.countryCode)?t.stateOrProvinceCode:t.stateOrProvince,email:e};return t.address2&&(n.street_address2=t.address2),t.phone&&(n.phone=t.phone),n},t.prototype._updateOrder=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(e){switch(e.label){case 0:return[4,this._paymentMethodActionCreator.loadPaymentMethod(t).toPromise()];case 1:return e.sent(),[2]}}))}))},t.prototype._authorize=function(t){var e=this;return new Promise((function(n,r){var i=e._store.getState().billingAddress.getBillingAddress(),o=e._store.getState().shippingAddress.getShippingAddress();if(!i)throw new v.b(v.a.MissingBillingAddress);var a=e._getUpdateSessionData(i,o);if(!e._klarnaPayments)throw new bt.b(bt.a.PaymentNotInitialized);e._klarnaPayments.authorize({payment_method_category:t},a,(function(t){return t.approved?n(t):t.show_form?r(new xe):void r(new We.a)}))}))},t}(),rr=function(){function t(t){this._scriptLoader=t}return t.prototype.load=function(){return this._scriptLoader.loadScript("https://x.klarnacdn.net/kp/lib/v1/api.js").then((function(){return window.Klarna.Payments}))},t}(),ir=function(){function t(t,e){this._store=t,this._orderActionCreator=e}return t.prototype.execute=function(t,e){return this._store.dispatch(this._orderActionCreator.submitOrder(t,e))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.initialize=function(){return Promise.resolve(this._store.getState())},t.prototype.deinitialize=function(){return Promise.resolve(this._store.getState())},t}(),or=function(){function t(t,e,n,r){this._store=t,this._orderActionCreator=e,this._paymentActionCreator=n,this._masterpassScriptLoader=r}return t.prototype.initialize=function(t){var e=this,n=t.methodId;if(this._paymentMethod=this._store.getState().paymentMethods.getPaymentMethod(n),!this._paymentMethod)throw new v.b(v.a.MissingPaymentMethod);return this._masterpassScriptLoader.load(this._paymentMethod.config.testMode).then((function(n){if(e._masterpassClient=n,!t.masterpass)throw new It.a('Unable to initialize payment because "options.masterpass" argument is not provided.');var r=t.masterpass.walletButton&&document.getElementById(t.masterpass.walletButton);return r&&(e._walletButton=r,e._walletButton.addEventListener("click",e._handleWalletButtonClick)),e._store.getState()}))},t.prototype.deinitialize=function(){return this._paymentMethod=void 0,this._walletButton&&this._walletButton.removeEventListener("click",this._handleWalletButtonClick),this._walletButton=void 0,this._masterpassClient=void 0,Promise.resolve(this._store.getState())},t.prototype.execute=function(t,e){var n=this,r=t.payment,i={useStoreCredit:t.useStoreCredit};if(!r)throw new It.a('Unable to submit payment because "payload.payment" argument is not provided.');if(!this._paymentMethod||!this._paymentMethod.initializationData||!this._paymentMethod.initializationData.gateway)throw new v.b(v.a.MissingPaymentMethod);var o=this._paymentMethod.initializationData.paymentData;if(!o)throw new It.a('Unable to proceed because "paymentMethod.initializationData.paymentData" argument is not provided.');return this._store.dispatch(this._orderActionCreator.submitOrder(i,e)).then((function(){return n._store.dispatch(n._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},r),{paymentData:o})))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype._createMasterpassPayload=function(){var t=this._store.getState(),e=t.checkout.getCheckout(),n=t.config.getStoreConfig();if(!e)throw new v.b(v.a.MissingCheckout);if(!n)throw new v.b(v.a.MissingCheckoutConfig);if(!this._paymentMethod||!this._paymentMethod.initializationData)throw new v.b(v.a.MissingPaymentMethod);return{checkoutId:this._paymentMethod.initializationData.checkoutId,allowedCardTypes:this._paymentMethod.initializationData.allowedCardTypes,amount:e.subtotal.toFixed(2),currency:n.currency.code,cartId:e.cart.id,suppressShippingAddress:!1,callbackUrl:Object(Lt.a)("checkout")}},t.prototype._handleWalletButtonClick=function(t){if(t.preventDefault(),this._masterpassClient){var e=this._createMasterpassPayload();this._masterpassClient.checkout(e)}},Object(d.__decorate)([Dt.a],t.prototype,"_handleWalletButtonClick",null),t}(),ar=function(){function t(t,e){this._store=t,this._orderActionCreator=e}return t.prototype.execute=function(t,e){return this._store.dispatch(this._orderActionCreator.submitOrder(Object(Bt.omit)(t,"payment"),e))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.initialize=function(){return Promise.resolve(this._store.getState())},t.prototype.deinitialize=function(){return Promise.resolve(this._store.getState())},t}(),sr=function(){function t(t,e){this._store=t,this._orderActionCreator=e}return t.prototype.execute=function(t,e){var n=this._orderActionCreator.submitOrder(Object(d.__assign)(Object(d.__assign)({},t),{payment:t.payment?{methodId:t.payment.methodId}:void 0}),e);return this._store.dispatch(n)},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.initialize=function(){return Promise.resolve(this._store.getState())},t.prototype.deinitialize=function(){return Promise.resolve(this._store.getState())},t}(),cr=function(){function t(t,e,n){this._store=t,this._orderActionCreator=e,this._paymentActionCreator=n}return t.prototype.execute=function(t,e){var n=this,r=t.payment,i=Object(d.__rest)(t,["payment"]),o=this._shouldSubmitFullPayload(r)?t:i,a=r&&r.paymentData,s=a&&a.instrumentId||void 0,c=a&&a.shouldSaveInstrument||void 0,u=a&&a.shouldSetAsDefaultInstrument||void 0;if(!r)throw new Ue(["payment"]);var p=r.methodId,h=r.gatewayId;return this._store.dispatch(this._orderActionCreator.submitOrder(o,e)).then((function(){return n._store.dispatch(n._paymentActionCreator.initializeOffsitePayment({methodId:p,gatewayId:h,instrumentId:s,shouldSaveInstrument:c,shouldSetAsDefaultInstrument:u}))}))},t.prototype.finalize=function(t){var e=this._store.getState(),n=e.order.getOrder(),r=e.payment.getPaymentStatus();return!n||r!==mn.a&&r!==mn.b?Promise.reject(new Jt):this._store.dispatch(this._orderActionCreator.finalizeOrder(n.orderId,t))},t.prototype.initialize=function(){return Promise.resolve(this._store.getState())},t.prototype.deinitialize=function(){return Promise.resolve(this._store.getState())},t.prototype._shouldSubmitFullPayload=function(t){return!!t&&("adyen"===t.gatewayId||"barclaycard"===t.gatewayId||"ccavenuemars"===t.methodId)},t}(),ur=function(t){function e(e,n,r,i,o){var a=t.call(this,e,n,r,i)||this;return a._threeDSecureFlow=o,a}return Object(d.__extends)(e,t),e.prototype.initialize=function(e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r;return Object(d.__generator)(this,(function(i){switch(i.label){case 0:return[4,t.prototype.initialize.call(this,e)];case 1:return i.sent(),n=this._store.getState().paymentMethods.getPaymentMethodOrThrow,(r=n(e.methodId)).config.is3dsEnabled?[4,this._threeDSecureFlow.prepare(r)]:[3,3];case 2:i.sent(),i.label=3;case 3:return[2,this._store.getState()]}}))}))},e.prototype.execute=function(e,n){var r=e.payment,i=(void 0===r?{}:r).methodId,o=void 0===i?"":i,a=this._store.getState(),s=a.payment.getPaymentStatus,c=a.paymentMethods.getPaymentMethodOrThrow;return s()===mn.a?this._store.dispatch(this._orderActionCreator.submitOrder(Object(d.__assign)(Object(d.__assign)({},e),{payment:{methodId:o}}),n)):c(o).config.is3dsEnabled?this._threeDSecureFlow.start(t.prototype.execute.bind(this),e,n,this._hostedForm):t.prototype.execute.call(this,e,n)},e}(hn),dr=function(){function t(t,e,n,r){void 0===r&&(r=window),this._store=t,this._orderActionCreator=e,this._scriptLoader=n,this._window=r,this._useRedirectFlow=!1}return t.prototype.initialize=function(t){var e=this,n=this._store.getState();return this._paymentMethod=n.paymentMethods.getPaymentMethod(t.methodId),this._useRedirectFlow=!0===(t.paypalexpress&&t.paypalexpress.useRedirectFlow),this._isInContextEnabled()?this._scriptLoader.loadPaypal().then((function(t){if(e._paypalSdk=t,!e._paymentMethod||!e._paymentMethod.config.merchantId)throw new v.b(v.a.MissingPaymentMethod);e._paypalSdk.checkout.setup(e._paymentMethod.config.merchantId,{button:"paypal-button",environment:e._paymentMethod.config.testMode?"sandbox":"production"})})).then((function(){return e._store.getState()})):Promise.resolve(this._store.getState())},t.prototype.deinitialize=function(){return this._isInContextEnabled()&&this._paypalSdk&&(this._paypalSdk.checkout.closeFlow(),this._paypalSdk=void 0),Promise.resolve(this._store.getState())},t.prototype.execute=function(t,e){var n=this,r=this._paypalSdk;if(this._isAcknowledgedOrFinalized())return this._store.dispatch(this._orderActionCreator.submitOrder(t,e));if(!this._isInContextEnabled()||this._useRedirectFlow)return this._store.dispatch(this._orderActionCreator.submitOrder(t,e)).then((function(t){var e=t.payment.getPaymentRedirectUrl();return e&&(n._window.top.location.href=e),new Promise((function(){}))}));if(!r)throw new bt.b(bt.a.PaymentNotInitialized);return r.checkout.initXO(),this._store.dispatch(this._orderActionCreator.submitOrder(t,e)).then((function(t){var e=t.payment.getPaymentRedirectUrl();return e&&r.checkout.startFlow(e),new Promise((function(){}))})).catch((function(t){return r.checkout.closeFlow(),Promise.reject(t)}))},t.prototype.finalize=function(t){var e=this._store.getState().order.getOrder();return e&&this._isAcknowledgedOrFinalized()?this._store.dispatch(this._orderActionCreator.finalizeOrder(e.orderId,t)):Promise.reject(new Jt)},t.prototype._isAcknowledgedOrFinalized=function(){var t=this._store.getState();return t.payment.getPaymentStatus()===mn.a||t.payment.getPaymentStatus()===mn.b},t.prototype._isInContextEnabled=function(){return!(!this._paymentMethod||!this._paymentMethod.config.merchantId)},t}(),pr=n(190),hr=function(){function t(t,e,n,r,i){this._store=t,this._paymentMethodActionCreator=e,this._paypalCommerceHostedForm=n,this._orderActionCreator=r,this._paymentActionCreator=i}return t.prototype.initialize=function(t){var e=t.methodId,n=t.paypalcommerce;return Object(d.__awaiter)(this,void 0,void 0,(function(){var t,r,i,o,a,s,c,u,p,h;return Object(d.__generator)(this,(function(d){switch(d.label){case 0:if(!n||!this._isPaypalCommerceOptionsPayments(n))throw new It.a('Unable to proceed because "options.paypalcommerce.form" argument is not provided.');return[4,this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(e))];case 1:if(t=d.sent(),r=t.paymentMethods.getPaymentMethodOrThrow,i=t.cart.getCartOrThrow,o=r(e),a=o.clientToken,s=o.initializationData,!a)throw new v.b(v.a.MissingPaymentMethod);return c=i(),u=c.id,p=c.currency.code,h=this._getOptionsScript(s,p,a),[4,this._paypalCommerceHostedForm.initialize(n.form,u,h)];case 2:return d.sent(),[2,this._store.getState()]}}))}))},t.prototype.execute=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a;return Object(d.__generator)(this,(function(s){switch(s.label){case 0:if(n=t.payment,r=Object(d.__rest)(t,["payment"]),!n)throw new Ue(["payment"]);return this._paypalCommerceHostedForm.validate(),[4,this._store.dispatch(this._orderActionCreator.submitOrder(r,e))];case 1:return i=s.sent().paymentMethods.getPaymentMethodOrThrow,[4,this._paypalCommerceHostedForm.submit(i(n.methodId).config.is3dsEnabled)];case 2:return o=s.sent().orderId,a={formattedPayload:{vault_payment_instrument:null,set_as_default_stored_instrument:null,device_info:null,paypal_account:{order_id:o}}},[2,this._store.dispatch(this._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},n),{paymentData:a})))]}}))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.deinitialize=function(){return this._paypalCommerceHostedForm.deinitialize(),Promise.resolve(this._store.getState())},t.prototype._isPaypalCommerceOptionsPayments=function(t){return!!t.form},t.prototype._getOptionsScript=function(t,e,n){var r=t.clientId,i=t.intent;return{"client-id":r,"merchant-id":t.merchantId,"data-client-token":n,components:["hosted-fields"],commit:!0,currency:e,intent:i}},t}(),lr=function(){function t(t,e){var n,r=this;this._options=t,this._styles=e,this._handleBlur=function(){var t;r._applyStyles(null===(t=r._styles)||void 0===t?void 0:t.default)},this._handleFocus=function(){var t;r._applyStyles(null===(t=r._styles)||void 0===t?void 0:t.focus)},this._input=document.createElement("input"),this._input.style.backgroundColor="transparent",this._input.style.border="0",this._input.style.display="block",this._input.style.height="100%",this._input.style.margin="0",this._input.style.outline="none",this._input.style.padding="0",this._input.style.width="100%",this._input.placeholder=this._options.placeholder||"",this._input.addEventListener("blur",this._handleBlur),this._input.addEventListener("focus",this._handleFocus),this._applyStyles(null===(n=this._styles)||void 0===n?void 0:n.default)}return t.prototype.getValue=function(){return this._input.value},t.prototype.attach=function(){var t=document.getElementById(this._options.containerId);if(!t)throw new It.a;t.appendChild(this._input)},t.prototype.detach=function(){var t;null===(t=this._input.parentNode)||void 0===t||t.removeChild(this._input)},t.prototype._applyStyles=function(t){var e=this;t&&Object.keys(t).forEach((function(n){e._input.style[n]=t[n]||""}))},t}();!function(t){t.CardCode="cardCode",t.CardCodeVerification="cardCodeVerification",t.CardExpiry="cardExpiry",t.CardName="cardName",t.CardNumber="cardNumber",t.CardNumberVerification="cardNumberVerification"}(Gn||(Gn={})),function(t){t[t.CreditCard=0]="CreditCard",t[t.StoredCardVerification=1]="StoredCardVerification"}(Vn||(Vn={}));var mr,fr,_r=function(){function t(t){var e=this;this._paypalCommercePaymentProcessor=t,this._handleBlur=function(t){var n,r;null===(r=null===(n=e._formOptions)||void 0===n?void 0:n.onBlur)||void 0===r||r.call(n,{fieldType:e._mapFieldType(t.emittedBy)})},this._handleFocus=function(t){var n,r;null===(r=null===(n=e._formOptions)||void 0===n?void 0:n.onFocus)||void 0===r||r.call(n,{fieldType:e._mapFieldType(t.emittedBy)})},this._handleCardTypeChange=function(t){var n,r,i;null===(r=null===(n=e._formOptions)||void 0===n?void 0:n.onCardTypeChange)||void 0===r||r.call(n,{cardType:null===(i=t.cards[0])||void 0===i?void 0:i.type})},this._handleInputSubmitRequest=function(t){var n,r;null===(r=null===(n=e._formOptions)||void 0===n?void 0:n.onEnter)||void 0===r||r.call(n,{fieldType:e._mapFieldType(t.emittedBy)})},this._handleValidityChange=function(t){var n,r;null===(r=null===(n=e._formOptions)||void 0===n?void 0:n.onValidate)||void 0===r||r.call(n,{isValid:Object.keys(t.fields).every((function(e){var n;return null===(n=t.fields[e])||void 0===n?void 0:n.isValid})),errors:e._mapValidationErrors(t.fields)})}}return t.prototype.initialize=function(t,e,n){return Object(d.__awaiter)(this,void 0,void 0,(function(){var r,i;return Object(d.__generator)(this,(function(o){switch(o.label){case 0:return[4,this._paypalCommercePaymentProcessor.initialize(n)];case 1:return o.sent(),this._formOptions=t,this._type=this._isPaypalCommerceFormFieldsMap(t.fields)?Vn.CreditCard:Vn.StoredCardVerification,r={fields:this._mapFieldOptions(t.fields),styles:t.styles&&this._mapStyleOptions(t.styles)},i={blur:this._handleBlur,focus:this._handleFocus,cardTypeChange:this._handleCardTypeChange,validityChange:this._handleValidityChange,inputSubmitRequest:this._handleInputSubmitRequest},[4,this._paypalCommercePaymentProcessor.renderHostedFields(e,r,i)];case 2:return o.sent(),this._isPaypalCommerceFormFieldsMap(t.fields)&&(this._cardNameField=new lr(t.fields.cardName,t.styles),this._cardNameField.attach()),[2]}}))}))},t.prototype.submit=function(t){var e;return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r;return Object(d.__generator)(this,(function(i){switch(i.label){case 0:return this.validate(),n={cardholderName:null===(e=this._cardNameField)||void 0===e?void 0:e.getValue(),contingencies:t?["3D_SECURE"]:void 0},[4,this._paypalCommercePaymentProcessor.submitHostedFields(n)];case 1:if(r=i.sent(),t&&("NO"===r.liabilityShift||"UNKNOWN"===r.liabilityShift))throw new An.a("Failed authentication. Please try to authorize again.");return[2,r]}}))}))},t.prototype.validate=function(){var t,e,n=this._paypalCommercePaymentProcessor.getHostedFieldsValidationState(),r=n.isValid,i=n.fields;if(!r){var o=this._mapValidationErrors(i);throw null===(e=null===(t=this._formOptions)||void 0===t?void 0:t.onValidate)||void 0===e||e.call(t,{errors:o,isValid:!1}),new vn(o)}},t.prototype.deinitialize=function(){this._paypalCommercePaymentProcessor.deinitialize()},t.prototype._mapFieldOptions=function(t){return this._isPaypalCommerceFormFieldsMap(t)?Object(Bt.omitBy)({number:{selector:"#"+t.cardNumber.containerId,placeholder:t.cardNumber.placeholder},expirationDate:{selector:"#"+t.cardExpiry.containerId,placeholder:t.cardExpiry.placeholder},cvv:t.cardCode&&{selector:"#"+t.cardCode.containerId,placeholder:t.cardCode.placeholder}},Bt.isNil):Object(Bt.omitBy)({number:t.cardNumberVerification&&{selector:"#"+t.cardNumberVerification.containerId,placeholder:t.cardNumberVerification.placeholder},cvv:t.cardCodeVerification&&{selector:"#"+t.cardCodeVerification.containerId,placeholder:t.cardCodeVerification.placeholder}},Bt.isNil)},t.prototype._mapStyleOptions=function(t){var e=function(t){return void 0===t&&(t={}),Object.keys(t).reduce((function(e,n){var r;return t[n]?Object(d.__assign)(Object(d.__assign)({},e),((r={})[Object(Bt.kebabCase)(n)]=t[n],r)):e}),{})};return{input:e(t.default),".invalid":e(t.error),":focus":e(t.focus)}},t.prototype._isPaypalCommerceFormFieldsMap=function(t){return!!t.cardNumber},t.prototype._mapFieldType=function(t){switch(t){case"number":return this._type===Vn.StoredCardVerification?Gn.CardNumberVerification:Gn.CardNumber;case"expirationDate":return Gn.CardExpiry;case"cvv":return this._type===Vn.StoredCardVerification?Gn.CardCodeVerification:Gn.CardCode;default:throw new Error("Unexpected field type")}},t.prototype._mapValidationErrors=function(t){var e=this;return Object.keys(t).reduce((function(n,r){var i,o;return Object(d.__assign)(Object(d.__assign)({},n),((i={})[e._mapFieldType(r)]=(null===(o=t[r])||void 0===o?void 0:o.isValid)?void 0:[e._createInvalidError(e._mapFieldType(r))],i))}),{})},t.prototype._createInvalidError=function(t){switch(t){case Gn.CardCodeVerification:return{fieldType:t,message:"Invalid card code",type:"invalid_card_code"};case Gn.CardNumberVerification:return{fieldType:t,message:"Invalid card number",type:"invalid_card_number"};case Gn.CardCode:return{fieldType:t,message:"Invalid card code",type:"invalid_card_code"};case Gn.CardExpiry:return{fieldType:t,message:"Invalid card expiry",type:"invalid_card_expiry"};case Gn.CardNumber:return{fieldType:t,message:"Invalid card number",type:"invalid_card_number"};default:return{fieldType:t,message:"Invalid field",type:"invalid"}}},t}(),yr=n(196),gr=function(){function t(t,e,n,r,i){this._store=t,this._orderActionCreator=e,this._paymentActionCreator=n,this._paypalCommercePaymentProcessor=r,this._paypalCommerceFundingKeyResolver=i}return t.prototype.initialize=function(t){var e=t.gatewayId,n=t.methodId,r=t.paypalcommerce;return Object(d.__awaiter)(this,void 0,void 0,(function(){var t,i,o,a,s,c,u,p,h,l,m,f,_,y,g,b,v=this;return Object(d.__generator)(this,(function(C){switch(C.label){case 0:if(t=this._store.getState(),i=t.paymentMethods.getPaymentMethodOrThrow,o=t.cart.getCartOrThrow,a=i(n,e).initializationData,c=(s=null!=a?a:{}).orderId,u=s.buttonStyle,c)return this._orderId=c,[2,this._store.getState()];if(!r)throw new It.a('Unable to initialize payment because "options.paypalcommerce" argument is not provided.');if(!this._isPaypalCommerceOptionsPayments(r))throw new It.a('Unable to initialize payment because "options.paypalcommerce" argument should contain "container", "onRenderButton", "submitForm".');return p=r.container,h=r.onRenderButton,l=r.submitForm,m=r.onValidate,f=o(),_=f.id,y=f.currency.code,g=this._getOptionsScript(a,y),b={style:u,onApprove:function(t){return v._tokenizePayment(t,l)},onClick:function(t,e){return Object(d.__awaiter)(v,void 0,void 0,(function(){return Object(d.__generator)(this,(function(t){return[2,m(e.resolve,e.reject)]}))}))}},[4,this._paypalCommercePaymentProcessor.initialize(g)];case 1:return C.sent(),this._paypalCommercePaymentProcessor.renderButtons(_,p,b,{onRenderButton:h,fundingKey:this._paypalCommerceFundingKeyResolver.resolve(n,e),paramsForProvider:{isCheckout:!0}}),[2,this._store.getState()]}}))}))},t.prototype.execute=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i;return Object(d.__generator)(this,(function(o){switch(o.label){case 0:if(n=t.payment,r=Object(d.__rest)(t,["payment"]),!n)throw new Ue(["payment"]);if(!this._orderId)throw new We.a;return i={formattedPayload:{vault_payment_instrument:null,set_as_default_stored_instrument:null,device_info:null,method_id:n.methodId,paypal_account:{order_id:this._orderId}}},[4,this._store.dispatch(this._orderActionCreator.submitOrder(r,e))];case 1:return o.sent(),[2,this._store.dispatch(this._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},n),{paymentData:i})))]}}))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.deinitialize=function(){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(t){return this._orderId=void 0,this._paypalCommercePaymentProcessor.deinitialize(),[2,Promise.resolve(this._store.getState())]}))}))},t.prototype._isPaypalCommerceOptionsPayments=function(t){return!!t.container},t.prototype._tokenizePayment=function(t,e){var n=t.orderID;this._orderId=n,e()},t.prototype._getOptionsScript=function(t,e){var n=t.clientId,r=t.intent,i=t.merchantId,o=t.buyerCountry,a={"client-id":n,"merchant-id":i,commit:!0,currency:e,intent:r};return t.isDeveloperModeApplicable?Object(d.__assign)(Object(d.__assign)({},a),{"buyer-country":o}):a},t}(),br=function(){function t(){}return t.prototype.resolve=function(t,e){if(t===Qt.PAYPAL_COMMERCE)return"PAYPAL";if(t===Qt.PAYPAL_COMMERCE_CREDIT)return"PAYLATER";if(e===Qt.PAYPAL_COMMERCE_ALTERNATIVE_METHODS)switch(t){case"bancontact":return"BANCONTACT";case"giropay":return"GIROPAY";case"przelewy24":return"P24";case"eps":return"EPS";case"ideal":return"IDEAL";case"mybank":return"MYBANK";case"sofort":return"SOFORT";case"blik":return"BLIK"}throw new Error("Unable to resolve funding key")},t}(),vr=function(t){function e(e,n,r,i,o){var a=t.call(this,e,n,r,i)||this;return a._formPoster=o,a}return Object(d.__extends)(e,t),e.prototype.execute=function(e,n){var r=this;return t.prototype.execute.call(this,e,n).catch((function(t){return t instanceof qe.a&&Object(Bt.some)(t.body.errors,{code:"three_d_secure_required"})?new Promise((function(){r._formPoster.postForm(t.body.three_ds_result.acs_url,{PaReq:t.body.three_ds_result.payer_auth_request,TermUrl:t.body.three_ds_result.callback_url,MD:t.body.three_ds_result.merchant_data},void 0,"_top")})):Promise.reject(t)}))},e.prototype.finalize=function(e){var n=this._store.getState(),r=n.order.getOrder();return r&&n.payment.getPaymentStatus()===mn.b?this._store.dispatch(this._orderActionCreator.finalizeOrder(r.orderId,e)):t.prototype.finalize.call(this,e)},e}(hn),Cr=n(169),Or=function(t){function e(e){var n=t.call(this,e||"Unsupported browser error")||this;return n.name="UnsupportedBrowserError",n.type="unsupported_browser",n}return Object(d.__extends)(e,t),e}(ht.a);!function(t){t.americanExpress="AMERICAN_EXPRESS",t.discover="DISCOVER",t.discoverDiners="DISCOVER_DINERS",t.JCB="JCB",t.masterCard="MASTERCARD",t.unionPay="CHINA_UNIONPAY",t.unknown="OTHER_BRAND",t.visa="VISA",t.squareGift="SQUARE_GIFT_CARD"}(mr||(mr={})),function(t){t.applePay="APPLEPAY",t.masterpass="MASTERPASS",t.none="NONE"}(fr||(fr={}));var Sr,wr,Ir,Ar=function(){function t(t,e,n,r,i,o,a,s){this._store=t,this._checkoutActionCreator=e,this._orderActionCreator=n,this._paymentActionCreator=r,this._paymentMethodActionCreator=i,this._paymentStrategyActionCreator=o,this._requestSender=a,this._scriptLoader=s}return t.prototype.initialize=function(t){var e=this,n=t.methodId;return this._syncPaymentMethod(n),this._scriptLoader.load().then((function(n){return new Promise((function(r,i){e._paymentForm=n(e._getFormOptions(t,{resolve:r,reject:i})),e._paymentForm.build()}))})).then((function(){return e._store.getState()}))},t.prototype.execute=function(t,e){var n=this,r=t.payment;if(!r||!r.methodId)throw new It.a('Unable to submit payment because "payload.payment.methodId" argument is not provided.');return this._syncPaymentMethod(r.methodId),this._getNonceInstrument(r.methodId).then((function(i){return n._store.dispatch(n._orderActionCreator.submitOrder(Object(Bt.omit)(t,"payment"),e)).then((function(){return n._store.dispatch(n._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},r),{paymentData:i})))}))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.deinitialize=function(){return Promise.resolve(this._store.getState())},t.prototype._syncPaymentMethod=function(t){var e=this._store.getState();if(this._paymentMethod=e.paymentMethods.getPaymentMethod(t),!this._paymentMethod||!this._paymentMethod.initializationData)throw new v.b(v.a.MissingPaymentMethod)},t.prototype._getCountryCode=function(t){switch(t.toUpperCase()){case"NEW ZELAND":return"NZ";case"AUSTRALIA":return"AU";default:return"US"}},t.prototype._getNonceInstrument=function(t){var e=this,n=this._store.getState().paymentMethods.getPaymentMethod(t);if(n){var r=n.initializationData;if(r&&r.paymentData.nonce)return Promise.resolve({nonce:n.initializationData.paymentData.nonce})}return new Promise((function(t,n){if(!e._paymentForm)throw new bt.b(bt.a.PaymentNotInitialized);e._deferredRequestNonce&&e._deferredRequestNonce.reject(new Cr.a),e._deferredRequestNonce={resolve:t,reject:n},e._paymentForm.requestCardNonce()}))},t.prototype._getFormOptions=function(t,e){var n=this,r=t.square;if(!r||!this._paymentMethod)throw new It.a('Unable to proceed because "options.square" argument is not provided.');return this._squareOptions=r,Object(d.__assign)(Object(d.__assign)(Object(d.__assign)({},this._squareOptions),this._paymentMethod.initializationData),{callbacks:{cardNonceResponseReceived:function(t,e,r,i,o){r&&r.digital_wallet_type!==fr.none?n._handleWalletNonceResponse(t,e,r,i,o):n._handleCardNonceResponse(t,e)},createPaymentRequest:function(){return n._paymentRequestPayload()},methodsSupported:function(t){var e=r.masterpass;e&&n._showPaymentMethods(t,e)},paymentFormLoaded:function(){e.resolve(),n._setPostalCode()},unsupportedBrowserDetected:function(){return e.reject(new Or)}}})},t.prototype._handleWalletNonceResponse=function(t,e,n,r,i){var o=this._squareOptions&&this._squareOptions.onError||b.noop,a=this._squareOptions&&this._squareOptions.onPaymentSelect||b.noop;t?o(t):e&&this._paymentMethod&&this._paymentInstrumentSelected(this._paymentMethod.id,e,n,r,i).then(a).catch(o)},t.prototype._handleCardNonceResponse=function(t,e){if(!this._deferredRequestNonce)throw new bt.b(bt.a.PaymentNotInitialized);!e||t?((this._squareOptions&&this._squareOptions.onError||b.noop)(t),this._deferredRequestNonce.reject(t)):this._deferredRequestNonce.resolve({nonce:e})},t.prototype._paymentInstrumentSelected=function(t,e,n,r,i){var o=this;return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction((function(){return o._setExternalCheckoutData(e,n,r,i).then((function(){return Promise.all([o._store.dispatch(o._checkoutActionCreator.loadCurrentCheckout()),o._store.dispatch(o._paymentMethodActionCreator.loadPaymentMethod(t))])}))}),{methodId:t}),{queueId:"widgetInteraction"})},t.prototype._paymentRequestPayload=function(){var t=this._store.getState(),e=t.checkout.getCheckout(),n=t.config.getStoreConfig();if(!e)throw new v.b(v.a.MissingCheckout);if(!n)throw new v.b(v.a.MissingCheckoutConfig);return{requestShippingAddress:!0,requestBillingInfo:!0,currencyCode:n.currency.code,countryCode:this._getCountryCode(n.storeProfile.storeCountry),total:{label:n.storeProfile.storeName,amount:String(e.subtotal),pending:!1}}},t.prototype._setExternalCheckoutData=function(t,e,n,r){return this._requestSender.post("/checkout.php",{headers:{Accept:"text/html","Content-Type":"application/x-www-form-urlencoded"},body:{nonce:t,provider:"squarev2",action:"set_external_checkout",cardData:JSON.stringify(e),billingContact:JSON.stringify(n),shippingContact:JSON.stringify(r)}})},t.prototype._setPostalCode=function(){var t=this._store.getState().billingAddress.getBillingAddress();if(!this._paymentForm)throw new bt.b(bt.a.PaymentNotInitialized);t&&t.postalCode&&this._paymentForm.setPostalCode(t.postalCode)},t.prototype._showPaymentMethods=function(t,e){var n=document.getElementById(e.elementId);n&&t.masterpass&&(n.style.display="inline-block")},t}(),Er=function(){function t(t){this._scriptLoader=t}return t.prototype.load=function(){return this._scriptLoader.loadScript("//js.squareup.com/v2/paymentform").then((function(){return function(t){return new window.SqPaymentForm(t)}}))},t}(),Pr=n(107);function jr(t){return Boolean(t.cardNumberElementOptions)&&Boolean(t.cardCvcElementOptions)&&Boolean(t.cardExpiryElementOptions)}!function(t){t.Solid="solid",t.Default="default"}(Sr||(Sr={})),function(t){t.Alipay="alipay",t.CardCvc="cardCvc",t.CardExpiry="cardExpiry",t.CardNumber="cardNumber",t.CreditCard="card",t.iDEAL="idealBank",t.Sepa="iban"}(wr||(wr={})),function(t){t.Alipay="alipay",t.CreditCard="card",t.iDEAL="ideal",t.Sepa="sepa_debit"}(Ir||(Ir={}));var kr=function(){function t(t,e,n,r,i,o,a){this._store=t,this._paymentMethodActionCreator=e,this._paymentActionCreator=n,this._orderActionCreator=r,this._stripeScriptLoader=i,this._storeCreditActionCreator=o,this._locale=a}return t.prototype.initialize=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i,o,a,s;return Object(d.__generator)(this,(function(c){switch(c.label){case 0:return this._initializeOptions=t,e=this._store.getState().paymentMethods.getPaymentMethodOrThrow(this._getInitializeOptions().methodId),n=e.initializationData,r=n.stripePublishableKey,i=n.stripeConnectedAccount,o=n.useIndividualCardFields,this._useIndividualCardFields=o,a=this,[4,this._loadStripeJs(r,i)];case 1:return a._stripeV3Client=c.sent(),s=this,[4,this._mountElement(this._getInitializeOptions().methodId)];case 2:return s._stripeElement=c.sent(),[2,Promise.resolve(this._store.getState())]}}))}))},t.prototype.execute=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a,s,c,u,p,h,l,m,f,_,y,g,b,v;return Object(d.__generator)(this,(function(C){switch(C.label){case 0:if(n=t.payment,r=Object(d.__rest)(t,["payment"]),!n||!n.paymentData)throw new Ue(["payment.paymentData"]);return a=n.paymentData,s=n.gatewayId,c=n.methodId,p=(u=a).shouldSaveInstrument,h=void 0!==p&&p,l=u.shouldSetAsDefaultInstrument,m=void 0!==l&&l,[4,this._store.dispatch(this._orderActionCreator.submitOrder(r,e))];case 1:return C.sent(),(f=this._store.getState().checkout.getCheckoutOrThrow().isStoreCreditApplied)?[4,this._store.dispatch(this._storeCreditActionCreator.applyStoreCredit(f))]:[3,3];case 2:C.sent(),C.label=3;case 3:if(!Object(be.a)(a))return[3,9];C.label=4;case 4:return C.trys.push([4,6,,8]),[4,this._store.dispatch(this._paymentActionCreator.submitPayment(Object(d.__assign)(Object(d.__assign)({},n),{paymentData:a})))];case 5:return[2,C.sent()];case 6:return _=C.sent(),_ instanceof qe.a&&Object(Bt.some)(_.body.errors,{code:"three_d_secure_required"})?(y=_.body.three_ds_result.token,[4,this._confirmVaultedPayment(y)]):[2,Promise.reject(_)];case 7:return i=C.sent(),o={methodId:c,paymentData:{nonce:i.id}},[3,8];case 8:return[3,12];case 9:return[4,this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(s+"?method="+c))];case 10:return g=C.sent(),b=g.paymentMethods.getPaymentMethodOrThrow(c),[4,this._confirmStripePayment(b,h)];case 11:i=C.sent(),o={methodId:c,paymentData:Object(d.__assign)(Object(d.__assign)({},a),{nonce:i.id,shouldSaveInstrument:h,shouldSetAsDefaultInstrument:m})},C.label=12;case 12:return C.trys.push([12,14,,16]),[4,this._store.dispatch(this._paymentActionCreator.submitPayment(o))];case 13:return[2,C.sent()];case 14:return v=C.sent(),[4,this._processAdditionalAction(v)];case 15:return[2,C.sent()];case 16:return[2]}}))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype.deinitialize=function(){return this._unmountElement(),Promise.resolve(this._store.getState())},t.prototype._processAdditionalAction=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e;return Object(d.__generator)(this,(function(n){return Object(Bt.some)(t.body.errors,{code:"additional_action_required"})&&(e=t.body.additional_action_required)&&"redirect_to_url"===e.type?[2,new Promise((function(){window.location.replace(e.data.redirect_url)}))]:[2,Promise.reject(t)]}))}))},t.prototype._confirmStripePayment=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a,s=this;return Object(d.__generator)(this,(function(c){if(n=t.clientToken,r=t.returnUrl,!n)throw new v.b(v.a.MissingPaymentMethod);return[2,new Promise((function(c,u){return Object(d.__awaiter)(s,void 0,void 0,(function(){var s,p,h,l;return Object(d.__generator)(this,(function(d){switch(d.label){case 0:switch(t.method){case wr.Alipay:return[3,1];case wr.CreditCard:return[3,3];case wr.iDEAL:return[3,5];case wr.Sepa:return[3,7]}return[3,9];case 1:return[4,this._getStripeJs().confirmAlipayPayment(n,{return_url:r},{handleActions:!1})];case 2:return s=d.sent(),o=s.error,a=s.paymentIntent,[3,9];case 3:return i=this._mapStripePaymentData(Ir.CreditCard,e),[4,this._getStripeJs().confirmCardPayment(n,i)];case 4:return p=d.sent(),o=p.error,a=p.paymentIntent,[3,9];case 5:return i=this._mapStripePaymentData(Ir.iDEAL,r),[4,this._getStripeJs().confirmIdealPayment(n,i,{handleActions:!1})];case 6:return h=d.sent(),o=h.error,a=h.paymentIntent,[3,9];case 7:return i=this._mapStripePaymentData(Ir.Sepa),[4,this._getStripeJs().confirmSepaDebitPayment(n,i)];case 8:return l=d.sent(),o=l.error,a=l.paymentIntent,[3,9];case 9:return o&&u(o),c(a),[2]}}))}))}))]}))}))},t.prototype._confirmVaultedPayment=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e=this;return Object(d.__generator)(this,(function(n){return[2,new Promise((function(n,r){return Object(d.__awaiter)(e,void 0,void 0,(function(){var e,i,o;return Object(d.__generator)(this,(function(a){switch(a.label){case 0:return[4,this._getStripeJs().confirmCardPayment(t)];case 1:return e=a.sent(),i=e.error,o=e.paymentIntent,i&&r(i),n(o),[2]}}))}))}))]}))}))},t.prototype._getInitializeOptions=function(){if(!this._initializeOptions)throw new bt.b(bt.a.PaymentNotInitialized);return this._initializeOptions},t.prototype._getStripeInitializeOptions=function(){var t=this._getInitializeOptions().stripev3;if(!t)throw new It.a('Unable to initialize payment because "options.stripev3" argument is not provided.');return t},t.prototype._getStripeElement=function(){if(!this._stripeElement)throw new bt.b(bt.a.PaymentNotInitialized);return this._stripeElement},t.prototype._getStripeCardElements=function(){if(!this._stripeCardElements)throw new bt.b(bt.a.PaymentNotInitialized);return this._stripeCardElements},t.prototype._getStripeJs=function(){if(!this._stripeV3Client)throw new bt.b(bt.a.PaymentNotInitialized);return this._stripeV3Client},t.prototype._loadStripeJs=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(n){switch(n.label){case 0:return this._stripeV3Client?[2,Promise.resolve(this._stripeV3Client)]:[4,this._stripeScriptLoader.load(t,e,this._locale)];case 1:return[2,n.sent()]}}))}))},t.prototype._mountElement=function(t){var e,n=this,r=t,i=this._getStripeInitializeOptions(),o=i.options,a=i.containerId;return new Promise((function(t,i){switch(n._stripeElements||(n._stripeElements=n._getStripeJs().elements()),r){case wr.CreditCard:if(n._useIndividualCardFields&&jr(o)){var s=o.cardNumberElementOptions,c=o.cardExpiryElementOptions,u=o.cardCvcElementOptions,d=n._stripeElements.getElement(wr.CardNumber)||n._stripeElements.create(wr.CardNumber,s),p=n._stripeElements.getElement(wr.CardExpiry)||n._stripeElements.create(wr.CardExpiry,c),h=n._stripeElements.getElement(wr.CardCvc)||n._stripeElements.create(wr.CardCvc,u);n._stripeCardElements=[d,p,h],e=n._stripeCardElements[0];try{d.mount("#"+s.containerId),p.mount("#"+c.containerId),h.mount("#"+u.containerId)}catch(t){i(new It.a("Unable to mount Stripe component without valid container ID."))}}else{e=n._stripeElements.getElement(r)||n._stripeElements.create(r,o);try{e.mount("#"+a)}catch(t){i(new It.a("Unable to mount Stripe component without valid container ID."))}}break;case wr.iDEAL:case wr.Sepa:e=n._stripeElements.getElement(r)||n._stripeElements.create(r,o);try{e.mount("#"+a)}catch(t){i(new It.a("Unable to mount Stripe component without valid container ID."))}break;case wr.Alipay:}t(e)}))},t.prototype._mapStripeAddress=function(t){return t?{city:t.city,country:t.countryCode,line1:t.address1,line2:t.address2,postal_code:t.postalCode,state:t.stateOrProvinceCode}:{line1:""}},t.prototype._mapStripeBillingDetails=function(t,e){var n=t||e||{firstName:"Guest",lastName:""},r=(n.firstName+" "+n.lastName).trim(),i=this._getStripeInitializeOptions().options;if(this._useIndividualCardFields&&jr(i)){var o=i.zipCodeElementOptions;if(o){var a=document.getElementById(o.containerId)?document.getElementById(o.containerId).value:"";a&&t&&(t=Object(d.__assign)(Object(d.__assign)({},t),{postalCode:a}))}}var s={address:this._mapStripeAddress(t)};if(e&&e.addresses[0]&&Object(Pr.a)(e.addresses[0])){var c=e.addresses[0],u=e.email;return(p=c.phone)?Object(d.__assign)(Object(d.__assign)({},s),{email:u,name:r,phone:p}):Object(d.__assign)(Object(d.__assign)({},s),{email:u,name:r})}if(t){var p;u=t.email;return(p=t.phone)?Object(d.__assign)(Object(d.__assign)({},s),{email:u,name:r,phone:p}):Object(d.__assign)(Object(d.__assign)({},s),{email:u,name:r})}return Object(d.__assign)(Object(d.__assign)({},s),{name:r})},t.prototype._mapStripePaymentData=function(t,e){var n,r,i=this._store.getState().customer.getCustomer(),o=this._store.getState().billingAddress.getBillingAddress();switch(r={payment_method:(n={},n[t]=t===Ir.CreditCard&&this._useIndividualCardFields?this._getStripeCardElements()[0]:this._getStripeElement(),n.billing_details=this._mapStripeBillingDetails(o,i),n)},t){case Ir.CreditCard:var a=this._store.getState().cart.getCart();if(a&&Object(jt.a)(a)>0){var s=this._store.getState().shippingAddress.getShippingAddress();r=Object(d.__assign)(Object(d.__assign)({},r),{shipping:this._mapStripeShippingAddress(s,i)})}return e?Object(d.__assign)(Object(d.__assign)({},r),{setup_future_usage:"off_session"}):r;case Ir.iDEAL:return Object(d.__assign)(Object(d.__assign)({},r),{return_url:e})}return r},t.prototype._mapStripeShippingAddress=function(t,e){var n=t||e||{firstName:"Guest",lastName:""},r=(n.firstName+" "+n.lastName).trim(),i={address:this._mapStripeAddress(t)};if(e&&e.addresses[0]){var o=e.addresses[0].phone;return Object(d.__assign)(Object(d.__assign)({},i),{name:r,phone:o})}if(t){o=t.phone;return Object(d.__assign)(Object(d.__assign)({},i),{name:r,phone:o})}return Object(d.__assign)(Object(d.__assign)({},i),{name:r})},t.prototype._unmountElement=function(){this._stripeElement&&(this._stripeElement.unmount(),this._stripeElement=void 0)},t}(),Mr=function(){function t(t,e){void 0===e&&(e=window),this._scriptLoader=t,this._window=e}return t.prototype.load=function(t,e,n){var r=this;return this._scriptLoader.loadScript("https://js.stripe.com/v3/").then((function(){if(!r._window.Stripe)throw new $.a;return r._window.Stripe(t,{stripeAccount:e,locale:n,betas:["payment_intent_beta_3","alipay_pm_beta_1"],apiVersion:"2020-03-02;alipay_beta=v1"})}))},t}(),Tr=function(){function t(t){this._scriptLoader=t}return t.prototype.initialize=function(){var t=this;return this._scriptLoader.loadScript("//static.wepay.com/min/js/risk.1.latest.js").then((function(){return t._riskClient=window.WePay.risk})).then((function(){return t}))},t.prototype.getRiskToken=function(){if(!this._riskClient)throw new bt.b(bt.a.PaymentNotInitialized);return this._riskClient.generate_risk_token(),this._riskClient.get_risk_token()},t}(),Rr=function(t){function e(e,n,r,i,o){var a=t.call(this,e,n,r,i)||this;return a._wepayRiskClient=o,a}return Object(d.__extends)(e,t),e.prototype.initialize=function(e){return this._wepayRiskClient.initialize(),t.prototype.initialize.call(this,e)},e.prototype.execute=function(e,n){var r=this._wepayRiskClient.getRiskToken(),i=Object(Bt.merge)({},e,{payment:{paymentData:{deviceSessionId:r}}});return t.prototype.execute.call(this,i,n)},e}(hn),Dr=n(72),zr=function(t){function e(e){var n=t.call(this,e||"The selected payment method was declined. Please select another payment method.")||this;return n.name="PaymentMethodDeclinedError",n.type="payment_declined",n}return Object(d.__extends)(e,t),e}(ht.a),Lr=function(){function t(t,e,n,r,i,o,a,s){this._store=t,this._orderActionCreator=e,this._paymentActionCreator=n,this._paymentMethodActionCreator=r,this._storeCreditActionCreator=i,this._remoteCheckoutActionCreator=o,this._zipScriptLoader=a,this._requestSender=s}return t.prototype.initialize=function(){return Object(d.__awaiter)(this,void 0,void 0,(function(){var t;return Object(d.__generator)(this,(function(e){switch(e.label){case 0:return[4,this._zipScriptLoader.load()];case 1:return t=e.sent(),this._zipClient=t,[2,this._store.getState()]}}))}))},t.prototype.deinitialize=function(){return this._paymentMethod=void 0,this._zipClient=void 0,Promise.resolve(this._store.getState())},t.prototype.execute=function(t,e){return Object(d.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a,s,c=this;return Object(d.__generator)(this,(function(u){switch(u.label){case 0:if(n=t.payment,r=Object(d.__rest)(t,["payment"]),i=this._zipClient,!n)throw new It.a('Unable to submit payment because "payload.payment" argument is not provided.');if(!i)throw new bt.b(bt.a.PaymentNotInitialized);return void 0===(o=this._store.getState().checkout.getCheckoutOrThrow().isStoreCreditApplied)?[3,2]:[4,this._store.dispatch(this._storeCreditActionCreator.applyStoreCredit(o))];case 1:u.sent(),u.label=2;case 2:return[4,this._store.dispatch(this._orderActionCreator.submitOrder(r,e))];case 3:return u.sent(),[4,this._store.dispatch(this._remoteCheckoutActionCreator.initializePayment(n.methodId,{useStoreCredit:o}))];case 4:return u.sent(),[4,this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(n.methodId,e))];case 5:if(a=u.sent(),this._paymentMethod=a.paymentMethods.getPaymentMethod(n.methodId),!this._paymentMethod||!this._paymentMethod.clientToken)throw new v.b(v.a.MissingPaymentMethod);return[4,new Promise((function(t,e){i.Checkout.init({onComplete:function(r){var i=r.checkoutId,o=r.state;return Object(d.__awaiter)(c,void 0,void 0,(function(){return Object(d.__generator)(this,(function(r){switch(r.label){case 0:return"cancelled"===o?[2,e(new xe)]:"referred"===o&&i?[4,this._prepareForReferredRegistration(n.methodId,i)]:[3,2];case 1:return r.sent(),[2,t()];case 2:return"approved"===o&&i?[2,t(i)]:"declined"===o?[2,e(new zr("Unfortunately your application was declined. Please select another payment method."))]:(e(new We.a),[2])}}))}))},onCheckout:function(t){if(!c._paymentMethod||!c._paymentMethod.clientToken)throw new v.b(v.a.MissingPaymentMethod);t(JSON.parse(c._paymentMethod.clientToken))}})}))];case 6:return void 0!==(s=u.sent())?[2,this._store.dispatch(this._paymentActionCreator.submitPayment({methodId:n.methodId,paymentData:{nonce:s}}))]:[2,this._store.getState()]}}))}))},t.prototype.finalize=function(){return Promise.reject(new Jt)},t.prototype._prepareForReferredRegistration=function(t,e){var n="/api/storefront/payment/"+t+"/save-external-id",r={headers:{Accept:I.a.JsonV1,"X-API-INTERNAL":Dr.a},body:{externalId:e,provider:t}};return this._requestSender.post(n,r)},t}(),Nr=function(){function t(t,e){void 0===e&&(e=window),this._scriptLoader=t,this._window=e}return t.prototype.load=function(){var t=this;return this._scriptLoader.loadScript("//static.zipmoney.com.au/checkout/checkout-v1.min.js").then((function(){if(!t._window.Zip)throw new $.a;return t._window.Zip}))},t}();function Fr(t,e,n,r,s){var c=new Te(t,{defaultToken:Qt.CREDIT_CARD}),u=Object(i.getScriptLoader)(),d=new ke.a,p=new je.a(e),h=new o.a(new a.a(n),new Ie.a(new Ae.a(n))),l=function(t){var e=new J.a(t),n=new Z.a(e),r=new wn(n),i=new bn;return new In(n,r,i)}(u),m=new U.a(n),f=new ee(m),g=new _t(r,new wt(n)),b=new Ht(new Gt(n),f),v=new Se(new we(n)),C=new ue(St(Object(i.createScriptLoader)())),O=new Pe(p,b,d,C),S=new Y.a(new H.a(n)),w=new pt(new ut(n)),I=new _.a(new y.a(n)),A=new G.a(new V.a(n)),E=new x.a(m,I,A),P=new Xt(c,b,g),j=Object(q.createFormPoster)(),k=new Ce(t);return c.register(Qt.ADYENV2,(function(){return new Ve(t,O,b,new Ye(u,Object(i.getStylesheetLoader)()))})),c.register(Qt.ADYENV2_GOOGLEPAY,(function(){return new Zn(t,E,S,P,O,b,Object(nt.a)(t,new rt.a),new Qn(t,O,new Ye(u,Object(i.getStylesheetLoader)())))})),c.register(Qt.AFFIRM,(function(){return new Ke(t,b,O,S,new Je)})),c.register(Qt.AFTERPAY,(function(){return new Ze(t,f,b,O,S,v,new en(u))})),c.register(Qt.AMAZON,(function(){return new dn(t,b,h,w,new W(u))})),c.register(Qt.AUTHORIZENET_GOOGLE_PAY,(function(){return new Zn(t,E,S,P,O,b,Object(nt.a)(t,new it.a))})),c.register(Qt.AMAZONPAYV2,(function(){return new pn(t,P,S,b,O,Object(K.a)())})),c.register(Qt.BARCLAYS,(function(){return new ln(t,b,O,k,new Nn(t,O,new Un(new xn(u))))})),c.register(Qt.BLUESNAPV2,(function(){return new fn(t,b,O)})),c.register(Qt.CREDIT_CARD,(function(){return new hn(t,b,O,k)})),c.register(Qt.CHECKOUTCOM,(function(){return new Wn(t,b,O,k,j)})),c.register(Qt.CYBERSOURCE,(function(){return new Kn(t,b,O,k,new Bn(t,O,S,new Un(new xn(u))))})),c.register(Qt.KLARNA,(function(){return new tr(t,b,S,w,new er(u))})),c.register(Qt.KLARNAV2,(function(){return new nr(t,b,S,w,new rr(u))})),c.register(Qt.LEGACY,(function(){return new ir(t,b)})),c.register(Qt.OFFLINE,(function(){return new sr(t,b)})),c.register(Qt.OFFSITE,(function(){return new cr(t,b,O)})),c.register(Qt.PAYPAL,(function(){return new ur(t,b,O,k,new Bn(t,O,S,new Un(new xn(u))))})),c.register(Qt.PAYPAL_EXPRESS,(function(){return new dr(t,b,new pr.a(u))})),c.register(Qt.PAYPAL_EXPRESS_CREDIT,(function(){return new dr(t,b,new pr.a(u))})),c.register(Qt.PAYPAL_COMMERCE_CREDIT_CARD,(function(){return new hr(t,S,new _r(Object(yr.a)(u,n)),b,O)})),c.register(Qt.PAYPAL_COMMERCE,(function(){return new gr(t,b,O,Object(yr.a)(u,n),new br)})),c.register(Qt.SAGE_PAY,(function(){return new vr(t,b,O,k,j)})),c.register(Qt.SQUARE,(function(){return new Ar(t,E,b,O,S,P,n,new Er(u))})),c.register(Qt.NO_PAYMENT_DATA_REQUIRED,(function(){return new ar(t,b)})),c.register(Qt.BRAINTREE,(function(){return new En(t,b,O,S,l)})),c.register(Qt.BRAINTREE_PAYPAL,(function(){return new Pn(t,b,O,S,l)})),c.register(Qt.BRAINTREE_PAYPAL_CREDIT,(function(){return new Pn(t,b,O,S,l,!0)})),c.register(Qt.BRAINTREE_VISA_CHECKOUT,(function(){return new jn(t,E,S,P,O,b,X(u,n),new tt(u))})),c.register(Qt.CHASE_PAY,(function(){return new Yn(t,E,b,O,S,P,n,new et(u),new Tr(u))})),c.register(Qt.BRAINTREE_GOOGLE_PAY,(function(){return new Zn(t,E,S,P,O,b,Object(nt.a)(t,new ot.a(new Z.a(new J.a(u)))))})),c.register(Qt.WE_PAY,(function(){return new Rr(t,b,O,k,new Tr(u))})),c.register(Qt.MASTERPASS,(function(){return new or(t,b,O,new ct.a(u))})),c.register(Qt.STRIPE_GOOGLE_PAY,(function(){return new Zn(t,E,S,P,O,b,Object(nt.a)(t,new st.a))})),c.register(Qt.CHECKOUTCOM_GOOGLE_PAY,(function(){return new Zn(t,E,S,P,O,b,Object(nt.a)(t,new at.a(n)))})),c.register(Qt.ZIP,(function(){return new Lr(t,b,O,S,v,w,new Nr(u),n)})),c.register(Qt.CONVERGE,(function(){return new Hn(t,b,O,k,j)})),c.register(Qt.LAYBUY,(function(){return new Jn(t,b,O,j)})),c.register(Qt.SEZZLE,(function(){return new Jn(t,b,O,j)})),c.register(Qt.STRIPEV3,(function(){return new kr(t,S,O,b,new Mr(u),v,s)})),c.register(Qt.BOLT,(function(){return new _n(t,b,O,S,v,new yn(u))})),c}var qr=n(24),Ur=function(){function t(t){this._instrumentRequestSender=t}return t.prototype.loadInstruments=function(){var t=this;return function(e){return b.Observable.create((function(n){n.next(Object(g.createAction)(qr.a.LoadInstrumentsRequested));var r=t._getSessionContext(e),i=t._getCurrentAccessToken(e),o=t._getShippingAddress(e);return t._getValidAccessToken(i).then((function(e){return t._instrumentRequestSender.loadInstruments(Object(d.__assign)(Object(d.__assign)({},r),{authToken:e.vaultAccessToken}),o).then((function(t){var r=t.body;n.next(Object(g.createAction)(qr.a.LoadInstrumentsSucceeded,r,e)),n.complete()}))})).catch((function(t){n.error(Object(g.createErrorAction)(qr.a.LoadInstrumentsFailed,t))}))}))}},t.prototype.deleteInstrument=function(t){var e=this;return function(n){return b.Observable.create((function(r){r.next(Object(g.createAction)(qr.a.DeleteInstrumentRequested,void 0,{instrumentId:t}));var i=e._getSessionContext(n),o=e._getCurrentAccessToken(n);return e._getValidAccessToken(o).then((function(n){return e._instrumentRequestSender.deleteInstrument(Object(d.__assign)(Object(d.__assign)({},i),{authToken:n.vaultAccessToken}),t).then((function(e){var i=e.body;r.next(Object(g.createAction)(qr.a.DeleteInstrumentSucceeded,i,Object(d.__assign)({instrumentId:t},n))),r.complete()}))})).catch((function(e){r.error(Object(g.createErrorAction)(qr.a.DeleteInstrumentFailed,e,{instrumentId:t}))}))}))}},t.prototype._isValidVaultAccessToken=function(t){if(!t||!t.vaultAccessToken)return!1;var e,n,r;return function(t){return t.valueOf()>Date.now()}((e=new Date(t.vaultAccessExpiry),n=2,(r=new Date(e.getTime())).setMinutes(e.getMinutes()+n),r))},t.prototype._getCurrentAccessToken=function(t){var e=t.getState().instruments.getInstrumentsMeta();if(e)return{vaultAccessToken:e.vaultAccessToken,vaultAccessExpiry:e.vaultAccessExpiry}},t.prototype._getValidAccessToken=function(t){return t&&this._isValidVaultAccessToken(t)?Promise.resolve(t):this._instrumentRequestSender.getVaultAccessToken().then((function(t){return t.body}))},t.prototype._getShippingAddress=function(t){return t.getState().shippingAddress.getShippingAddress()},t.prototype._getSessionContext=function(t){var e=t.getState(),n=e.config.getStoreConfig(),r=e.cart.getCart();if(!n)throw new v.b(v.a.MissingCheckoutConfig);if(!r)throw new v.b(v.a.MissingCart);return{customerId:r.customerId,storeId:n.storeProfile.storeId,currencyCode:(n.shopperCurrency.isTransactional?n.shopperCurrency:n.currency).code}},t}();var xr=function(){function t(){}return t.prototype.transformResponse=function(t){var e=this._transformResponse(t),n=e.body,r=Object(d.__rest)(e,["body"]);return Object(d.__assign)(Object(d.__assign)({},r),{body:{vaultedInstruments:this._transformVaultedInstruments(n.vaulted_instruments)}})},t.prototype.transformErrorResponse=function(t){return this._transformResponse(t)},t.prototype.transformVaultAccessResponse=function(t){return Object(d.__assign)(Object(d.__assign)({},t),{body:{vaultAccessToken:t.body.data.token,vaultAccessExpiry:t.body.data.expires_at}})},t.prototype._transformVaultedInstruments=function(t){var e=this;return void 0===t&&(t=[]),t.map((function(t){return e._isPayPalInstrument(t)?function(t){return{bigpayToken:t.bigpay_token,defaultInstrument:t.default_instrument,provider:t.provider,externalId:t.external_id,trustedShippingAddress:t.trusted_shipping_address,method:"paypal",type:"account"}}(t):e._isBankInstrument(t)?function(t){return{bigpayToken:t.bigpay_token,defaultInstrument:t.default_instrument,provider:t.provider,externalId:t.external_id,trustedShippingAddress:t.trusted_shipping_address,accountNumber:t.account_number,issuer:t.issuer,iban:t.iban,method:t.method,type:"bank"}}(t):function(t){return{bigpayToken:t.bigpay_token,defaultInstrument:t.default_instrument,provider:t.provider,iin:t.iin,last4:t.last_4,expiryMonth:t.expiry_month,expiryYear:t.expiry_year,brand:t.brand,trustedShippingAddress:t.trusted_shipping_address,method:t.method,type:"card"}}(t)}))},t.prototype._isPayPalInstrument=function(t){return"paypal"===t.method_type},t.prototype._isBankInstrument=function(t){return"bank"===t.method_type},t.prototype._transformResponse=function(t){var e=t.data,n=Object(d.__rest)(t,["data"]);return Object(d.__assign)(Object(d.__assign)({},n),{body:e})},t}(),Br=function(){function t(t,e){this._client=t,this._requestSender=e,this._transformer=new xr}return t.prototype.getVaultAccessToken=function(t){var e=(void 0===t?{}:t).timeout;return this._requestSender.get("/internalapi/v1/checkout/payments/vault-access-token",{timeout:e}).then((function(t){return Object(d.__assign)(Object(d.__assign)({},t),{body:{vaultAccessToken:t.body.data.token,vaultAccessExpiry:t.body.data.expires_at}})}))},t.prototype.loadInstruments=function(t,e){return e?this._loadInstrumentsWithAddress(t,e):this._loadInstruments(t)},t.prototype.deleteInstrument=function(t,e){var n=this,r=Object(d.__assign)(Object(d.__assign)({},t),{instrumentId:e});return new Promise((function(t,e){n._client.deleteShopperInstrument(r,(function(r,i){return r?e(n._transformer.transformErrorResponse(r)):t(n._transformer.transformResponse(i))}))}))},t.prototype._loadInstruments=function(t){var e=this;return new Promise((function(n,r){e._client.loadInstruments(t,(function(t,i){return t?r(e._transformer.transformErrorResponse(t)):n(e._transformer.transformResponse(i))}))}))},t.prototype._loadInstrumentsWithAddress=function(t,e){var n=this,r=Object(d.__assign)(Object(d.__assign)({},t),{shippingAddress:Object(nn.a)(e)});return new Promise((function(t,e){n._client.loadInstrumentsWithAddress(r,(function(r,i){return r?e(n._transformer.transformErrorResponse(r)):t(n._transformer.transformResponse(i))}))}))},t}(),Gr=n(130),Vr=n(131),Yr=n(43),Hr=function(){function t(t){this._shippingCountryRequestSender=t}return t.prototype.loadCountries=function(t){var e=this;return b.Observable.create((function(n){n.next(Object(g.createAction)(Yr.a.LoadShippingCountriesRequested)),e._shippingCountryRequestSender.loadCountries(t).then((function(t){n.next(Object(g.createAction)(Yr.a.LoadShippingCountriesSucceeded,t.body.data)),n.complete()})).catch((function(t){n.error(Object(g.createErrorAction)(Yr.a.LoadShippingCountriesFailed,t))}))}))},t}(),Wr=function(){function t(t,e){this._requestSender=t,this._config=e}return t.prototype.loadCountries=function(t){var e=(void 0===t?{}:t).timeout,n={"Accept-Language":this._config.locale};return this._requestSender.get("/internalapi/v1/shipping/countries",{headers:n,timeout:e})},t}(),Kr=n(9),Jr=function(){function t(t){this._strategyRegistry=t}return t.prototype.updateAddress=function(t,e){var n=this;return function(r){return b.Observable.create((function(i){var o=r.getState().payment.getPaymentId(),a=e&&e.methodId||o&&o.providerId;i.next(Object(g.createAction)(Kr.a.UpdateAddressRequested,void 0,{methodId:a})),n._strategyRegistry.get(a).updateAddress(t,Object(d.__assign)(Object(d.__assign)({},e),{methodId:a})).then((function(){i.next(Object(g.createAction)(Kr.a.UpdateAddressSucceeded,void 0,{methodId:a})),i.complete()})).catch((function(t){i.error(Object(g.createErrorAction)(Kr.a.UpdateAddressFailed,t,{methodId:a}))}))}))}},t.prototype.selectOption=function(t,e){var n=this;return function(r){return b.Observable.create((function(i){var o=r.getState().payment.getPaymentId(),a=e&&e.methodId||o&&o.providerId;i.next(Object(g.createAction)(Kr.a.SelectOptionRequested,void 0,{methodId:a})),n._strategyRegistry.get(a).selectOption(t,Object(d.__assign)(Object(d.__assign)({},e),{methodId:a})).then((function(){i.next(Object(g.createAction)(Kr.a.SelectOptionSucceeded,void 0,{methodId:a})),i.complete()})).catch((function(t){i.error(Object(g.createErrorAction)(Kr.a.SelectOptionFailed,t,{methodId:a}))}))}))}},t.prototype.initialize=function(t){var e=this;return function(n){return b.Observable.create((function(r){var i=n.getState(),o=i.payment.getPaymentId(),a=t&&t.methodId||o&&o.providerId,s=Object(d.__assign)(Object(d.__assign)({},t),{methodId:a});if(a&&i.shippingStrategies.isInitialized(a))return r.complete();r.next(Object(g.createAction)(Kr.a.InitializeRequested,void 0,{methodId:a})),e._strategyRegistry.get(a).initialize(s).then((function(){r.next(Object(g.createAction)(Kr.a.InitializeSucceeded,void 0,{methodId:a})),r.complete()})).catch((function(t){r.error(Object(g.createErrorAction)(Kr.a.InitializeFailed,t,{methodId:a}))}))}))}},t.prototype.deinitialize=function(t){var e=this;return function(n){return b.Observable.create((function(r){var i=n.getState(),o=i.payment.getPaymentId(),a=t&&t.methodId||o&&o.providerId;if(a&&!i.shippingStrategies.isInitialized(a))return r.complete();r.next(Object(g.createAction)(Kr.a.DeinitializeRequested,void 0,{methodId:a})),e._strategyRegistry.get(a).deinitialize(Object(d.__assign)(Object(d.__assign)({},t),{methodId:a})).then((function(){r.next(Object(g.createAction)(Kr.a.DeinitializeSucceeded,void 0,{methodId:a})),r.complete()})).catch((function(t){r.error(Object(g.createErrorAction)(Kr.a.DeinitializeFailed,t,{methodId:a}))}))}))}},t.prototype.widgetInteraction=function(t,e){return b.Observable.create((function(n){var r={methodId:e&&e.methodId};n.next(Object(g.createAction)(Kr.a.WidgetInteractionStarted,void 0,r)),t().then((function(){n.next(Object(g.createAction)(Kr.a.WidgetInteractionFinished,void 0,r)),n.complete()})).catch((function(t){n.error(Object(g.createErrorAction)(Kr.a.WidgetInteractionFailed,t,r))}))}))},t}(),Zr=function(){function t(t,e,n,r,i){this._store=t,this._consignmentActionCreator=e,this._paymentMethodActionCreator=n,this._remoteCheckoutActionCreator=r,this._scriptLoader=i,this._window=window}return t.prototype.initialize=function(t){var e=this,n=t.amazon,r=t.methodId;if(!n||!r)throw new It.a('Unable to proceed because "options.amazon" argument is not provided.');return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(r)).then((function(t){return new Promise((function(i,o){if(e._paymentMethod=t.paymentMethods.getPaymentMethod(r),!e._paymentMethod)throw new v.b(v.a.MissingPaymentMethod);e._scriptLoader.loadWidget(e._paymentMethod,(function(){e._createAddressBook(n).then(i).catch(o)})).catch(o)}))})).then((function(){return e._store.getState()}))},t.prototype.deinitialize=function(){return this._paymentMethod=void 0,Promise.resolve(this._store.getState())},t.prototype.updateAddress=function(t,e){var n=Object(d.__assign)(Object(d.__assign)({},this._store.getState().shippingAddress.getShippingAddress()),{customFields:t.customFields});return this._store.dispatch(this._consignmentActionCreator.updateAddress(n,e))},t.prototype.selectOption=function(t,e){return this._store.dispatch(this._consignmentActionCreator.selectShippingOption(t,e))},t.prototype._createAddressBook=function(t){var e=this;return new Promise((function(n,r){var i=t.container,o=t.onAddressSelect,a=void 0===o?function(){}:o,s=t.onError,c=void 0===s?function(){}:s,u=t.onReady,d=void 0===u?function(){}:u,p=e._paymentMethod&&e._paymentMethod.config.merchantId;if(!document.getElementById(i))return r(new It.a("Unable to create AmazonPay AddressBook widget without valid container ID."));if(!e._window.OffAmazonPayments)return r(new bt.b(bt.a.ShippingNotInitialized));if(!p)return r(new v.b(v.a.MissingPaymentMethod));var h=new e._window.OffAmazonPayments.Widgets.AddressBook({design:{designMode:"responsive"},scope:"payments:billing_address payments:shipping_address payments:widget profile",sellerId:p,onAddressSelect:function(t){e._synchronizeShippingAddress().then((function(){return a(t)})).catch(c)},onError:function(t){r(t),c(t)},onReady:function(t){e._updateOrderReference(t).then((function(){n(),d(t)})).catch(c)}});return h.bind(i),h}))},t.prototype._synchronizeShippingAddress=function(){var t=this,e=this._paymentMethod&&this._paymentMethod.id,n=this._store.getState().remoteCheckout.getCheckout("amazon"),r=n?n.referenceId:void 0;if(!e||!r)throw new un.a;return this._store.dispatch(Object(g.createAction)(Kr.a.UpdateAddressRequested,void 0,{methodId:e})).then((function(){return t._store.dispatch(t._remoteCheckoutActionCreator.initializeShipping(e,{referenceId:r}))})).then((function(e){var n=e.remoteCheckout.getCheckout("amazon"),r=n&&n.shipping&&n.shipping.address,i=e.shippingAddress.getShippingAddress();if(!1===r)throw new un.a;return!r||an(r,i||{})?t._store.getState():t._store.dispatch(t._consignmentActionCreator.updateAddress(cn(r)))})).then((function(){return t._store.dispatch(Object(g.createAction)(Kr.a.UpdateAddressSucceeded,void 0,{methodId:e}))})).catch((function(n){return t._store.dispatch(Object(g.createErrorAction)(Kr.a.UpdateAddressFailed,n,{methodId:e}))}))},t.prototype._updateOrderReference=function(t){return this._store.dispatch(this._remoteCheckoutActionCreator.updateCheckout("amazon",{referenceId:t.getAmazonOrderReferenceId()}))},t}(),Qr=function(){function t(t,e,n,r,i){this._store=t,this._consignmentActionCreator=e,this._paymentMethodActionCreator=n,this._amazonPayV2PaymentProcessor=r,this._shippingStrategyActionCreator=i}return t.prototype.updateAddress=function(t,e){var n=this._store.getState().shippingAddress.getShippingAddress();if(!n)throw new v.b(v.a.MissingShippingAddress);var r=Object(d.__assign)(Object(d.__assign)({},n),{customFields:t.customFields});return this._store.dispatch(this._consignmentActionCreator.updateAddress(r,e))},t.prototype.selectOption=function(t,e){return this._store.dispatch(this._consignmentActionCreator.selectShippingOption(t,e))},t.prototype.initialize=function(t){return Object(d.__awaiter)(this,void 0,void 0,(function(){var e,n,r,i,o,a;return Object(d.__generator)(this,(function(s){switch(s.label){case 0:if(e=t.amazonpay,n=t.methodId,!e||!n)throw new It.a('Unable to proceed because "options.amazonpay" argument is not provided.');return[4,this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(n))];case 1:return r=s.sent(),i=r.paymentMethods.getPaymentMethodOrThrow(n),[4,this._amazonPayV2PaymentProcessor.initialize(i)];case 2:return s.sent(),o=i.initializationData.paymentToken,a=e.editAddressButtonId,o&&a&&this._bindEditButton(a,o,"changeAddress"),[2,this._store.getState()]}}))}))},t.prototype.deinitialize=function(){return Object(d.__awaiter)(this,void 0,void 0,(function(){return Object(d.__generator)(this,(function(t){switch(t.label){case 0:return[4,this._amazonPayV2PaymentProcessor.deinitialize()];case 1:return t.sent(),[2,Promise.resolve(this._store.getState())]}}))}))},t.prototype._bindEditButton=function(t,e,n){var r=this,i=document.getElementById(t);if(i&&i.parentNode){var o=i.cloneNode(!0);i.parentNode.replaceChild(o,i),o.addEventListener("click",(function(){return r._showLoadingSpinner((function(){return new Promise(b.noop)}))})),this._amazonPayV2PaymentProcessor.bindButton(t,e,n)}},t.prototype._showLoadingSpinner=function(t){return this._store.dispatch(this._shippingStrategyActionCreator.widgetInteraction((function(){return t?t():Promise.reject()})),{queueId:"widgetInteraction"})},t}(),Xr=function(){function t(t,e){this._store=t,this._consignmentActionCreator=e}return t.prototype.updateAddress=function(t,e){return this._store.dispatch(this._consignmentActionCreator.updateAddress(t,e))},t.prototype.selectOption=function(t,e){return this._store.dispatch(this._consignmentActionCreator.selectShippingOption(t,e))},t.prototype.initialize=function(){return Promise.resolve(this._store.getState())},t.prototype.deinitialize=function(){return Promise.resolve(this._store.getState())},t}();var $r,ti=n(44),ei=function(){function t(t){this._requestSender=t}return t.prototype.sendSignInEmail=function(t,e){var n=this;return Object(b.concat)(Object(b.of)(Object(g.createAction)(ti.a.SendSignInEmailRequested)),Object(b.defer)((function(){return Object(d.__awaiter)(n,void 0,void 0,(function(){var n;return Object(d.__generator)(this,(function(r){switch(r.label){case 0:return[4,this._requestSender.sendSignInEmail(t,e)];case 1:return n=r.sent().body,[2,Object(g.createAction)(ti.a.SendSignInEmailSucceeded,n)]}}))}))}))).pipe(Object(M.catchError)((function(t){return Object(T.a)(ti.a.SendSignInEmailFailed,t)})))},t}(),ni=function(){function t(t){this._requestSender=t}return t.prototype.sendSignInEmail=function(t,e){var n=t.email,r=t.redirectUrl,i=(void 0===e?{}:e).timeout,o={Accept:I.a.JsonV1};return this._requestSender.post("/login.php?action=passwordless_login",{body:{email:n,redirect_url:r||Object(pe.a)(window.top.location.href).pathname},headers:o,timeout:i})},t}();!function(t){t.Synchronize="SYNCHRONIZE"}($r||($r={}));var ri=n(171),ii=n(41),oi=Object(Bt.memoize)((function(t){return Array.isArray(t)?t.map((function(t){return ai(t)})):Object(ii.a)(t)?Object.keys(t).reduce((function(e,n){var r;return Object(d.__assign)(Object(d.__assign)({},e),((r={})[n]=ai(t[n]),r))}),{}):t}));oi.cache=new WeakMap;var ai=function(t){return"object"==typeof t&&null!==t?oi(t):t};function si(t){return function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return ai(t.apply(void 0,e))}}var ci=n(77),ui=n(66),di=n.n(ui),pi=n(85),hi=Object(ci.createSelectorCreator)(ci.defaultMemoize,(function(t,e){return di()(t,e)})),li=Object(pi.a)(hi);function mi(){var t,e,n,r,i,o,a,s,c,u,p,h,l,m,f,_,y,g,b,v,C,O,S,w,I,A,E,P,j,k,M,T,R,D=(t=Object(ri.a)((function(t){return t.checkout.getCheckout}),(function(t){return si(t)})),e=Object(ri.a)((function(t){return t.order.getOrder}),(function(t){return si(t)})),n=Object(ri.a)((function(t){return t.config.getStoreConfig}),(function(t){return si(t)})),r=Object(ri.a)((function(t){return t.shippingAddress.getShippingAddress}),(function(t){return t.config.getContextConfig}),(function(t,e){return si((function(){var n=t(),r=e();if(!n){if(!r||!r.geoCountryCode)return;return{firstName:"",lastName:"",company:"",address1:"",address2:"",city:"",stateOrProvince:"",stateOrProvinceCode:"",postalCode:"",country:"",phone:"",customFields:[],countryCode:r.geoCountryCode}}return n}))})),i=Object(ri.a)((function(t){return t.consignments.getConsignments}),(function(t){return si((function(){var e=t();if(e&&e.length)return e[0].availableShippingOptions}))})),o=Object(ri.a)((function(t){return t.consignments.getConsignments}),(function(t){return si(t)})),a=Object(ri.a)((function(t){return t.consignments.getConsignments}),(function(t){return si((function(){var e=t();if(e&&e.length)return e[0].selectedShippingOption}))})),s=Object(ri.a)((function(t){return t.shippingCountries.getShippingCountries}),(function(t){return si(t)})),c=Object(ri.a)((function(t){return t.billingAddress.getBillingAddress}),(function(t){return t.config.getContextConfig}),(function(t,e){return si((function(){var n=t(),r=e();return(!n||Object(Bt.values)(Object(Bt.omit)(n,"shouldSaveAddress","email","id")).every((function(t){return!t||!t.length})))&&r&&r.geoCountryCode?{id:n?n.id:"",firstName:"",lastName:"",company:"",address1:"",address2:"",city:"",email:n?n.email:"",stateOrProvince:"",stateOrProvinceCode:"",postalCode:"",country:"",phone:"",customFields:[],countryCode:r.geoCountryCode}:n}))})),u=Object(ri.a)((function(t){return t.countries.getCountries}),(function(t){return si(t)})),p=Object(ri.a)((function(t){return t.paymentMethods.getPaymentMethods}),(function(t){return si(t)})),h=Object(ri.a)((function(t){return t.paymentMethods.getPaymentMethod}),(function(t){return si(t)})),l=Object(ri.a)((function(t){return t.payment.getPaymentId}),(function(t){return t.paymentMethods.getPaymentMethod}),(function(t,e){return si((function(){var n=t();return n&&e(n.providerId,n.gatewayId)}))})),m=Object(ri.a)((function(t){return t.cart.getCart}),(function(t){return si(t)})),f=Object(ri.a)((function(t){return t.coupons.getCoupons}),(function(t){return si(t)})),_=Object(ri.a)((function(t){return t.giftCertificates.getGiftCertificates}),(function(t){return si(t)})),y=Object(ri.a)((function(t){return t.customer.getCustomer}),(function(t){return si(t)})),g=Object(ri.a)((function(t){return t.signInEmail.getEmail}),(function(t){return si(t)})),b=Object(ri.a)((function(t){return t.payment.isPaymentDataRequired}),(function(t){return si(t)})),v=Object(ri.a)((function(t){return t.payment.isPaymentDataSubmitted}),(function(t){return t.paymentMethods.getPaymentMethod}),(function(t,e){return si((function(n,r){return t(e(n,r))}))})),C=Object(ri.a)((function(t){return t.instruments.getInstruments}),(function(t){return t.instruments.getInstrumentsByPaymentMethod}),(function(t,e){return si((function(n){return n?e(n):t()}))})),O=Object(ri.a)((function(t){return t.form.getCustomerAccountFields}),(function(t){return si(t)})),S=Object(ri.a)((function(t){return t.form.getBillingAddressFields}),(function(t){return t.countries.getCountries}),(function(t,e){return si((function(n){return t(e(),n)}))})),w=Object(ri.a)((function(t){return t.form.getShippingAddressFields}),(function(t){return t.shippingCountries.getShippingCountries}),(function(t,e){return si((function(n){return t(e(),n)}))})),I=Object(ri.a)((function(t){return t.config.getFlashMessages}),(function(t){return si(t)})),Object(gt.memoizeOne)((function(d){return{getCheckout:t(d),getOrder:e(d),getConfig:n(d),getFlashMessages:I(d),getShippingAddress:r(d),getShippingOptions:i(d),getConsignments:o(d),getSelectedShippingOption:a(d),getShippingCountries:s(d),getBillingAddress:c(d),getBillingCountries:u(d),getPaymentMethods:p(d),getPaymentMethod:h(d),getSelectedPaymentMethod:l(d),getCart:m(d),getCoupons:f(d),getGiftCertificates:_(d),getCustomer:y(d),isPaymentDataRequired:b(d),isPaymentDataSubmitted:v(d),getSignInEmail:g(d),getInstruments:C(d),getCustomerAccountFields:O(d),getBillingAddressFields:S(d),getShippingAddressFields:w(d)}}))),z=(A=li((function(t){return t}),(function(t){return function(){for(var e=0,n=Object.keys(t);e<n.length;e++){var r=n[e],i=t[r]();if(i)return i}}})),E=Object(ri.a)((function(t){return t.shippingStrategies.getSelectOptionError}),(function(t){return t.consignments.getUpdateShippingOptionError}),(function(t,e){return function(n){return t()||e(n)}})),Object(gt.memoizeOne)((function(t){var e={getLoadCheckoutError:t.checkout.getLoadError,getUpdateCheckoutError:t.checkout.getUpdateError,getSubmitOrderError:t.paymentStrategies.getExecuteError,getFinalizeOrderError:t.paymentStrategies.getFinalizeError,getLoadOrderError:t.order.getLoadError,getLoadCartError:t.cart.getLoadError,getLoadBillingCountriesError:t.countries.getLoadError,getLoadShippingCountriesError:t.shippingCountries.getLoadError,getLoadPaymentMethodsError:t.paymentMethods.getLoadError,getLoadPaymentMethodError:t.paymentMethods.getLoadMethodError,getInitializePaymentError:t.paymentStrategies.getInitializeError,getSignInError:t.customerStrategies.getSignInError,getSignOutError:t.customerStrategies.getSignOutError,getInitializeCustomerError:t.customerStrategies.getInitializeError,getLoadShippingOptionsError:t.consignments.getLoadShippingOptionsError,getSelectShippingOptionError:E(t),getContinueAsGuestError:t.billingAddress.getContinueAsGuestError,getUpdateBillingAddressError:t.billingAddress.getUpdateError,getUpdateSubscriptionsError:t.subscriptions.getUpdateError,getUpdateShippingAddressError:t.shippingStrategies.getUpdateAddressError,getDeleteConsignmentError:t.consignments.getDeleteError,getUpdateConsignmentError:t.consignments.getUpdateError,getCreateConsignmentsError:t.consignments.getCreateError,getInitializeShippingError:t.shippingStrategies.getInitializeError,getApplyStoreCreditError:t.storeCredit.getApplyError,getApplyCouponError:t.coupons.getApplyError,getRemoveCouponError:t.coupons.getRemoveError,getApplyGiftCertificateError:t.giftCertificates.getApplyError,getRemoveGiftCertificateError:t.giftCertificates.getRemoveError,getLoadInstrumentsError:t.instruments.getLoadError,getDeleteInstrumentError:t.instruments.getDeleteError,getLoadConfigError:t.config.getLoadError,getSignInEmailError:t.signInEmail.getSendError,getCreateCustomerAccountError:t.customer.getCreateAccountError};return Object(d.__assign)({getError:A(e)},e)}))),L=(P=li((function(t){return t}),(function(t){return function(){return Object.keys(t).some((function(e){return t[e]()}))}})),j=Object(ri.a)((function(t){return t.shippingStrategies.isSelectingOption}),(function(t){return t.consignments.isUpdatingShippingOption}),(function(t,e){return function(n){return t()||e(n)}})),k=Object(ri.a)((function(t){return t.customerStrategies.isInitializing}),(function(t){return t.customerStrategies.isSigningIn}),(function(t){return t.customerStrategies.isSigningOut}),(function(t){return t.customerStrategies.isWidgetInteracting}),(function(t,e,n,r){return function(i){return t(i)||e(i)||n(i)||r(i)}})),M=Object(ri.a)((function(t){return t.shippingStrategies.isInitializing}),(function(t){return t.shippingStrategies.isUpdatingAddress}),(function(t){return t.shippingStrategies.isSelectingOption}),(function(t){return t.shippingStrategies.isWidgetInteracting}),(function(t,e,n,r){return function(i){return t(i)||e(i)||n(i)||r(i)}})),T=Object(ri.a)((function(t){return t.paymentStrategies.isInitializing}),(function(t){return t.paymentStrategies.isExecuting}),(function(t){return t.paymentStrategies.isFinalizing}),(function(t){return t.paymentStrategies.isWidgetInteracting}),(function(t,e,n,r){return function(i){return t(i)||e(i)||n(i)||r(i)}})),R=Object(ri.a)((function(t){return t.paymentStrategies.isExecuting}),(function(t){return t.checkout.isExecutingSpamCheck}),(function(t,e){return function(n){return t(n)||e()}})),Object(gt.memoizeOne)((function(t){var e={isLoadingCheckout:t.checkout.isLoading,isUpdatingCheckout:t.checkout.isUpdating,isExecutingSpamCheck:t.checkout.isExecutingSpamCheck,isSubmittingOrder:R(t),isFinalizingOrder:t.paymentStrategies.isFinalizing,isLoadingOrder:t.order.isLoading,isLoadingCart:t.cart.isLoading,isLoadingBillingCountries:t.countries.isLoading,isLoadingShippingCountries:t.shippingCountries.isLoading,isLoadingPaymentMethods:t.paymentMethods.isLoading,isLoadingPaymentMethod:t.paymentMethods.isLoadingMethod,isInitializingPayment:t.paymentStrategies.isInitializing,isSigningIn:t.customerStrategies.isSigningIn,isSigningOut:t.customerStrategies.isSigningOut,isInitializingCustomer:t.customerStrategies.isInitializing,isLoadingShippingOptions:t.consignments.isLoadingShippingOptions,isSelectingShippingOption:j(t),isUpdatingBillingAddress:t.billingAddress.isUpdating,isUpdatingSubscriptions:t.subscriptions.isUpdating,isCreatingCustomerAccount:t.customer.isCreatingCustomerAccount,isContinuingAsGuest:t.billingAddress.isContinuingAsGuest,isUpdatingShippingAddress:t.shippingStrategies.isUpdatingAddress,isUpdatingConsignment:t.consignments.isUpdating,isDeletingConsignment:t.consignments.isDeleting,isCreatingConsignments:t.consignments.isCreating,isInitializingShipping:t.shippingStrategies.isInitializing,isApplyingStoreCredit:t.storeCredit.isApplying,isApplyingCoupon:t.coupons.isApplying,isRemovingCoupon:t.coupons.isRemoving,isApplyingGiftCertificate:t.giftCertificates.isApplying,isRemovingGiftCertificate:t.giftCertificates.isRemoving,isLoadingInstruments:t.instruments.isLoading,isDeletingInstrument:t.instruments.isDeleting,isLoadingConfig:t.config.isLoading,isSendingSignInEmail:t.signInEmail.isSending,isCustomerStepPending:k(t),isShippingStepPending:M(t),isPaymentStepPending:T(t)};return Object(d.__assign)({isPending:P(e)},e)})));return function(t){return{data:D(t),errors:z(t),statuses:L(t)}}}var fi=function(){function t(t){this._messageCustomizer=t}return t.prototype.transform=function(t){var e;return t.message=(e=this._messageCustomizer(t))?e.split(/(?:\r\n|\n|\r)/).map((function(t){return t.replace(/^\s+/gm,"")})).join(" ").trim():"",t},t}();var _i=function(){function t(t,e,n,r,i,o,a,s,c,d,p,h,l,m,f,_,y,b,C,O,S,w){var I,A,E,P;this._store=t,this._billingAddressActionCreator=e,this._checkoutActionCreator=n,this._configActionCreator=r,this._customerActionCreator=i,this._consignmentActionCreator=o,this._countryActionCreator=a,this._couponActionCreator=s,this._customerStrategyActionCreator=c,this._errorActionCreator=d,this._giftCertificateActionCreator=p,this._instrumentActionCreator=h,this._orderActionCreator=l,this._paymentMethodActionCreator=m,this._paymentStrategyActionCreator=f,this._shippingCountryActionCreator=_,this._shippingStrategyActionCreator=y,this._signInEmailActionCreator=b,this._spamProtectionActionCreator=C,this._storeCreditActionCreator=O,this._subscriptionsActionCreator=S,this._formFieldsActionCreator=w,this._errorTransformer=(void 0===I&&(I="development"===u()),new fi((function(t){if(!I||!function(t){return!(!t.subtype&&!t.type)}(t))return t.message;switch(t.subtype||t.type){case v.a.MissingConsignments:return"\n                "+t.message+"\n                The data could be unavailable because no shipping address has been provided.\n                To fix this, create a consignment or update the shipping address before performing\n                the same action again.\n            ";case v.a.MissingCart:case v.a.MissingCheckout:return"\n                "+t.message+"\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you can try calling `CheckoutService#loadCheckout`\n                before performing the same action again.\n            ";case v.a.MissingCheckoutConfig:return"\n                "+t.message+"\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you need to make sure `CheckoutService` is initialized\n                properly by calling `CheckoutService#loadCheckout` before performing any\n                other actions.\n            ";case v.a.MissingOrder:return"\n                "+t.message+"\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you can try calling `CheckoutService#loadOrder`\n                before performing the same action again.\n            ";case v.a.MissingOrderId:return"\n                "+t.message+"\n                The data could be unavailable because no order has been created yet. You have\n                to first create the order before you can perform the action.\n            ";case v.a.MissingPaymentMethod:return"\n                "+t.message+"\n                The data could be unavailable because it has not loaded from the server, or\n                configured by the merchant yet. To fix the former issue, you can try calling\n                `CheckoutService#loadPaymentMethods` before performing the same action again.\n            ";case bt.a.CustomerNotInitialized:return"\n                In order to initialize the customer step of checkout, you need to call\n                `CheckoutService#initializeCustomer`. Afterwards, you should be able to\n                submit customer details.\n            ";case bt.a.PaymentNotInitialized:return"\n                "+t.message+"\n                In order to initialize the payment step of checkout, you need to call\n                `CheckoutService#initializePayment`. Afterwards, you should be able to\n                submit payment details.\n            ";case bt.a.ShippingNotInitialized:return"\n                "+t.message+"\n                In order to initialize the shipping step of checkout, you need to call\n                `CheckoutService#initializeShipping`. Afterwards, you should be able to\n                submit shipping details.\n            ";default:return t.message}}))),this._selectorsFactory=mi(),this._storeProjection=(A=this._store,E=this._selectorsFactory,P=Object(g.createDataStore)((function(t,e){return e.type===$r.Synchronize?e.payload:t}),A.getState(),{stateTransformer:E}),A.subscribe((function(t){P.dispatch(Object(g.createAction)($r.Synchronize,t))}),{initial:!1}),P)}return t.prototype.getState=function(){return this._storeProjection.getState()},t.prototype.notifyState=function(){this._storeProjection.notifyState()},t.prototype.subscribe=function(t){for(var e,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];return(e=this._storeProjection).subscribe.apply(e,Object(d.__spreadArrays)([t],n))},t.prototype.loadCheckout=function(t,e){return this._dispatch(t?this._checkoutActionCreator.loadCheckout(t,e):this._checkoutActionCreator.loadDefaultCheckout(e))},t.prototype.updateCheckout=function(t,e){var n=this._checkoutActionCreator.updateCheckout(t,e);return this._dispatch(n)},t.prototype.loadOrder=function(t,e){var n=this,r=this._orderActionCreator.loadOrder(t,e),i=this._formFieldsActionCreator.loadFormFields(e),o=this._configActionCreator.loadConfig(e);return Promise.all([this._dispatch(r),this._dispatch(o,{queueId:"config"}),this._dispatch(i,{queueId:"formFields"})]).then((function(){return n.getState()}))},t.prototype.submitOrder=function(t,e){var n=this._paymentStrategyActionCreator.execute(t,e);return this._dispatch(n,{queueId:"paymentStrategy"})},t.prototype.finalizeOrderIfNeeded=function(t){var e=this._paymentStrategyActionCreator.finalize(t);return this._dispatch(e,{queueId:"paymentStrategy"})},t.prototype.loadPaymentMethods=function(t){var e=this._paymentMethodActionCreator.loadPaymentMethods(t);return this._dispatch(e,{queueId:"paymentMethods"})},t.prototype.loadPaymentMethod=function(t,e){var n=this._paymentMethodActionCreator.loadPaymentMethod(t,e);return this._dispatch(n,{queueId:"paymentMethods"})},t.prototype.initializePayment=function(t){var e=this._paymentStrategyActionCreator.initialize(t);return this._dispatch(e,{queueId:"paymentStrategy"})},t.prototype.deinitializePayment=function(t){var e=this._paymentStrategyActionCreator.deinitialize(t);return this._dispatch(e,{queueId:"paymentStrategy"})},t.prototype.loadBillingCountries=function(t){var e=this._countryActionCreator.loadCountries(t);return this._dispatch(e,{queueId:"billingCountries"})},t.prototype.loadShippingCountries=function(t){var e=this._shippingCountryActionCreator.loadCountries(t);return this._dispatch(e,{queueId:"shippingCountries"})},t.prototype.loadBillingAddressFields=function(t){return this.loadBillingCountries(t)},t.prototype.loadShippingAddressFields=function(t){return this.loadShippingCountries(t)},t.prototype.initializeCustomer=function(t){var e=this._customerStrategyActionCreator.initialize(t);return this._dispatch(e,{queueId:"customerStrategy"})},t.prototype.deinitializeCustomer=function(t){var e=this._customerStrategyActionCreator.deinitialize(t);return this._dispatch(e,{queueId:"customerStrategy"})},t.prototype.sendSignInEmail=function(t,e){var n=this._signInEmailActionCreator.sendSignInEmail(t,e);return this._dispatch(n,{queueId:"signInEmail"})},t.prototype.createCustomerAccount=function(t,e){var n=this._customerActionCreator.createCustomer(t,e);return this._dispatch(n)},t.prototype.updateSubscriptions=function(t,e){var n=this._subscriptionsActionCreator.updateSubscriptions(t,e);return this._dispatch(n,{queueId:"subscriptions"})},t.prototype.continueAsGuest=function(t,e){var n=this._billingAddressActionCreator.continueAsGuest(t,e);return this._dispatch(n)},t.prototype.signInCustomer=function(t,e){var n=this._customerStrategyActionCreator.signIn(t,e);return this._dispatch(n,{queueId:"customerStrategy"})},t.prototype.signOutCustomer=function(t){var e=this._customerStrategyActionCreator.signOut(t);return this._dispatch(e,{queueId:"customerStrategy"})},t.prototype.loadShippingOptions=function(t){var e=this._consignmentActionCreator.loadShippingOptions(t);return this._dispatch(e)},t.prototype.initializeShipping=function(t){var e=this._shippingStrategyActionCreator.initialize(t);return this._dispatch(e,{queueId:"shippingStrategy"})},t.prototype.deinitializeShipping=function(t){var e=this._shippingStrategyActionCreator.deinitialize(t);return this._dispatch(e,{queueId:"shippingStrategy"})},t.prototype.selectShippingOption=function(t,e){var n=this._shippingStrategyActionCreator.selectOption(t,e);return this._dispatch(n,{queueId:"shippingStrategy"})},t.prototype.updateShippingAddress=function(t,e){var n=this._shippingStrategyActionCreator.updateAddress(t,e);return this._dispatch(n,{queueId:"shippingStrategy"})},t.prototype.createConsignments=function(t,e){var n=this._consignmentActionCreator.createConsignments(t,e);return this._dispatch(n,{queueId:"shippingStrategy"})},t.prototype.deleteConsignment=function(t,e){var n=this._consignmentActionCreator.deleteConsignment(t,e);return this._dispatch(n,{queueId:"shippingStrategy"})},t.prototype.updateConsignment=function(t,e){var n=this._consignmentActionCreator.updateConsignment(t,e);return this._dispatch(n,{queueId:"shippingStrategy"})},t.prototype.assignItemsToAddress=function(t,e){var n=this._consignmentActionCreator.assignItemsByAddress(t,e);return this._dispatch(n,{queueId:"shippingStrategy"})},t.prototype.unassignItemsToAddress=function(t,e){var n=this._consignmentActionCreator.unassignItemsByAddress(t,e);return this._dispatch(n,{queueId:"shippingStrategy"})},t.prototype.selectConsignmentShippingOption=function(t,e,n){var r=this._consignmentActionCreator.updateShippingOption({id:t,shippingOptionId:e},n);return this._dispatch(r,{queueId:"shippingStrategy"})},t.prototype.updateBillingAddress=function(t,e){void 0===e&&(e={});var n=this._billingAddressActionCreator.updateAddress(t,e);return this._dispatch(n)},t.prototype.applyStoreCredit=function(t,e){var n=this._storeCreditActionCreator.applyStoreCredit(t,e);return this._dispatch(n)},t.prototype.applyCoupon=function(t,e){var n=this._couponActionCreator.applyCoupon(t,e);return this._dispatch(n)},t.prototype.removeCoupon=function(t,e){var n=this._couponActionCreator.removeCoupon(t,e);return this._dispatch(n)},t.prototype.applyGiftCertificate=function(t,e){var n=this._giftCertificateActionCreator.applyGiftCertificate(t,e);return this._dispatch(n)},t.prototype.removeGiftCertificate=function(t,e){var n=this._giftCertificateActionCreator.removeGiftCertificate(t,e);return this._dispatch(n)},t.prototype.loadInstruments=function(){var t=this._instrumentActionCreator.loadInstruments();return this._dispatch(t)},t.prototype.deleteInstrument=function(t){var e=this,n=this._instrumentActionCreator.deleteInstrument(t);return this._dispatch(n).then((function(){return e.loadInstruments()}))},t.prototype.clearError=function(t){var e=this._errorActionCreator.clearError(t);return this._dispatch(e)},t.prototype.initializeSpamProtection=function(t){var e=this._spamProtectionActionCreator.initialize(t);return this._dispatch(e,{queueId:"spamProtection"})},t.prototype.executeSpamCheck=function(){var t=this._spamProtectionActionCreator.verifyCheckoutSpamProtection();return this._dispatch(t,{queueId:"spamProtection"})},t.prototype._dispatch=function(t,e){var n=this;return this._store.dispatch(t,e).then((function(){return n.getState()})).catch((function(t){throw n._errorTransformer.transform(t)}))},t=Object(d.__decorate)([Dt.a],t)}(),yi=n(136);function gi(t){"https:"!==document.location.protocol&&f().warn("The BigCommerce Checkout SDK should not be used on a non-HTTPS page"),"production"!==u()&&f().warn("Note that the development build is not optimized. To create a production build, set process.env.NODE_ENV to `production`.");var e={meta:{externalSource:t&&t.externalSource,variantIdentificationToken:window.checkoutVariantIdentificationToken},errors:{},statuses:{}},n=t||{},s=n.locale,d=void 0===s?"":s,p=n.shouldWarnMutation,h=void 0===p||p,l=Object(r.createRequestSender)({host:t&&t.host}),m=Object(yi.a)({config:e},{shouldWarnMutation:h}),g=function(t){var e=Object(Wt.createClient)();return t.subscribe((function(t){var n=t.config.getStoreConfig();n&&e.setHost(n.paymentSettings.bigpayBaseUrl)}),(function(t){return t.config.getStoreConfig()})),e}(m),b=new Gt(l),v=new U.a(l),C=new _.a(new y.a(l)),S=St(Object(i.createScriptLoader)()),w=new wt(l),I=new _t(S,w),A=new Ht(b,new ee(v)),P=new Ie.a(new Ae.a(l)),M=new G.a(new V.a(l)),T=new x.a(v,C,M);return new _i(m,new o.a(new a.a(l),P),T,C,new z(new L(l),T,I),new Gr.a(new Vr.a(l),v),new Ut(new xt(l,{locale:d})),new O(new E(l)),new F(function(t,e){var n=new B.a,r=Object(i.getScriptLoader)(),o=new U.a(e),a=new x.a(o,new _.a(new y.a(e)),new G.a(new V.a(e))),s=Object(q.createFormPoster)(),c=new Y.a(new H.a(e)),u=new ut(e),d=new pt(u);return n.register("googlepayadyenv2",(function(){return new zt(t,d,Object(nt.a)(t,new rt.a),s)})),n.register("amazon",(function(){return new Et(t,c,d,u,new W(r))})),n.register("amazonpay",(function(){return new kt(t,c,d,Object(K.a)())})),n.register("braintreevisacheckout",(function(){return new Mt(t,a,c,new F(n),d,X(r,e),new tt(r))})),n.register("chasepay",(function(){return new Tt(t,c,d,new et(r),e,s)})),n.register("squarev2",(function(){return new Ft(t,new pt(u))})),n.register("masterpass",(function(){return new Nt(t,c,d,new ct.a(r))})),n.register("googlepayauthorizenet",(function(){return new zt(t,d,Object(nt.a)(t,new it.a),s)})),n.register("googlepaybraintree",(function(){return new zt(t,d,Object(nt.a)(t,new ot.a(new Z.a(new J.a(r)))),s)})),n.register("googlepaycheckoutcom",(function(){return new zt(t,d,Object(nt.a)(t,new at.a(e)),s)})),n.register("googlepaystripe",(function(){return new zt(t,d,Object(nt.a)(t,new st.a),s)})),n.register("default",(function(){return new Rt(t,new z(new L(e),a,new _t(St(r),new wt(e))))})),n}(m,l)),new c,new j(new k(l)),new Ur(new Br(g,l)),A,new Y.a(new H.a(l)),new Xt(Fr(m,g,l,S,d),A,I),new Hr(new Wr(l,{locale:d})),new Jr(function(t,e){var n=new B.a,r=new U.a(e),o=new Vr.a(e),a=new Gr.a(o,r);return n.register("amazon",(function(){return new Zr(t,a,new Y.a(new H.a(e)),new pt(new ut(e)),new W(Object(i.getScriptLoader)()))})),n.register("amazonpay",(function(){return new Qr(t,a,new Y.a(new H.a(e)),Object(K.a)(),new Jr(n))})),n.register("default",(function(){return new Xr(t,a)})),n}(m,l)),new ei(new ni(l)),I,new Se(new we(l)),P,M)}var bi=n(147),vi=n(148),Ci=n(149),Oi=n(151),Si=n.n(Oi),wi=function(){function t(t,e){this._logger=e;var n=this._transformConfig(t),r=n.locale,i=n.locales,o=n.translations;this._locale=r,this._locales=i,this._translations=o,this._formatters={}}return t.prototype.mapKeys=function(t){var e=this;Object.keys(t).forEach((function(n){var r="optimized_checkout."+t[n];e._translations["optimized_checkout."+n]=e._translations[r]}))},t.prototype.getLocale=function(){return this._hasTranslations()?this._locale:"en"},t.prototype.translate=function(t,e){void 0===e&&(e={});var n="optimized_checkout."+t;if("string"!=typeof this._translations[n])return this._logger.warn('Translation key "'+n+'" is missing'),n;if(!this._formatters[n]){var r=new Si.a(this._locales[n]);this._formatters[n]=r.compile(this._translations[n]||"")}return this._formatters[n](this._transformData(e))},t.prototype._transformConfig=function(t){void 0===t&&(t={});var e={defaultTranslations:{},translations:{},locales:{},locale:t.locale||"en"},n=t.locales||{},r=this._flattenObject(t.translations||{}),i=this._flattenObject(t.defaultTranslations||{});return Object(Bt.union)(Object.keys(i),Object.keys(r)).forEach((function(t){r&&r[t]?(e.translations[t]=r[t],e.locales[t]=n[t]||e.locale):(e.translations[t]=i[t],e.locales[t]="en")})),e},t.prototype._flattenObject=function(t,e,n){var r=this;void 0===e&&(e={}),void 0===n&&(n="");try{Object.keys(t).forEach((function(i){var o=t[i],a=n?n+"."+i:i;if(Object(Bt.isObject)(o))return r._flattenObject(o,e,a);e[a]=o}))}catch(t){this._logger.warn("Unable to parse object: "+t)}return e},t.prototype._transformData=function(t){return Object.keys(t).reduce((function(e,n){var r=t[n];return e[n]=null==r?"":r,e}),{})},t.prototype._hasTranslations=function(){var t=this;return Object.keys(this._locales).map((function(e){return t._locales[e]})).filter((function(e){return e.split("-")[0]===t._locale.split("-")[0]})).length>0},t=Object(d.__decorate)([Dt.a],t)}();function Ii(t){return void 0===t&&(t={}),new wi(t,f())}var Ai=function(){function t(t){if(!t)throw new Error("Currency settings missing");var e=t.decimalPlaces,n=t.symbolLocation,r=t.symbol,i=t.thousandsSeparator,o=t.decimalSeparator;if("string"!=typeof n||"string"!=typeof r||"string"!=typeof i||"string"!=typeof o||"string"!=typeof e)throw new It.a("Invalid currency settings provided");this._decimalPlaces=parseInt(e,10),this._symbolLocation=n,this._symbol=r,this._thousandsSeparator=i,this._decimalSeparator=o}return t.prototype.format=function(t){if("number"!=typeof t)throw new It.a("Invalid amount provided");var e=this._formatNumber(t),n=this._formatCurrency(e);return t<0?"-"+n:n},t.prototype._formatNumber=function(t){var e=Math.abs(t),n=this._toFixed(e,this._decimalPlaces).split("."),r=n[0],i=n[1],o=void 0===i?"":i,a=r.replace(/\B(?=(\d{3})+(?!\d))/g,this._thousandsSeparator);return this._decimalPlaces<1?a:[a,o].join(this._decimalSeparator)},t.prototype._formatCurrency=function(t){return"left"===this._symbolLocation.toLowerCase()?""+this._symbol+t:""+t+this._symbol},t.prototype._toFixed=function(t,e){return(+(Math.round(+(t+"e"+e))+"e"+-e)).toFixed(e)},t}(),Ei=function(){function t(t){this._storeConfig=t,this._customerFormatter=new Ai(this._storeConfig.shopperCurrency),this._storeFormatter=new Ai(this._storeConfig.currency)}return t.prototype.toCustomerCurrency=function(t){var e=this._storeConfig.shopperCurrency.exchangeRate;return this._customerFormatter.format(t*e)},t.prototype.toStoreCurrency=function(t){return this._storeFormatter.format(t)},t=Object(d.__decorate)([Dt.a],t)}();function Pi(t){return new Ei(t)}var ji,ki=n(51),Mi=n.n(ki);!function(t){t[t.CUSTOMER=1]="CUSTOMER",t[t.SHIPPING=2]="SHIPPING",t[t.BILLING=3]="BILLING",t[t.PAYMENT=4]="PAYMENT"}(ji||(ji={}));var Ti={customer:ji.CUSTOMER,shipping:ji.SHIPPING,billing:ji.BILLING,payment:ji.PAYMENT},Ri=function(){function t(t,e,n,r){var i=(void 0===r?{}:r).checkoutSteps;if(this.checkoutService=t,this.storage=e,this.analytics=n,this._checkoutStarted=!1,this._completedSteps={},this._viewedSteps={},this._analyticStepOrder=["customer","shipping","billing","payment"],void 0!==i){if(i.some((function(t){return!(t in Ti)})))throw new It.a("Invalid checkout steps provided. Valid values are: "+Object(Bt.keys)(Ti).join(", ")+".");this._analyticStepOrder=i}}return t.prototype.trackCheckoutStarted=function(){if(!this._checkoutStarted){var t=this.getCheckout();if(t){var e=t.coupons,n=t.grandTotal,r=t.shippingCostTotal,i=t.taxTotal,o=t.cart,a=o.lineItems,s=o.discountAmount,c=o.id,u=this.saveExtraItemsData(c,a);this.analytics.track("Checkout Started",this.getTrackingPayload({revenue:n,shipping:r,tax:i,discount:s,coupons:e,lineItems:a,extraItemsData:u})),this._checkoutStarted=!0}}},t.prototype.trackOrderComplete=function(){var t,e=this,n=this.getOrder();if(n){var r=n.isComplete,i=n.orderId,o=n.orderAmount,a=n.shippingCostTotal,s=n.taxTotal,c=n.discountAmount,u=n.coupons,d=n.lineItems,p=n.cartId;if(r){var h=this.readExtraItemsData(p);if(null!==h){var l=null===(t=this.checkoutService.getState().data.getConfig())||void 0===t?void 0:t.checkoutSettings.features["DATA-6891.missing_orders_within_GA"],m=this.getTrackingPayload({orderId:i,revenue:o,shipping:a,tax:s,discount:c,coupons:u,extraItemsData:h,lineItems:d});if(l&&this.analytics.hasPayloadLimit(m))return this.analytics.hit("transaction",{"&ti":m.orderId,"&ta":m.affiliation,"&tr":m.revenue,"&ts":m.shipping,"&tt":m.tax,"&tcc":m.coupon,"&cu":m.currency}),m.products.map((function(t){e.analytics.hit("item",{"&ti":m.orderId,"&in":t.name,"&ic":t.sku,"&iv":""+t.category,"&ip":t.price,"&iq":t.quantity})})),this.clearExtraItemData(p);this.analytics.track("Order Completed",m),this.clearExtraItemData(p)}}}},t.prototype.trackStepViewed=function(t){var e=this.getIdFromStep(t);e&&!this.hasStepViewed(e)&&(this.trackViewed(e),this.backfill(e))},t.prototype.trackStepCompleted=function(t){var e=this.getIdFromStep(t);e&&!this.hasStepCompleted(e)&&(this.backfill(e),this.trackCompleted(e))},t.prototype.backfill=function(t){for(var e=0,n=this._analyticStepOrder;e<n.length;e++){var r=n[e],i=this.getIdFromStep(r);if(!i)break;if(this.hasStepViewed(i)||this.trackViewed(i),i===t)break;this.hasStepCompleted(i)||this.trackCompleted(i)}},t.prototype.trackCompleted=function(t){var e=this.getSelectedShippingOption(),n=(this.getShopperCurrency()||{}).code,r=void 0===n?"":n,i=this.getPaymentMethodName(),o={step:t,currency:r};e&&(o.shippingMethod=e.description),i&&(o.paymentMethod=i),o.shippingMethod||o.paymentMethod||(o.shippingMethod=" "),this.analytics.track("Checkout Step Completed",o);var a=e?e.id:"",s=t===ji.SHIPPING?t+"-"+a:t;this._completedSteps[s]=!0},t.prototype.getTrackingPayload=function(t){var e=t.orderId,n=t.revenue,r=t.shipping,i=t.tax,o=t.discount,a=t.coupons,s=t.extraItemsData,c=t.lineItems,u=(this.getShopperCurrency()||{}).code,d=void 0===u?"":u,p=(this.getStoreProfile()||{}).storeName;return{orderId:e,affiliation:void 0===p?"":p,revenue:this.toShopperCurrency(n),shipping:this.toShopperCurrency(r),tax:this.toShopperCurrency(i),discount:this.toShopperCurrency(o),coupon:(a||[]).map((function(t){return t.code.toUpperCase()})).join(","),currency:d,products:this.getProducts(s,c)}},t.prototype.hasStepCompleted=function(t){var e=this.getSelectedShippingOption(),n=e?e.id:"";return this._completedSteps.hasOwnProperty(t)||t===ji.SHIPPING&&this._completedSteps.hasOwnProperty(t+"-"+n)},t.prototype.hasStepViewed=function(t){return!!this._viewedSteps[t]},t.prototype.getIdFromStep=function(t){var e=t.split(".");return Ti[e[0]]||null},t.prototype.trackViewed=function(t){var e=this.getShopperCurrency();this.analytics.track("Checkout Step Viewed",{step:t,currency:e?e.code:""}),this._viewedSteps[t]=!0},t.prototype.getOrder=function(){return(0,this.checkoutService.getState().data.getOrder)()},t.prototype.getCheckout=function(){return(0,this.checkoutService.getState().data.getCheckout)()},t.prototype.getShopperCurrency=function(){var t=(0,this.checkoutService.getState().data.getConfig)();return t&&t.shopperCurrency},t.prototype.getStoreProfile=function(){var t=(0,this.checkoutService.getState().data.getConfig)();return t&&t.storeProfile},t.prototype.toShopperCurrency=function(t){var e=(this.getShopperCurrency()||{}).exchangeRate,n=void 0===e?1:e;return Math.round(t*n*100)/100},t.prototype.saveExtraItemsData=function(t,e){var n=Object(d.__spreadArrays)(e.physicalItems,e.digitalItems).reduce((function(t,e){return t[e.productId]={brand:e.brand?e.brand:"",category:e.categoryNames?e.categoryNames.join(", "):""},t}),{});try{return this.storage.setItem(this.getStorageKey(t),JSON.stringify(n)),n}catch(t){return{}}},t.prototype.getStorageKey=function(t){return t?"ORDER_ITEMS_"+t:""},t.prototype.readExtraItemsData=function(t){try{var e=this.storage.getItem(this.getStorageKey(t));return e?JSON.parse(e):null}catch(t){return null}},t.prototype.clearExtraItemData=function(t){try{this.storage.removeItem(this.getStorageKey(t))}catch(t){}},t.prototype.getSelectedShippingOption=function(){var t=this.checkoutService.getState().data.getSelectedShippingOption();return t&&t.id&&t.description?t:null},t.prototype.getPaymentMethodName=function(){var t=this.checkoutService.getState().data.getSelectedPaymentMethod();return t&&t.config&&t.config.displayName||""},t.prototype.getProducts=function(t,e){var n=this,r=(e.customItems||[]).map((function(t){return{product_id:t.id,sku:t.sku,price:t.listPrice,quantity:t.quantity,name:t.name}})),i=e.giftCertificates.map((function(t){return{product_id:t.id,price:n.toShopperCurrency(t.amount),name:t.name,quantity:1}})),o=Object(d.__spreadArrays)(e.physicalItems,e.digitalItems).map((function(e){var n;return e.options&&e.options.length&&(n=e.options.map((function(t){return t.name+":"+t.value}))).sort(),{product_id:e.productId,sku:e.sku,price:e.salePrice,image_url:e.imageUrl,name:e.name,quantity:e.quantity,brand:t[e.productId]?t[e.productId].brand:"",category:t[e.productId]?t[e.productId].category:"",variant:(n||[]).join(", ")}}));return Object(d.__spreadArrays)(r,o,i)},t}();var Di=function(){function t(){}return t.prototype.trackCheckoutStarted=function(){},t.prototype.trackOrderComplete=function(){},t.prototype.trackStepViewed=function(){},t.prototype.trackStepCompleted=function(){},t}();function zi(t,e){var n=t.getState().data.getConfig();if(!n)throw new v.b(v.a.MissingCheckoutConfig);return n.checkoutSettings.isAnalyticsEnabled&&function(t){return Boolean(t.analytics)}(window)?new Ri(t,Mi.a,window.analytics,e):new Di}n.d(e,"createTimeout",(function(){return r.createTimeout})),n.d(e,"createCheckoutService",(function(){return gi})),n.d(e,"createCheckoutButtonInitializer",(function(){return bi.a})),n.d(e,"embedCheckout",(function(){return vi.a})),n.d(e,"createEmbeddedCheckoutMessenger",(function(){return Ci.a})),n.d(e,"createLanguageService",(function(){return Ii})),n.d(e,"createCurrencyService",(function(){return Pi})),n.d(e,"createStepTracker",(function(){return zi}))},,function(t,e,n){"use strict";var r,i,o,a,s=n(0),c=n(52),u=n(45),d=function(){function t(t){this._scriptLoader=t,this._window=window}return t.prototype.loadPaypalCommerce=function(t,e){return Object(s.__awaiter)(this,void 0,void 0,(function(){return Object(s.__generator)(this,(function(n){switch(n.label){case 0:return this._validateParams(t,e),this._window.paypalLoadScript?[3,2]:("https://unpkg.com/@paypal/paypal-js@1.0.2/dist/paypal.browser.min.js",[4,this._scriptLoader.loadScript("https://unpkg.com/@paypal/paypal-js@1.0.2/dist/paypal.browser.min.js",{async:!0,attributes:{}})]);case 1:if(n.sent(),!this._window.paypalLoadScript)throw new u.a;n.label=2;case 2:return[4,this._window.paypalLoadScript(t)];case 3:if(n.sent(),!this._window.paypal)throw new u.a;return[2,this._window.paypal]}}))}))},t.prototype._validateParams=function(t,e){var n;if(t?t["client-id"]?t["merchant-id"]||e||(n="merchant-id"):n="client-id":n="options",n)throw new c.a('Unable to proceed because "'+n+'" argument in PayPal script is not provided.')},t}(),p=n(72),h=n(39),l=function(){function t(t){this._requestSender=t}return t.prototype.setupPayment=function(t,e){return void 0===e&&(e={}),Object(s.__awaiter)(this,void 0,void 0,(function(){var n,r,i,o,a,c,u;return Object(s.__generator)(this,(function(s){switch(s.label){case 0:return n=e.isCredit,r=e.isCheckout,i=e.isCreditCard,o="paypalcommerce",i?o="paypalcommercecreditcardscheckout":r?o=n?"paypalcommercecreditcheckout":"paypalcommercecheckout":n&&(o="paypalcommercecredit"),a="/api/storefront/payment/"+o,c={cartId:t},u={"X-API-INTERNAL":p.a,"Content-Type":h.a.Json},[4,this._requestSender.post(a,{headers:u,body:c})];case 1:return[2,s.sent().body]}}))}))},t}(),m=n(2),f=n(111),_=n(180);!function(t){t.paypal="paypal",t.checkout="checkout",t.buynow="buynow",t.pay="pay",t.installment="installment"}(r||(r={})),function(t){t.vertical="vertical",t.horizontal="horizontal"}(i||(i={})),function(t){t.gold="gold",t.blue="blue",t.silver="silver",t.black="black",t.white="white"}(o||(o={})),function(t){t.pill="pill",t.rect="rect"}(a||(a={}));var y=function(){function t(t,e){this._paypalScriptLoader=t,this._paypalCommerceRequestSender=e,this._validateStyleParams=function(t){var e=Object(s.__assign)({},t),n=t.label,c=t.color,u=t.layout,d=t.shape,p=t.height,h=t.tagline;return n&&!r[n]&&delete e.label,u&&!i[u]&&delete e.layout,c&&!o[c]&&delete e.color,d&&!a[d]&&delete e.shape,"number"==typeof p?e.height=p<25?25:p>55?55:p:delete e.height,("boolean"!=typeof h||h&&e.layout!==i[i.horizontal])&&delete e.tagline,e}}return t.prototype.initialize=function(t,e){return Object(s.__awaiter)(this,void 0,void 0,(function(){var n;return Object(s.__generator)(this,(function(r){switch(r.label){case 0:return n=this,[4,this._paypalScriptLoader.loadPaypalCommerce(t,e)];case 1:return n._paypal=r.sent(),[2,this._paypal]}}))}))},t.prototype.renderButtons=function(t,e,n,r){var i=this;if(void 0===n&&(n={}),void 0===r&&(r={}),!this._paypal||!this._paypal.Buttons)throw new u.a;var o=r.paramsForProvider,a=r.fundingKey,c=r.onRenderButton,d=Object(s.__assign)(Object(s.__assign)({},n),{createOrder:function(){return i._setupPayment(t,o)},onClick:function(t,e){return Object(s.__awaiter)(i,void 0,void 0,(function(){var r;return Object(s.__generator)(this,(function(i){return this._fundingSource=t.fundingSource,[2,null===(r=n.onClick)||void 0===r?void 0:r.call(n,t,e)]}))}))}});return n.style&&(d.style=this._validateStyleParams(n.style)),a&&(this._fundingSource=this._paypal.FUNDING[a],d.fundingSource=this._fundingSource),this._paypalButtons=this._paypal.Buttons(d),this._paypalButtons.isEligible()||this._processNotEligible(d,a),null==c||c(),this._paypalButtons.render(e),this._paypalButtons},t.prototype.renderMessages=function(t,e){if(!this._paypal||!this._paypal.Messages)throw new u.a;return this._paypalMessages=this._paypal.Messages({amount:t,placement:"cart",style:{layout:"text"}}),this._paypalMessages.render(e),this._paypalMessages},t.prototype.renderHostedFields=function(t,e,n){return Object(s.__awaiter)(this,void 0,void 0,(function(){var r,i,o,a=this;return Object(s.__generator)(this,(function(s){switch(s.label){case 0:if(!this._paypal||!this._paypal.HostedFields)throw new u.a;if(r=e.fields,i=e.styles,!this._paypal.HostedFields.isEligible())throw new f.b(f.a.PaymentNotInitialized);return o=this,[4,this._paypal.HostedFields.render({fields:r,styles:i,paymentsSDK:!0,createOrder:function(){return a._setupPayment(t,{isCreditCard:!0})}})];case 1:return o._hostedFields=s.sent(),n&&Object.keys(n).forEach((function(t){a._hostedFields.on(t,n[t])})),[2]}}))}))},t.prototype.submitHostedFields=function(t){return Object(s.__awaiter)(this,void 0,void 0,(function(){return Object(s.__generator)(this,(function(e){if(!this._hostedFields)throw new f.b(f.a.PaymentNotInitialized);return[2,this._hostedFields.submit(Object(m.omitBy)(t,m.isNil))]}))}))},t.prototype.getHostedFieldsValidationState=function(){if(!this._hostedFields)throw new f.b(f.a.PaymentNotInitialized);var t=this._hostedFields.getState().fields;return{isValid:Object.keys(t).every((function(e){var n;return null===(n=t[e])||void 0===n?void 0:n.isValid})),fields:t}},t.prototype.deinitialize=function(){var t,e;null===(e=null===(t=this._paypalButtons)||void 0===t?void 0:t.close)||void 0===e||e.call(t),this._paypal=void 0,this._paypalButtons=void 0,this._fundingSource=void 0,this._hostedFields=void 0},t.prototype._setupPayment=function(t,e){return void 0===e&&(e={}),Object(s.__awaiter)(this,void 0,void 0,(function(){var n;return Object(s.__generator)(this,(function(r){switch(r.label){case 0:return n=Object(s.__assign)(Object(s.__assign)({},e),{isCredit:"credit"===this._fundingSource||"paylater"===this._fundingSource}),[4,this._paypalCommerceRequestSender.setupPayment(t,n)];case 1:return[2,r.sent().orderId]}}))}))},t.prototype._processNotEligible=function(t,e){var n,r,i,o;if(e!==(null===(n=this._paypal)||void 0===n?void 0:n.FUNDING.PAYLATER)||(t.fundingSource=null===(r=this._paypal)||void 0===r?void 0:r.FUNDING.CREDIT,this._paypalButtons=null===(i=this._paypal)||void 0===i?void 0:i.Buttons(t),null===(o=this._paypalButtons)||void 0===o||!o.isEligible()))throw new _.a("PayPal "+(this._fundingSource||"")+" is not available for your region. Please use PayPal Checkout instead.")},t}();function g(t,e){var n=new d(t),r=new l(e);return new y(n,r)}n.d(e,"a",(function(){return g}))},function(t,e,n){"use strict";var r=n(31),i=n(0),o=n(111),a=function(){function t(t){this._amazonPayV2ScriptLoader=t}return t.prototype.initialize=function(t){return Object(i.__awaiter)(this,void 0,void 0,(function(){var e;return Object(i.__generator)(this,(function(n){switch(n.label){case 0:return e=this,[4,this._amazonPayV2ScriptLoader.load(t)];case 1:return e._amazonPayV2SDK=n.sent(),[2]}}))}))},t.prototype.deinitialize=function(){return this._amazonPayV2SDK=void 0,Promise.resolve()},t.prototype.bindButton=function(t,e,n){this._getAmazonPayV2SDK().Pay.bindChangeAction("#"+t,{amazonCheckoutSessionId:e,changeAction:n})},t.prototype.createButton=function(t,e){return this._getAmazonPayV2SDK().Pay.renderButton(t,e)},t.prototype.signout=function(){return Object(i.__awaiter)(this,void 0,void 0,(function(){return Object(i.__generator)(this,(function(t){return this._amazonPayV2SDK&&this._amazonPayV2SDK.Pay.signout(),[2,Promise.resolve()]}))}))},t.prototype._getAmazonPayV2SDK=function(){if(!this._amazonPayV2SDK)throw new o.b(o.a.PaymentNotInitialized);return this._amazonPayV2SDK},t}(),s=n(45),c=n(103),u=function(){function t(t,e){void 0===e&&(e=window),this._scriptLoader=t,this._window=e}return t.prototype.load=function(t){return Object(i.__awaiter)(this,void 0,void 0,(function(){var e,n,r,o;return Object(i.__generator)(this,(function(i){switch(i.label){case 0:return e=t.initializationData,n=(void 0===e?{}:e).region,r=void 0===n?"us":n,o=c.c[r],[4,this._scriptLoader.loadScript("https://static-"+o+".payments-amazon.com/checkout.js")];case 1:if(i.sent(),!this._window.amazon)throw new s.a;return[2,this._window.amazon]}}))}))},t}();function d(){return new a(new u(Object(r.getScriptLoader)()))}n.d(e,"a",(function(){return d}))},function(t,e,n){"use strict";var r=n(46),i=n(31),o=n(201),a=n(178),s=n(137),c=n(130),u=n(131),d=n(200),p=n(175),h=n(87),l=n(88),m=n(111),f=n(12),_=n(181),y=n(170),g=n(29),b=function(){function t(t,e,n,r,i,o,a){this._store=t,this._paymentMethodActionCreator=e,this._googlePayScriptLoader=n,this._googlePayInitializer=r,this._billingAddressActionCreator=i,this._consignmentActionCreator=o,this._requestSender=a}return t.prototype.initialize=function(t){return this._methodId=t,this._configureWallet()},t.prototype.deinitialize=function(){return this._googlePayInitializer.teardown()},t.prototype.createButton=function(t,e,n){if(void 0===e&&(e=g.c.Short),void 0===n&&(n=g.b.Default),!this._googlePayClient)throw new m.b(m.a.PaymentNotInitialized);return this._googlePayClient.createButton({buttonColor:n,buttonType:e,onClick:t})},t.prototype.displayWallet=function(){if(!this._googlePayClient)throw new m.b(m.a.PaymentNotInitialized);return this._googlePayClient.loadPaymentData(this._getPaymentDataRequest())},t.prototype.handleSuccess=function(t){var e=this;return this._googlePayInitializer.parseResponse(t).then((function(t){return e._postForm(t)})).then((function(){return e._updateBillingAddress(t)}))},t.prototype.updateShippingAddress=function(t){return this._store.dispatch(this._consignmentActionCreator.updateAddress(this._mapGooglePayAddressToShippingAddress(t)))},t.prototype._configureWallet=function(){var t=this,e=this._getMethodId();return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(e)).then((function(n){var r=n.paymentMethods.getPaymentMethod(e),i=n.checkout.getCheckout(),o=!!n.shippingAddress.getShippingAddress();if(!r)throw new f.b(f.a.MissingPaymentMethod);if(!i)throw new f.b(f.a.MissingCheckout);var a=r.config.testMode;return Promise.all([t._googlePayScriptLoader.load(),t._googlePayInitializer.initialize(i,r,o)]).then((function(e){var n=e[0],r=e[1];return t._googlePayClient=t._getGooglePayClient(n,a),t._paymentDataRequest=r,t._googlePayClient.isReadyToPay({allowedPaymentMethods:[{type:r.allowedPaymentMethods[0].type,parameters:{allowedAuthMethods:r.allowedPaymentMethods[0].parameters.allowedAuthMethods,allowedCardNetworks:r.allowedPaymentMethods[0].parameters.allowedCardNetworks}}],apiVersion:r.apiVersion,apiVersionMinor:r.apiVersionMinor}).then((function(t){if(!t.result)throw new y.a}))}))}))},t.prototype._getCardInformation=function(t){return{type:t.cardType,number:t.lastFour}},t.prototype._getPaymentDataRequest=function(){if(!this._paymentDataRequest)throw new _.a;return this._paymentDataRequest},t.prototype._getGooglePayClient=function(t,e){if(void 0===e)throw new f.b(f.a.MissingPaymentMethod);var n=e?"TEST":"PRODUCTION";return new t.payments.api.PaymentsClient({environment:n})},t.prototype._getMethodId=function(){if(!this._methodId)throw new m.b(m.a.PaymentNotInitialized);return this._methodId},t.prototype._mapGooglePayAddressToBillingAddress=function(t,e){return{id:e,firstName:t.paymentMethodData.info.billingAddress.name.split(" ").slice(0,-1).join(" "),lastName:t.paymentMethodData.info.billingAddress.name.split(" ").slice(-1).join(" "),company:t.paymentMethodData.info.billingAddress.companyName,address1:t.paymentMethodData.info.billingAddress.address1,address2:t.paymentMethodData.info.billingAddress.address2+t.paymentMethodData.info.billingAddress.address3,city:t.paymentMethodData.info.billingAddress.locality,stateOrProvince:t.paymentMethodData.info.billingAddress.administrativeArea,stateOrProvinceCode:t.paymentMethodData.info.billingAddress.administrativeArea,postalCode:t.paymentMethodData.info.billingAddress.postalCode,countryCode:t.paymentMethodData.info.billingAddress.countryCode,phone:t.paymentMethodData.info.billingAddress.phoneNumber,customFields:[],email:t.email}},t.prototype._mapGooglePayAddressToShippingAddress=function(t){return{firstName:t.name.split(" ").slice(0,-1).join(" "),lastName:t.name.split(" ").slice(-1).join(" "),company:t.companyName,address1:t.address1,address2:t.address2+t.address3,city:t.locality,stateOrProvince:t.administrativeArea,stateOrProvinceCode:t.administrativeArea,postalCode:t.postalCode,countryCode:t.countryCode,phone:t.phoneNumber,customFields:[]}},t.prototype._postForm=function(t){var e=t.details;return this._requestSender.post("/checkout.php",{headers:{Accept:"text/html","Content-Type":"application/x-www-form-urlencoded"},body:{payment_type:t.type,nonce:t.nonce,provider:this._getMethodId(),action:"set_external_checkout",card_information:this._getCardInformation(e)}})},t.prototype._updateBillingAddress=function(t){var e=this._store.getState().billingAddress.getBillingAddress();if(!e)throw new f.b(f.a.MissingBillingAddress);var n=this._mapGooglePayAddressToBillingAddress(t,e.id);return this._store.dispatch(this._billingAddressActionCreator.updateAddress(n))},t}(),v=n(45),C=function(){function t(t,e){void 0===e&&(e=window),this._scriptLoader=t,this._window=e}return t.prototype.load=function(){var t=this;return this._scriptLoader.loadScript("https://pay.google.com/gp/p/js/pay.js").then((function(){if(!t._window.google)throw new v.a;return t._window.google}))},t}();function O(t,e){var n=Object(r.createRequestSender)(),m=Object(i.getScriptLoader)();return new b(t,new h.a(new l.a(n)),new C(m),e,new o.a(new a.a(n),new d.a(new p.a(n))),new c.a(new u.a(n),new s.a(n)),n)}n.d(e,"a",(function(){return O}))},,function(t,e,n){"use strict";var r=n(0),i=n(1),o=n(3),a=n(8),s=n(90),c=n(172),u=function(t){function e(e){var n=t.call(this,e)||this;return n.name="UpdateSubscriptionsError",n.type="update_subscriptions",n}return Object(r.__extends)(e,t),e}(n(35).a),d=function(){function t(t){this._subscriptionsRequestSender=t}return t.prototype.updateSubscriptions=function(t,e){var n=this;return Object(o.concat)(Object(o.of)(Object(i.createAction)(c.a.UpdateSubscriptionsRequested)),Object(o.defer)((function(){return Object(r.__awaiter)(n,void 0,void 0,(function(){var n;return Object(r.__generator)(this,(function(r){switch(r.label){case 0:return[4,this._subscriptionsRequestSender.updateSubscriptions(t,e)];case 1:return n=r.sent().body,[2,Object(i.createAction)(c.a.UpdateSubscriptionsSucceeded,n)]}}))}))}))).pipe(Object(a.catchError)((function(t){return Object(s.a)(c.a.UpdateSubscriptionsFailed,new u(t))})))},t}();e.a=d},function(t,e,n){"use strict";var r=n(0),i=n(1),o=n(3),a=n(8),s=n(90),c=n(12),u=n(19),d=function(t){function e(e){var n=t.call(this,e||"Unable to continue as a guest because the customer is already signed in.")||this;return n.name="UnableToContinueAsGuestError",n.type="unable_to_continue_as_guest",n}return Object(r.__extends)(e,t),e}(n(22).a),p=function(){function t(t,e){this._requestSender=t,this._subscriptionActionCreator=e}return t.prototype.continueAsGuest=function(t,e){var n=this;return function(p){var h=p.getState(),l=h.checkout.getCheckout();if(!l)throw new c.b(c.a.MissingCheckout);var m=h.customer.getCustomer();if(m&&!m.isGuest)throw new d;var f,_=h.billingAddress.getBillingAddress();if(_){_.country;var y=Object(r.__rest)(_,["country"]);f=Object(r.__assign)(Object(r.__assign)({},y),t)}else f=t;return Object(o.merge)(Object(o.concat)(Object(o.of)(Object(i.createAction)(u.a.ContinueAsGuestRequested)),Object(o.defer)((function(){return Object(r.__awaiter)(n,void 0,void 0,(function(){var t;return Object(r.__generator)(this,(function(n){switch(n.label){case 0:return[4,this._createOrUpdateBillingAddress(l.id,f,e)];case 1:return t=n.sent().body,[2,Object(i.createAction)(u.a.ContinueAsGuestSucceeded,t)]}}))}))}))).pipe(Object(a.catchError)((function(t){return Object(s.a)(u.a.ContinueAsGuestFailed,t)}))),n._updateCustomerConsent(t,e))}},t.prototype.updateAddress=function(t,e){var n=this;return function(a){return o.Observable.create((function(o){var s=a.getState(),d=s.checkout.getCheckout();if(!d)throw new c.b(c.a.MissingCheckout);o.next(Object(i.createAction)(u.a.UpdateBillingAddressRequested));var p=s.billingAddress.getBillingAddress(),h=Object(r.__assign)(Object(r.__assign)({},t),{email:void 0===t.email&&p?p.email:t.email});p&&p.id&&(h.id=p.id),n._createOrUpdateBillingAddress(d.id,h,e).then((function(t){var e=t.body;o.next(Object(i.createAction)(u.a.UpdateBillingAddressSucceeded,e)),o.complete()})).catch((function(t){o.error(Object(i.createErrorAction)(u.a.UpdateBillingAddressFailed,t))}))}))}},t.prototype._updateCustomerConsent=function(t,e){var n=t.email,r=t.acceptsAbandonedCartEmails,i=t.acceptsMarketingNewsletter;return null==r&&null==i?Object(o.empty)():this._subscriptionActionCreator.updateSubscriptions({email:n,acceptsMarketingNewsletter:i||!1,acceptsAbandonedCartEmails:r||!1},e)},t.prototype._createOrUpdateBillingAddress=function(t,e,n){return e.id?this._requestSender.updateAddress(t,e,n):this._requestSender.createAddress(t,e,n)},t}();e.a=p},function(t,e,n){"use strict";var r=n(2);function i(t){return e=t.lineItems.physicalItems.filter((function(t){return!t.addedByPromotion})),Object(r.reduce)(e,(function(t,e){return t+e.quantity}),0);var e}n.d(e,"a",(function(){return i}))}]);
//# sourceMappingURL=checkout-sdk.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/data-store/lib/combine-reducers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bigcommerce/data-store/lib/combine-reducers.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
var shallowEqual = __webpack_require__(/*! shallowequal */ "./node_modules/shallowequal/index.js");
function combineReducers(reducers, options) {
    var _a = (options || {}).equalityCheck, equalityCheck = _a === void 0 ? shallowEqual : _a;
    return function (state, action) {
        return Object.keys(reducers).reduce(function (result, key) {
            var reducer = reducers[key];
            var currentState = state ? state[key] : undefined;
            var newState = reducer(currentState, action);
            if (equalityCheck(currentState, newState) && result) {
                return result;
            }
            return lodash_1.assign({}, result, (_a = {}, _a[key] = newState, _a));
            var _a;
        }, state || {});
    };
}
exports.default = combineReducers;
//# sourceMappingURL=combine-reducers.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/data-store/lib/compose-reducers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bigcommerce/data-store/lib/compose-reducers.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var lodash_1 = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
var shallowEqual = __webpack_require__(/*! shallowequal */ "./node_modules/shallowequal/index.js");
function composeReducers() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var reducers = args;
    var options = {};
    if (typeof args[args.length - 1] === 'object') {
        reducers = args.slice(0, -1);
        options = tslib_1.__assign({}, options, args[args.length - 1]);
    }
    var _a = options.equalityCheck, equalityCheck = _a === void 0 ? shallowEqual : _a;
    return function (state, action) {
        var newState = lodash_1.flowRight(reducers
            .filter(function (reducer) { return reducer.length === 2; })
            .map(function (reducer) { return lodash_1.curryRight(reducer)(action); }))(state);
        return equalityCheck(state, newState) ? state : newState;
    };
}
exports.default = composeReducers;
//# sourceMappingURL=compose-reducers.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/data-store/lib/create-action.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bigcommerce/data-store/lib/create-action.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var lodash_1 = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
function createAction(type, payload, meta) {
    if (typeof type !== 'string' || type === '') {
        throw new Error('`type` must be a string');
    }
    return tslib_1.__assign({ type: type }, lodash_1.omitBy({ payload: payload, meta: meta }, function (value) { return value === undefined; }));
}
exports.default = createAction;
//# sourceMappingURL=create-action.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/data-store/lib/create-data-store.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@bigcommerce/data-store/lib/create-data-store.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var combine_reducers_1 = __webpack_require__(/*! ./combine-reducers */ "./node_modules/@bigcommerce/data-store/lib/combine-reducers.js");
var data_store_1 = __webpack_require__(/*! ./data-store */ "./node_modules/@bigcommerce/data-store/lib/data-store.js");
function createDataStore(reducer, initialState, options) {
    if (typeof reducer === 'function') {
        return new data_store_1.default(reducer, initialState, options);
    }
    return new data_store_1.default(combine_reducers_1.default(reducer, { equalityCheck: options && options.equalityCheck }), initialState, options);
}
exports.default = createDataStore;
//# sourceMappingURL=create-data-store.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/data-store/lib/create-error-action.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bigcommerce/data-store/lib/create-error-action.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var create_action_1 = __webpack_require__(/*! ./create-action */ "./node_modules/@bigcommerce/data-store/lib/create-action.js");
function createErrorAction(type, payload, meta) {
    return tslib_1.__assign({}, create_action_1.default(type, payload, meta), { error: true });
}
exports.default = createErrorAction;
//# sourceMappingURL=create-error-action.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/data-store/lib/data-store.js":
/*!****************************************************************!*\
  !*** ./node_modules/@bigcommerce/data-store/lib/data-store.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var lodash_1 = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
var rxjs_1 = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
var operators_1 = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var shallowEqual = __webpack_require__(/*! shallowequal */ "./node_modules/shallowequal/index.js");
var deep_freeze_1 = __webpack_require__(/*! ./deep-freeze */ "./node_modules/@bigcommerce/data-store/lib/deep-freeze.js");
var is_observable_action_like_1 = __webpack_require__(/*! ./is-observable-action-like */ "./node_modules/@bigcommerce/data-store/lib/is-observable-action-like.js");
var noop_action_transformer_1 = __webpack_require__(/*! ./noop-action-transformer */ "./node_modules/@bigcommerce/data-store/lib/noop-action-transformer.js");
var noop_state_transformer_1 = __webpack_require__(/*! ./noop-state-transformer */ "./node_modules/@bigcommerce/data-store/lib/noop-state-transformer.js");
var DataStore = (function () {
    function DataStore(reducer, initialState, options) {
        if (initialState === void 0) { initialState = {}; }
        var _this = this;
        this._reducer = reducer;
        this._options = tslib_1.__assign({ actionTransformer: noop_action_transformer_1.default, equalityCheck: shallowEqual, shouldWarnMutation: true, stateTransformer: noop_state_transformer_1.default }, options);
        this._state$ = new rxjs_1.BehaviorSubject(this._options.stateTransformer(initialState));
        this._notification$ = new rxjs_1.Subject();
        this._dispatchers = {};
        this._dispatchQueue$ = new rxjs_1.Subject();
        this._errors = {};
        this._dispatchQueue$
            .pipe(operators_1.mergeMap(function (dispatcher$) { return dispatcher$.pipe(operators_1.concatMap(function (action$) { return action$; })); }), operators_1.filter(function (action) { return !!action.type; }), operators_1.scan(function (states, action) {
            return _this._transformStates(states, action);
        }, {
            state: initialState,
            transformedState: this._state$.getValue(),
        }), operators_1.distinctUntilChanged(function (_a, _b) {
            var stateA = _a.state;
            var stateB = _b.state;
            return _this._options.equalityCheck(stateA, stateB);
        }), operators_1.map(function (_a) {
            var transformedState = _a.transformedState;
            return transformedState;
        }))
            .subscribe(this._state$);
        this.dispatch({ type: 'INIT' });
    }
    DataStore.prototype.dispatch = function (action, options) {
        if (is_observable_action_like_1.default(action)) {
            return this._dispatchObservableAction(action, options);
        }
        if (typeof action === 'function') {
            return this._dispatchThunkAction(action, options);
        }
        return this._dispatchAction(action);
    };
    DataStore.prototype.getState = function () {
        return this._state$.getValue();
    };
    DataStore.prototype.notifyState = function () {
        this._notification$.next(this.getState());
    };
    DataStore.prototype.subscribe = function (subscriber) {
        var _this = this;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var options = typeof args[0] === 'object' ? args[0] : undefined;
        var filters = options ? (options.filters || []) : args;
        var state$ = this._state$;
        if (filters.length > 0) {
            state$ = state$.pipe(operators_1.distinctUntilChanged(function (stateA, stateB) {
                return filters.every(function (filterFn) {
                    return _this._options.equalityCheck(filterFn(stateA), filterFn(stateB));
                });
            }));
        }
        if (options && options.initial === false) {
            state$ = state$.pipe(operators_1.skip(1));
        }
        var subscriptions = [
            state$.subscribe(subscriber),
            this._notification$.subscribe(subscriber),
        ];
        return function () { return subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); }); };
    };
    DataStore.prototype._transformStates = function (states, action) {
        try {
            var newState = this._options.shouldWarnMutation === false ?
                this._reducer(states.state, action) :
                deep_freeze_1.default(this._reducer(states.state, action), {
                    equalityCheck: this._options.equalityCheck,
                    previousValue: states.state,
                });
            var transformedState = this._options.stateTransformer(newState);
            return { state: newState, transformedState: transformedState };
        }
        catch (error) {
            this._getDispatchError(action.meta && action.meta.queueId).next(error);
            return { state: states.state, transformedState: states.transformedState };
        }
    };
    DataStore.prototype._dispatchAction = function (action) {
        return this._dispatchObservableAction(action.error ? rxjs_1.throwError(action) : rxjs_1.of(action));
    };
    DataStore.prototype._dispatchObservableAction = function (action$, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        return new Promise(function (resolve, reject) {
            var error$ = _this._getDispatchError(options.queueId);
            var transformedAction$ = _this._options.actionTransformer(rxjs_1.from(action$).pipe(operators_1.map(function (action) {
                return options.queueId ?
                    lodash_1.merge({}, action, { meta: { queueId: options.queueId } }) :
                    action;
            })));
            _this._getDispatcher(options.queueId).next(rxjs_1.from(transformedAction$)
                .pipe(operators_1.map(function (action, index) {
                if (index === 0) {
                    error$.pipe(operators_1.first()).subscribe(reject);
                }
                if (action.error) {
                    reject(action.payload);
                }
                return action;
            }), operators_1.catchError(function (action) {
                reject(action instanceof Error ? action : action.payload);
                return rxjs_1.of(action);
            }), operators_1.tap({
                complete: function () {
                    resolve(_this.getState());
                },
            })));
        });
    };
    DataStore.prototype._dispatchThunkAction = function (thunkAction, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        return this._dispatchObservableAction(rxjs_1.defer(function () { return thunkAction(_this); }), options);
    };
    DataStore.prototype._getDispatcher = function (queueId) {
        if (queueId === void 0) { queueId = 'default'; }
        if (!this._dispatchers[queueId]) {
            this._dispatchers[queueId] = new rxjs_1.Subject();
            this._dispatchQueue$.next(this._dispatchers[queueId]);
        }
        return this._dispatchers[queueId];
    };
    DataStore.prototype._getDispatchError = function (queueId) {
        if (queueId === void 0) { queueId = 'default'; }
        if (!this._errors[queueId]) {
            this._errors[queueId] = new rxjs_1.Subject();
        }
        return this._errors[queueId];
    };
    return DataStore;
}());
exports.default = DataStore;
//# sourceMappingURL=data-store.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/data-store/lib/deep-freeze.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@bigcommerce/data-store/lib/deep-freeze.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
var shallowEqual = __webpack_require__(/*! shallowequal */ "./node_modules/shallowequal/index.js");
function deepFreeze(object, options) {
    try {
        var _a = options || {}, _b = _a.equalityCheck, equalityCheck_1 = _b === void 0 ? shallowEqual : _b, _c = _a.previousValue, previousValue_1 = _c === void 0 ? null : _c;
        if (equalityCheck_1(object, previousValue_1) && Object.isFrozen(previousValue_1)) {
            return previousValue_1;
        }
        if (Object.isFrozen(object) || (!Array.isArray(object) && !lodash_1.isPlainObject(object))) {
            return object;
        }
        if (Array.isArray(object)) {
            return Object.freeze(object.map(function (value, index) {
                return deepFreeze(value, {
                    equalityCheck: equalityCheck_1,
                    previousValue: Array.isArray(previousValue_1) ? previousValue_1[index] : undefined,
                });
            }));
        }
        return Object.freeze(Object.getOwnPropertyNames(object).reduce(function (result, key) {
            result[key] = deepFreeze(object[key], {
                equalityCheck: equalityCheck_1,
                previousValue: previousValue_1 && previousValue_1.hasOwnProperty(key) ?
                    previousValue_1[key] :
                    undefined,
            });
            return result;
        }, {}));
    }
    catch (error) {
        if (error instanceof TypeError) {
            return object;
        }
        throw error;
    }
}
exports.default = deepFreeze;
//# sourceMappingURL=deep-freeze.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/data-store/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@bigcommerce/data-store/lib/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_store_1 = __webpack_require__(/*! ./data-store */ "./node_modules/@bigcommerce/data-store/lib/data-store.js");
exports.DataStore = data_store_1.default;
var combine_reducers_1 = __webpack_require__(/*! ./combine-reducers */ "./node_modules/@bigcommerce/data-store/lib/combine-reducers.js");
exports.combineReducers = combine_reducers_1.default;
var compose_reducers_1 = __webpack_require__(/*! ./compose-reducers */ "./node_modules/@bigcommerce/data-store/lib/compose-reducers.js");
exports.composeReducers = compose_reducers_1.default;
var create_action_1 = __webpack_require__(/*! ./create-action */ "./node_modules/@bigcommerce/data-store/lib/create-action.js");
exports.createAction = create_action_1.default;
var create_data_store_1 = __webpack_require__(/*! ./create-data-store */ "./node_modules/@bigcommerce/data-store/lib/create-data-store.js");
exports.createDataStore = create_data_store_1.default;
var create_error_action_1 = __webpack_require__(/*! ./create-error-action */ "./node_modules/@bigcommerce/data-store/lib/create-error-action.js");
exports.createErrorAction = create_error_action_1.default;
var deep_freeze_1 = __webpack_require__(/*! ./deep-freeze */ "./node_modules/@bigcommerce/data-store/lib/deep-freeze.js");
exports.deepFreeze = deep_freeze_1.default;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/data-store/lib/is-observable-action-like.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@bigcommerce/data-store/lib/is-observable-action-like.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isObservableActionLike(action) {
    return (typeof action.subscribe === 'function' ||
        typeof action.then === 'function');
}
exports.default = isObservableActionLike;
//# sourceMappingURL=is-observable-action-like.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/data-store/lib/noop-action-transformer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bigcommerce/data-store/lib/noop-action-transformer.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function noopActionTransformer(action) {
    return action;
}
exports.default = noopActionTransformer;
//# sourceMappingURL=noop-action-transformer.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/data-store/lib/noop-state-transformer.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@bigcommerce/data-store/lib/noop-state-transformer.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function noopStateTransformer(state) {
    return state;
}
exports.default = noopStateTransformer;
//# sourceMappingURL=noop-state-transformer.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/form-poster/lib/create-form-poster.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bigcommerce/form-poster/lib/create-form-poster.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var form_builder_1 = __webpack_require__(/*! ./form-builder */ "./node_modules/@bigcommerce/form-poster/lib/form-builder.js");
var form_poster_1 = __webpack_require__(/*! ./form-poster */ "./node_modules/@bigcommerce/form-poster/lib/form-poster.js");
function createFormPoster(options) {
    var formBuilder = new form_builder_1.default();
    var formPoster = new form_poster_1.default(formBuilder, options);
    return formPoster;
}
exports.default = createFormPoster;
//# sourceMappingURL=create-form-poster.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/form-poster/lib/form-builder.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bigcommerce/form-poster/lib/form-builder.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var FormBuilder = (function () {
    function FormBuilder() {
    }
    FormBuilder.prototype.build = function (url, data, target) {
        var _this = this;
        var form = document.createElement('form');
        form.style.display = 'none';
        form.setAttribute('action', url);
        form.setAttribute('method', 'POST');
        form.setAttribute('target', target || '_top');
        Object.keys(data)
            .forEach(function (key) {
            var value = data[key];
            form.appendChild(_this._createInput(value, key));
        });
        return form;
    };
    FormBuilder.prototype._createInput = function (value, key) {
        var input = document.createElement('input');
        input.setAttribute('name', key);
        input.setAttribute('type', 'hidden');
        input.setAttribute('value', value);
        return input;
    };
    return FormBuilder;
}());
exports.default = FormBuilder;
//# sourceMappingURL=form-builder.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/form-poster/lib/form-poster.js":
/*!******************************************************************!*\
  !*** ./node_modules/@bigcommerce/form-poster/lib/form-poster.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var url_utils_1 = __webpack_require__(/*! ./url-utils */ "./node_modules/@bigcommerce/form-poster/lib/url-utils.js");
var FormPoster = (function () {
    function FormPoster(_formBuilder, _options) {
        this._formBuilder = _formBuilder;
        this._options = _options;
    }
    FormPoster.prototype.postForm = function (url, data, callback, target) {
        var form = this._formBuilder.build(this._prependHost(url), data, target);
        window.addEventListener('unload', function handleUnload() {
            window.removeEventListener('unload', handleUnload);
            if (callback) {
                callback();
            }
        });
        document.body.appendChild(form);
        form.submit();
        document.body.removeChild(form);
    };
    FormPoster.prototype._prependHost = function (url) {
        if (!this._options || !this._options.host || url_utils_1.isAbsoluteUrl(url)) {
            return url;
        }
        return url_utils_1.joinPaths(this._options.host, url);
    };
    return FormPoster;
}());
exports.default = FormPoster;
//# sourceMappingURL=form-poster.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/form-poster/lib/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@bigcommerce/form-poster/lib/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var create_form_poster_1 = __webpack_require__(/*! ./create-form-poster */ "./node_modules/@bigcommerce/form-poster/lib/create-form-poster.js");
exports.createFormPoster = create_form_poster_1.default;
var form_poster_1 = __webpack_require__(/*! ./form-poster */ "./node_modules/@bigcommerce/form-poster/lib/form-poster.js");
exports.FormPoster = form_poster_1.default;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/form-poster/lib/url-utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@bigcommerce/form-poster/lib/url-utils.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isAbsoluteUrl(url) {
    return /^https?:\/\//.test(url);
}
exports.isAbsoluteUrl = isAbsoluteUrl;
function joinPaths(pathA, pathB) {
    return removeTrailingSlash(pathA) + "/" + removeLeadingSlash(pathB);
}
exports.joinPaths = joinPaths;
function removeTrailingSlash(path) {
    return path.replace(/\/$/, '');
}
function removeLeadingSlash(path) {
    return path.replace(/^\//, '');
}
//# sourceMappingURL=url-utils.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/memoize/lib/cache-key-maps.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@bigcommerce/memoize/lib/cache-key-maps.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isTerminalCacheKeyMap(map) {
    return map.hasOwnProperty('cacheKey');
}
exports.isTerminalCacheKeyMap = isTerminalCacheKeyMap;
function isRootCacheKeyMap(map) {
    return map.hasOwnProperty('parentMap');
}
exports.isRootCacheKeyMap = isRootCacheKeyMap;
//# sourceMappingURL=cache-key-maps.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/memoize/lib/cache-key-resolver.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@bigcommerce/memoize/lib/cache-key-resolver.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var lodash_1 = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
var shallowequal_1 = tslib_1.__importDefault(__webpack_require__(/*! shallowequal */ "./node_modules/shallowequal/index.js"));
var cache_key_maps_1 = __webpack_require__(/*! ./cache-key-maps */ "./node_modules/@bigcommerce/memoize/lib/cache-key-maps.js");
var CacheKeyResolver = /** @class */ (function () {
    function CacheKeyResolver(options) {
        this._lastId = 0;
        this._map = { maps: [] };
        this._usedMaps = [];
        this._options = tslib_1.__assign({ isEqual: shallowequal_1.default, maxSize: 0, onExpire: lodash_1.noop }, options);
    }
    CacheKeyResolver.prototype.getKey = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var result = this._resolveMap.apply(this, args);
        var index = result.index, parentMap = result.parentMap;
        var map = result.map;
        if (map && map.cacheKey) {
            map.usedCount++;
        }
        else {
            map = this._generateMap(parentMap, args.slice(index));
        }
        // Keep track of the least used map so we can remove it if the size of
        // the stack exceeds the maximum size.
        this._removeLeastUsedMap(map);
        return map.cacheKey;
    };
    CacheKeyResolver.prototype.getUsedCount = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var map = this._resolveMap.apply(this, args).map;
        return map ? map.usedCount : 0;
    };
    CacheKeyResolver.prototype._resolveMap = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var index = 0;
        var parentMap = this._map;
        // Traverse the tree to find the linked list of maps that match the
        // arguments of the call. Each intermediate or terminal map contains a
        // value that could be used to match with the arguments. The last map in
        // the list (the terminal) should contain a cache key. If it can does
        // not exist, we will return a falsy value so that the caller could
        // handle and generate a new cache key.
        while (parentMap.maps.length) {
            var isMatched = false;
            for (var mapIndex = 0; mapIndex < parentMap.maps.length; mapIndex++) {
                var map = parentMap.maps[mapIndex];
                if (!this._options.isEqual(map.value, args[index])) {
                    continue;
                }
                // Move the most recently used map to the top of the stack for
                // quicker access
                (_a = parentMap.maps).unshift.apply(_a, parentMap.maps.splice(mapIndex, 1));
                if ((args.length === 0 || index === args.length - 1) && cache_key_maps_1.isTerminalCacheKeyMap(map)) {
                    return { index: index, map: map, parentMap: parentMap };
                }
                isMatched = true;
                parentMap = map;
                index++;
                break;
            }
            if (!isMatched) {
                break;
            }
        }
        return { index: index, parentMap: parentMap };
    };
    CacheKeyResolver.prototype._generateMap = function (parent, args) {
        var index = 0;
        var parentMap = parent;
        var map;
        do {
            map = {
                maps: [],
                parentMap: parentMap,
                usedCount: 1,
                value: args[index],
            };
            // Continue to build the tree of maps so that it could be resolved
            // next time when the function is called with the same set of
            // arguments.
            parentMap.maps.unshift(map);
            parentMap = map;
            index++;
        } while (index < args.length);
        var terminalMap = map;
        terminalMap.cacheKey = "" + ++this._lastId;
        return terminalMap;
    };
    CacheKeyResolver.prototype._removeLeastUsedMap = function (recentlyUsedMap) {
        if (!this._options.maxSize) {
            return;
        }
        var index = this._usedMaps.indexOf(recentlyUsedMap);
        this._usedMaps.splice(index === -1 ? 0 : index, index === -1 ? 0 : 1, recentlyUsedMap);
        if (this._usedMaps.length <= this._options.maxSize) {
            return;
        }
        var map = this._usedMaps.pop();
        if (!map) {
            return;
        }
        this._removeMap(map);
        this._options.onExpire(map.cacheKey);
    };
    CacheKeyResolver.prototype._removeMap = function (map) {
        if (!map.parentMap) {
            return;
        }
        map.parentMap.maps.splice(map.parentMap.maps.indexOf(map), 1);
        if (cache_key_maps_1.isRootCacheKeyMap(map.parentMap)) {
            return;
        }
        this._removeMap(map.parentMap);
    };
    return CacheKeyResolver;
}());
exports.default = CacheKeyResolver;
//# sourceMappingURL=cache-key-resolver.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/memoize/lib/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@bigcommerce/memoize/lib/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var memoize_1 = __webpack_require__(/*! ./memoize */ "./node_modules/@bigcommerce/memoize/lib/memoize.js");
exports.memoize = memoize_1.default;
exports.memoizeOne = memoize_1.memoizeOne;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/memoize/lib/memoize.js":
/*!**********************************************************!*\
  !*** ./node_modules/@bigcommerce/memoize/lib/memoize.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
var lodash_memoize_1 = tslib_1.__importDefault(__webpack_require__(/*! lodash.memoize */ "./node_modules/lodash.memoize/index.js")); // tslint:disable-line:match-default-export-name
var shallowequal_1 = tslib_1.__importDefault(__webpack_require__(/*! shallowequal */ "./node_modules/shallowequal/index.js"));
var cache_key_resolver_1 = tslib_1.__importDefault(__webpack_require__(/*! ./cache-key-resolver */ "./node_modules/@bigcommerce/memoize/lib/cache-key-resolver.js"));
function memoize(fn, options) {
    var _a = tslib_1.__assign({ maxSize: 0, isEqual: shallowequal_1.default }, options), maxSize = _a.maxSize, isEqual = _a.isEqual;
    var cache = new Map();
    var resolver = new cache_key_resolver_1.default({
        isEqual: isEqual,
        maxSize: maxSize,
        onExpire: function (key) { return cache.delete(key); },
    });
    var memoized = lodash_memoize_1.default(fn, function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return resolver.getKey.apply(resolver, args);
    });
    memoized.cache = cache;
    return memoized;
}
exports.default = memoize;
function memoizeOne(fn, options) {
    return memoize(fn, tslib_1.__assign({}, options, { maxSize: 1 }));
}
exports.memoizeOne = memoizeOne;
//# sourceMappingURL=memoize.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/request-sender/esm/cache.js":
/*!***************************************************************!*\
  !*** ./node_modules/@bigcommerce/request-sender/esm/cache.js ***!
  \***************************************************************/
/*! exports provided: DefaultCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultCache", function() { return DefaultCache; });
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! query-string */ "./node_modules/query-string/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_0__);

var DefaultCache = (function () {
    function DefaultCache() {
        this._cache = {};
    }
    DefaultCache.prototype.read = function (url, options) {
        var cacheKey = this.getKey(url, options.params);
        return this._cache[cacheKey] || null;
    };
    DefaultCache.prototype.write = function (url, options, response) {
        var cacheKey = this.getKey(url, options.params);
        this._cache[cacheKey] = response;
    };
    DefaultCache.prototype.getKey = function (url, params) {
        if (params === void 0) { params = {}; }
        if (Object.keys(params).length === 0) {
            return url;
        }
        return url + "?" + query_string__WEBPACK_IMPORTED_MODULE_0__["stringify"](params);
    };
    return DefaultCache;
}());

//# sourceMappingURL=cache.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/request-sender/esm/create-request-sender.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@bigcommerce/request-sender/esm/create-request-sender.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return createRequestSender; });
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ "./node_modules/js-cookie/src/js.cookie.js");
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _payload_transformer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./payload-transformer */ "./node_modules/@bigcommerce/request-sender/esm/payload-transformer.js");
/* harmony import */ var _request_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./request-factory */ "./node_modules/@bigcommerce/request-sender/esm/request-factory.js");
/* harmony import */ var _request_sender__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-sender */ "./node_modules/@bigcommerce/request-sender/esm/request-sender.js");




function createRequestSender(options) {
    return new _request_sender__WEBPACK_IMPORTED_MODULE_3__["default"](new _request_factory__WEBPACK_IMPORTED_MODULE_2__["default"](), new _payload_transformer__WEBPACK_IMPORTED_MODULE_1__["default"](), js_cookie__WEBPACK_IMPORTED_MODULE_0__, options);
}
//# sourceMappingURL=create-request-sender.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/request-sender/esm/create-timeout.js":
/*!************************************************************************!*\
  !*** ./node_modules/@bigcommerce/request-sender/esm/create-timeout.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return createTimeout; });
/* harmony import */ var _timeout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeout */ "./node_modules/@bigcommerce/request-sender/esm/timeout.js");

function createTimeout(delay) {
    return new _timeout__WEBPACK_IMPORTED_MODULE_0__["default"](delay);
}
//# sourceMappingURL=create-timeout.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/request-sender/esm/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@bigcommerce/request-sender/esm/index.js ***!
  \***************************************************************/
/*! exports provided: createRequestSender, createTimeout, RequestSender, Timeout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _create_request_sender__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create-request-sender */ "./node_modules/@bigcommerce/request-sender/esm/create-request-sender.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createRequestSender", function() { return _create_request_sender__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _create_timeout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-timeout */ "./node_modules/@bigcommerce/request-sender/esm/create-timeout.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createTimeout", function() { return _create_timeout__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _request_sender__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./request-sender */ "./node_modules/@bigcommerce/request-sender/esm/request-sender.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RequestSender", function() { return _request_sender__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _timeout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./timeout */ "./node_modules/@bigcommerce/request-sender/esm/timeout.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Timeout", function() { return _timeout__WEBPACK_IMPORTED_MODULE_3__["default"]; });





//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/request-sender/esm/is-promise.js":
/*!********************************************************************!*\
  !*** ./node_modules/@bigcommerce/request-sender/esm/is-promise.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isPromise; });
function isPromise(promise) {
    return !!promise &&
        (typeof promise === 'object' || typeof promise === 'function') &&
        typeof promise.then === 'function';
}
//# sourceMappingURL=is-promise.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/request-sender/esm/payload-transformer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bigcommerce/request-sender/esm/payload-transformer.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _to_form_url_encoded__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./to-form-url-encoded */ "./node_modules/@bigcommerce/request-sender/esm/to-form-url-encoded.js");


var JSON_CONTENT_TYPE_REGEXP = /application\/(\w+\+)?json/;
var FORM_URLENCODED_CONTENT_TYPE_REGEXP = /application\/x-www-form-urlencoded/;
var PayloadTransformer = (function () {
    function PayloadTransformer() {
    }
    PayloadTransformer.prototype.toRequestBody = function (options) {
        var contentType = options.headers ? this._getHeader(options.headers, 'Content-Type') : '';
        if (options.body) {
            if (JSON_CONTENT_TYPE_REGEXP.test(contentType)) {
                return JSON.stringify(options.body);
            }
            if (FORM_URLENCODED_CONTENT_TYPE_REGEXP.test(contentType)) {
                return Object(_to_form_url_encoded__WEBPACK_IMPORTED_MODULE_1__["default"])(options.body);
            }
        }
        return options.body;
    };
    PayloadTransformer.prototype.toResponse = function (xhr) {
        var headers = this._parseResponseHeaders(xhr.getAllResponseHeaders());
        var body = this._parseResponseBody('response' in xhr ? xhr.response : xhr.responseText, headers);
        return {
            body: body,
            headers: headers,
            status: xhr.status,
            statusText: xhr.statusText,
        };
    };
    PayloadTransformer.prototype._parseResponseBody = function (body, headers) {
        var contentType = this._getHeader(headers, 'Content-Type');
        if (body && JSON_CONTENT_TYPE_REGEXP.test(contentType)) {
            return JSON.parse(body);
        }
        return body;
    };
    PayloadTransformer.prototype._parseResponseHeaders = function (rawHeaders) {
        var lines = rawHeaders ? rawHeaders.replace(/\r?\n[\t ]+/g, ' ').split(/\r?\n/) : [];
        return lines.reduce(function (headers, line) {
            var _a;
            var parts = line.split(':');
            var key = (parts.shift() || '').trim();
            if (!key) {
                return headers;
            }
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, headers), (_a = {}, _a[key.toLowerCase()] = parts.join(':').trim(), _a));
        }, {});
    };
    PayloadTransformer.prototype._getHeader = function (headers, key) {
        if (!headers || !key) {
            return '';
        }
        return headers[key] || headers[key.toLowerCase()] || '';
    };
    return PayloadTransformer;
}());
/* harmony default export */ __webpack_exports__["default"] = (PayloadTransformer);
//# sourceMappingURL=payload-transformer.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/request-sender/esm/request-factory.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bigcommerce/request-sender/esm/request-factory.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! query-string */ "./node_modules/query-string/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_0__);

var RequestFactory = (function () {
    function RequestFactory() {
    }
    RequestFactory.prototype.createRequest = function (url, options) {
        var xhr = new XMLHttpRequest();
        this._configureRequest(xhr, url, options);
        return xhr;
    };
    RequestFactory.prototype._configureRequest = function (xhr, url, options) {
        if (options === void 0) { options = {}; }
        xhr.open(options.method || 'GET', this._formatUrl(url, options.params, options.encodeParams), true);
        if (options.headers) {
            this._configureRequestHeaders(xhr, options.headers);
        }
        if (typeof options.credentials === 'boolean') {
            xhr.withCredentials = options.credentials;
        }
        if (typeof options.timeout === 'number') {
            xhr.timeout = options.timeout;
        }
    };
    RequestFactory.prototype._configureRequestHeaders = function (xhr, headers) {
        Object.keys(headers)
            .filter(function (key) { return headers[key] !== null; })
            .forEach(function (key) {
            xhr.setRequestHeader(key, headers[key]);
        });
    };
    RequestFactory.prototype._formatUrl = function (url, params, encodeParams) {
        if (encodeParams === void 0) { encodeParams = true; }
        if (!params || Object.keys(params).length === 0) {
            return url;
        }
        return url + "?" + query_string__WEBPACK_IMPORTED_MODULE_0__["stringify"](params, { encode: encodeParams });
    };
    return RequestFactory;
}());
/* harmony default export */ __webpack_exports__["default"] = (RequestFactory);
//# sourceMappingURL=request-factory.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/request-sender/esm/request-sender.js":
/*!************************************************************************!*\
  !*** ./node_modules/@bigcommerce/request-sender/esm/request-sender.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.merge */ "./node_modules/lodash.merge/index.js");
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cache */ "./node_modules/@bigcommerce/request-sender/esm/cache.js");
/* harmony import */ var _is_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./is-promise */ "./node_modules/@bigcommerce/request-sender/esm/is-promise.js");
/* harmony import */ var _timeout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./timeout */ "./node_modules/@bigcommerce/request-sender/esm/timeout.js");





var RequestSender = (function () {
    function RequestSender(_requestFactory, _payloadTransformer, _cookie, _options) {
        if (_options === void 0) { _options = {}; }
        this._requestFactory = _requestFactory;
        this._payloadTransformer = _payloadTransformer;
        this._cookie = _cookie;
        this._options = _options;
        this._cache = this._options.cache || new _cache__WEBPACK_IMPORTED_MODULE_2__["DefaultCache"]();
    }
    RequestSender.prototype.sendRequest = function (url, options) {
        var _this = this;
        var requestOptions = this._mergeDefaultOptions(url, options);
        var cachedRequest = this._getCachedRequest(url, requestOptions);
        if (cachedRequest) {
            return Promise.resolve(cachedRequest);
        }
        var request = this._requestFactory.createRequest(this._prependHost(url), requestOptions);
        return new Promise(function (resolve, reject) {
            var requestHandler = function () {
                var response = _this._payloadTransformer.toResponse(request);
                if (response.status >= 200 && response.status < 300) {
                    _this._cacheRequest(url, requestOptions, response);
                    resolve(response);
                }
                else {
                    reject(response);
                }
            };
            request.onload = requestHandler;
            request.onerror = requestHandler;
            request.onabort = requestHandler;
            request.ontimeout = requestHandler;
            if (requestOptions.timeout instanceof _timeout__WEBPACK_IMPORTED_MODULE_4__["default"]) {
                requestOptions.timeout.onComplete(function () { return request.abort(); });
                requestOptions.timeout.start();
            }
            if (Object(_is_promise__WEBPACK_IMPORTED_MODULE_3__["default"])(requestOptions.timeout)) {
                requestOptions.timeout.then(function () { return request.abort(); });
            }
            request.send(_this._payloadTransformer.toRequestBody(requestOptions));
        });
    };
    RequestSender.prototype.get = function (url, options) {
        return this.sendRequest(url, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, options), { method: 'GET' }));
    };
    RequestSender.prototype.post = function (url, options) {
        return this.sendRequest(url, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, options), { method: 'POST' }));
    };
    RequestSender.prototype.put = function (url, options) {
        return this.sendRequest(url, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, options), { method: 'PUT' }));
    };
    RequestSender.prototype.patch = function (url, options) {
        return this.sendRequest(url, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, options), { method: 'PATCH' }));
    };
    RequestSender.prototype.delete = function (url, options) {
        return this.sendRequest(url, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, options), { method: 'DELETE' }));
    };
    RequestSender.prototype._mergeDefaultOptions = function (url, options) {
        var defaultOptions = {
            credentials: true,
            encodeParams: true,
            headers: {
                Accept: 'application/json, text/plain, */*',
            },
            method: 'GET',
        };
        var csrfToken = this._cookie.get('XSRF-TOKEN');
        if (csrfToken && defaultOptions.headers && !this._isAssetRequest(url, options)) {
            defaultOptions.headers['X-XSRF-TOKEN'] = csrfToken;
        }
        if (options && options.body && defaultOptions.headers) {
            defaultOptions.headers['Content-Type'] = 'application/json';
        }
        return lodash_merge__WEBPACK_IMPORTED_MODULE_1___default()({}, defaultOptions, options);
    };
    RequestSender.prototype._prependHost = function (url) {
        if (!this._options.host || /^https?:\/\//.test(url)) {
            return url;
        }
        return this._options.host.replace(/\/$/, '') + "/" + url.replace(/^\//, '');
    };
    RequestSender.prototype._shouldCacheRequest = function (options) {
        var method = options.method || 'GET';
        return method.toUpperCase() === 'GET' && Boolean(options.cache);
    };
    RequestSender.prototype._getCachedRequest = function (url, options) {
        if (this._shouldCacheRequest(options)) {
            return this._cache.read(url, options);
        }
        return null;
    };
    RequestSender.prototype._cacheRequest = function (url, options, response) {
        if (this._shouldCacheRequest(options)) {
            this._cache.write(url, options, response);
        }
    };
    RequestSender.prototype._isAssetRequest = function (url, options) {
        if (options && options.method && options.method.toUpperCase() !== 'GET') {
            return false;
        }
        return /\.(png|gif|jpe?g|css|js|json|svg|html?)$/.test(url.split('?')[0]);
    };
    return RequestSender;
}());
/* harmony default export */ __webpack_exports__["default"] = (RequestSender);
//# sourceMappingURL=request-sender.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/request-sender/esm/timeout.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@bigcommerce/request-sender/esm/timeout.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var Timeout = (function () {
    function Timeout(_delay) {
        var _this = this;
        this._delay = _delay;
        this._resolve = function () { };
        this._promise = new Promise(function (resolve) {
            _this._resolve = resolve;
        });
    }
    Timeout.prototype.onComplete = function (callback) {
        this._promise.then(callback);
    };
    Timeout.prototype.complete = function () {
        this._resolve();
        if (this._timeoutToken) {
            window.clearTimeout(this._timeoutToken);
        }
    };
    Timeout.prototype.start = function () {
        var _this = this;
        if (this._delay) {
            this._timeoutToken = window.setTimeout(function () { return _this.complete(); }, this._delay);
        }
    };
    return Timeout;
}());
/* harmony default export */ __webpack_exports__["default"] = (Timeout);
//# sourceMappingURL=timeout.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/request-sender/esm/to-form-url-encoded.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bigcommerce/request-sender/esm/to-form-url-encoded.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return toFormUrlEncoded; });
function toFormUrlEncoded(data) {
    if (typeof data !== 'object' || data === null) {
        return data;
    }
    return Object.keys(data)
        .filter(function (key) { return data[key] !== undefined; })
        .map(function (key) {
        var value = data[key];
        if (typeof value === 'string') {
            return key + "=" + encodeURIComponent(value);
        }
        return key + "=" + encodeURIComponent(JSON.stringify(value) || '');
    })
        .join('&');
}
//# sourceMappingURL=to-form-url-encoded.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/script-loader/lib/browser-support.js":
/*!************************************************************************!*\
  !*** ./node_modules/@bigcommerce/script-loader/lib/browser-support.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BrowserSupport = (function () {
    function BrowserSupport() {
    }
    BrowserSupport.prototype.canSupportRel = function (rel) {
        var link = document.createElement('link');
        return !!(link.relList &&
            link.relList.supports &&
            link.relList.supports(rel));
    };
    return BrowserSupport;
}());
exports.default = BrowserSupport;
//# sourceMappingURL=browser-support.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/script-loader/lib/create-script-loader.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bigcommerce/script-loader/lib/create-script-loader.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var request_sender_1 = __webpack_require__(/*! @bigcommerce/request-sender */ "./node_modules/@bigcommerce/request-sender/esm/index.js");
var browser_support_1 = __webpack_require__(/*! ./browser-support */ "./node_modules/@bigcommerce/script-loader/lib/browser-support.js");
var script_loader_1 = __webpack_require__(/*! ./script-loader */ "./node_modules/@bigcommerce/script-loader/lib/script-loader.js");
function createScriptLoader() {
    return new script_loader_1.default(new browser_support_1.default(), request_sender_1.createRequestSender());
}
exports.default = createScriptLoader;
//# sourceMappingURL=create-script-loader.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/script-loader/lib/create-stylesheet-loader.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@bigcommerce/script-loader/lib/create-stylesheet-loader.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var request_sender_1 = __webpack_require__(/*! @bigcommerce/request-sender */ "./node_modules/@bigcommerce/request-sender/esm/index.js");
var browser_support_1 = __webpack_require__(/*! ./browser-support */ "./node_modules/@bigcommerce/script-loader/lib/browser-support.js");
var stylesheet_loader_1 = __webpack_require__(/*! ./stylesheet-loader */ "./node_modules/@bigcommerce/script-loader/lib/stylesheet-loader.js");
function createStylesheetLoader() {
    return new stylesheet_loader_1.default(new browser_support_1.default(), request_sender_1.createRequestSender());
}
exports.default = createStylesheetLoader;
//# sourceMappingURL=create-stylesheet-loader.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/script-loader/lib/get-script-loader.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@bigcommerce/script-loader/lib/get-script-loader.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var create_script_loader_1 = __webpack_require__(/*! ./create-script-loader */ "./node_modules/@bigcommerce/script-loader/lib/create-script-loader.js");
var instance;
function getScriptLoader() {
    if (!instance) {
        instance = create_script_loader_1.default();
    }
    return instance;
}
exports.default = getScriptLoader;
//# sourceMappingURL=get-script-loader.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/script-loader/lib/get-stylesheet-loader.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@bigcommerce/script-loader/lib/get-stylesheet-loader.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var create_stylesheet_loader_1 = __webpack_require__(/*! ./create-stylesheet-loader */ "./node_modules/@bigcommerce/script-loader/lib/create-stylesheet-loader.js");
var instance;
function getStylesheetLoader() {
    if (!instance) {
        instance = create_stylesheet_loader_1.default();
    }
    return instance;
}
exports.default = getStylesheetLoader;
//# sourceMappingURL=get-stylesheet-loader.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/script-loader/lib/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@bigcommerce/script-loader/lib/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var script_loader_1 = __webpack_require__(/*! ./script-loader */ "./node_modules/@bigcommerce/script-loader/lib/script-loader.js");
exports.ScriptLoader = script_loader_1.default;
var create_script_loader_1 = __webpack_require__(/*! ./create-script-loader */ "./node_modules/@bigcommerce/script-loader/lib/create-script-loader.js");
exports.createScriptLoader = create_script_loader_1.default;
var get_script_loader_1 = __webpack_require__(/*! ./get-script-loader */ "./node_modules/@bigcommerce/script-loader/lib/get-script-loader.js");
exports.getScriptLoader = get_script_loader_1.default;
var stylesheet_loader_1 = __webpack_require__(/*! ./stylesheet-loader */ "./node_modules/@bigcommerce/script-loader/lib/stylesheet-loader.js");
exports.StylesheetLoader = stylesheet_loader_1.default;
var create_stylesheet_loader_1 = __webpack_require__(/*! ./create-stylesheet-loader */ "./node_modules/@bigcommerce/script-loader/lib/create-stylesheet-loader.js");
exports.createStylesheetLoader = create_stylesheet_loader_1.default;
var get_stylesheet_loader_1 = __webpack_require__(/*! ./get-stylesheet-loader */ "./node_modules/@bigcommerce/script-loader/lib/get-stylesheet-loader.js");
exports.getStylesheetLoader = get_stylesheet_loader_1.default;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/script-loader/lib/script-loader.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@bigcommerce/script-loader/lib/script-loader.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ScriptLoader = (function () {
    function ScriptLoader(_browserSupport, _requestSender) {
        this._browserSupport = _browserSupport;
        this._requestSender = _requestSender;
        this._scripts = {};
        this._preloadedScripts = {};
    }
    ScriptLoader.prototype.loadScript = function (src, options) {
        var _this = this;
        if (!this._scripts[src]) {
            this._scripts[src] = new Promise(function (resolve, reject) {
                var script = document.createElement('script');
                var _a = options || {}, _b = _a.async, async = _b === void 0 ? false : _b, _c = _a.attributes, attributes = _c === void 0 ? {} : _c;
                Object.keys(attributes)
                    .forEach(function (key) {
                    script.setAttribute(key, attributes[key]);
                });
                script.onload = function () { return resolve(); };
                script.onreadystatechange = function () { return resolve(); };
                script.onerror = function (event) {
                    delete _this._scripts[src];
                    reject(event);
                };
                script.async = async;
                script.src = src;
                document.body.appendChild(script);
            });
        }
        return this._scripts[src];
    };
    ScriptLoader.prototype.loadScripts = function (urls, options) {
        var _this = this;
        return Promise.all(urls.map(function (url) { return _this.loadScript(url, options); }))
            .then(function () { return undefined; });
    };
    ScriptLoader.prototype.preloadScript = function (url, options) {
        var _this = this;
        if (!this._preloadedScripts[url]) {
            this._preloadedScripts[url] = new Promise(function (resolve, reject) {
                var _a = (options || {}).prefetch, prefetch = _a === void 0 ? false : _a;
                var rel = prefetch ? 'prefetch' : 'preload';
                if (_this._browserSupport.canSupportRel(rel)) {
                    var preloadedScript = document.createElement('link');
                    preloadedScript.as = 'script';
                    preloadedScript.rel = rel;
                    preloadedScript.href = url;
                    preloadedScript.onload = function () {
                        resolve();
                    };
                    preloadedScript.onerror = function () {
                        delete _this._preloadedScripts[url];
                        reject();
                    };
                    document.head.appendChild(preloadedScript);
                }
                else {
                    _this._requestSender.get(url, {
                        credentials: false,
                        headers: { Accept: 'application/javascript' },
                    })
                        .then(function () { return resolve(); })
                        .catch(reject);
                }
            });
        }
        return this._preloadedScripts[url];
    };
    ScriptLoader.prototype.preloadScripts = function (urls, options) {
        var _this = this;
        return Promise.all(urls.map(function (url) { return _this.preloadScript(url, options); }))
            .then(function () { return undefined; });
    };
    return ScriptLoader;
}());
exports.default = ScriptLoader;
//# sourceMappingURL=script-loader.js.map

/***/ }),

/***/ "./node_modules/@bigcommerce/script-loader/lib/stylesheet-loader.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@bigcommerce/script-loader/lib/stylesheet-loader.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var StylesheetLoader = (function () {
    function StylesheetLoader(_browserSupport, _requestSender) {
        this._browserSupport = _browserSupport;
        this._requestSender = _requestSender;
        this._stylesheets = {};
        this._preloadedStylesheets = {};
    }
    StylesheetLoader.prototype.loadStylesheet = function (src, options) {
        var _this = this;
        if (!this._stylesheets[src]) {
            this._stylesheets[src] = new Promise(function (resolve, reject) {
                var stylesheet = document.createElement('link');
                var _a = options || {}, _b = _a.prepend, prepend = _b === void 0 ? false : _b, _c = _a.attributes, attributes = _c === void 0 ? {} : _c;
                Object.keys(attributes)
                    .forEach(function (key) {
                    stylesheet.setAttribute(key, attributes[key]);
                });
                stylesheet.onload = function () { return resolve(); };
                stylesheet.onerror = function (event) {
                    delete _this._stylesheets[src];
                    reject(event);
                };
                stylesheet.rel = 'stylesheet';
                stylesheet.href = src;
                if (prepend && document.head.children[0]) {
                    document.head.insertBefore(stylesheet, document.head.children[0]);
                }
                else {
                    document.head.appendChild(stylesheet);
                }
            });
        }
        return this._stylesheets[src];
    };
    StylesheetLoader.prototype.loadStylesheets = function (urls, options) {
        var _this = this;
        return Promise.all(urls.map(function (url) { return _this.loadStylesheet(url, options); }))
            .then(function () { return undefined; });
    };
    StylesheetLoader.prototype.preloadStylesheet = function (url, options) {
        var _this = this;
        if (!this._preloadedStylesheets[url]) {
            this._preloadedStylesheets[url] = new Promise(function (resolve, reject) {
                var _a = (options || {}).prefetch, prefetch = _a === void 0 ? false : _a;
                var rel = prefetch ? 'prefetch' : 'preload';
                if (_this._browserSupport.canSupportRel(rel)) {
                    var preloadedStylesheet = document.createElement('link');
                    preloadedStylesheet.as = 'style';
                    preloadedStylesheet.rel = prefetch ? 'prefetch' : 'preload';
                    preloadedStylesheet.href = url;
                    preloadedStylesheet.onload = function () {
                        resolve();
                    };
                    preloadedStylesheet.onerror = function (event) {
                        delete _this._preloadedStylesheets[url];
                        reject(event);
                    };
                    document.head.appendChild(preloadedStylesheet);
                }
                else {
                    _this._requestSender.get(url, {
                        credentials: false,
                        headers: { Accept: 'text/css' },
                    })
                        .then(function () { return resolve(); })
                        .catch(reject);
                }
            });
        }
        return this._preloadedStylesheets[url];
    };
    StylesheetLoader.prototype.preloadStylesheets = function (urls, options) {
        var _this = this;
        return Promise.all(urls.map(function (url) { return _this.preloadStylesheet(url, options); }))
            .then(function () { return undefined; });
    };
    return StylesheetLoader;
}());
exports.default = StylesheetLoader;
//# sourceMappingURL=stylesheet-loader.js.map

/***/ }),

/***/ "./node_modules/assert/assert.js":
/*!***************************************!*\
  !*** ./node_modules/assert/assert.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var objectAssign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:
// NB: The URL to the CommonJS spec is kept just for tradition.
//     node-assert has evolved a lot since then, both in API and behavior.

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = __webpack_require__(/*! util/ */ "./node_modules/util/util.js");
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

// Expose a strict only variant of assert
function strict(value, message) {
  if (!value) fail(value, true, message, '==', strict);
}
assert.strict = objectAssign(strict, assert, {
  equal: assert.strictEqual,
  deepEqual: assert.deepStrictEqual,
  notEqual: assert.notStrictEqual,
  notDeepEqual: assert.notDeepStrictEqual
});
assert.strict.strict = assert.strict;

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/card-validator/index.js":
/*!**********************************************!*\
  !*** ./node_modules/card-validator/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  number: __webpack_require__(/*! ./src/card-number */ "./node_modules/card-validator/src/card-number.js"),
  expirationDate: __webpack_require__(/*! ./src/expiration-date */ "./node_modules/card-validator/src/expiration-date.js"),
  expirationMonth: __webpack_require__(/*! ./src/expiration-month */ "./node_modules/card-validator/src/expiration-month.js"),
  expirationYear: __webpack_require__(/*! ./src/expiration-year */ "./node_modules/card-validator/src/expiration-year.js"),
  cvv: __webpack_require__(/*! ./src/cvv */ "./node_modules/card-validator/src/cvv.js"),
  postalCode: __webpack_require__(/*! ./src/postal-code */ "./node_modules/card-validator/src/postal-code.js"),
  creditCardType: __webpack_require__(/*! credit-card-type */ "./node_modules/credit-card-type/index.js")
};


/***/ }),

/***/ "./node_modules/card-validator/src/card-number.js":
/*!********************************************************!*\
  !*** ./node_modules/card-validator/src/card-number.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var luhn10 = __webpack_require__(/*! ./luhn-10 */ "./node_modules/card-validator/src/luhn-10.js");
var getCardTypes = __webpack_require__(/*! credit-card-type */ "./node_modules/credit-card-type/index.js");

function verification(card, isPotentiallyValid, isValid) {
  return {card: card, isPotentiallyValid: isPotentiallyValid, isValid: isValid};
}

function cardNumber(value, options) {
  var potentialTypes, cardType, isPotentiallyValid, isValid, i, maxLength;

  options = options || {};

  if (typeof value === 'number') {
    value = String(value);
  }

  if (typeof value !== 'string') { return verification(null, false, false); }

  value = value.replace(/\-|\s/g, '');

  if (!/^\d*$/.test(value)) { return verification(null, false, false); }

  potentialTypes = getCardTypes(value);

  if (potentialTypes.length === 0) {
    return verification(null, false, false);
  } else if (potentialTypes.length !== 1) {
    return verification(null, true, false);
  }

  cardType = potentialTypes[0];

  if (options.maxLength && value.length > options.maxLength) {
    return verification(cardType, false, false);
  }

  if (cardType.type === getCardTypes.types.UNIONPAY && options.luhnValidateUnionPay !== true) {
    isValid = true;
  } else {
    isValid = luhn10(value);
  }

  maxLength = Math.max.apply(null, cardType.lengths);
  if (options.maxLength) {
    maxLength = Math.min(options.maxLength, maxLength);
  }

  for (i = 0; i < cardType.lengths.length; i++) {
    if (cardType.lengths[i] === value.length) {
      isPotentiallyValid = value.length < maxLength || isValid;

      return verification(cardType, isPotentiallyValid, isValid);
    }
  }

  return verification(cardType, value.length < maxLength, false);
}

module.exports = cardNumber;


/***/ }),

/***/ "./node_modules/card-validator/src/cvv.js":
/*!************************************************!*\
  !*** ./node_modules/card-validator/src/cvv.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var DEFAULT_LENGTH = 3;

function includes(array, thing) {
  var i = 0;

  for (; i < array.length; i++) {
    if (thing === array[i]) { return true; }
  }

  return false;
}

function max(array) {
  var maximum = DEFAULT_LENGTH;
  var i = 0;

  for (; i < array.length; i++) {
    maximum = array[i] > maximum ? array[i] : maximum;
  }

  return maximum;
}

function verification(isValid, isPotentiallyValid) {
  return {isValid: isValid, isPotentiallyValid: isPotentiallyValid};
}

function cvv(value, maxLength) {
  maxLength = maxLength || DEFAULT_LENGTH;
  maxLength = maxLength instanceof Array ? maxLength : [maxLength];

  if (typeof value !== 'string') { return verification(false, false); }
  if (!/^\d*$/.test(value)) { return verification(false, false); }
  if (includes(maxLength, value.length)) { return verification(true, true); }
  if (value.length < Math.min.apply(null, maxLength)) { return verification(false, true); }
  if (value.length > max(maxLength)) { return verification(false, false); }

  return verification(true, true);
}

module.exports = cvv;


/***/ }),

/***/ "./node_modules/card-validator/src/expiration-date.js":
/*!************************************************************!*\
  !*** ./node_modules/card-validator/src/expiration-date.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var parseDate = __webpack_require__(/*! ./parse-date */ "./node_modules/card-validator/src/parse-date.js");
var expirationMonth = __webpack_require__(/*! ./expiration-month */ "./node_modules/card-validator/src/expiration-month.js");
var expirationYear = __webpack_require__(/*! ./expiration-year */ "./node_modules/card-validator/src/expiration-year.js");

function verification(isValid, isPotentiallyValid, month, year) {
  return {
    isValid: isValid,
    isPotentiallyValid: isPotentiallyValid,
    month: month,
    year: year
  };
}

function expirationDate(value, maxElapsedYear) {
  var date, monthValid, yearValid, isValidForThisYear;

  if (typeof value === 'string') {
    value = value.replace(/^(\d\d) (\d\d(\d\d)?)$/, '$1/$2');
    date = parseDate(value);
  } else if (value !== null && typeof value === 'object') {
    date = {
      month: String(value.month),
      year: String(value.year)
    };
  } else {
    return verification(false, false, null, null);
  }

  monthValid = expirationMonth(date.month);
  yearValid = expirationYear(date.year, maxElapsedYear);

  if (monthValid.isValid) {
    if (yearValid.isCurrentYear) {
      isValidForThisYear = monthValid.isValidForThisYear;

      return verification(isValidForThisYear, isValidForThisYear, date.month, date.year);
    }

    if (yearValid.isValid) {
      return verification(true, true, date.month, date.year);
    }
  }

  if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {
    return verification(false, true, null, null);
  }

  return verification(false, false, null, null);
}

module.exports = expirationDate;


/***/ }),

/***/ "./node_modules/card-validator/src/expiration-month.js":
/*!*************************************************************!*\
  !*** ./node_modules/card-validator/src/expiration-month.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function verification(isValid, isPotentiallyValid, isValidForThisYear) {
  return {
    isValid: isValid,
    isPotentiallyValid: isPotentiallyValid,
    isValidForThisYear: isValidForThisYear || false
  };
}

function expirationMonth(value) {
  var month, result;
  var currentMonth = new Date().getMonth() + 1;

  if (typeof value !== 'string') {
    return verification(false, false);
  }
  if (value.replace(/\s/g, '') === '' || value === '0') {
    return verification(false, true);
  }
  if (!/^\d*$/.test(value)) {
    return verification(false, false);
  }

  month = parseInt(value, 10);

  if (isNaN(value)) {
    return verification(false, false);
  }

  result = month > 0 && month < 13;

  return verification(result, result, result && month >= currentMonth);
}

module.exports = expirationMonth;


/***/ }),

/***/ "./node_modules/card-validator/src/expiration-year.js":
/*!************************************************************!*\
  !*** ./node_modules/card-validator/src/expiration-year.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE = 19;

function verification(isValid, isPotentiallyValid, isCurrentYear) {
  return {
    isValid: isValid,
    isPotentiallyValid: isPotentiallyValid,
    isCurrentYear: isCurrentYear || false
  };
}

function expirationYear(value, maxElapsedYear) {
  var currentFirstTwo, currentYear, firstTwo, len, twoDigitYear, valid, isCurrentYear;

  maxElapsedYear = maxElapsedYear || DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE;

  if (typeof value !== 'string') {
    return verification(false, false);
  }
  if (value.replace(/\s/g, '') === '') {
    return verification(false, true);
  }
  if (!/^\d*$/.test(value)) {
    return verification(false, false);
  }

  len = value.length;

  if (len < 2) {
    return verification(false, true);
  }

  currentYear = new Date().getFullYear();

  if (len === 3) {
    // 20x === 20x
    firstTwo = value.slice(0, 2);
    currentFirstTwo = String(currentYear).slice(0, 2);

    return verification(false, firstTwo === currentFirstTwo);
  }

  if (len > 4) {
    return verification(false, false);
  }

  value = parseInt(value, 10);
  twoDigitYear = Number(String(currentYear).substr(2, 2));

  if (len === 2) {
    isCurrentYear = twoDigitYear === value;
    valid = value >= twoDigitYear && value <= twoDigitYear + maxElapsedYear;
  } else if (len === 4) {
    isCurrentYear = currentYear === value;
    valid = value >= currentYear && value <= currentYear + maxElapsedYear;
  }

  return verification(valid, valid, isCurrentYear);
}

module.exports = expirationYear;


/***/ }),

/***/ "./node_modules/card-validator/src/lib/is-array.js":
/*!*********************************************************!*\
  !*** ./node_modules/card-validator/src/lib/is-array.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Polyfill taken from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#Polyfill>.

module.exports = Array.isArray || function (arg) {
  return Object.prototype.toString.call(arg) === '[object Array]';
};


/***/ }),

/***/ "./node_modules/card-validator/src/luhn-10.js":
/*!****************************************************!*\
  !*** ./node_modules/card-validator/src/luhn-10.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * Luhn algorithm implementation in JavaScript
 * Copyright (c) 2009 Nicholas C. Zakas
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */


function luhn10(identifier) {
  var sum = 0;
  var alt = false;
  var i = identifier.length - 1;
  var num;

  while (i >= 0) {
    num = parseInt(identifier.charAt(i), 10);

    if (alt) {
      num *= 2;
      if (num > 9) {
        num = (num % 10) + 1; // eslint-disable-line no-extra-parens
      }
    }

    alt = !alt;

    sum += num;

    i--;
  }

  return sum % 10 === 0;
}

module.exports = luhn10;


/***/ }),

/***/ "./node_modules/card-validator/src/parse-date.js":
/*!*******************************************************!*\
  !*** ./node_modules/card-validator/src/parse-date.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var expirationYear = __webpack_require__(/*! ./expiration-year */ "./node_modules/card-validator/src/expiration-year.js");
var isArray = __webpack_require__(/*! ./lib/is-array */ "./node_modules/card-validator/src/lib/is-array.js");

function getNumberOfMonthDigitsInDateString(dateString) {
  var firstCharacter = Number(dateString[0]);
  var assumedYear;

  /*
    if the first character in the string starts with `0`,
    we know that the month will be 2 digits.

    '0122' => {month: '01', year: '22'}
  */
  if (firstCharacter === 0) {
    return 2;
  }

  /*
    if the first character in the string starts with
    number greater than 1, it must be a 1 digit month

    '322' => {month: '3', year: '22'}
  */
  if (firstCharacter > 1) {
    return 1;
  }

  /*
    if the first 2 characters make up a number between
    13-19, we know that the month portion must be 1

    '139' => {month: '1', year: '39'}
  */
  if (firstCharacter === 1 && Number(dateString[1]) > 2) {
    return 1;
  }

  /*
    if the first 2 characters make up a number between
    10-12, we check if the year portion would be considered
    valid if we assumed that the month was 1. If it is
    not potentially valid, we assume the month must have
    2 digits.

    '109' => {month: '10', year: '9'}
    '120' => {month: '1', year: '20'} // when checked in the year 2019
    '120' => {month: '12', year: '0'} // when checked in the year 2021
  */
  if (firstCharacter === 1) {
    assumedYear = dateString.substr(1);

    return expirationYear(assumedYear).isPotentiallyValid ? 1 : 2;
  }

  /*
    If the length of the value is exactly 5 characters,
    we assume a full year was passed in, meaning the remaining
    single leading digit must be the month value.

    '12202' => {month: '1', year: '2202'}
  */
  if (dateString.length === 5) {
    return 1;
  }

  /*
    If the length of the value is more than five characters,
    we assume a full year was passed in addition to the month
    and therefore the month portion must be 2 digits.

    '112020' => {month: '11', year: '2020'}
  */
  if (dateString.length > 5) {
    return 2;
  }

  /*
    By default, the month value is the first value
  */
  return 1;
}

function parseDate(date) {
  var month, numberOfDigitsInMonth;

  if (/^\d{4}-\d{1,2}$/.test(date)) {
    date = date.split('-').reverse();
  } else if (/\//.test(date)) {
    date = date.split(/\s*\/\s*/g);
  } else if (/\s/.test(date)) {
    date = date.split(/ +/g);
  }

  if (isArray(date)) {
    return {
      month: date[0] || '',
      year: date.slice(1).join()
    };
  }

  numberOfDigitsInMonth = getNumberOfMonthDigitsInDateString(date);

  month = date.substr(0, numberOfDigitsInMonth);

  return {
    month: month,
    year: date.substr(month.length)
  };
}

module.exports = parseDate;


/***/ }),

/***/ "./node_modules/card-validator/src/postal-code.js":
/*!********************************************************!*\
  !*** ./node_modules/card-validator/src/postal-code.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var DEFAULT_MIN_POSTAL_CODE_LENGTH = 3;

function verification(isValid, isPotentiallyValid) {
  return {isValid: isValid, isPotentiallyValid: isPotentiallyValid};
}

function postalCode(value, options) {
  var minLength;

  options = options || {};

  minLength = options.minLength || DEFAULT_MIN_POSTAL_CODE_LENGTH;

  if (typeof value !== 'string') {
    return verification(false, false);
  } else if (value.length < minLength) {
    return verification(false, true);
  }

  return verification(true, true);
}

module.exports = postalCode;


/***/ }),

/***/ "./node_modules/credit-card-type/index.js":
/*!************************************************!*\
  !*** ./node_modules/credit-card-type/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var types = __webpack_require__(/*! ./lib/card-types */ "./node_modules/credit-card-type/lib/card-types.js");
var clone = __webpack_require__(/*! ./lib/clone */ "./node_modules/credit-card-type/lib/clone.js");
var findBestMatch = __webpack_require__(/*! ./lib/find-best-match */ "./node_modules/credit-card-type/lib/find-best-match.js");
var isValidInputType = __webpack_require__(/*! ./lib/is-valid-input-type */ "./node_modules/credit-card-type/lib/is-valid-input-type.js");
var addMatchingCardsToResults = __webpack_require__(/*! ./lib/add-matching-cards-to-results */ "./node_modules/credit-card-type/lib/add-matching-cards-to-results.js");

var testOrder;
var customCards = {};

var cardNames = {
  VISA: 'visa',
  MASTERCARD: 'mastercard',
  AMERICAN_EXPRESS: 'american-express',
  DINERS_CLUB: 'diners-club',
  DISCOVER: 'discover',
  JCB: 'jcb',
  UNIONPAY: 'unionpay',
  MAESTRO: 'maestro',
  ELO: 'elo',
  MIR: 'mir',
  HIPER: 'hiper',
  HIPERCARD: 'hipercard'
};

var ORIGINAL_TEST_ORDER = [
  cardNames.VISA,
  cardNames.MASTERCARD,
  cardNames.AMERICAN_EXPRESS,
  cardNames.DINERS_CLUB,
  cardNames.DISCOVER,
  cardNames.JCB,
  cardNames.UNIONPAY,
  cardNames.MAESTRO,
  cardNames.ELO,
  cardNames.MIR,
  cardNames.HIPER,
  cardNames.HIPERCARD
];

testOrder = clone(ORIGINAL_TEST_ORDER);

function findType(type) {
  return customCards[type] || types[type];
}

function getAllCardTypes() {
  return testOrder.map(function (type) {
    return clone(findType(type));
  });
}

function getCardPosition(name, ignoreErrorForNotExisting) {
  var position = testOrder.indexOf(name);

  if (!ignoreErrorForNotExisting && position === -1) {
    throw new Error('"' + name + '" is not a supported card type.');
  }

  return position;
}

function creditCardType(cardNumber) {
  var bestMatch;
  var results = [];

  if (!isValidInputType(cardNumber)) {
    return [];
  }

  if (cardNumber.length === 0) {
    return getAllCardTypes(testOrder);
  }

  testOrder.forEach(function (type) {
    var cardConfiguration = findType(type);

    addMatchingCardsToResults(cardNumber, cardConfiguration, results);
  });

  bestMatch = findBestMatch(results);

  if (bestMatch) {
    return [bestMatch];
  }

  return results;
}

creditCardType.getTypeInfo = function (type) {
  return clone(findType(type));
};

creditCardType.removeCard = function (name) {
  var position = getCardPosition(name);

  testOrder.splice(position, 1);
};

creditCardType.addCard = function (config) {
  var existingCardPosition = getCardPosition(config.type, true);

  customCards[config.type] = config;

  if (existingCardPosition === -1) {
    testOrder.push(config.type);
  }
};

creditCardType.updateCard = function (cardType, updates) {
  var clonedCard;
  var originalObject = customCards[cardType] || types[cardType];

  if (!originalObject) {
    throw new Error('"' + cardType + '" is not a recognized type. Use `addCard` instead.');
  }

  if (updates.type && originalObject.type !== updates.type) {
    throw new Error('Cannot overwrite type parameter.');
  }

  clonedCard = clone(originalObject, true);

  Object.keys(clonedCard).forEach(function (key) {
    if (updates[key]) {
      clonedCard[key] = updates[key];
    }
  });

  customCards[clonedCard.type] = clonedCard;
};

creditCardType.changeOrder = function (name, position) {
  var currentPosition = getCardPosition(name);

  testOrder.splice(currentPosition, 1);
  testOrder.splice(position, 0, name);
};

creditCardType.resetModifications = function () {
  testOrder = clone(ORIGINAL_TEST_ORDER);
  customCards = {};
};

creditCardType.types = cardNames;

module.exports = creditCardType;


/***/ }),

/***/ "./node_modules/credit-card-type/lib/add-matching-cards-to-results.js":
/*!****************************************************************************!*\
  !*** ./node_modules/credit-card-type/lib/add-matching-cards-to-results.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var clone = __webpack_require__(/*! ./clone */ "./node_modules/credit-card-type/lib/clone.js");
var matches = __webpack_require__(/*! ./matches */ "./node_modules/credit-card-type/lib/matches.js");

function addMatchingCardsToResults(cardNumber, cardConfiguration, results) {
  var i, pattern, patternLength, clonedCardConfiguration;

  for (i = 0; i < cardConfiguration.patterns.length; i++) {
    pattern = cardConfiguration.patterns[i];

    if (!matches(cardNumber, pattern)) {
      continue;
    }

    clonedCardConfiguration = clone(cardConfiguration);

    if (Array.isArray(pattern)) {
      patternLength = String(pattern[0]).length;
    } else {
      patternLength = String(pattern).length;
    }

    if (cardNumber.length >= patternLength) {
      clonedCardConfiguration.matchStrength = patternLength;
    }

    results.push(clonedCardConfiguration);
    break;
  }
}

module.exports = addMatchingCardsToResults;


/***/ }),

/***/ "./node_modules/credit-card-type/lib/card-types.js":
/*!*********************************************************!*\
  !*** ./node_modules/credit-card-type/lib/card-types.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cardTypes = {
  visa: {
    niceType: 'Visa',
    type: 'visa',
    patterns: [
      4
    ],
    gaps: [4, 8, 12],
    lengths: [16, 18, 19],
    code: {
      name: 'CVV',
      size: 3
    }
  },
  mastercard: {
    niceType: 'Mastercard',
    type: 'mastercard',
    patterns: [
      [51, 55],
      [2221, 2229],
      [223, 229],
      [23, 26],
      [270, 271],
      2720
    ],
    gaps: [4, 8, 12],
    lengths: [16],
    code: {
      name: 'CVC',
      size: 3
    }
  },
  'american-express': {
    niceType: 'American Express',
    type: 'american-express',
    patterns: [
      34,
      37
    ],
    gaps: [4, 10],
    lengths: [15],
    code: {
      name: 'CID',
      size: 4
    }
  },
  'diners-club': {
    niceType: 'Diners Club',
    type: 'diners-club',
    patterns: [
      [300, 305],
      36,
      38,
      39
    ],
    gaps: [4, 10],
    lengths: [14, 16, 19],
    code: {
      name: 'CVV',
      size: 3
    }
  },
  discover: {
    niceType: 'Discover',
    type: 'discover',
    patterns: [
      6011,
      [644, 649],
      65
    ],
    gaps: [4, 8, 12],
    lengths: [16, 19],
    code: {
      name: 'CID',
      size: 3
    }
  },
  jcb: {
    niceType: 'JCB',
    type: 'jcb',
    patterns: [
      2131,
      1800,
      [3528, 3589]
    ],
    gaps: [4, 8, 12],
    lengths: [16, 17, 18, 19],
    code: {
      name: 'CVV',
      size: 3
    }
  },
  unionpay: {
    niceType: 'UnionPay',
    type: 'unionpay',
    patterns: [
      620,
      [624, 626],
      [62100, 62182],
      [62184, 62187],
      [62185, 62197],
      [62200, 62205],
      [622010, 622999],
      622018,
      [622019, 622999],
      [62207, 62209],
      [622126, 622925],
      [623, 626],
      6270,
      6272,
      6276,
      [627700, 627779],
      [627781, 627799],
      [6282, 6289],
      6291,
      6292,
      810,
      [8110, 8131],
      [8132, 8151],
      [8152, 8163],
      [8164, 8171]
    ],
    gaps: [4, 8, 12],
    lengths: [14, 15, 16, 17, 18, 19],
    code: {
      name: 'CVN',
      size: 3
    }
  },
  maestro: {
    niceType: 'Maestro',
    type: 'maestro',
    patterns: [
      493698,
      [500000, 506698],
      [506779, 508999],
      [56, 59],
      63,
      67,
      6
    ],
    gaps: [4, 8, 12],
    lengths: [12, 13, 14, 15, 16, 17, 18, 19],
    code: {
      name: 'CVC',
      size: 3
    }
  },
  elo: {
    niceType: 'Elo',
    type: 'elo',
    patterns: [
      401178,
      401179,
      438935,
      457631,
      457632,
      431274,
      451416,
      457393,
      504175,
      [506699, 506778],
      [509000, 509999],
      627780,
      636297,
      636368,
      [650031, 650033],
      [650035, 650051],
      [650405, 650439],
      [650485, 650538],
      [650541, 650598],
      [650700, 650718],
      [650720, 650727],
      [650901, 650978],
      [651652, 651679],
      [655000, 655019],
      [655021, 655058]
    ],
    gaps: [4, 8, 12],
    lengths: [16],
    code: {
      name: 'CVE',
      size: 3
    }
  },
  mir: {
    niceType: 'Mir',
    type: 'mir',
    patterns: [
      [2200, 2204]
    ],
    gaps: [4, 8, 12],
    lengths: [16, 17, 18, 19],
    code: {
      name: 'CVP2',
      size: 3
    }
  },
  hiper: {
    niceType: 'Hiper',
    type: 'hiper',
    patterns: [
      637095,
      637568,
      637599,
      637609,
      637612
    ],
    gaps: [4, 8, 12],
    lengths: [16],
    code: {
      name: 'CVC',
      size: 3
    }
  },
  hipercard: {
    niceType: 'Hipercard',
    type: 'hipercard',
    patterns: [
      606282
    ],
    gaps: [4, 8, 12],
    lengths: [16],
    code: {
      name: 'CVC',
      size: 3
    }
  }
};

module.exports = cardTypes;


/***/ }),

/***/ "./node_modules/credit-card-type/lib/clone.js":
/*!****************************************************!*\
  !*** ./node_modules/credit-card-type/lib/clone.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function clone(originalObject) {
  var dupe;

  if (!originalObject) { return null; }

  dupe = JSON.parse(JSON.stringify(originalObject));

  return dupe;
}

module.exports = clone;


/***/ }),

/***/ "./node_modules/credit-card-type/lib/find-best-match.js":
/*!**************************************************************!*\
  !*** ./node_modules/credit-card-type/lib/find-best-match.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function hasEnoughResultsToDetermineBestMatch(results) {
  var numberOfResultsWithMaxStrengthProperty = results.filter(function (result) {
    return result.matchStrength;
  }).length;

  // if all possible results have a maxStrength property
  // that means the card number is sufficiently long
  // enough to determine conclusively what the type is
  return numberOfResultsWithMaxStrengthProperty > 0 &&
    numberOfResultsWithMaxStrengthProperty === results.length;
}

function findBestMatch(results) {
  if (!hasEnoughResultsToDetermineBestMatch(results)) {
    return;
  }

  return results.reduce(function (bestMatch, result) { // eslint-disable-line consistent-return
    if (!bestMatch) {
      return result;
    }

    // if the current best match pattern is less specific
    // than this result, set the result as the new best match
    if (bestMatch.matchStrength < result.matchStrength) {
      return result;
    }

    return bestMatch;
  });
}

module.exports = findBestMatch;


/***/ }),

/***/ "./node_modules/credit-card-type/lib/is-valid-input-type.js":
/*!******************************************************************!*\
  !*** ./node_modules/credit-card-type/lib/is-valid-input-type.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function isValidInputType(cardNumber) {
  return typeof cardNumber === 'string' || cardNumber instanceof String;
}

module.exports = isValidInputType;


/***/ }),

/***/ "./node_modules/credit-card-type/lib/matches.js":
/*!******************************************************!*\
  !*** ./node_modules/credit-card-type/lib/matches.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42
function matchesRange(cardNumber, min, max) {
  var maxLengthToCheck = String(min).length;
  var substr = cardNumber.substr(0, maxLengthToCheck);
  var integerRepresentationOfCardNumber = parseInt(substr, 10);

  min = parseInt(String(min).substr(0, substr.length), 10);
  max = parseInt(String(max).substr(0, substr.length), 10);

  return integerRepresentationOfCardNumber >= min && integerRepresentationOfCardNumber <= max;
}

function matchesPattern(cardNumber, pattern) {
  pattern = String(pattern);

  return pattern.substring(0, cardNumber.length) === cardNumber.substring(0, pattern.length);
}

function matches(cardNumber, pattern) {
  if (Array.isArray(pattern)) {
    return matchesRange(cardNumber, pattern[0], pattern[1]);
  }

  return matchesPattern(cardNumber, pattern);
}

module.exports = matches;


/***/ }),

/***/ "./node_modules/deep-assign/index.js":
/*!*******************************************!*\
  !*** ./node_modules/deep-assign/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isObj = __webpack_require__(/*! is-obj */ "./node_modules/is-obj/index.js");
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Sources cannot be null or undefined');
	}

	return Object(val);
}

function assignKey(to, from, key) {
	var val = from[key];

	if (val === undefined || val === null) {
		return;
	}

	if (hasOwnProperty.call(to, key)) {
		if (to[key] === undefined || to[key] === null) {
			throw new TypeError('Cannot convert undefined or null to object (' + key + ')');
		}
	}

	if (!hasOwnProperty.call(to, key) || !isObj(val)) {
		to[key] = val;
	} else {
		to[key] = assign(Object(to[key]), from[key]);
	}
}

function assign(to, from) {
	if (to === from) {
		return to;
	}

	from = Object(from);

	for (var key in from) {
		if (hasOwnProperty.call(from, key)) {
			assignKey(to, from, key);
		}
	}

	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(from);

		for (var i = 0; i < symbols.length; i++) {
			if (propIsEnumerable.call(from, symbols[i])) {
				assignKey(to, from, symbols[i]);
			}
		}
	}

	return to;
}

module.exports = function deepAssign(target) {
	target = toObject(target);

	for (var s = 1; s < arguments.length; s++) {
		assign(target, arguments[s]);
	}

	return target;
};


/***/ }),

/***/ "./node_modules/iframe-resizer/index.js":
/*!**********************************************!*\
  !*** ./node_modules/iframe-resizer/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(/*! ./js */ "./node_modules/iframe-resizer/js/index.js")


/***/ }),

/***/ "./node_modules/iframe-resizer/js/iframeResizer.contentWindow.js":
/*!***********************************************************************!*\
  !*** ./node_modules/iframe-resizer/js/iframeResizer.contentWindow.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(__webpack_provided_window_dot_jQuery) {/*
 * File: iframeResizer.contentWindow.js
 * Desc: Include this file in any page being loaded into an iframe
 *       to force the iframe to resize to the content size.
 * Requires: iframeResizer.js on host page.
 * Doc: https://github.com/davidjbradshaw/iframe-resizer
 * Author: David J. Bradshaw - dave@bradshaw.net
 * Contributor: Jure Mav - jure.mav@gmail.com
 * Contributor: Ian Caunce - ian@hallnet.co.uk
 */

(function(undefined) {
  'use strict';

  if (typeof window === 'undefined') return; // don't run for server side render

  var autoResize = true,
    base = 10,
    bodyBackground = '',
    bodyMargin = 0,
    bodyMarginStr = '',
    bodyObserver = null,
    bodyPadding = '',
    calculateWidth = false,
    doubleEventList = { resize: 1, click: 1 },
    eventCancelTimer = 128,
    firstRun = true,
    height = 1,
    heightCalcModeDefault = 'bodyOffset',
    heightCalcMode = heightCalcModeDefault,
    initLock = true,
    initMsg = '',
    inPageLinks = {},
    interval = 32,
    intervalTimer = null,
    logging = false,
    msgID = '[iFrameSizer]', //Must match host page msg ID
    msgIdLen = msgID.length,
    myID = '',
    observer = null,
    resetRequiredMethods = {
      max: 1,
      min: 1,
      bodyScroll: 1,
      documentElementScroll: 1
    },
    resizeFrom = 'child',
    sendPermit = true,
    target = window.parent,
    targetOriginDefault = '*',
    tolerance = 0,
    triggerLocked = false,
    triggerLockedTimer = null,
    throttledTimer = 16,
    width = 1,
    widthCalcModeDefault = 'scroll',
    widthCalcMode = widthCalcModeDefault,
    win = window,
    messageCallback = function() {
      warn('MessageCallback function not defined');
    },
    readyCallback = function() {},
    pageInfoCallback = function() {},
    customCalcMethods = {
      height: function() {
        warn('Custom height calculation function not defined');
        return document.documentElement.offsetHeight;
      },
      width: function() {
        warn('Custom width calculation function not defined');
        return document.body.scrollWidth;
      }
    },
    eventHandlersByName = {},
    passiveSupported = false,
    onceSupported = false;

  function noop() {}

  try {
    var options = Object.create(
      {},
      {
        passive: {
          get: function() {
            passiveSupported = true;
          }
        },
        once: {
          get: function() {
            onceSupported = true;
          }
        }
      }
    );
    window.addEventListener('test', noop, options);
    window.removeEventListener('test', noop, options);
  } catch (e) {
    /* */
  }

  function addEventListener(el, evt, func, options) {
    /* istanbul ignore else */ // Not testable in phantomJS
    if ('addEventListener' in window) {
      el.addEventListener(evt, func, passiveSupported ? options || {} : false);
    } else if ('attachEvent' in window) {
      //IE
      el.attachEvent('on' + evt, func);
    }
  }

  function removeEventListener(el, evt, func) {
    /* istanbul ignore else */ // Not testable in phantomJS
    if ('removeEventListener' in window) {
      el.removeEventListener(evt, func, false);
    } else if ('detachEvent' in window) {
      //IE
      el.detachEvent('on' + evt, func);
    }
  }

  function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
  }

  //Based on underscore.js
  function throttle(func) {
    var context,
      args,
      result,
      timeout = null,
      previous = 0,
      later = function() {
        previous = getNow();
        timeout = null;
        result = func.apply(context, args);
        if (!timeout) {
          context = args = null;
        }
      };

    return function() {
      var now = getNow();

      if (!previous) {
        previous = now;
      }

      var remaining = throttledTimer - (now - previous);

      context = this;
      args = arguments;

      if (remaining <= 0 || remaining > throttledTimer) {
        if (timeout) {
          clearTimeout(timeout);
          timeout = null;
        }

        previous = now;
        result = func.apply(context, args);

        if (!timeout) {
          context = args = null;
        }
      } else if (!timeout) {
        timeout = setTimeout(later, remaining);
      }

      return result;
    };
  }

  var getNow =
    Date.now ||
    function() {
      /* istanbul ignore next */ // Not testable in PhantonJS
      return new Date().getTime();
    };

  function formatLogMsg(msg) {
    return msgID + '[' + myID + ']' + ' ' + msg;
  }

  function log(msg) {
    if (logging && 'object' === typeof window.console) {
      console.log(formatLogMsg(msg));
    }
  }

  function warn(msg) {
    if ('object' === typeof window.console) {
      console.warn(formatLogMsg(msg));
    }
  }

  function init() {
    readDataFromParent();
    log('Initialising iFrame (' + location.href + ')');
    readDataFromPage();
    setMargin();
    setBodyStyle('background', bodyBackground);
    setBodyStyle('padding', bodyPadding);
    injectClearFixIntoBodyElement();
    checkHeightMode();
    checkWidthMode();
    stopInfiniteResizingOfIFrame();
    setupPublicMethods();
    startEventListeners();
    inPageLinks = setupInPageLinks();
    sendSize('init', 'Init message from host page');
    readyCallback();
  }

  function readDataFromParent() {
    function strBool(str) {
      return 'true' === str ? true : false;
    }

    var data = initMsg.substr(msgIdLen).split(':');

    myID = data[0];
    bodyMargin = undefined !== data[1] ? Number(data[1]) : bodyMargin; //For V1 compatibility
    calculateWidth = undefined !== data[2] ? strBool(data[2]) : calculateWidth;
    logging = undefined !== data[3] ? strBool(data[3]) : logging;
    interval = undefined !== data[4] ? Number(data[4]) : interval;
    autoResize = undefined !== data[6] ? strBool(data[6]) : autoResize;
    bodyMarginStr = data[7];
    heightCalcMode = undefined !== data[8] ? data[8] : heightCalcMode;
    bodyBackground = data[9];
    bodyPadding = data[10];
    tolerance = undefined !== data[11] ? Number(data[11]) : tolerance;
    inPageLinks.enable = undefined !== data[12] ? strBool(data[12]) : false;
    resizeFrom = undefined !== data[13] ? data[13] : resizeFrom;
    widthCalcMode = undefined !== data[14] ? data[14] : widthCalcMode;
  }

  function readDataFromPage() {
    function readData() {
      var data = window.iFrameResizer;

      log('Reading data from page: ' + JSON.stringify(data));

      messageCallback =
        'messageCallback' in data ? data.messageCallback : messageCallback;
      readyCallback =
        'readyCallback' in data ? data.readyCallback : readyCallback;
      targetOriginDefault =
        'targetOrigin' in data ? data.targetOrigin : targetOriginDefault;
      heightCalcMode =
        'heightCalculationMethod' in data
          ? data.heightCalculationMethod
          : heightCalcMode;
      widthCalcMode =
        'widthCalculationMethod' in data
          ? data.widthCalculationMethod
          : widthCalcMode;
    }

    function setupCustomCalcMethods(calcMode, calcFunc) {
      if ('function' === typeof calcMode) {
        log('Setup custom ' + calcFunc + 'CalcMethod');
        customCalcMethods[calcFunc] = calcMode;
        calcMode = 'custom';
      }

      return calcMode;
    }

    if (
      'iFrameResizer' in window &&
      Object === window.iFrameResizer.constructor
    ) {
      readData();
      heightCalcMode = setupCustomCalcMethods(heightCalcMode, 'height');
      widthCalcMode = setupCustomCalcMethods(widthCalcMode, 'width');
    }

    log('TargetOrigin for parent set to: ' + targetOriginDefault);
  }

  function chkCSS(attr, value) {
    if (-1 !== value.indexOf('-')) {
      warn('Negative CSS value ignored for ' + attr);
      value = '';
    }
    return value;
  }

  function setBodyStyle(attr, value) {
    if (undefined !== value && '' !== value && 'null' !== value) {
      document.body.style[attr] = value;
      log('Body ' + attr + ' set to "' + value + '"');
    }
  }

  function setMargin() {
    //If called via V1 script, convert bodyMargin from int to str
    if (undefined === bodyMarginStr) {
      bodyMarginStr = bodyMargin + 'px';
    }

    setBodyStyle('margin', chkCSS('margin', bodyMarginStr));
  }

  function stopInfiniteResizingOfIFrame() {
    document.documentElement.style.height = '';
    document.body.style.height = '';
    log('HTML & body height set to "auto"');
  }

  function manageTriggerEvent(options) {
    var listener = {
      add: function(eventName) {
        function handleEvent() {
          sendSize(options.eventName, options.eventType);
        }

        eventHandlersByName[eventName] = handleEvent;

        addEventListener(window, eventName, handleEvent, { passive: true });
      },
      remove: function(eventName) {
        var handleEvent = eventHandlersByName[eventName];
        delete eventHandlersByName[eventName];

        removeEventListener(window, eventName, handleEvent);
      }
    };

    if (options.eventNames && Array.prototype.map) {
      options.eventName = options.eventNames[0];
      options.eventNames.map(listener[options.method]);
    } else {
      listener[options.method](options.eventName);
    }

    log(
      capitalizeFirstLetter(options.method) +
        ' event listener: ' +
        options.eventType
    );
  }

  function manageEventListeners(method) {
    manageTriggerEvent({
      method: method,
      eventType: 'Animation Start',
      eventNames: ['animationstart', 'webkitAnimationStart']
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Animation Iteration',
      eventNames: ['animationiteration', 'webkitAnimationIteration']
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Animation End',
      eventNames: ['animationend', 'webkitAnimationEnd']
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Input',
      eventName: 'input'
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Mouse Up',
      eventName: 'mouseup'
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Mouse Down',
      eventName: 'mousedown'
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Orientation Change',
      eventName: 'orientationchange'
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Print',
      eventName: ['afterprint', 'beforeprint']
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Ready State Change',
      eventName: 'readystatechange'
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Touch Start',
      eventName: 'touchstart'
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Touch End',
      eventName: 'touchend'
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Touch Cancel',
      eventName: 'touchcancel'
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Transition Start',
      eventNames: [
        'transitionstart',
        'webkitTransitionStart',
        'MSTransitionStart',
        'oTransitionStart',
        'otransitionstart'
      ]
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Transition Iteration',
      eventNames: [
        'transitioniteration',
        'webkitTransitionIteration',
        'MSTransitionIteration',
        'oTransitionIteration',
        'otransitioniteration'
      ]
    });
    manageTriggerEvent({
      method: method,
      eventType: 'Transition End',
      eventNames: [
        'transitionend',
        'webkitTransitionEnd',
        'MSTransitionEnd',
        'oTransitionEnd',
        'otransitionend'
      ]
    });
    if ('child' === resizeFrom) {
      manageTriggerEvent({
        method: method,
        eventType: 'IFrame Resized',
        eventName: 'resize'
      });
    }
  }

  function checkCalcMode(calcMode, calcModeDefault, modes, type) {
    if (calcModeDefault !== calcMode) {
      if (!(calcMode in modes)) {
        warn(
          calcMode + ' is not a valid option for ' + type + 'CalculationMethod.'
        );
        calcMode = calcModeDefault;
      }
      log(type + ' calculation method set to "' + calcMode + '"');
    }

    return calcMode;
  }

  function checkHeightMode() {
    heightCalcMode = checkCalcMode(
      heightCalcMode,
      heightCalcModeDefault,
      getHeight,
      'height'
    );
  }

  function checkWidthMode() {
    widthCalcMode = checkCalcMode(
      widthCalcMode,
      widthCalcModeDefault,
      getWidth,
      'width'
    );
  }

  function startEventListeners() {
    if (true === autoResize) {
      manageEventListeners('add');
      setupMutationObserver();
    } else {
      log('Auto Resize disabled');
    }
  }

  function stopMsgsToParent() {
    log('Disable outgoing messages');
    sendPermit = false;
  }

  function removeMsgListener() {
    log('Remove event listener: Message');
    removeEventListener(window, 'message', receiver);
  }

  function disconnectMutationObserver() {
    if (null !== bodyObserver) {
      /* istanbul ignore next */ // Not testable in PhantonJS
      bodyObserver.disconnect();
    }
  }

  function stopEventListeners() {
    manageEventListeners('remove');
    disconnectMutationObserver();
    clearInterval(intervalTimer);
  }

  function teardown() {
    stopMsgsToParent();
    removeMsgListener();
    if (true === autoResize) stopEventListeners();
  }

  function injectClearFixIntoBodyElement() {
    var clearFix = document.createElement('div');
    clearFix.style.clear = 'both';
    clearFix.style.display = 'block'; //Guard against this having been globally redefined in CSS.
    document.body.appendChild(clearFix);
  }

  function setupInPageLinks() {
    function getPagePosition() {
      return {
        x:
          window.pageXOffset !== undefined
            ? window.pageXOffset
            : document.documentElement.scrollLeft,
        y:
          window.pageYOffset !== undefined
            ? window.pageYOffset
            : document.documentElement.scrollTop
      };
    }

    function getElementPosition(el) {
      var elPosition = el.getBoundingClientRect(),
        pagePosition = getPagePosition();

      return {
        x: parseInt(elPosition.left, 10) + parseInt(pagePosition.x, 10),
        y: parseInt(elPosition.top, 10) + parseInt(pagePosition.y, 10)
      };
    }

    function findTarget(location) {
      function jumpToTarget(target) {
        var jumpPosition = getElementPosition(target);

        log(
          'Moving to in page link (#' +
            hash +
            ') at x: ' +
            jumpPosition.x +
            ' y: ' +
            jumpPosition.y
        );
        sendMsg(jumpPosition.y, jumpPosition.x, 'scrollToOffset'); // X&Y reversed at sendMsg uses height/width
      }

      var hash = location.split('#')[1] || location, //Remove # if present
        hashData = decodeURIComponent(hash),
        target =
          document.getElementById(hashData) ||
          document.getElementsByName(hashData)[0];

      if (undefined !== target) {
        jumpToTarget(target);
      } else {
        log(
          'In page link (#' +
            hash +
            ') not found in iFrame, so sending to parent'
        );
        sendMsg(0, 0, 'inPageLink', '#' + hash);
      }
    }

    function checkLocationHash() {
      if ('' !== location.hash && '#' !== location.hash) {
        findTarget(location.href);
      }
    }

    function bindAnchors() {
      function setupLink(el) {
        function linkClicked(e) {
          e.preventDefault();

          /*jshint validthis:true */
          findTarget(this.getAttribute('href'));
        }

        if ('#' !== el.getAttribute('href')) {
          addEventListener(el, 'click', linkClicked);
        }
      }

      Array.prototype.forEach.call(
        document.querySelectorAll('a[href^="#"]'),
        setupLink
      );
    }

    function bindLocationHash() {
      addEventListener(window, 'hashchange', checkLocationHash);
    }

    function initCheck() {
      //check if page loaded with location hash after init resize
      setTimeout(checkLocationHash, eventCancelTimer);
    }

    function enableInPageLinks() {
      /* istanbul ignore else */ // Not testable in phantonJS
      if (Array.prototype.forEach && document.querySelectorAll) {
        log('Setting up location.hash handlers');
        bindAnchors();
        bindLocationHash();
        initCheck();
      } else {
        warn(
          'In page linking not fully supported in this browser! (See README.md for IE8 workaround)'
        );
      }
    }

    if (inPageLinks.enable) {
      enableInPageLinks();
    } else {
      log('In page linking not enabled');
    }

    return {
      findTarget: findTarget
    };
  }

  function setupPublicMethods() {
    log('Enable public methods');

    win.parentIFrame = {
      autoResize: function autoResizeF(resize) {
        if (true === resize && false === autoResize) {
          autoResize = true;
          startEventListeners();
          //sendSize('autoResize','Auto Resize enabled');
        } else if (false === resize && true === autoResize) {
          autoResize = false;
          stopEventListeners();
        }

        return autoResize;
      },

      close: function closeF() {
        sendMsg(0, 0, 'close');
        teardown();
      },

      getId: function getIdF() {
        return myID;
      },

      getPageInfo: function getPageInfoF(callback) {
        if ('function' === typeof callback) {
          pageInfoCallback = callback;
          sendMsg(0, 0, 'pageInfo');
        } else {
          pageInfoCallback = function() {};
          sendMsg(0, 0, 'pageInfoStop');
        }
      },

      moveToAnchor: function moveToAnchorF(hash) {
        inPageLinks.findTarget(hash);
      },

      reset: function resetF() {
        resetIFrame('parentIFrame.reset');
      },

      scrollTo: function scrollToF(x, y) {
        sendMsg(y, x, 'scrollTo'); // X&Y reversed at sendMsg uses height/width
      },

      scrollToOffset: function scrollToF(x, y) {
        sendMsg(y, x, 'scrollToOffset'); // X&Y reversed at sendMsg uses height/width
      },

      sendMessage: function sendMessageF(msg, targetOrigin) {
        sendMsg(0, 0, 'message', JSON.stringify(msg), targetOrigin);
      },

      setHeightCalculationMethod: function setHeightCalculationMethodF(
        heightCalculationMethod
      ) {
        heightCalcMode = heightCalculationMethod;
        checkHeightMode();
      },

      setWidthCalculationMethod: function setWidthCalculationMethodF(
        widthCalculationMethod
      ) {
        widthCalcMode = widthCalculationMethod;
        checkWidthMode();
      },

      setTargetOrigin: function setTargetOriginF(targetOrigin) {
        log('Set targetOrigin: ' + targetOrigin);
        targetOriginDefault = targetOrigin;
      },

      size: function sizeF(customHeight, customWidth) {
        var valString =
          '' +
          (customHeight ? customHeight : '') +
          (customWidth ? ',' + customWidth : '');
        //lockTrigger();
        sendSize(
          'size',
          'parentIFrame.size(' + valString + ')',
          customHeight,
          customWidth
        );
      }
    };
  }

  function initInterval() {
    if (0 !== interval) {
      log('setInterval: ' + interval + 'ms');
      intervalTimer = setInterval(function() {
        sendSize('interval', 'setInterval: ' + interval);
      }, Math.abs(interval));
    }
  } //Not testable in PhantomJS

  /* istanbul ignore next */ function setupBodyMutationObserver() {
    function addImageLoadListners(mutation) {
      function addImageLoadListener(element) {
        if (false === element.complete) {
          log('Attach listeners to ' + element.src);
          element.addEventListener('load', imageLoaded, false);
          element.addEventListener('error', imageError, false);
          elements.push(element);
        }
      }

      if (mutation.type === 'attributes' && mutation.attributeName === 'src') {
        addImageLoadListener(mutation.target);
      } else if (mutation.type === 'childList') {
        Array.prototype.forEach.call(
          mutation.target.querySelectorAll('img'),
          addImageLoadListener
        );
      }
    }

    function removeFromArray(element) {
      elements.splice(elements.indexOf(element), 1);
    }

    function removeImageLoadListener(element) {
      log('Remove listeners from ' + element.src);
      element.removeEventListener('load', imageLoaded, false);
      element.removeEventListener('error', imageError, false);
      removeFromArray(element);
    }

    function imageEventTriggered(event, type, typeDesc) {
      removeImageLoadListener(event.target);
      sendSize(type, typeDesc + ': ' + event.target.src, undefined, undefined);
    }

    function imageLoaded(event) {
      imageEventTriggered(event, 'imageLoad', 'Image loaded');
    }

    function imageError(event) {
      imageEventTriggered(event, 'imageLoadFailed', 'Image load failed');
    }

    function mutationObserved(mutations) {
      sendSize(
        'mutationObserver',
        'mutationObserver: ' + mutations[0].target + ' ' + mutations[0].type
      );

      //Deal with WebKit asyncing image loading when tags are injected into the page
      mutations.forEach(addImageLoadListners);
    }

    function createMutationObserver() {
      var target = document.querySelector('body'),
        config = {
          attributes: true,
          attributeOldValue: false,
          characterData: true,
          characterDataOldValue: false,
          childList: true,
          subtree: true
        };

      observer = new MutationObserver(mutationObserved);

      log('Create body MutationObserver');
      observer.observe(target, config);

      return observer;
    }

    var elements = [],
      MutationObserver =
        window.MutationObserver || window.WebKitMutationObserver,
      observer = createMutationObserver();

    return {
      disconnect: function() {
        if ('disconnect' in observer) {
          log('Disconnect body MutationObserver');
          observer.disconnect();
          elements.forEach(removeImageLoadListener);
        }
      }
    };
  }

  function setupMutationObserver() {
    var forceIntervalTimer = 0 > interval; // Not testable in PhantomJS

    /* istanbul ignore if */ if (
      window.MutationObserver ||
      window.WebKitMutationObserver
    ) {
      if (forceIntervalTimer) {
        initInterval();
      } else {
        bodyObserver = setupBodyMutationObserver();
      }
    } else {
      log('MutationObserver not supported in this browser!');
      initInterval();
    }
  }

  // document.documentElement.offsetHeight is not reliable, so
  // we have to jump through hoops to get a better value.
  function getComputedStyle(prop, el) {
    /* istanbul ignore next */ //Not testable in PhantomJS
    function convertUnitsToPxForIE8(value) {
      var PIXEL = /^\d+(px)?$/i;

      if (PIXEL.test(value)) {
        return parseInt(value, base);
      }

      var style = el.style.left,
        runtimeStyle = el.runtimeStyle.left;

      el.runtimeStyle.left = el.currentStyle.left;
      el.style.left = value || 0;
      value = el.style.pixelLeft;
      el.style.left = style;
      el.runtimeStyle.left = runtimeStyle;

      return value;
    }

    var retVal = 0;
    el = el || document.body; // Not testable in phantonJS

    /* istanbul ignore else */ if (
      'defaultView' in document &&
      'getComputedStyle' in document.defaultView
    ) {
      retVal = document.defaultView.getComputedStyle(el, null);
      retVal = null !== retVal ? retVal[prop] : 0;
    } else {
      //IE8
      retVal = convertUnitsToPxForIE8(el.currentStyle[prop]);
    }

    return parseInt(retVal, base);
  }

  function chkEventThottle(timer) {
    if (timer > throttledTimer / 2) {
      throttledTimer = 2 * timer;
      log('Event throttle increased to ' + throttledTimer + 'ms');
    }
  }

  //Idea from https://github.com/guardian/iframe-messenger
  function getMaxElement(side, elements) {
    var elementsLength = elements.length,
      elVal = 0,
      maxVal = 0,
      Side = capitalizeFirstLetter(side),
      timer = getNow();

    for (var i = 0; i < elementsLength; i++) {
      elVal =
        elements[i].getBoundingClientRect()[side] +
        getComputedStyle('margin' + Side, elements[i]);
      if (elVal > maxVal) {
        maxVal = elVal;
      }
    }

    timer = getNow() - timer;

    log('Parsed ' + elementsLength + ' HTML elements');
    log('Element position calculated in ' + timer + 'ms');

    chkEventThottle(timer);

    return maxVal;
  }

  function getAllMeasurements(dimention) {
    return [
      dimention.bodyOffset(),
      dimention.bodyScroll(),
      dimention.documentElementOffset(),
      dimention.documentElementScroll()
    ];
  }

  function getTaggedElements(side, tag) {
    function noTaggedElementsFound() {
      warn('No tagged elements (' + tag + ') found on page');
      return document.querySelectorAll('body *');
    }

    var elements = document.querySelectorAll('[' + tag + ']');

    if (0 === elements.length) noTaggedElementsFound();

    return getMaxElement(side, elements);
  }

  function getAllElements() {
    return document.querySelectorAll('body *');
  }

  var getHeight = {
      bodyOffset: function getBodyOffsetHeight() {
        return (
          document.body.offsetHeight +
          getComputedStyle('marginTop') +
          getComputedStyle('marginBottom')
        );
      },

      offset: function() {
        return getHeight.bodyOffset(); //Backwards compatability
      },

      bodyScroll: function getBodyScrollHeight() {
        return document.body.scrollHeight;
      },

      custom: function getCustomWidth() {
        return customCalcMethods.height();
      },

      documentElementOffset: function getDEOffsetHeight() {
        return document.documentElement.offsetHeight;
      },

      documentElementScroll: function getDEScrollHeight() {
        return document.documentElement.scrollHeight;
      },

      max: function getMaxHeight() {
        return Math.max.apply(null, getAllMeasurements(getHeight));
      },

      min: function getMinHeight() {
        return Math.min.apply(null, getAllMeasurements(getHeight));
      },

      grow: function growHeight() {
        return getHeight.max(); //Run max without the forced downsizing
      },

      lowestElement: function getBestHeight() {
        return Math.max(
          getHeight.bodyOffset() || getHeight.documentElementOffset(),
          getMaxElement('bottom', getAllElements())
        );
      },

      taggedElement: function getTaggedElementsHeight() {
        return getTaggedElements('bottom', 'data-iframe-height');
      }
    },
    getWidth = {
      bodyScroll: function getBodyScrollWidth() {
        return document.body.scrollWidth;
      },

      bodyOffset: function getBodyOffsetWidth() {
        return document.body.offsetWidth;
      },

      custom: function getCustomWidth() {
        return customCalcMethods.width();
      },

      documentElementScroll: function getDEScrollWidth() {
        return document.documentElement.scrollWidth;
      },

      documentElementOffset: function getDEOffsetWidth() {
        return document.documentElement.offsetWidth;
      },

      scroll: function getMaxWidth() {
        return Math.max(
          getWidth.bodyScroll(),
          getWidth.documentElementScroll()
        );
      },

      max: function getMaxWidth() {
        return Math.max.apply(null, getAllMeasurements(getWidth));
      },

      min: function getMinWidth() {
        return Math.min.apply(null, getAllMeasurements(getWidth));
      },

      rightMostElement: function rightMostElement() {
        return getMaxElement('right', getAllElements());
      },

      taggedElement: function getTaggedElementsWidth() {
        return getTaggedElements('right', 'data-iframe-width');
      }
    };

  function sizeIFrame(
    triggerEvent,
    triggerEventDesc,
    customHeight,
    customWidth
  ) {
    function resizeIFrame() {
      height = currentHeight;
      width = currentWidth;

      sendMsg(height, width, triggerEvent);
    }

    function isSizeChangeDetected() {
      function checkTolarance(a, b) {
        var retVal = Math.abs(a - b) <= tolerance;
        return !retVal;
      }

      currentHeight =
        undefined !== customHeight ? customHeight : getHeight[heightCalcMode]();
      currentWidth =
        undefined !== customWidth ? customWidth : getWidth[widthCalcMode]();

      return (
        checkTolarance(height, currentHeight) ||
        (calculateWidth && checkTolarance(width, currentWidth))
      );
    }

    function isForceResizableEvent() {
      return !(triggerEvent in { init: 1, interval: 1, size: 1 });
    }

    function isForceResizableCalcMode() {
      return (
        heightCalcMode in resetRequiredMethods ||
        (calculateWidth && widthCalcMode in resetRequiredMethods)
      );
    }

    function logIgnored() {
      log('No change in size detected');
    }

    function checkDownSizing() {
      if (isForceResizableEvent() && isForceResizableCalcMode()) {
        resetIFrame(triggerEventDesc);
      } else if (!(triggerEvent in { interval: 1 })) {
        logIgnored();
      }
    }

    var currentHeight, currentWidth;

    if (isSizeChangeDetected() || 'init' === triggerEvent) {
      lockTrigger();
      resizeIFrame();
    } else {
      checkDownSizing();
    }
  }

  var sizeIFrameThrottled = throttle(sizeIFrame);

  function sendSize(triggerEvent, triggerEventDesc, customHeight, customWidth) {
    function recordTrigger() {
      if (!(triggerEvent in { reset: 1, resetPage: 1, init: 1 })) {
        log('Trigger event: ' + triggerEventDesc);
      }
    }

    function isDoubleFiredEvent() {
      return triggerLocked && triggerEvent in doubleEventList;
    }

    if (!isDoubleFiredEvent()) {
      recordTrigger();
      if (triggerEvent === 'init') {
        sizeIFrame(triggerEvent, triggerEventDesc, customHeight, customWidth);
      } else {
        sizeIFrameThrottled(
          triggerEvent,
          triggerEventDesc,
          customHeight,
          customWidth
        );
      }
    } else {
      log('Trigger event cancelled: ' + triggerEvent);
    }
  }

  function lockTrigger() {
    if (!triggerLocked) {
      triggerLocked = true;
      log('Trigger event lock on');
    }
    clearTimeout(triggerLockedTimer);
    triggerLockedTimer = setTimeout(function() {
      triggerLocked = false;
      log('Trigger event lock off');
      log('--');
    }, eventCancelTimer);
  }

  function triggerReset(triggerEvent) {
    height = getHeight[heightCalcMode]();
    width = getWidth[widthCalcMode]();

    sendMsg(height, width, triggerEvent);
  }

  function resetIFrame(triggerEventDesc) {
    var hcm = heightCalcMode;
    heightCalcMode = heightCalcModeDefault;

    log('Reset trigger event: ' + triggerEventDesc);
    lockTrigger();
    triggerReset('reset');

    heightCalcMode = hcm;
  }

  function sendMsg(height, width, triggerEvent, msg, targetOrigin) {
    function setTargetOrigin() {
      if (undefined === targetOrigin) {
        targetOrigin = targetOriginDefault;
      } else {
        log('Message targetOrigin: ' + targetOrigin);
      }
    }

    function sendToParent() {
      var size = height + ':' + width,
        message =
          myID +
          ':' +
          size +
          ':' +
          triggerEvent +
          (undefined !== msg ? ':' + msg : '');

      log('Sending message to host page (' + message + ')');
      target.postMessage(msgID + message, targetOrigin);
    }

    if (true === sendPermit) {
      setTargetOrigin();
      sendToParent();
    }
  }

  function receiver(event) {
    var processRequestFromParent = {
      init: function initFromParent() {
        initMsg = event.data;
        target = event.source;

        init();
        firstRun = false;
        setTimeout(function() {
          initLock = false;
        }, eventCancelTimer);
      },

      reset: function resetFromParent() {
        if (!initLock) {
          log('Page size reset by host page');
          triggerReset('resetPage');
        } else {
          log('Page reset ignored by init');
        }
      },

      resize: function resizeFromParent() {
        sendSize('resizeParent', 'Parent window requested size check');
      },

      moveToAnchor: function moveToAnchorF() {
        inPageLinks.findTarget(getData());
      },
      inPageLink: function inPageLinkF() {
        this.moveToAnchor();
      }, //Backward compatability

      pageInfo: function pageInfoFromParent() {
        var msgBody = getData();
        log('PageInfoFromParent called from parent: ' + msgBody);
        pageInfoCallback(JSON.parse(msgBody));
        log(' --');
      },

      message: function messageFromParent() {
        var msgBody = getData();

        log('MessageCallback called from parent: ' + msgBody);
        messageCallback(JSON.parse(msgBody));
        log(' --');
      }
    };

    function isMessageForUs() {
      return msgID === ('' + event.data).substr(0, msgIdLen); //''+ Protects against non-string messages
    }

    function getMessageType() {
      return event.data.split(']')[1].split(':')[0];
    }

    function getData() {
      return event.data.substr(event.data.indexOf(':') + 1);
    }

    function isMiddleTier() {
      return (
        (!( true && module.exports) &&
          'iFrameResize' in window) ||
        ('jQuery' in window && 'iFrameResize' in __webpack_provided_window_dot_jQuery.prototype)
      );
    }

    function isInitMsg() {
      //Test if this message is from a child below us. This is an ugly test, however, updating
      //the message format would break backwards compatibity.
      return event.data.split(':')[2] in { true: 1, false: 1 };
    }

    function callFromParent() {
      var messageType = getMessageType();

      if (messageType in processRequestFromParent) {
        processRequestFromParent[messageType]();
      } else if (!isMiddleTier() && !isInitMsg()) {
        warn('Unexpected message (' + event.data + ')');
      }
    }

    function processMessage() {
      if (false === firstRun) {
        callFromParent();
      } else if (isInitMsg()) {
        processRequestFromParent.init();
      } else {
        log(
          'Ignored message of type "' +
            getMessageType() +
            '". Received before initialization.'
        );
      }
    }

    if (isMessageForUs()) {
      processMessage();
    }
  }

  //Normally the parent kicks things off when it detects the iFrame has loaded.
  //If this script is async-loaded, then tell parent page to retry init.
  function chkLateLoaded() {
    if ('loading' !== document.readyState) {
      window.parent.postMessage('[iFrameResizerChild]Ready', '*');
    }
  }

  addEventListener(window, 'message', receiver);
  addEventListener(window, 'readystatechange', chkLateLoaded);
  chkLateLoaded();

  
})();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./node_modules/iframe-resizer/js/iframeResizer.js":
/*!*********************************************************!*\
  !*** ./node_modules/iframe-resizer/js/iframeResizer.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(__webpack_provided_window_dot_jQuery) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 * File: iframeResizer.js
 * Desc: Force iframes to size to content.
 * Requires: iframeResizer.contentWindow.js to be loaded into the target frame.
 * Doc: https://github.com/davidjbradshaw/iframe-resizer
 * Author: David J. Bradshaw - dave@bradshaw.net
 * Contributor: Jure Mav - jure.mav@gmail.com
 * Contributor: Reed Dadoune - reed@dadoune.com
 */

(function(undefined) {
  'use strict';

  if (typeof window === 'undefined') return; // don't run for server side render

  var count = 0,
    logEnabled = false,
    hiddenCheckEnabled = false,
    msgHeader = 'message',
    msgHeaderLen = msgHeader.length,
    msgId = '[iFrameSizer]', //Must match iframe msg ID
    msgIdLen = msgId.length,
    pagePosition = null,
    requestAnimationFrame = window.requestAnimationFrame,
    resetRequiredMethods = {
      max: 1,
      scroll: 1,
      bodyScroll: 1,
      documentElementScroll: 1
    },
    settings = {},
    timer = null,
    logId = 'Host Page',
    defaults = {
      autoResize: true,
      bodyBackground: null,
      bodyMargin: null,
      bodyMarginV1: 8,
      bodyPadding: null,
      checkOrigin: true,
      inPageLinks: false,
      enablePublicMethods: true,
      heightCalculationMethod: 'bodyOffset',
      id: 'iFrameResizer',
      interval: 32,
      log: false,
      maxHeight: Infinity,
      maxWidth: Infinity,
      minHeight: 0,
      minWidth: 0,
      resizeFrom: 'parent',
      scrolling: false,
      sizeHeight: true,
      sizeWidth: false,
      warningTimeout: 5000,
      tolerance: 0,
      widthCalculationMethod: 'scroll',
      closedCallback: function() {},
      initCallback: function() {},
      messageCallback: function() {
        warn('MessageCallback function not defined');
      },
      resizedCallback: function() {},
      scrollCallback: function() {
        return true;
      }
    };

  function getMutationObserver() {
    return window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
  }

  function addEventListener(obj, evt, func) {
    /* istanbul ignore else */ // Not testable in PhantonJS
    if ('addEventListener' in window) {
      obj.addEventListener(evt, func, false);
    } else if ('attachEvent' in window) {
      //IE
      obj.attachEvent('on' + evt, func);
    }
  }

  function removeEventListener(el, evt, func) {
    /* istanbul ignore else */ // Not testable in phantonJS
    if ('removeEventListener' in window) {
      el.removeEventListener(evt, func, false);
    } else if ('detachEvent' in window) {
      //IE
      el.detachEvent('on' + evt, func);
    }
  }

  function setupRequestAnimationFrame() {
    var vendors = ['moz', 'webkit', 'o', 'ms'],
      x;

    // Remove vendor prefixing if prefixed and break early if not
    for (x = 0; x < vendors.length && !requestAnimationFrame; x += 1) {
      requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
    }

    if (!requestAnimationFrame) {
      log('setup', 'RequestAnimationFrame not supported');
    }
  }

  function getMyID(iframeId) {
    var retStr = 'Host page: ' + iframeId;

    if (window.top !== window.self) {
      if (window.parentIFrame && window.parentIFrame.getId) {
        retStr = window.parentIFrame.getId() + ': ' + iframeId;
      } else {
        retStr = 'Nested host page: ' + iframeId;
      }
    }

    return retStr;
  }

  function formatLogHeader(iframeId) {
    return msgId + '[' + getMyID(iframeId) + ']';
  }

  function isLogEnabled(iframeId) {
    return settings[iframeId] ? settings[iframeId].log : logEnabled;
  }

  function log(iframeId, msg) {
    output('log', iframeId, msg, isLogEnabled(iframeId));
  }

  function info(iframeId, msg) {
    output('info', iframeId, msg, isLogEnabled(iframeId));
  }

  function warn(iframeId, msg) {
    output('warn', iframeId, msg, true);
  }

  function output(type, iframeId, msg, enabled) {
    if (true === enabled && 'object' === typeof window.console) {
      console[type](formatLogHeader(iframeId), msg);
    }
  }

  function iFrameListener(event) {
    function resizeIFrame() {
      function resize() {
        setSize(messageData);
        setPagePosition(iframeId);
        callback('resizedCallback', messageData);
      }

      ensureInRange('Height');
      ensureInRange('Width');

      syncResize(resize, messageData, 'init');
    }

    function processMsg() {
      var data = msg.substr(msgIdLen).split(':');

      return {
        iframe: settings[data[0]] && settings[data[0]].iframe,
        id: data[0],
        height: data[1],
        width: data[2],
        type: data[3]
      };
    }

    function ensureInRange(Dimension) {
      var max = Number(settings[iframeId]['max' + Dimension]),
        min = Number(settings[iframeId]['min' + Dimension]),
        dimension = Dimension.toLowerCase(),
        size = Number(messageData[dimension]);

      log(
        iframeId,
        'Checking ' + dimension + ' is in range ' + min + '-' + max
      );

      if (size < min) {
        size = min;
        log(iframeId, 'Set ' + dimension + ' to min value');
      }

      if (size > max) {
        size = max;
        log(iframeId, 'Set ' + dimension + ' to max value');
      }

      messageData[dimension] = '' + size;
    }

    function isMessageFromIFrame() {
      function checkAllowedOrigin() {
        function checkList() {
          var i = 0,
            retCode = false;

          log(
            iframeId,
            'Checking connection is from allowed list of origins: ' +
              checkOrigin
          );

          for (; i < checkOrigin.length; i++) {
            if (checkOrigin[i] === origin) {
              retCode = true;
              break;
            }
          }
          return retCode;
        }

        function checkSingle() {
          var remoteHost = settings[iframeId] && settings[iframeId].remoteHost;
          log(iframeId, 'Checking connection is from: ' + remoteHost);
          return origin === remoteHost;
        }

        return checkOrigin.constructor === Array ? checkList() : checkSingle();
      }

      var origin = event.origin,
        checkOrigin = settings[iframeId] && settings[iframeId].checkOrigin;

      if (checkOrigin && '' + origin !== 'null' && !checkAllowedOrigin()) {
        throw new Error(
          'Unexpected message received from: ' +
            origin +
            ' for ' +
            messageData.iframe.id +
            '. Message was: ' +
            event.data +
            '. This error can be disabled by setting the checkOrigin: false option or by providing of array of trusted domains.'
        );
      }

      return true;
    }

    function isMessageForUs() {
      return (
        msgId === ('' + msg).substr(0, msgIdLen) &&
        msg.substr(msgIdLen).split(':')[0] in settings
      ); //''+Protects against non-string msg
    }

    function isMessageFromMetaParent() {
      //Test if this message is from a parent above us. This is an ugly test, however, updating
      //the message format would break backwards compatibity.
      var retCode = messageData.type in { true: 1, false: 1, undefined: 1 };

      if (retCode) {
        log(iframeId, 'Ignoring init message from meta parent page');
      }

      return retCode;
    }

    function getMsgBody(offset) {
      return msg.substr(msg.indexOf(':') + msgHeaderLen + offset);
    }

    function forwardMsgFromIFrame(msgBody) {
      log(
        iframeId,
        'MessageCallback passed: {iframe: ' +
          messageData.iframe.id +
          ', message: ' +
          msgBody +
          '}'
      );
      callback('messageCallback', {
        iframe: messageData.iframe,
        message: JSON.parse(msgBody)
      });
      log(iframeId, '--');
    }

    function getPageInfo() {
      var bodyPosition = document.body.getBoundingClientRect(),
        iFramePosition = messageData.iframe.getBoundingClientRect();

      return JSON.stringify({
        iframeHeight: iFramePosition.height,
        iframeWidth: iFramePosition.width,
        clientHeight: Math.max(
          document.documentElement.clientHeight,
          window.innerHeight || 0
        ),
        clientWidth: Math.max(
          document.documentElement.clientWidth,
          window.innerWidth || 0
        ),
        offsetTop: parseInt(iFramePosition.top - bodyPosition.top, 10),
        offsetLeft: parseInt(iFramePosition.left - bodyPosition.left, 10),
        scrollTop: window.pageYOffset,
        scrollLeft: window.pageXOffset
      });
    }

    function sendPageInfoToIframe(iframe, iframeId) {
      function debouncedTrigger() {
        trigger(
          'Send Page Info',
          'pageInfo:' + getPageInfo(),
          iframe,
          iframeId
        );
      }
      debounceFrameEvents(debouncedTrigger, 32, iframeId);
    }

    function startPageInfoMonitor() {
      function setListener(type, func) {
        function sendPageInfo() {
          if (settings[id]) {
            sendPageInfoToIframe(settings[id].iframe, id);
          } else {
            stop();
          }
        }

        ['scroll', 'resize'].forEach(function(evt) {
          log(id, type + evt + ' listener for sendPageInfo');
          func(window, evt, sendPageInfo);
        });
      }

      function stop() {
        setListener('Remove ', removeEventListener);
      }

      function start() {
        setListener('Add ', addEventListener);
      }

      var id = iframeId; //Create locally scoped copy of iFrame ID

      start();

      if (settings[id]) {
        settings[id].stopPageInfo = stop;
      }
    }

    function stopPageInfoMonitor() {
      if (settings[iframeId] && settings[iframeId].stopPageInfo) {
        settings[iframeId].stopPageInfo();
        delete settings[iframeId].stopPageInfo;
      }
    }

    function checkIFrameExists() {
      var retBool = true;

      if (null === messageData.iframe) {
        warn(iframeId, 'IFrame (' + messageData.id + ') not found');
        retBool = false;
      }
      return retBool;
    }

    function getElementPosition(target) {
      var iFramePosition = target.getBoundingClientRect();

      getPagePosition(iframeId);

      return {
        x: Math.floor(Number(iFramePosition.left) + Number(pagePosition.x)),
        y: Math.floor(Number(iFramePosition.top) + Number(pagePosition.y))
      };
    }

    function scrollRequestFromChild(addOffset) {
      /* istanbul ignore next */ //Not testable in Karma
      function reposition() {
        pagePosition = newPosition;
        scrollTo();
        log(iframeId, '--');
      }

      function calcOffset() {
        return {
          x: Number(messageData.width) + offset.x,
          y: Number(messageData.height) + offset.y
        };
      }

      function scrollParent() {
        if (window.parentIFrame) {
          window.parentIFrame['scrollTo' + (addOffset ? 'Offset' : '')](
            newPosition.x,
            newPosition.y
          );
        } else {
          warn(
            iframeId,
            'Unable to scroll to requested position, window.parentIFrame not found'
          );
        }
      }

      var offset = addOffset
          ? getElementPosition(messageData.iframe)
          : { x: 0, y: 0 },
        newPosition = calcOffset();

      log(
        iframeId,
        'Reposition requested from iFrame (offset x:' +
          offset.x +
          ' y:' +
          offset.y +
          ')'
      );

      if (window.top !== window.self) {
        scrollParent();
      } else {
        reposition();
      }
    }

    function scrollTo() {
      if (false !== callback('scrollCallback', pagePosition)) {
        setPagePosition(iframeId);
      } else {
        unsetPagePosition();
      }
    }

    function findTarget(location) {
      function jumpToTarget() {
        var jumpPosition = getElementPosition(target);

        log(
          iframeId,
          'Moving to in page link (#' +
            hash +
            ') at x: ' +
            jumpPosition.x +
            ' y: ' +
            jumpPosition.y
        );
        pagePosition = {
          x: jumpPosition.x,
          y: jumpPosition.y
        };

        scrollTo();
        log(iframeId, '--');
      }

      function jumpToParent() {
        if (window.parentIFrame) {
          window.parentIFrame.moveToAnchor(hash);
        } else {
          log(
            iframeId,
            'In page link #' +
              hash +
              ' not found and window.parentIFrame not found'
          );
        }
      }

      var hash = location.split('#')[1] || '',
        hashData = decodeURIComponent(hash),
        target =
          document.getElementById(hashData) ||
          document.getElementsByName(hashData)[0];

      if (target) {
        jumpToTarget();
      } else if (window.top !== window.self) {
        jumpToParent();
      } else {
        log(iframeId, 'In page link #' + hash + ' not found');
      }
    }

    function callback(funcName, val) {
      return chkCallback(iframeId, funcName, val);
    }

    function actionMsg() {
      if (settings[iframeId] && settings[iframeId].firstRun) firstRun();

      switch (messageData.type) {
        case 'close':
          if (settings[iframeId].closeRequestCallback)
            chkCallback(
              iframeId,
              'closeRequestCallback',
              settings[iframeId].iframe
            );
          else closeIFrame(messageData.iframe);
          break;
        case 'message':
          forwardMsgFromIFrame(getMsgBody(6));
          break;
        case 'scrollTo':
          scrollRequestFromChild(false);
          break;
        case 'scrollToOffset':
          scrollRequestFromChild(true);
          break;
        case 'pageInfo':
          sendPageInfoToIframe(
            settings[iframeId] && settings[iframeId].iframe,
            iframeId
          );
          startPageInfoMonitor();
          break;
        case 'pageInfoStop':
          stopPageInfoMonitor();
          break;
        case 'inPageLink':
          findTarget(getMsgBody(9));
          break;
        case 'reset':
          resetIFrame(messageData);
          break;
        case 'init':
          resizeIFrame();
          callback('initCallback', messageData.iframe);
          break;
        default:
          resizeIFrame();
      }
    }

    function hasSettings(iframeId) {
      var retBool = true;

      if (!settings[iframeId]) {
        retBool = false;
        warn(
          messageData.type +
            ' No settings for ' +
            iframeId +
            '. Message was: ' +
            msg
        );
      }

      return retBool;
    }

    function iFrameReadyMsgReceived() {
      for (var iframeId in settings) {
        trigger(
          'iFrame requested init',
          createOutgoingMsg(iframeId),
          document.getElementById(iframeId),
          iframeId
        );
      }
    }

    function firstRun() {
      if (settings[iframeId]) {
        settings[iframeId].firstRun = false;
      }
    }

    function clearWarningTimeout() {
      if (settings[iframeId]) {
        clearTimeout(settings[iframeId].msgTimeout);
        settings[iframeId].warningTimeout = 0;
      }
    }

    var msg = event.data,
      messageData = {},
      iframeId = null;

    if ('[iFrameResizerChild]Ready' === msg) {
      iFrameReadyMsgReceived();
    } else if (isMessageForUs()) {
      messageData = processMsg();
      iframeId = logId = messageData.id;
      if (settings[iframeId]) {
        settings[iframeId].loaded = true;
      }

      if (!isMessageFromMetaParent() && hasSettings(iframeId)) {
        log(iframeId, 'Received: ' + msg);

        if (checkIFrameExists() && isMessageFromIFrame()) {
          actionMsg();
        }
      }
    } else {
      info(iframeId, 'Ignored: ' + msg);
    }
  }

  function chkCallback(iframeId, funcName, val) {
    var func = null,
      retVal = null;

    if (settings[iframeId]) {
      func = settings[iframeId][funcName];

      if ('function' === typeof func) {
        retVal = func(val);
      } else {
        throw new TypeError(
          funcName + ' on iFrame[' + iframeId + '] is not a function'
        );
      }
    }

    return retVal;
  }

  function removeIframeListeners(iframe) {
    var iframeId = iframe.id;
    delete settings[iframeId];
  }

  function closeIFrame(iframe) {
    var iframeId = iframe.id;
    log(iframeId, 'Removing iFrame: ' + iframeId);

    try {
      // Catch race condition error with React
      if (iframe.parentNode) {
        iframe.parentNode.removeChild(iframe);
      }
    } catch (e) {}

    chkCallback(iframeId, 'closedCallback', iframeId);
    log(iframeId, '--');
    removeIframeListeners(iframe);
  }

  function getPagePosition(iframeId) {
    if (null === pagePosition) {
      pagePosition = {
        x:
          window.pageXOffset !== undefined
            ? window.pageXOffset
            : document.documentElement.scrollLeft,
        y:
          window.pageYOffset !== undefined
            ? window.pageYOffset
            : document.documentElement.scrollTop
      };
      log(
        iframeId,
        'Get page position: ' + pagePosition.x + ',' + pagePosition.y
      );
    }
  }

  function setPagePosition(iframeId) {
    if (null !== pagePosition) {
      window.scrollTo(pagePosition.x, pagePosition.y);
      log(
        iframeId,
        'Set page position: ' + pagePosition.x + ',' + pagePosition.y
      );
      unsetPagePosition();
    }
  }

  function unsetPagePosition() {
    pagePosition = null;
  }

  function resetIFrame(messageData) {
    function reset() {
      setSize(messageData);
      trigger('reset', 'reset', messageData.iframe, messageData.id);
    }

    log(
      messageData.id,
      'Size reset requested by ' +
        ('init' === messageData.type ? 'host page' : 'iFrame')
    );
    getPagePosition(messageData.id);
    syncResize(reset, messageData, 'reset');
  }

  function setSize(messageData) {
    function setDimension(dimension) {
      if (!messageData.id) {
        log('undefined', 'messageData id not set');
        return;
      }
      messageData.iframe.style[dimension] = messageData[dimension] + 'px';
      log(
        messageData.id,
        'IFrame (' +
          iframeId +
          ') ' +
          dimension +
          ' set to ' +
          messageData[dimension] +
          'px'
      );
    }

    function chkZero(dimension) {
      //FireFox sets dimension of hidden iFrames to zero.
      //So if we detect that set up an event to check for
      //when iFrame becomes visible.

      /* istanbul ignore next */ //Not testable in PhantomJS
      if (!hiddenCheckEnabled && '0' === messageData[dimension]) {
        hiddenCheckEnabled = true;
        log(iframeId, 'Hidden iFrame detected, creating visibility listener');
        fixHiddenIFrames();
      }
    }

    function processDimension(dimension) {
      setDimension(dimension);
      chkZero(dimension);
    }

    var iframeId = messageData.iframe.id;

    if (settings[iframeId]) {
      if (settings[iframeId].sizeHeight) {
        processDimension('height');
      }
      if (settings[iframeId].sizeWidth) {
        processDimension('width');
      }
    }
  }

  function syncResize(func, messageData, doNotSync) {
    /* istanbul ignore if */ //Not testable in PhantomJS
    if (doNotSync !== messageData.type && requestAnimationFrame) {
      log(messageData.id, 'Requesting animation frame');
      requestAnimationFrame(func);
    } else {
      func();
    }
  }

  function trigger(calleeMsg, msg, iframe, id, noResponseWarning) {
    function postMessageToIFrame() {
      var target = settings[id] && settings[id].targetOrigin;
      log(
        id,
        '[' +
          calleeMsg +
          '] Sending msg to iframe[' +
          id +
          '] (' +
          msg +
          ') targetOrigin: ' +
          target
      );
      iframe.contentWindow.postMessage(msgId + msg, target);
    }

    function iFrameNotFound() {
      warn(id, '[' + calleeMsg + '] IFrame(' + id + ') not found');
    }

    function chkAndSend() {
      if (
        iframe &&
        'contentWindow' in iframe &&
        null !== iframe.contentWindow
      ) {
        //Null test for PhantomJS
        postMessageToIFrame();
      } else {
        iFrameNotFound();
      }
    }

    function warnOnNoResponse() {
      function warning() {
        if (settings[id] && !settings[id].loaded && !errorShown) {
          errorShown = true;
          warn(
            id,
            'IFrame has not responded within ' +
              settings[id].warningTimeout / 1000 +
              ' seconds. Check iFrameResizer.contentWindow.js has been loaded in iFrame. This message can be ignored if everything is working, or you can set the warningTimeout option to a higher value or zero to suppress this warning.'
          );
        }
      }

      if (
        !!noResponseWarning &&
        settings[id] &&
        !!settings[id].warningTimeout
      ) {
        settings[id].msgTimeout = setTimeout(
          warning,
          settings[id].warningTimeout
        );
      }
    }

    var errorShown = false;

    id = id || iframe.id;

    if (settings[id]) {
      chkAndSend();
      warnOnNoResponse();
    }
  }

  function createOutgoingMsg(iframeId) {
    return (
      iframeId +
      ':' +
      settings[iframeId].bodyMarginV1 +
      ':' +
      settings[iframeId].sizeWidth +
      ':' +
      settings[iframeId].log +
      ':' +
      settings[iframeId].interval +
      ':' +
      settings[iframeId].enablePublicMethods +
      ':' +
      settings[iframeId].autoResize +
      ':' +
      settings[iframeId].bodyMargin +
      ':' +
      settings[iframeId].heightCalculationMethod +
      ':' +
      settings[iframeId].bodyBackground +
      ':' +
      settings[iframeId].bodyPadding +
      ':' +
      settings[iframeId].tolerance +
      ':' +
      settings[iframeId].inPageLinks +
      ':' +
      settings[iframeId].resizeFrom +
      ':' +
      settings[iframeId].widthCalculationMethod
    );
  }

  function setupIFrame(iframe, options) {
    function setLimits() {
      function addStyle(style) {
        if (
          Infinity !== settings[iframeId][style] &&
          0 !== settings[iframeId][style]
        ) {
          iframe.style[style] = settings[iframeId][style] + 'px';
          log(
            iframeId,
            'Set ' + style + ' = ' + settings[iframeId][style] + 'px'
          );
        }
      }

      function chkMinMax(dimension) {
        if (
          settings[iframeId]['min' + dimension] >
          settings[iframeId]['max' + dimension]
        ) {
          throw new Error(
            'Value for min' +
              dimension +
              ' can not be greater than max' +
              dimension
          );
        }
      }

      chkMinMax('Height');
      chkMinMax('Width');

      addStyle('maxHeight');
      addStyle('minHeight');
      addStyle('maxWidth');
      addStyle('minWidth');
    }

    function newId() {
      var id = (options && options.id) || defaults.id + count++;
      if (null !== document.getElementById(id)) {
        id = id + count++;
      }
      return id;
    }

    function ensureHasId(iframeId) {
      logId = iframeId;
      if ('' === iframeId) {
        iframe.id = iframeId = newId();
        logEnabled = (options || {}).log;
        logId = iframeId;
        log(
          iframeId,
          'Added missing iframe ID: ' + iframeId + ' (' + iframe.src + ')'
        );
      }

      return iframeId;
    }

    function setScrolling() {
      log(
        iframeId,
        'IFrame scrolling ' +
          (settings[iframeId] && settings[iframeId].scrolling
            ? 'enabled'
            : 'disabled') +
          ' for ' +
          iframeId
      );
      iframe.style.overflow =
        false === (settings[iframeId] && settings[iframeId].scrolling)
          ? 'hidden'
          : 'auto';
      switch (settings[iframeId] && settings[iframeId].scrolling) {
        case 'omit':
          break;
        case true:
          iframe.scrolling = 'yes';
          break;
        case false:
          iframe.scrolling = 'no';
          break;
        default:
          iframe.scrolling = settings[iframeId]
            ? settings[iframeId].scrolling
            : 'no';
      }
    }

    //The V1 iFrame script expects an int, where as in V2 expects a CSS
    //string value such as '1px 3em', so if we have an int for V2, set V1=V2
    //and then convert V2 to a string PX value.
    function setupBodyMarginValues() {
      if (
        'number' ===
          typeof (settings[iframeId] && settings[iframeId].bodyMargin) ||
        '0' === (settings[iframeId] && settings[iframeId].bodyMargin)
      ) {
        settings[iframeId].bodyMarginV1 = settings[iframeId].bodyMargin;
        settings[iframeId].bodyMargin =
          '' + settings[iframeId].bodyMargin + 'px';
      }
    }

    function checkReset() {
      // Reduce scope of firstRun to function, because IE8's JS execution
      // context stack is borked and this value gets externally
      // changed midway through running this function!!!
      var firstRun = settings[iframeId] && settings[iframeId].firstRun,
        resetRequertMethod =
          settings[iframeId] &&
          settings[iframeId].heightCalculationMethod in resetRequiredMethods;

      if (!firstRun && resetRequertMethod) {
        resetIFrame({ iframe: iframe, height: 0, width: 0, type: 'init' });
      }
    }

    function setupIFrameObject() {
      if (Function.prototype.bind && settings[iframeId]) {
        //Ignore unpolyfilled IE8.
        settings[iframeId].iframe.iFrameResizer = {
          close: closeIFrame.bind(null, settings[iframeId].iframe),

          removeListeners: removeIframeListeners.bind(
            null,
            settings[iframeId].iframe
          ),

          resize: trigger.bind(
            null,
            'Window resize',
            'resize',
            settings[iframeId].iframe
          ),

          moveToAnchor: function(anchor) {
            trigger(
              'Move to anchor',
              'moveToAnchor:' + anchor,
              settings[iframeId].iframe,
              iframeId
            );
          },

          sendMessage: function(message) {
            message = JSON.stringify(message);
            trigger(
              'Send Message',
              'message:' + message,
              settings[iframeId].iframe,
              iframeId
            );
          }
        };
      }
    }

    //We have to call trigger twice, as we can not be sure if all
    //iframes have completed loading when this code runs. The
    //event listener also catches the page changing in the iFrame.
    function init(msg) {
      function iFrameLoaded() {
        trigger('iFrame.onload', msg, iframe, undefined, true);
        checkReset();
      }

      function createDestroyObserver(MutationObserver) {
        if (!iframe.parentNode) {
          return;
        }

        var destroyObserver = new MutationObserver(function (mutations) {
          mutations.forEach(function (mutation) {
            var removedNodes = Array.prototype.slice.call(mutation.removedNodes); // Transform NodeList into an Array
            removedNodes.forEach(function (removedNode) {
              if (removedNode === iframe) {
                closeIFrame(iframe);
              }
            });
          });
        });
        destroyObserver.observe(iframe.parentNode, {
          childList: true
        });
      }

      var MutationObserver = getMutationObserver();
      if (MutationObserver) {
        createDestroyObserver(MutationObserver);
      }

      addEventListener(iframe, 'load', iFrameLoaded);
      trigger('init', msg, iframe, undefined, true);
    }

    function checkOptions(options) {
      if ('object' !== typeof options) {
        throw new TypeError('Options is not an object');
      }
    }

    function copyOptions(options) {
      for (var option in defaults) {
        if (defaults.hasOwnProperty(option)) {
          settings[iframeId][option] = options.hasOwnProperty(option)
            ? options[option]
            : defaults[option];
        }
      }
    }

    function getTargetOrigin(remoteHost) {
      return '' === remoteHost || 'file://' === remoteHost ? '*' : remoteHost;
    }

    function processOptions(options) {
      options = options || {};
      settings[iframeId] = {
        firstRun: true,
        iframe: iframe,
        remoteHost: iframe.src
          .split('/')
          .slice(0, 3)
          .join('/')
      };

      checkOptions(options);
      copyOptions(options);

      if (settings[iframeId]) {
        settings[iframeId].targetOrigin =
          true === settings[iframeId].checkOrigin
            ? getTargetOrigin(settings[iframeId].remoteHost)
            : '*';
      }
    }

    function beenHere() {
      return iframeId in settings && 'iFrameResizer' in iframe;
    }

    var iframeId = ensureHasId(iframe.id);

    if (!beenHere()) {
      processOptions(options);
      setScrolling();
      setLimits();
      setupBodyMarginValues();
      init(createOutgoingMsg(iframeId));
      setupIFrameObject();
    } else {
      warn(iframeId, 'Ignored iFrame, already setup.');
    }
  }

  function debouce(fn, time) {
    if (null === timer) {
      timer = setTimeout(function() {
        timer = null;
        fn();
      }, time);
    }
  }

  var frameTimer = {};
  function debounceFrameEvents(fn, time, frameId) {
    if (!frameTimer[frameId]) {
      frameTimer[frameId] = setTimeout(function() {
        frameTimer[frameId] = null;
        fn();
      }, time);
    }
  } //Not testable in PhantomJS

  /* istanbul ignore next */ function fixHiddenIFrames() {
    function checkIFrames() {
      function checkIFrame(settingId) {
        function chkDimension(dimension) {
          return (
            '0px' ===
            (settings[settingId] && settings[settingId].iframe.style[dimension])
          );
        }

        function isVisible(el) {
          return null !== el.offsetParent;
        }

        if (
          settings[settingId] &&
          isVisible(settings[settingId].iframe) &&
          (chkDimension('height') || chkDimension('width'))
        ) {
          trigger(
            'Visibility change',
            'resize',
            settings[settingId].iframe,
            settingId
          );
        }
      }

      for (var settingId in settings) {
        checkIFrame(settingId);
      }
    }

    function mutationObserved(mutations) {
      log(
        'window',
        'Mutation observed: ' + mutations[0].target + ' ' + mutations[0].type
      );
      debouce(checkIFrames, 16);
    }

    function createMutationObserver() {
      var target = document.querySelector('body'),
        config = {
          attributes: true,
          attributeOldValue: false,
          characterData: true,
          characterDataOldValue: false,
          childList: true,
          subtree: true
        },
        observer = new MutationObserver(mutationObserved);

      observer.observe(target, config);
    }

    var MutationObserver = getMutationObserver();
    if (MutationObserver) {
      createMutationObserver();
    }
  }

  function resizeIFrames(event) {
    function resize() {
      sendTriggerMsg('Window ' + event, 'resize');
    }

    log('window', 'Trigger event: ' + event);
    debouce(resize, 16);
  } //Not testable in PhantomJS

  /* istanbul ignore next */ function tabVisible() {
    function resize() {
      sendTriggerMsg('Tab Visable', 'resize');
    }

    if ('hidden' !== document.visibilityState) {
      log('document', 'Trigger event: Visiblity change');
      debouce(resize, 16);
    }
  }

  function sendTriggerMsg(eventName, event) {
    function isIFrameResizeEnabled(iframeId) {
      return (
        settings[iframeId] &&
        'parent' === settings[iframeId].resizeFrom &&
        settings[iframeId].autoResize &&
        !settings[iframeId].firstRun
      );
    }

    for (var iframeId in settings) {
      if (isIFrameResizeEnabled(iframeId)) {
        trigger(eventName, event, document.getElementById(iframeId), iframeId);
      }
    }
  }

  function setupEventListeners() {
    addEventListener(window, 'message', iFrameListener);

    addEventListener(window, 'resize', function() {
      resizeIFrames('resize');
    });

    addEventListener(document, 'visibilitychange', tabVisible);
    addEventListener(document, '-webkit-visibilitychange', tabVisible); //Andriod 4.4
    addEventListener(window, 'focusin', function() {
      resizeIFrames('focus');
    }); //IE8-9
    addEventListener(window, 'focus', function() {
      resizeIFrames('focus');
    });
  }

  function factory() {
    function init(options, element) {
      function chkType() {
        if (!element.tagName) {
          throw new TypeError('Object is not a valid DOM element');
        } else if ('IFRAME' !== element.tagName.toUpperCase()) {
          throw new TypeError(
            'Expected <IFRAME> tag, found <' + element.tagName + '>'
          );
        }
      }

      if (element) {
        chkType();
        setupIFrame(element, options);
        iFrames.push(element);
      }
    }

    function warnDeprecatedOptions(options) {
      if (options && options.enablePublicMethods) {
        warn(
          'enablePublicMethods option has been removed, public methods are now always available in the iFrame'
        );
      }
    }

    var iFrames;

    setupRequestAnimationFrame();
    setupEventListeners();

    return function iFrameResizeF(options, target) {
      iFrames = []; //Only return iFrames past in on this call

      warnDeprecatedOptions(options);

      switch (typeof target) {
        case 'undefined':
        case 'string':
          Array.prototype.forEach.call(
            document.querySelectorAll(target || 'iframe'),
            init.bind(undefined, options)
          );
          break;
        case 'object':
          init(options, target);
          break;
        default:
          throw new TypeError('Unexpected data type (' + typeof target + ')');
      }

      return iFrames;
    };
  }

  function createJQueryPublicMethod($) {
    if (!$.fn) {
      info('', 'Unable to bind to jQuery, it is not fully loaded.');
    } else if (!$.fn.iFrameResize) {
      $.fn.iFrameResize = function $iFrameResizeF(options) {
        function init(index, element) {
          setupIFrame(element, options);
        }

        return this.filter('iframe')
          .each(init)
          .end();
      };
    }
  }

  if (__webpack_provided_window_dot_jQuery) {
    createJQueryPublicMethod(__webpack_provided_window_dot_jQuery);
  }

  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
  window.iFrameResize = window.iFrameResize || factory();
})();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.min.js")))

/***/ }),

/***/ "./node_modules/iframe-resizer/js/index.js":
/*!*************************************************!*\
  !*** ./node_modules/iframe-resizer/js/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.iframeResizer = __webpack_require__(/*! ./iframeResizer */ "./node_modules/iframe-resizer/js/iframeResizer.js");
exports.iframeResizerContentWindow = __webpack_require__(/*! ./iframeResizer.contentWindow */ "./node_modules/iframe-resizer/js/iframeResizer.contentWindow.js");


/***/ }),

/***/ "./node_modules/is-obj/index.js":
/*!**************************************!*\
  !*** ./node_modules/is-obj/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function (x) {
	var type = typeof x;
	return x !== null && (type === 'object' || type === 'function');
};


/***/ }),

/***/ "./node_modules/js-cookie/src/js.cookie.js":
/*!*************************************************!*\
  !*** ./node_modules/js-cookie/src/js.cookie.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * JavaScript Cookie v2.2.1
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
;(function (factory) {
	var registeredInModuleLoader;
	if (true) {
		!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		registeredInModuleLoader = true;
	}
	if (true) {
		module.exports = factory();
		registeredInModuleLoader = true;
	}
	if (!registeredInModuleLoader) {
		var OldCookies = window.Cookies;
		var api = window.Cookies = factory();
		api.noConflict = function () {
			window.Cookies = OldCookies;
			return api;
		};
	}
}(function () {
	function extend () {
		var i = 0;
		var result = {};
		for (; i < arguments.length; i++) {
			var attributes = arguments[ i ];
			for (var key in attributes) {
				result[key] = attributes[key];
			}
		}
		return result;
	}

	function decode (s) {
		return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);
	}

	function init (converter) {
		function api() {}

		function set (key, value, attributes) {
			if (typeof document === 'undefined') {
				return;
			}

			attributes = extend({
				path: '/'
			}, api.defaults, attributes);

			if (typeof attributes.expires === 'number') {
				attributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);
			}

			// We're using "expires" because "max-age" is not supported by IE
			attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';

			try {
				var result = JSON.stringify(value);
				if (/^[\{\[]/.test(result)) {
					value = result;
				}
			} catch (e) {}

			value = converter.write ?
				converter.write(value, key) :
				encodeURIComponent(String(value))
					.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);

			key = encodeURIComponent(String(key))
				.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)
				.replace(/[\(\)]/g, escape);

			var stringifiedAttributes = '';
			for (var attributeName in attributes) {
				if (!attributes[attributeName]) {
					continue;
				}
				stringifiedAttributes += '; ' + attributeName;
				if (attributes[attributeName] === true) {
					continue;
				}

				// Considers RFC 6265 section 5.2:
				// ...
				// 3.  If the remaining unparsed-attributes contains a %x3B (";")
				//     character:
				// Consume the characters of the unparsed-attributes up to,
				// not including, the first %x3B (";") character.
				// ...
				stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];
			}

			return (document.cookie = key + '=' + value + stringifiedAttributes);
		}

		function get (key, json) {
			if (typeof document === 'undefined') {
				return;
			}

			var jar = {};
			// To prevent the for loop in the first place assign an empty array
			// in case there are no cookies at all.
			var cookies = document.cookie ? document.cookie.split('; ') : [];
			var i = 0;

			for (; i < cookies.length; i++) {
				var parts = cookies[i].split('=');
				var cookie = parts.slice(1).join('=');

				if (!json && cookie.charAt(0) === '"') {
					cookie = cookie.slice(1, -1);
				}

				try {
					var name = decode(parts[0]);
					cookie = (converter.read || converter)(cookie, name) ||
						decode(cookie);

					if (json) {
						try {
							cookie = JSON.parse(cookie);
						} catch (e) {}
					}

					jar[name] = cookie;

					if (key === name) {
						break;
					}
				} catch (e) {}
			}

			return key ? jar[key] : jar;
		}

		api.set = set;
		api.get = function (key) {
			return get(key, false /* read as raw */);
		};
		api.getJSON = function (key) {
			return get(key, true /* read as json */);
		};
		api.remove = function (key, attributes) {
			set(key, '', extend(attributes, {
				expires: -1
			}));
		};

		api.defaults = {};

		api.withConverter = init;

		return api;
	}

	return init(function () {});
}));


/***/ }),

/***/ "./node_modules/local-storage-fallback/lib/CookieStorage.js":
/*!******************************************************************!*\
  !*** ./node_modules/local-storage-fallback/lib/CookieStorage.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.hasCookies = hasCookies;

var _cookie = __webpack_require__(/*! cookie */ "./node_modules/local-storage-fallback/node_modules/cookie/index.js");

var _cookie2 = _interopRequireDefault(_cookie);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var prefix = 'lS_';

var CookieStorage = function () {
  function CookieStorage() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, CookieStorage);

    this.cookieOptions = Object.assign({ path: '/' }, options);
    prefix = options.prefix === undefined ? prefix : options.prefix;
  }

  _createClass(CookieStorage, [{
    key: 'getItem',
    value: function getItem(key) {
      var cookies = _cookie2.default.parse(document.cookie);
      if (!cookies || !cookies.hasOwnProperty(prefix + key)) {
        return null;
      }
      return cookies[prefix + key];
    }
  }, {
    key: 'setItem',
    value: function setItem(key, value) {
      document.cookie = _cookie2.default.serialize(prefix + key, value, this.cookieOptions);
      return value;
    }
  }, {
    key: 'removeItem',
    value: function removeItem(key) {
      var options = Object.assign({}, this.cookieOptions, { maxAge: -1 });
      document.cookie = _cookie2.default.serialize(prefix + key, '', options);
      return null;
    }
  }, {
    key: 'clear',
    value: function clear() {
      var cookies = _cookie2.default.parse(document.cookie);
      for (var key in cookies) {
        if (key.indexOf(prefix) === 0) {
          this.removeItem(key.substr(prefix.length));
        }
      }

      return null;
    }
  }]);

  return CookieStorage;
}();

exports.default = CookieStorage;
function hasCookies() {
  var storage = new CookieStorage();

  try {
    var TEST_KEY = '__test';
    storage.setItem(TEST_KEY, '1');
    var value = storage.getItem(TEST_KEY);
    storage.removeItem(TEST_KEY);

    return value === '1';
  } catch (e) {
    return false;
  }
}

/***/ }),

/***/ "./node_modules/local-storage-fallback/lib/MemoryStorage.js":
/*!******************************************************************!*\
  !*** ./node_modules/local-storage-fallback/lib/MemoryStorage.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var MemoryStorage = function () {
  function MemoryStorage() {
    _classCallCheck(this, MemoryStorage);

    this._data = {};
  }

  _createClass(MemoryStorage, [{
    key: "getItem",
    value: function getItem(key) {
      return this._data.hasOwnProperty(key) ? this._data[key] : null;
    }
  }, {
    key: "setItem",
    value: function setItem(key, value) {
      return this._data[key] = String(value);
    }
  }, {
    key: "removeItem",
    value: function removeItem(key) {
      return delete this._data[key];
    }
  }, {
    key: "clear",
    value: function clear() {
      return this._data = {};
    }
  }]);

  return MemoryStorage;
}();

exports.default = MemoryStorage;

/***/ }),

/***/ "./node_modules/local-storage-fallback/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/local-storage-fallback/lib/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MemoryStorage = exports.CookieStorage = exports.isSupported = exports.storage = undefined;

var _isSupported = __webpack_require__(/*! ./isSupported */ "./node_modules/local-storage-fallback/lib/isSupported.js");

var _isSupported2 = _interopRequireDefault(_isSupported);

var _CookieStorage = __webpack_require__(/*! ./CookieStorage */ "./node_modules/local-storage-fallback/lib/CookieStorage.js");

var _CookieStorage2 = _interopRequireDefault(_CookieStorage);

var _MemoryStorage = __webpack_require__(/*! ./MemoryStorage */ "./node_modules/local-storage-fallback/lib/MemoryStorage.js");

var _MemoryStorage2 = _interopRequireDefault(_MemoryStorage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var storage = null;

if ((0, _isSupported2.default)('localStorage')) {
  // use localStorage
  exports.storage = storage = window.localStorage;
} else if ((0, _isSupported2.default)('sessionStorage')) {
  // use sessionStorage
  exports.storage = storage = window.sessionStorage;
} else if ((0, _isSupported2.default)('cookieStorage')) {
  // use cookies
  exports.storage = storage = new _CookieStorage2.default();
} else {
  // use memory
  exports.storage = storage = new _MemoryStorage2.default();
}

exports.default = storage;
exports.storage = storage;
exports.isSupported = _isSupported2.default;
exports.CookieStorage = _CookieStorage2.default;
exports.MemoryStorage = _MemoryStorage2.default;

/***/ }),

/***/ "./node_modules/local-storage-fallback/lib/isSupported.js":
/*!****************************************************************!*\
  !*** ./node_modules/local-storage-fallback/lib/isSupported.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isSupported;

var _CookieStorage = __webpack_require__(/*! ./CookieStorage */ "./node_modules/local-storage-fallback/lib/CookieStorage.js");

var TEST_KEY = '__test';

function hasStorage(name) {
  try {
    var storage = window[name];
    storage.setItem(TEST_KEY, '1');
    storage.removeItem(TEST_KEY);
    return true;
  } catch (e) {
    return false;
  }
}

function isSupported() {
  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'localStorage';

  var storage = String(name).replace(/storage$/i, '').toLowerCase();

  if (storage === 'local') {
    return hasStorage('localStorage');
  }

  if (storage === 'session') {
    return hasStorage('sessionStorage');
  }

  if (storage === 'cookie') {
    return (0, _CookieStorage.hasCookies)();
  }

  if (storage === 'memory') {
    return true;
  }

  throw new Error('Storage method `' + name + '` is not available.\n    Please use one of the following: localStorage, sessionStorage, cookieStorage, memoryStorage.');
}

/***/ }),

/***/ "./node_modules/local-storage-fallback/node_modules/cookie/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/local-storage-fallback/node_modules/cookie/index.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */



/**
 * Module exports.
 * @public
 */

exports.parse = parse;
exports.serialize = serialize;

/**
 * Module variables.
 * @private
 */

var decode = decodeURIComponent;
var encode = encodeURIComponent;
var pairSplitRegExp = /; */;

/**
 * RegExp to match field-content in RFC 7230 sec 3.2
 *
 * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
 * field-vchar   = VCHAR / obs-text
 * obs-text      = %x80-FF
 */

var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;

/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 *
 * @param {string} str
 * @param {object} [options]
 * @return {object}
 * @public
 */

function parse(str, options) {
  if (typeof str !== 'string') {
    throw new TypeError('argument str must be a string');
  }

  var obj = {}
  var opt = options || {};
  var pairs = str.split(pairSplitRegExp);
  var dec = opt.decode || decode;

  for (var i = 0; i < pairs.length; i++) {
    var pair = pairs[i];
    var eq_idx = pair.indexOf('=');

    // skip things that don't look like key=value
    if (eq_idx < 0) {
      continue;
    }

    var key = pair.substr(0, eq_idx).trim()
    var val = pair.substr(++eq_idx, pair.length).trim();

    // quoted values
    if ('"' == val[0]) {
      val = val.slice(1, -1);
    }

    // only assign once
    if (undefined == obj[key]) {
      obj[key] = tryDecode(val, dec);
    }
  }

  return obj;
}

/**
 * Serialize data into a cookie header.
 *
 * Serialize the a name value pair into a cookie string suitable for
 * http headers. An optional options object specified cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 *
 * @param {string} name
 * @param {string} val
 * @param {object} [options]
 * @return {string}
 * @public
 */

function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode;

  if (typeof enc !== 'function') {
    throw new TypeError('option encode is invalid');
  }

  if (!fieldContentRegExp.test(name)) {
    throw new TypeError('argument name is invalid');
  }

  var value = enc(val);

  if (value && !fieldContentRegExp.test(value)) {
    throw new TypeError('argument val is invalid');
  }

  var str = name + '=' + value;

  if (null != opt.maxAge) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');
    str += '; Max-Age=' + Math.floor(maxAge);
  }

  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError('option domain is invalid');
    }

    str += '; Domain=' + opt.domain;
  }

  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError('option path is invalid');
    }

    str += '; Path=' + opt.path;
  }

  if (opt.expires) {
    if (typeof opt.expires.toUTCString !== 'function') {
      throw new TypeError('option expires is invalid');
    }

    str += '; Expires=' + opt.expires.toUTCString();
  }

  if (opt.httpOnly) {
    str += '; HttpOnly';
  }

  if (opt.secure) {
    str += '; Secure';
  }

  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === 'string'
      ? opt.sameSite.toLowerCase() : opt.sameSite;

    switch (sameSite) {
      case true:
        str += '; SameSite=Strict';
        break;
      case 'lax':
        str += '; SameSite=Lax';
        break;
      case 'strict':
        str += '; SameSite=Strict';
        break;
      default:
        throw new TypeError('option sameSite is invalid');
    }
  }

  return str;
}

/**
 * Try decoding a string using a decoding function.
 *
 * @param {string} str
 * @param {function} decode
 * @private
 */

function tryDecode(str, decode) {
  try {
    return decode(str);
  } catch (e) {
    return str;
  }
}


/***/ }),

/***/ "./node_modules/lodash.memoize/index.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash.memoize/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** `Object#toString` result references. */
var funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var splice = arrayProto.splice;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result);
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Assign cache to `_.memoize`.
memoize.Cache = MapCache;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

module.exports = memoize;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/lodash.merge/index.js":
/*!********************************************!*\
  !*** ./node_modules/lodash.merge/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {/**
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    asyncTag = '[object AsyncFunction]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    nullTag = '[object Null]',
    objectTag = '[object Object]',
    proxyTag = '[object Proxy]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    undefinedTag = '[object Undefined]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    Symbol = root.Symbol,
    Uint8Array = root.Uint8Array,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
    getPrototype = overArg(Object.getPrototypeOf, Object),
    objectCreate = Object.create,
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice,
    symToStringTag = Symbol ? Symbol.toStringTag : undefined;

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
    nativeMax = Math.max,
    nativeNow = Date.now;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key) {
    stack || (stack = new Stack);
    if (isObject(srcValue)) {
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object, key),
      srcValue = safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      }
      else if (!isObject(objValue) || isFunction(objValue)) {
        newValue = initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  assignMergeValue(object, key, newValue);
}

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = merge;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/make-plural/umd/pluralCategories.js":
/*!**********************************************************!*\
  !*** ./node_modules/make-plural/umd/pluralCategories.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _cc = [
  {cardinal:["other"],ordinal:["other"]},
  {cardinal:["one","other"],ordinal:["other"]},
  {cardinal:["one","other"],ordinal:["one","other"]},
  {cardinal:["one","two","other"],ordinal:["other"]}
];

(function (root, pluralCategories) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (pluralCategories),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(this, {
af: _cc[1],
ak: _cc[1],
am: _cc[1],
ar: {cardinal:["zero","one","two","few","many","other"],ordinal:["other"]},
ars: {cardinal:["zero","one","two","few","many","other"],ordinal:["other"]},
as: {cardinal:["one","other"],ordinal:["one","two","few","many","other"]},
asa: _cc[1],
ast: _cc[1],
az: {cardinal:["one","other"],ordinal:["one","few","many","other"]},
be: {cardinal:["one","few","many","other"],ordinal:["few","other"]},
bem: _cc[1],
bez: _cc[1],
bg: _cc[1],
bh: _cc[1],
bm: _cc[0],
bn: {cardinal:["one","other"],ordinal:["one","two","few","many","other"]},
bo: _cc[0],
br: {cardinal:["one","two","few","many","other"],ordinal:["other"]},
brx: _cc[1],
bs: {cardinal:["one","few","other"],ordinal:["other"]},
ca: {cardinal:["one","other"],ordinal:["one","two","few","other"]},
ce: _cc[1],
cgg: _cc[1],
chr: _cc[1],
ckb: _cc[1],
cs: {cardinal:["one","few","many","other"],ordinal:["other"]},
cy: {cardinal:["zero","one","two","few","many","other"],ordinal:["zero","one","two","few","many","other"]},
da: _cc[1],
de: _cc[1],
dsb: {cardinal:["one","two","few","other"],ordinal:["other"]},
dv: _cc[1],
dz: _cc[0],
ee: _cc[1],
el: _cc[1],
en: {cardinal:["one","other"],ordinal:["one","two","few","other"]},
eo: _cc[1],
es: _cc[1],
et: _cc[1],
eu: _cc[1],
fa: _cc[1],
ff: _cc[1],
fi: _cc[1],
fil: _cc[2],
fo: _cc[1],
fr: _cc[2],
fur: _cc[1],
fy: _cc[1],
ga: {cardinal:["one","two","few","many","other"],ordinal:["one","other"]},
gd: {cardinal:["one","two","few","other"],ordinal:["one","two","few","other"]},
gl: _cc[1],
gsw: _cc[1],
gu: {cardinal:["one","other"],ordinal:["one","two","few","many","other"]},
guw: _cc[1],
gv: {cardinal:["one","two","few","many","other"],ordinal:["other"]},
ha: _cc[1],
haw: _cc[1],
he: {cardinal:["one","two","many","other"],ordinal:["other"]},
hi: {cardinal:["one","other"],ordinal:["one","two","few","many","other"]},
hr: {cardinal:["one","few","other"],ordinal:["other"]},
hsb: {cardinal:["one","two","few","other"],ordinal:["other"]},
hu: _cc[2],
hy: _cc[2],
ia: _cc[1],
id: _cc[0],
ig: _cc[0],
ii: _cc[0],
"in": _cc[0],
io: _cc[1],
is: _cc[1],
it: {cardinal:["one","other"],ordinal:["many","other"]},
iu: _cc[3],
iw: {cardinal:["one","two","many","other"],ordinal:["other"]},
ja: _cc[0],
jbo: _cc[0],
jgo: _cc[1],
ji: _cc[1],
jmc: _cc[1],
jv: _cc[0],
jw: _cc[0],
ka: {cardinal:["one","other"],ordinal:["one","many","other"]},
kab: _cc[1],
kaj: _cc[1],
kcg: _cc[1],
kde: _cc[0],
kea: _cc[0],
kk: {cardinal:["one","other"],ordinal:["many","other"]},
kkj: _cc[1],
kl: _cc[1],
km: _cc[0],
kn: _cc[1],
ko: _cc[0],
ks: _cc[1],
ksb: _cc[1],
ksh: {cardinal:["zero","one","other"],ordinal:["other"]},
ku: _cc[1],
kw: _cc[3],
ky: _cc[1],
lag: {cardinal:["zero","one","other"],ordinal:["other"]},
lb: _cc[1],
lg: _cc[1],
lkt: _cc[0],
ln: _cc[1],
lo: {cardinal:["other"],ordinal:["one","other"]},
lt: {cardinal:["one","few","many","other"],ordinal:["other"]},
lv: {cardinal:["zero","one","other"],ordinal:["other"]},
mas: _cc[1],
mg: _cc[1],
mgo: _cc[1],
mk: {cardinal:["one","other"],ordinal:["one","two","many","other"]},
ml: _cc[1],
mn: _cc[1],
mo: {cardinal:["one","few","other"],ordinal:["one","other"]},
mr: {cardinal:["one","other"],ordinal:["one","two","few","other"]},
ms: {cardinal:["other"],ordinal:["one","other"]},
mt: {cardinal:["one","few","many","other"],ordinal:["other"]},
my: _cc[0],
nah: _cc[1],
naq: _cc[3],
nb: _cc[1],
nd: _cc[1],
ne: _cc[2],
nl: _cc[1],
nn: _cc[1],
nnh: _cc[1],
no: _cc[1],
nqo: _cc[0],
nr: _cc[1],
nso: _cc[1],
ny: _cc[1],
nyn: _cc[1],
om: _cc[1],
or: {cardinal:["one","other"],ordinal:["one","two","few","many","other"]},
os: _cc[1],
pa: _cc[1],
pap: _cc[1],
pl: {cardinal:["one","few","many","other"],ordinal:["other"]},
prg: {cardinal:["zero","one","other"],ordinal:["other"]},
ps: _cc[1],
pt: _cc[1],
"pt-PT": _cc[1],
rm: _cc[1],
ro: {cardinal:["one","few","other"],ordinal:["one","other"]},
rof: _cc[1],
root: _cc[0],
ru: {cardinal:["one","few","many","other"],ordinal:["other"]},
rwk: _cc[1],
sah: _cc[0],
saq: _cc[1],
sc: {cardinal:["one","other"],ordinal:["many","other"]},
scn: {cardinal:["one","other"],ordinal:["many","other"]},
sd: _cc[1],
sdh: _cc[1],
se: _cc[3],
seh: _cc[1],
ses: _cc[0],
sg: _cc[0],
sh: {cardinal:["one","few","other"],ordinal:["other"]},
shi: {cardinal:["one","few","other"],ordinal:["other"]},
si: _cc[1],
sk: {cardinal:["one","few","many","other"],ordinal:["other"]},
sl: {cardinal:["one","two","few","other"],ordinal:["other"]},
sma: _cc[3],
smi: _cc[3],
smj: _cc[3],
smn: _cc[3],
sms: _cc[3],
sn: _cc[1],
so: _cc[1],
sq: {cardinal:["one","other"],ordinal:["one","many","other"]},
sr: {cardinal:["one","few","other"],ordinal:["other"]},
ss: _cc[1],
ssy: _cc[1],
st: _cc[1],
sv: _cc[2],
sw: _cc[1],
syr: _cc[1],
ta: _cc[1],
te: _cc[1],
teo: _cc[1],
th: _cc[0],
ti: _cc[1],
tig: _cc[1],
tk: {cardinal:["one","other"],ordinal:["few","other"]},
tl: _cc[2],
tn: _cc[1],
to: _cc[0],
tr: _cc[1],
ts: _cc[1],
tzm: _cc[1],
ug: _cc[1],
uk: {cardinal:["one","few","many","other"],ordinal:["few","other"]},
ur: _cc[1],
uz: _cc[1],
ve: _cc[1],
vi: {cardinal:["other"],ordinal:["one","other"]},
vo: _cc[1],
vun: _cc[1],
wa: _cc[1],
wae: _cc[1],
wo: _cc[0],
xh: _cc[1],
xog: _cc[1],
yi: _cc[1],
yo: _cc[0],
yue: _cc[0],
zh: _cc[0],
zu: _cc[1]
}));


/***/ }),

/***/ "./node_modules/make-plural/umd/plurals.js":
/*!*************************************************!*\
  !*** ./node_modules/make-plural/umd/plurals.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _cp = [
function(n, ord) {
  if (ord) return 'other';
  return 'other';
},
function(n, ord) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},
function(n, ord) {
  if (ord) return 'other';
  return ((n == 0
          || n == 1)) ? 'one' : 'other';
},
function(n, ord) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
}
];

(function (root, plurals) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (plurals),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(this, {
af: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ak: function(n, ord
) {
  if (ord) return 'other';
  return ((n == 0
          || n == 1)) ? 'one' : 'other';
},

am: function(n, ord
) {
  if (ord) return 'other';
  return (n >= 0 && n <= 1) ? 'one' : 'other';
},

ar: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n,
      n100 = t0 && s[0].slice(-2);
  if (ord) return 'other';
  return (n == 0) ? 'zero'
      : (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : ((n100 >= 3 && n100 <= 10)) ? 'few'
      : ((n100 >= 11 && n100 <= 99)) ? 'many'
      : 'other';
},

ars: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n,
      n100 = t0 && s[0].slice(-2);
  if (ord) return 'other';
  return (n == 0) ? 'zero'
      : (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : ((n100 >= 3 && n100 <= 10)) ? 'few'
      : ((n100 >= 11 && n100 <= 99)) ? 'many'
      : 'other';
},

as: function(n, ord
) {
  if (ord) return ((n == 1 || n == 5 || n == 7 || n == 8 || n == 9
          || n == 10)) ? 'one'
      : ((n == 2
          || n == 3)) ? 'two'
      : (n == 4) ? 'few'
      : (n == 6) ? 'many'
      : 'other';
  return (n >= 0 && n <= 1) ? 'one' : 'other';
},

asa: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ast: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

az: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], i10 = i.slice(-1),
      i100 = i.slice(-2), i1000 = i.slice(-3);
  if (ord) return ((i10 == 1 || i10 == 2 || i10 == 5 || i10 == 7 || i10 == 8)
          || (i100 == 20 || i100 == 50 || i100 == 70
          || i100 == 80)) ? 'one'
      : ((i10 == 3 || i10 == 4) || (i1000 == 100 || i1000 == 200
          || i1000 == 300 || i1000 == 400 || i1000 == 500 || i1000 == 600 || i1000 == 700
          || i1000 == 800
          || i1000 == 900)) ? 'few'
      : (i == 0 || i10 == 6 || (i100 == 40 || i100 == 60
          || i100 == 90)) ? 'many'
      : 'other';
  return (n == 1) ? 'one' : 'other';
},

be: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);
  if (ord) return ((n10 == 2
          || n10 == 3) && n100 != 12 && n100 != 13) ? 'few' : 'other';
  return (n10 == 1 && n100 != 11) ? 'one'
      : ((n10 >= 2 && n10 <= 4) && (n100 < 12
          || n100 > 14)) ? 'few'
      : (t0 && n10 == 0 || (n10 >= 5 && n10 <= 9)
          || (n100 >= 11 && n100 <= 14)) ? 'many'
      : 'other';
},

bem: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

bez: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

bg: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

bh: function(n, ord
) {
  if (ord) return 'other';
  return ((n == 0
          || n == 1)) ? 'one' : 'other';
},

bm: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

bn: function(n, ord
) {
  if (ord) return ((n == 1 || n == 5 || n == 7 || n == 8 || n == 9
          || n == 10)) ? 'one'
      : ((n == 2
          || n == 3)) ? 'two'
      : (n == 4) ? 'few'
      : (n == 6) ? 'many'
      : 'other';
  return (n >= 0 && n <= 1) ? 'one' : 'other';
},

bo: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

br: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2),
      n1000000 = t0 && s[0].slice(-6);
  if (ord) return 'other';
  return (n10 == 1 && n100 != 11 && n100 != 71 && n100 != 91) ? 'one'
      : (n10 == 2 && n100 != 12 && n100 != 72 && n100 != 92) ? 'two'
      : (((n10 == 3 || n10 == 4) || n10 == 9) && (n100 < 10
          || n100 > 19) && (n100 < 70 || n100 > 79) && (n100 < 90
          || n100 > 99)) ? 'few'
      : (n != 0 && t0 && n1000000 == 0) ? 'many'
      : 'other';
},

brx: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

bs: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],
      i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);
  if (ord) return 'other';
  return (v0 && i10 == 1 && i100 != 11
          || f10 == 1 && f100 != 11) ? 'one'
      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14)
          || (f10 >= 2 && f10 <= 4) && (f100 < 12
          || f100 > 14)) ? 'few'
      : 'other';
},

ca: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return ((n == 1
          || n == 3)) ? 'one'
      : (n == 2) ? 'two'
      : (n == 4) ? 'few'
      : 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

ce: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

cgg: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

chr: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ckb: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

cs: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one'
      : ((i >= 2 && i <= 4) && v0) ? 'few'
      : (!v0) ? 'many'
      : 'other';
},

cy: function(n, ord
) {
  if (ord) return ((n == 0 || n == 7 || n == 8
          || n == 9)) ? 'zero'
      : (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : ((n == 3
          || n == 4)) ? 'few'
      : ((n == 5
          || n == 6)) ? 'many'
      : 'other';
  return (n == 0) ? 'zero'
      : (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : (n == 3) ? 'few'
      : (n == 6) ? 'many'
      : 'other';
},

da: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], t0 = Number(s[0]) == n;
  if (ord) return 'other';
  return (n == 1 || !t0 && (i == 0
          || i == 1)) ? 'one' : 'other';
},

de: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

dsb: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],
      i100 = i.slice(-2), f100 = f.slice(-2);
  if (ord) return 'other';
  return (v0 && i100 == 1
          || f100 == 1) ? 'one'
      : (v0 && i100 == 2
          || f100 == 2) ? 'two'
      : (v0 && (i100 == 3 || i100 == 4) || (f100 == 3
          || f100 == 4)) ? 'few'
      : 'other';
},

dv: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

dz: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

ee: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

el: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

en: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);
  if (ord) return (n10 == 1 && n100 != 11) ? 'one'
      : (n10 == 2 && n100 != 12) ? 'two'
      : (n10 == 3 && n100 != 13) ? 'few'
      : 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

eo: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

es: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

et: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

eu: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

fa: function(n, ord
) {
  if (ord) return 'other';
  return (n >= 0 && n <= 1) ? 'one' : 'other';
},

ff: function(n, ord
) {
  if (ord) return 'other';
  return (n >= 0 && n < 2) ? 'one' : 'other';
},

fi: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

fil: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],
      i10 = i.slice(-1), f10 = f.slice(-1);
  if (ord) return (n == 1) ? 'one' : 'other';
  return (v0 && (i == 1 || i == 2 || i == 3)
          || v0 && i10 != 4 && i10 != 6 && i10 != 9
          || !v0 && f10 != 4 && f10 != 6 && f10 != 9) ? 'one' : 'other';
},

fo: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

fr: function(n, ord
) {
  if (ord) return (n == 1) ? 'one' : 'other';
  return (n >= 0 && n < 2) ? 'one' : 'other';
},

fur: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

fy: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

ga: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n;
  if (ord) return (n == 1) ? 'one' : 'other';
  return (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : ((t0 && n >= 3 && n <= 6)) ? 'few'
      : ((t0 && n >= 7 && n <= 10)) ? 'many'
      : 'other';
},

gd: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n;
  if (ord) return ((n == 1
          || n == 11)) ? 'one'
      : ((n == 2
          || n == 12)) ? 'two'
      : ((n == 3
          || n == 13)) ? 'few'
      : 'other';
  return ((n == 1
          || n == 11)) ? 'one'
      : ((n == 2
          || n == 12)) ? 'two'
      : (((t0 && n >= 3 && n <= 10)
          || (t0 && n >= 13 && n <= 19))) ? 'few'
      : 'other';
},

gl: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

gsw: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

gu: function(n, ord
) {
  if (ord) return (n == 1) ? 'one'
      : ((n == 2
          || n == 3)) ? 'two'
      : (n == 4) ? 'few'
      : (n == 6) ? 'many'
      : 'other';
  return (n >= 0 && n <= 1) ? 'one' : 'other';
},

guw: function(n, ord
) {
  if (ord) return 'other';
  return ((n == 0
          || n == 1)) ? 'one' : 'other';
},

gv: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1),
      i100 = i.slice(-2);
  if (ord) return 'other';
  return (v0 && i10 == 1) ? 'one'
      : (v0 && i10 == 2) ? 'two'
      : (v0 && (i100 == 0 || i100 == 20 || i100 == 40 || i100 == 60
          || i100 == 80)) ? 'few'
      : (!v0) ? 'many'
      : 'other';
},

ha: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

haw: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

he: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], v0 = !s[1], t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1);
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one'
      : (i == 2 && v0) ? 'two'
      : (v0 && (n < 0
          || n > 10) && t0 && n10 == 0) ? 'many'
      : 'other';
},

hi: function(n, ord
) {
  if (ord) return (n == 1) ? 'one'
      : ((n == 2
          || n == 3)) ? 'two'
      : (n == 4) ? 'few'
      : (n == 6) ? 'many'
      : 'other';
  return (n >= 0 && n <= 1) ? 'one' : 'other';
},

hr: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],
      i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);
  if (ord) return 'other';
  return (v0 && i10 == 1 && i100 != 11
          || f10 == 1 && f100 != 11) ? 'one'
      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14)
          || (f10 >= 2 && f10 <= 4) && (f100 < 12
          || f100 > 14)) ? 'few'
      : 'other';
},

hsb: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],
      i100 = i.slice(-2), f100 = f.slice(-2);
  if (ord) return 'other';
  return (v0 && i100 == 1
          || f100 == 1) ? 'one'
      : (v0 && i100 == 2
          || f100 == 2) ? 'two'
      : (v0 && (i100 == 3 || i100 == 4) || (f100 == 3
          || f100 == 4)) ? 'few'
      : 'other';
},

hu: function(n, ord
) {
  if (ord) return ((n == 1
          || n == 5)) ? 'one' : 'other';
  return (n == 1) ? 'one' : 'other';
},

hy: function(n, ord
) {
  if (ord) return (n == 1) ? 'one' : 'other';
  return (n >= 0 && n < 2) ? 'one' : 'other';
},

ia: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

id: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

ig: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

ii: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

"in": function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

io: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

is: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], t0 = Number(s[0]) == n,
      i10 = i.slice(-1), i100 = i.slice(-2);
  if (ord) return 'other';
  return (t0 && i10 == 1 && i100 != 11
          || !t0) ? 'one' : 'other';
},

it: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return ((n == 11 || n == 8 || n == 80
          || n == 800)) ? 'many' : 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

iu: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : 'other';
},

iw: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], v0 = !s[1], t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1);
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one'
      : (i == 2 && v0) ? 'two'
      : (v0 && (n < 0
          || n > 10) && t0 && n10 == 0) ? 'many'
      : 'other';
},

ja: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

jbo: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

jgo: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ji: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

jmc: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

jv: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

jw: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

ka: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], i100 = i.slice(-2);
  if (ord) return (i == 1) ? 'one'
      : (i == 0 || ((i100 >= 2 && i100 <= 20) || i100 == 40 || i100 == 60
          || i100 == 80)) ? 'many'
      : 'other';
  return (n == 1) ? 'one' : 'other';
},

kab: function(n, ord
) {
  if (ord) return 'other';
  return (n >= 0 && n < 2) ? 'one' : 'other';
},

kaj: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

kcg: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

kde: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

kea: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

kk: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1);
  if (ord) return (n10 == 6 || n10 == 9
          || t0 && n10 == 0 && n != 0) ? 'many' : 'other';
  return (n == 1) ? 'one' : 'other';
},

kkj: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

kl: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

km: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

kn: function(n, ord
) {
  if (ord) return 'other';
  return (n >= 0 && n <= 1) ? 'one' : 'other';
},

ko: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

ks: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ksb: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ksh: function(n, ord
) {
  if (ord) return 'other';
  return (n == 0) ? 'zero'
      : (n == 1) ? 'one'
      : 'other';
},

ku: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

kw: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : 'other';
},

ky: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

lag: function(n, ord
) {
  var s = String(n).split('.'), i = s[0];
  if (ord) return 'other';
  return (n == 0) ? 'zero'
      : ((i == 0
          || i == 1) && n != 0) ? 'one'
      : 'other';
},

lb: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

lg: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

lkt: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

ln: function(n, ord
) {
  if (ord) return 'other';
  return ((n == 0
          || n == 1)) ? 'one' : 'other';
},

lo: function(n, ord
) {
  if (ord) return (n == 1) ? 'one' : 'other';
  return 'other';
},

lt: function(n, ord
) {
  var s = String(n).split('.'), f = s[1] || '', t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);
  if (ord) return 'other';
  return (n10 == 1 && (n100 < 11
          || n100 > 19)) ? 'one'
      : ((n10 >= 2 && n10 <= 9) && (n100 < 11
          || n100 > 19)) ? 'few'
      : (f != 0) ? 'many'
      : 'other';
},

lv: function(n, ord
) {
  var s = String(n).split('.'), f = s[1] || '', v = f.length,
      t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1),
      n100 = t0 && s[0].slice(-2), f100 = f.slice(-2), f10 = f.slice(-1);
  if (ord) return 'other';
  return (t0 && n10 == 0 || (n100 >= 11 && n100 <= 19)
          || v == 2 && (f100 >= 11 && f100 <= 19)) ? 'zero'
      : (n10 == 1 && n100 != 11 || v == 2 && f10 == 1 && f100 != 11
          || v != 2 && f10 == 1) ? 'one'
      : 'other';
},

mas: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

mg: function(n, ord
) {
  if (ord) return 'other';
  return ((n == 0
          || n == 1)) ? 'one' : 'other';
},

mgo: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

mk: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],
      i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);
  if (ord) return (i10 == 1 && i100 != 11) ? 'one'
      : (i10 == 2 && i100 != 12) ? 'two'
      : ((i10 == 7
          || i10 == 8) && i100 != 17 && i100 != 18) ? 'many'
      : 'other';
  return (v0 && i10 == 1 && i100 != 11
          || f10 == 1 && f100 != 11) ? 'one' : 'other';
},

ml: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

mn: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

mo: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,
      n100 = t0 && s[0].slice(-2);
  if (ord) return (n == 1) ? 'one' : 'other';
  return (n == 1 && v0) ? 'one'
      : (!v0 || n == 0
          || n != 1 && (n100 >= 1 && n100 <= 19)) ? 'few'
      : 'other';
},

mr: function(n, ord
) {
  if (ord) return (n == 1) ? 'one'
      : ((n == 2
          || n == 3)) ? 'two'
      : (n == 4) ? 'few'
      : 'other';
  return (n >= 0 && n <= 1) ? 'one' : 'other';
},

ms: function(n, ord
) {
  if (ord) return (n == 1) ? 'one' : 'other';
  return 'other';
},

mt: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n,
      n100 = t0 && s[0].slice(-2);
  if (ord) return 'other';
  return (n == 1) ? 'one'
      : (n == 0
          || (n100 >= 2 && n100 <= 10)) ? 'few'
      : ((n100 >= 11 && n100 <= 19)) ? 'many'
      : 'other';
},

my: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

nah: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

naq: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : 'other';
},

nb: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

nd: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ne: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n;
  if (ord) return ((t0 && n >= 1 && n <= 4)) ? 'one' : 'other';
  return (n == 1) ? 'one' : 'other';
},

nl: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

nn: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

nnh: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

no: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

nqo: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

nr: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

nso: function(n, ord
) {
  if (ord) return 'other';
  return ((n == 0
          || n == 1)) ? 'one' : 'other';
},

ny: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

nyn: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

om: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

or: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n;
  if (ord) return ((n == 1 || n == 5
          || (t0 && n >= 7 && n <= 9))) ? 'one'
      : ((n == 2
          || n == 3)) ? 'two'
      : (n == 4) ? 'few'
      : (n == 6) ? 'many'
      : 'other';
  return (n == 1) ? 'one' : 'other';
},

os: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

pa: function(n, ord
) {
  if (ord) return 'other';
  return ((n == 0
          || n == 1)) ? 'one' : 'other';
},

pap: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

pl: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1),
      i100 = i.slice(-2);
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one'
      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12
          || i100 > 14)) ? 'few'
      : (v0 && i != 1 && (i10 == 0 || i10 == 1)
          || v0 && (i10 >= 5 && i10 <= 9)
          || v0 && (i100 >= 12 && i100 <= 14)) ? 'many'
      : 'other';
},

prg: function(n, ord
) {
  var s = String(n).split('.'), f = s[1] || '', v = f.length,
      t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1),
      n100 = t0 && s[0].slice(-2), f100 = f.slice(-2), f10 = f.slice(-1);
  if (ord) return 'other';
  return (t0 && n10 == 0 || (n100 >= 11 && n100 <= 19)
          || v == 2 && (f100 >= 11 && f100 <= 19)) ? 'zero'
      : (n10 == 1 && n100 != 11 || v == 2 && f10 == 1 && f100 != 11
          || v != 2 && f10 == 1) ? 'one'
      : 'other';
},

ps: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

pt: function(n, ord
) {
  var s = String(n).split('.'), i = s[0];
  if (ord) return 'other';
  return ((i == 0
          || i == 1)) ? 'one' : 'other';
},

"pt-PT": function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

rm: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ro: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,
      n100 = t0 && s[0].slice(-2);
  if (ord) return (n == 1) ? 'one' : 'other';
  return (n == 1 && v0) ? 'one'
      : (!v0 || n == 0
          || n != 1 && (n100 >= 1 && n100 <= 19)) ? 'few'
      : 'other';
},

rof: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

root: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

ru: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1),
      i100 = i.slice(-2);
  if (ord) return 'other';
  return (v0 && i10 == 1 && i100 != 11) ? 'one'
      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12
          || i100 > 14)) ? 'few'
      : (v0 && i10 == 0 || v0 && (i10 >= 5 && i10 <= 9)
          || v0 && (i100 >= 11 && i100 <= 14)) ? 'many'
      : 'other';
},

rwk: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

sah: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

saq: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

sc: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return ((n == 11 || n == 8 || n == 80
          || n == 800)) ? 'many' : 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

scn: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return ((n == 11 || n == 8 || n == 80
          || n == 800)) ? 'many' : 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

sd: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

sdh: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

se: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : 'other';
},

seh: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ses: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

sg: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

sh: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],
      i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);
  if (ord) return 'other';
  return (v0 && i10 == 1 && i100 != 11
          || f10 == 1 && f100 != 11) ? 'one'
      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14)
          || (f10 >= 2 && f10 <= 4) && (f100 < 12
          || f100 > 14)) ? 'few'
      : 'other';
},

shi: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n;
  if (ord) return 'other';
  return (n >= 0 && n <= 1) ? 'one'
      : ((t0 && n >= 2 && n <= 10)) ? 'few'
      : 'other';
},

si: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], f = s[1] || '';
  if (ord) return 'other';
  return ((n == 0 || n == 1)
          || i == 0 && f == 1) ? 'one' : 'other';
},

sk: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one'
      : ((i >= 2 && i <= 4) && v0) ? 'few'
      : (!v0) ? 'many'
      : 'other';
},

sl: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], v0 = !s[1], i100 = i.slice(-2);
  if (ord) return 'other';
  return (v0 && i100 == 1) ? 'one'
      : (v0 && i100 == 2) ? 'two'
      : (v0 && (i100 == 3 || i100 == 4)
          || !v0) ? 'few'
      : 'other';
},

sma: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : 'other';
},

smi: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : 'other';
},

smj: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : 'other';
},

smn: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : 'other';
},

sms: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one'
      : (n == 2) ? 'two'
      : 'other';
},

sn: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

so: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

sq: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);
  if (ord) return (n == 1) ? 'one'
      : (n10 == 4 && n100 != 14) ? 'many'
      : 'other';
  return (n == 1) ? 'one' : 'other';
},

sr: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],
      i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);
  if (ord) return 'other';
  return (v0 && i10 == 1 && i100 != 11
          || f10 == 1 && f100 != 11) ? 'one'
      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14)
          || (f10 >= 2 && f10 <= 4) && (f100 < 12
          || f100 > 14)) ? 'few'
      : 'other';
},

ss: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ssy: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

st: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

sv: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);
  if (ord) return ((n10 == 1
          || n10 == 2) && n100 != 11 && n100 != 12) ? 'one' : 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

sw: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

syr: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ta: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

te: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

teo: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

th: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

ti: function(n, ord
) {
  if (ord) return 'other';
  return ((n == 0
          || n == 1)) ? 'one' : 'other';
},

tig: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

tk: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1);
  if (ord) return ((n10 == 6 || n10 == 9)
          || n == 10) ? 'few' : 'other';
  return (n == 1) ? 'one' : 'other';
},

tl: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],
      i10 = i.slice(-1), f10 = f.slice(-1);
  if (ord) return (n == 1) ? 'one' : 'other';
  return (v0 && (i == 1 || i == 2 || i == 3)
          || v0 && i10 != 4 && i10 != 6 && i10 != 9
          || !v0 && f10 != 4 && f10 != 6 && f10 != 9) ? 'one' : 'other';
},

tn: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

to: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

tr: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ts: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

tzm: function(n, ord
) {
  var s = String(n).split('.'), t0 = Number(s[0]) == n;
  if (ord) return 'other';
  return ((n == 0 || n == 1)
          || (t0 && n >= 11 && n <= 99)) ? 'one' : 'other';
},

ug: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

uk: function(n, ord
) {
  var s = String(n).split('.'), i = s[0], v0 = !s[1], t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), i10 = i.slice(-1),
      i100 = i.slice(-2);
  if (ord) return (n10 == 3 && n100 != 13) ? 'few' : 'other';
  return (v0 && i10 == 1 && i100 != 11) ? 'one'
      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12
          || i100 > 14)) ? 'few'
      : (v0 && i10 == 0 || v0 && (i10 >= 5 && i10 <= 9)
          || v0 && (i100 >= 11 && i100 <= 14)) ? 'many'
      : 'other';
},

ur: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

uz: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

ve: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

vi: function(n, ord
) {
  if (ord) return (n == 1) ? 'one' : 'other';
  return 'other';
},

vo: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

vun: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

wa: function(n, ord
) {
  if (ord) return 'other';
  return ((n == 0
          || n == 1)) ? 'one' : 'other';
},

wae: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

wo: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

xh: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

xog: function(n, ord
) {
  if (ord) return 'other';
  return (n == 1) ? 'one' : 'other';
},

yi: function(n, ord
) {
  var s = String(n).split('.'), v0 = !s[1];
  if (ord) return 'other';
  return (n == 1 && v0) ? 'one' : 'other';
},

yo: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

yue: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

zh: function(n, ord
) {
  if (ord) return 'other';
  return 'other';
},

zu: function(n, ord
) {
  if (ord) return 'other';
  return (n >= 0 && n <= 1) ? 'one' : 'other';
}
}));


/***/ }),

/***/ "./node_modules/messageformat-parser/parser.js":
/*!*****************************************************!*\
  !*** ./node_modules/messageformat-parser/parser.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * Generated by PEG.js 0.10.0.
 *
 * http://pegjs.org/
 */



function peg$subclass(child, parent) {
  function ctor() { this.constructor = child; }
  ctor.prototype = parent.prototype;
  child.prototype = new ctor();
}

function peg$SyntaxError(message, expected, found, location) {
  this.message  = message;
  this.expected = expected;
  this.found    = found;
  this.location = location;
  this.name     = "SyntaxError";

  if (typeof Error.captureStackTrace === "function") {
    Error.captureStackTrace(this, peg$SyntaxError);
  }
}

peg$subclass(peg$SyntaxError, Error);

peg$SyntaxError.buildMessage = function(expected, found) {
  var DESCRIBE_EXPECTATION_FNS = {
        literal: function(expectation) {
          return "\"" + literalEscape(expectation.text) + "\"";
        },

        "class": function(expectation) {
          var escapedParts = "",
              i;

          for (i = 0; i < expectation.parts.length; i++) {
            escapedParts += expectation.parts[i] instanceof Array
              ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1])
              : classEscape(expectation.parts[i]);
          }

          return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
        },

        any: function(expectation) {
          return "any character";
        },

        end: function(expectation) {
          return "end of input";
        },

        other: function(expectation) {
          return expectation.description;
        }
      };

  function hex(ch) {
    return ch.charCodeAt(0).toString(16).toUpperCase();
  }

  function literalEscape(s) {
    return s
      .replace(/\\/g, '\\\\')
      .replace(/"/g,  '\\"')
      .replace(/\0/g, '\\0')
      .replace(/\t/g, '\\t')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r')
      .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
  }

  function classEscape(s) {
    return s
      .replace(/\\/g, '\\\\')
      .replace(/\]/g, '\\]')
      .replace(/\^/g, '\\^')
      .replace(/-/g,  '\\-')
      .replace(/\0/g, '\\0')
      .replace(/\t/g, '\\t')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r')
      .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
  }

  function describeExpectation(expectation) {
    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
  }

  function describeExpected(expected) {
    var descriptions = new Array(expected.length),
        i, j;

    for (i = 0; i < expected.length; i++) {
      descriptions[i] = describeExpectation(expected[i]);
    }

    descriptions.sort();

    if (descriptions.length > 0) {
      for (i = 1, j = 1; i < descriptions.length; i++) {
        if (descriptions[i - 1] !== descriptions[i]) {
          descriptions[j] = descriptions[i];
          j++;
        }
      }
      descriptions.length = j;
    }

    switch (descriptions.length) {
      case 1:
        return descriptions[0];

      case 2:
        return descriptions[0] + " or " + descriptions[1];

      default:
        return descriptions.slice(0, -1).join(", ")
          + ", or "
          + descriptions[descriptions.length - 1];
    }
  }

  function describeFound(found) {
    return found ? "\"" + literalEscape(found) + "\"" : "end of input";
  }

  return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
};

function peg$parse(input, options) {
  options = options !== void 0 ? options : {};

  var peg$FAILED = {},

      peg$startRuleFunctions = { start: peg$parsestart },
      peg$startRuleFunction  = peg$parsestart,

      peg$c0 = "#",
      peg$c1 = peg$literalExpectation("#", false),
      peg$c2 = function() { return inPlural[0]; },
      peg$c3 = function() { return { type: 'octothorpe' }; },
      peg$c4 = function(str) { return str.join(''); },
      peg$c5 = "{",
      peg$c6 = peg$literalExpectation("{", false),
      peg$c7 = "}",
      peg$c8 = peg$literalExpectation("}", false),
      peg$c9 = function(arg) {
          return {
            type: 'argument',
            arg: arg
          };
        },
      peg$c10 = ",",
      peg$c11 = peg$literalExpectation(",", false),
      peg$c12 = "select",
      peg$c13 = peg$literalExpectation("select", false),
      peg$c14 = function(arg, m) { if (options.strict) { inPlural.unshift(false); } return m; },
      peg$c15 = function(arg, cases) {
          if (options.strict) inPlural.shift()
          return {
            type: 'select',
            arg: arg,
            cases: cases
          };
        },
      peg$c16 = "plural",
      peg$c17 = peg$literalExpectation("plural", false),
      peg$c18 = "selectordinal",
      peg$c19 = peg$literalExpectation("selectordinal", false),
      peg$c20 = function(arg, m) { inPlural.unshift(true); return m; },
      peg$c21 = function(arg, type, offset, cases) {
          var ls = ((type === 'selectordinal') ? options.ordinal : options.cardinal)
                   || ['zero', 'one', 'two', 'few', 'many', 'other'];
          if (ls && ls.length) cases.forEach(function(c) {
            if (isNaN(c.key) && ls.indexOf(c.key) < 0) throw new Error(
              'Invalid key `' + c.key + '` for argument `' + arg + '`.' +
              ' Valid ' + type + ' keys for this locale are `' + ls.join('`, `') +
              '`, and explicit keys like `=0`.');
          });
          inPlural.shift()
          return {
            type: type,
            arg: arg,
            offset: offset || 0,
            cases: cases
          };
        },
      peg$c22 = function(arg, key, param) {
          return {
            type: 'function',
            arg: arg,
            key: key,
            param: param
          };
        },
      peg$c23 = peg$otherExpectation("identifier"),
      peg$c24 = /^[^\t-\r \x85\u200E\u200F\u2028\u2029!-\/:-@[-\^`{-~\xA1-\xA7\xA9\xAB\xAC\xAE\xB0\xB1\xB6\xBB\xBF\xD7\xF7\u2010-\u2027\u2030-\u203E\u2041-\u2053\u2055-\u205E\u2190-\u245F\u2500-\u2775\u2794-\u2BFF\u2E00-\u2E7F\u3001-\u3003\u3008-\u3020\u3030\uFD3E\uFD3F\uFE45\uFE46]/,
      peg$c25 = peg$classExpectation([["\t", "\r"], " ", "\x85", "\u200E", "\u200F", "\u2028", "\u2029", ["!", "/"], [":", "@"], ["[", "^"], "`", ["{", "~"], ["\xA1", "\xA7"], "\xA9", "\xAB", "\xAC", "\xAE", "\xB0", "\xB1", "\xB6", "\xBB", "\xBF", "\xD7", "\xF7", ["\u2010", "\u2027"], ["\u2030", "\u203E"], ["\u2041", "\u2053"], ["\u2055", "\u205E"], ["\u2190", "\u245F"], ["\u2500", "\u2775"], ["\u2794", "\u2BFF"], ["\u2E00", "\u2E7F"], ["\u3001", "\u3003"], ["\u3008", "\u3020"], "\u3030", "\uFD3E", "\uFD3F", "\uFE45", "\uFE46"], true, false),
      peg$c26 = function(key, tokens) { return { key: key, tokens: tokens }; },
      peg$c27 = function(tokens) { return tokens; },
      peg$c28 = peg$otherExpectation("plural offset"),
      peg$c29 = "offset",
      peg$c30 = peg$literalExpectation("offset", false),
      peg$c31 = ":",
      peg$c32 = peg$literalExpectation(":", false),
      peg$c33 = function(d) { return d; },
      peg$c34 = "=",
      peg$c35 = peg$literalExpectation("=", false),
      peg$c36 = "number",
      peg$c37 = peg$literalExpectation("number", false),
      peg$c38 = "date",
      peg$c39 = peg$literalExpectation("date", false),
      peg$c40 = "time",
      peg$c41 = peg$literalExpectation("time", false),
      peg$c42 = "spellout",
      peg$c43 = peg$literalExpectation("spellout", false),
      peg$c44 = "ordinal",
      peg$c45 = peg$literalExpectation("ordinal", false),
      peg$c46 = "duration",
      peg$c47 = peg$literalExpectation("duration", false),
      peg$c48 = function(key) {
            if (options.strict || /^\d/.test(key)) return false
            switch (key.toLowerCase()) {
              case 'select':
              case 'plural':
              case 'selectordinal':
                return false
              default:
                return true
            }
          },
      peg$c49 = function(key) { return key },
      peg$c50 = function(tokens) { return !options.strict },
      peg$c51 = function(tokens) { return { tokens: tokens } },
      peg$c52 = function(parts) { return { tokens: [parts.join('')] } },
      peg$c53 = peg$otherExpectation("a valid (strict) function parameter"),
      peg$c54 = /^[^'{}]/,
      peg$c55 = peg$classExpectation(["'", "{", "}"], true, false),
      peg$c56 = function(p) { return p.join('') },
      peg$c57 = "'",
      peg$c58 = peg$literalExpectation("'", false),
      peg$c59 = function(quoted) { return quoted },
      peg$c60 = function(p) { return '{' + p.join('') + '}' },
      peg$c61 = peg$otherExpectation("doubled apostrophe"),
      peg$c62 = "''",
      peg$c63 = peg$literalExpectation("''", false),
      peg$c64 = function() { return "'"; },
      peg$c65 = /^[^']/,
      peg$c66 = peg$classExpectation(["'"], true, false),
      peg$c67 = "'{",
      peg$c68 = peg$literalExpectation("'{", false),
      peg$c69 = function(str) { return '\u007B'+str.join(''); },
      peg$c70 = "'}",
      peg$c71 = peg$literalExpectation("'}", false),
      peg$c72 = function(str) { return '\u007D'+str.join(''); },
      peg$c73 = peg$otherExpectation("escaped string"),
      peg$c74 = "'#",
      peg$c75 = peg$literalExpectation("'#", false),
      peg$c76 = function(str) { return "#"+str.join(''); },
      peg$c77 = function(quotedOcto) { return quotedOcto[0]; },
      peg$c78 = peg$otherExpectation("plain char"),
      peg$c79 = /^[^{}#\0-\x08\x0E-\x1F\x7F]/,
      peg$c80 = peg$classExpectation(["{", "}", "#", ["\0", "\b"], ["\x0E", "\x1F"], "\x7F"], true, false),
      peg$c81 = function(octo) { return !inPlural[0]; },
      peg$c82 = function(octo) { return octo; },
      peg$c83 = peg$otherExpectation("integer"),
      peg$c84 = /^[0-9]/,
      peg$c85 = peg$classExpectation([["0", "9"]], false, false),
      peg$c86 = peg$otherExpectation("white space"),
      peg$c87 = /^[\t-\r \x85\u200E\u200F\u2028\u2029]/,
      peg$c88 = peg$classExpectation([["\t", "\r"], " ", "\x85", "\u200E", "\u200F", "\u2028", "\u2029"], false, false),

      peg$currPos          = 0,
      peg$savedPos         = 0,
      peg$posDetailsCache  = [{ line: 1, column: 1 }],
      peg$maxFailPos       = 0,
      peg$maxFailExpected  = [],
      peg$silentFails      = 0,

      peg$result;

  if ("startRule" in options) {
    if (!(options.startRule in peg$startRuleFunctions)) {
      throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
    }

    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
  }

  function text() {
    return input.substring(peg$savedPos, peg$currPos);
  }

  function location() {
    return peg$computeLocation(peg$savedPos, peg$currPos);
  }

  function expected(description, location) {
    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

    throw peg$buildStructuredError(
      [peg$otherExpectation(description)],
      input.substring(peg$savedPos, peg$currPos),
      location
    );
  }

  function error(message, location) {
    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

    throw peg$buildSimpleError(message, location);
  }

  function peg$literalExpectation(text, ignoreCase) {
    return { type: "literal", text: text, ignoreCase: ignoreCase };
  }

  function peg$classExpectation(parts, inverted, ignoreCase) {
    return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
  }

  function peg$anyExpectation() {
    return { type: "any" };
  }

  function peg$endExpectation() {
    return { type: "end" };
  }

  function peg$otherExpectation(description) {
    return { type: "other", description: description };
  }

  function peg$computePosDetails(pos) {
    var details = peg$posDetailsCache[pos], p;

    if (details) {
      return details;
    } else {
      p = pos - 1;
      while (!peg$posDetailsCache[p]) {
        p--;
      }

      details = peg$posDetailsCache[p];
      details = {
        line:   details.line,
        column: details.column
      };

      while (p < pos) {
        if (input.charCodeAt(p) === 10) {
          details.line++;
          details.column = 1;
        } else {
          details.column++;
        }

        p++;
      }

      peg$posDetailsCache[pos] = details;
      return details;
    }
  }

  function peg$computeLocation(startPos, endPos) {
    var startPosDetails = peg$computePosDetails(startPos),
        endPosDetails   = peg$computePosDetails(endPos);

    return {
      start: {
        offset: startPos,
        line:   startPosDetails.line,
        column: startPosDetails.column
      },
      end: {
        offset: endPos,
        line:   endPosDetails.line,
        column: endPosDetails.column
      }
    };
  }

  function peg$fail(expected) {
    if (peg$currPos < peg$maxFailPos) { return; }

    if (peg$currPos > peg$maxFailPos) {
      peg$maxFailPos = peg$currPos;
      peg$maxFailExpected = [];
    }

    peg$maxFailExpected.push(expected);
  }

  function peg$buildSimpleError(message, location) {
    return new peg$SyntaxError(message, null, null, location);
  }

  function peg$buildStructuredError(expected, found, location) {
    return new peg$SyntaxError(
      peg$SyntaxError.buildMessage(expected, found),
      expected,
      found,
      location
    );
  }

  function peg$parsestart() {
    var s0, s1;

    s0 = [];
    s1 = peg$parsetoken();
    while (s1 !== peg$FAILED) {
      s0.push(s1);
      s1 = peg$parsetoken();
    }

    return s0;
  }

  function peg$parsetoken() {
    var s0, s1, s2;

    s0 = peg$parseargument();
    if (s0 === peg$FAILED) {
      s0 = peg$parseselect();
      if (s0 === peg$FAILED) {
        s0 = peg$parseplural();
        if (s0 === peg$FAILED) {
          s0 = peg$parsefunction();
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 35) {
              s1 = peg$c0;
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c1); }
            }
            if (s1 !== peg$FAILED) {
              peg$savedPos = peg$currPos;
              s2 = peg$c2();
              if (s2) {
                s2 = void 0;
              } else {
                s2 = peg$FAILED;
              }
              if (s2 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c3();
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              s1 = [];
              s2 = peg$parsechar();
              if (s2 !== peg$FAILED) {
                while (s2 !== peg$FAILED) {
                  s1.push(s2);
                  s2 = peg$parsechar();
                }
              } else {
                s1 = peg$FAILED;
              }
              if (s1 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c4(s1);
              }
              s0 = s1;
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseargument() {
    var s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 123) {
      s1 = peg$c5;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c6); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      if (s2 !== peg$FAILED) {
        s3 = peg$parseid();
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 125) {
              s5 = peg$c7;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c8); }
            }
            if (s5 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c9(s3);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseselect() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 123) {
      s1 = peg$c5;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c6); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      if (s2 !== peg$FAILED) {
        s3 = peg$parseid();
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 44) {
              s5 = peg$c10;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c11); }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parse_();
              if (s6 !== peg$FAILED) {
                s7 = peg$currPos;
                if (input.substr(peg$currPos, 6) === peg$c12) {
                  s8 = peg$c12;
                  peg$currPos += 6;
                } else {
                  s8 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c13); }
                }
                if (s8 !== peg$FAILED) {
                  peg$savedPos = s7;
                  s8 = peg$c14(s3, s8);
                }
                s7 = s8;
                if (s7 !== peg$FAILED) {
                  s8 = peg$parse_();
                  if (s8 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 44) {
                      s9 = peg$c10;
                      peg$currPos++;
                    } else {
                      s9 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c11); }
                    }
                    if (s9 !== peg$FAILED) {
                      s10 = peg$parse_();
                      if (s10 !== peg$FAILED) {
                        s11 = [];
                        s12 = peg$parseselectCase();
                        if (s12 !== peg$FAILED) {
                          while (s12 !== peg$FAILED) {
                            s11.push(s12);
                            s12 = peg$parseselectCase();
                          }
                        } else {
                          s11 = peg$FAILED;
                        }
                        if (s11 !== peg$FAILED) {
                          s12 = peg$parse_();
                          if (s12 !== peg$FAILED) {
                            if (input.charCodeAt(peg$currPos) === 125) {
                              s13 = peg$c7;
                              peg$currPos++;
                            } else {
                              s13 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c8); }
                            }
                            if (s13 !== peg$FAILED) {
                              peg$savedPos = s0;
                              s1 = peg$c15(s3, s11);
                              s0 = s1;
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseplural() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 123) {
      s1 = peg$c5;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c6); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      if (s2 !== peg$FAILED) {
        s3 = peg$parseid();
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 44) {
              s5 = peg$c10;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c11); }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parse_();
              if (s6 !== peg$FAILED) {
                s7 = peg$currPos;
                if (input.substr(peg$currPos, 6) === peg$c16) {
                  s8 = peg$c16;
                  peg$currPos += 6;
                } else {
                  s8 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c17); }
                }
                if (s8 === peg$FAILED) {
                  if (input.substr(peg$currPos, 13) === peg$c18) {
                    s8 = peg$c18;
                    peg$currPos += 13;
                  } else {
                    s8 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c19); }
                  }
                }
                if (s8 !== peg$FAILED) {
                  peg$savedPos = s7;
                  s8 = peg$c20(s3, s8);
                }
                s7 = s8;
                if (s7 !== peg$FAILED) {
                  s8 = peg$parse_();
                  if (s8 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 44) {
                      s9 = peg$c10;
                      peg$currPos++;
                    } else {
                      s9 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c11); }
                    }
                    if (s9 !== peg$FAILED) {
                      s10 = peg$parse_();
                      if (s10 !== peg$FAILED) {
                        s11 = peg$parseoffset();
                        if (s11 === peg$FAILED) {
                          s11 = null;
                        }
                        if (s11 !== peg$FAILED) {
                          s12 = [];
                          s13 = peg$parsepluralCase();
                          if (s13 !== peg$FAILED) {
                            while (s13 !== peg$FAILED) {
                              s12.push(s13);
                              s13 = peg$parsepluralCase();
                            }
                          } else {
                            s12 = peg$FAILED;
                          }
                          if (s12 !== peg$FAILED) {
                            s13 = peg$parse_();
                            if (s13 !== peg$FAILED) {
                              if (input.charCodeAt(peg$currPos) === 125) {
                                s14 = peg$c7;
                                peg$currPos++;
                              } else {
                                s14 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c8); }
                              }
                              if (s14 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s1 = peg$c21(s3, s7, s11, s12);
                                s0 = s1;
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parsefunction() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 123) {
      s1 = peg$c5;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c6); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      if (s2 !== peg$FAILED) {
        s3 = peg$parseid();
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 44) {
              s5 = peg$c10;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c11); }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parse_();
              if (s6 !== peg$FAILED) {
                s7 = peg$parsefunctionKey();
                if (s7 !== peg$FAILED) {
                  s8 = peg$parse_();
                  if (s8 !== peg$FAILED) {
                    s9 = peg$parsefunctionParam();
                    if (s9 === peg$FAILED) {
                      s9 = null;
                    }
                    if (s9 !== peg$FAILED) {
                      if (input.charCodeAt(peg$currPos) === 125) {
                        s10 = peg$c7;
                        peg$currPos++;
                      } else {
                        s10 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c8); }
                      }
                      if (s10 !== peg$FAILED) {
                        peg$savedPos = s0;
                        s1 = peg$c22(s3, s7, s9);
                        s0 = s1;
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseid() {
    var s0, s1, s2;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = [];
    if (peg$c24.test(input.charAt(peg$currPos))) {
      s2 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c25); }
    }
    if (s2 !== peg$FAILED) {
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        if (peg$c24.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c25); }
        }
      }
    } else {
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      s0 = input.substring(s0, peg$currPos);
    } else {
      s0 = s1;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c23); }
    }

    return s0;
  }

  function peg$parseselectCase() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = peg$parse_();
    if (s1 !== peg$FAILED) {
      s2 = peg$parseid();
      if (s2 !== peg$FAILED) {
        s3 = peg$parse_();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsecaseTokens();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c26(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parsepluralCase() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = peg$parse_();
    if (s1 !== peg$FAILED) {
      s2 = peg$parsepluralKey();
      if (s2 !== peg$FAILED) {
        s3 = peg$parse_();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsecaseTokens();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c26(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parsecaseTokens() {
    var s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 123) {
      s1 = peg$c5;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c6); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$currPos;
      s3 = peg$parse_();
      if (s3 !== peg$FAILED) {
        s4 = peg$currPos;
        peg$silentFails++;
        if (input.charCodeAt(peg$currPos) === 123) {
          s5 = peg$c5;
          peg$currPos++;
        } else {
          s5 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c6); }
        }
        peg$silentFails--;
        if (s5 !== peg$FAILED) {
          peg$currPos = s4;
          s4 = void 0;
        } else {
          s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
          s3 = [s3, s4];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 === peg$FAILED) {
        s2 = null;
      }
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parsetoken();
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parsetoken();
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parse_();
          if (s4 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 125) {
              s5 = peg$c7;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c8); }
            }
            if (s5 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c27(s3);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseoffset() {
    var s0, s1, s2, s3, s4, s5, s6, s7;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = peg$parse_();
    if (s1 !== peg$FAILED) {
      if (input.substr(peg$currPos, 6) === peg$c29) {
        s2 = peg$c29;
        peg$currPos += 6;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c30); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parse_();
        if (s3 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 58) {
            s4 = peg$c31;
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c32); }
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parse_();
            if (s5 !== peg$FAILED) {
              s6 = peg$parsedigits();
              if (s6 !== peg$FAILED) {
                s7 = peg$parse_();
                if (s7 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c33(s6);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c28); }
    }

    return s0;
  }

  function peg$parsepluralKey() {
    var s0, s1, s2;

    s0 = peg$parseid();
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 61) {
        s1 = peg$c34;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c35); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parsedigits();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c33(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    }

    return s0;
  }

  function peg$parsefunctionKey() {
    var s0, s1, s2, s3, s4, s5;

    if (input.substr(peg$currPos, 6) === peg$c36) {
      s0 = peg$c36;
      peg$currPos += 6;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c37); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 4) === peg$c38) {
        s0 = peg$c38;
        peg$currPos += 4;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c39); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 4) === peg$c40) {
          s0 = peg$c40;
          peg$currPos += 4;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c41); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 8) === peg$c42) {
            s0 = peg$c42;
            peg$currPos += 8;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c43); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 7) === peg$c44) {
              s0 = peg$c44;
              peg$currPos += 7;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c45); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 8) === peg$c46) {
                s0 = peg$c46;
                peg$currPos += 8;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c47); }
              }
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$currPos;
                peg$silentFails++;
                if (input.substr(peg$currPos, 6) === peg$c12) {
                  s2 = peg$c12;
                  peg$currPos += 6;
                } else {
                  s2 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c13); }
                }
                peg$silentFails--;
                if (s2 === peg$FAILED) {
                  s1 = void 0;
                } else {
                  peg$currPos = s1;
                  s1 = peg$FAILED;
                }
                if (s1 !== peg$FAILED) {
                  s2 = peg$currPos;
                  peg$silentFails++;
                  if (input.substr(peg$currPos, 6) === peg$c16) {
                    s3 = peg$c16;
                    peg$currPos += 6;
                  } else {
                    s3 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c17); }
                  }
                  peg$silentFails--;
                  if (s3 === peg$FAILED) {
                    s2 = void 0;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                  if (s2 !== peg$FAILED) {
                    s3 = peg$currPos;
                    peg$silentFails++;
                    if (input.substr(peg$currPos, 13) === peg$c18) {
                      s4 = peg$c18;
                      peg$currPos += 13;
                    } else {
                      s4 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c19); }
                    }
                    peg$silentFails--;
                    if (s4 === peg$FAILED) {
                      s3 = void 0;
                    } else {
                      peg$currPos = s3;
                      s3 = peg$FAILED;
                    }
                    if (s3 !== peg$FAILED) {
                      s4 = peg$parseid();
                      if (s4 !== peg$FAILED) {
                        peg$savedPos = peg$currPos;
                        s5 = peg$c48(s4);
                        if (s5) {
                          s5 = void 0;
                        } else {
                          s5 = peg$FAILED;
                        }
                        if (s5 !== peg$FAILED) {
                          peg$savedPos = s0;
                          s1 = peg$c49(s4);
                          s0 = s1;
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parsefunctionParam() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = peg$parse_();
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 44) {
        s2 = peg$c10;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c11); }
      }
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parsetoken();
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parsetoken();
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = peg$currPos;
          s4 = peg$c50(s3);
          if (s4) {
            s4 = void 0;
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c51(s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 44) {
          s2 = peg$c10;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c11); }
        }
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsestrictFunctionParamPart();
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsestrictFunctionParamPart();
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c52(s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    }

    return s0;
  }

  function peg$parsestrictFunctionParamPart() {
    var s0, s1, s2, s3;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = [];
    if (peg$c54.test(input.charAt(peg$currPos))) {
      s2 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c55); }
    }
    if (s2 !== peg$FAILED) {
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        if (peg$c54.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c55); }
        }
      }
    } else {
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c56(s1);
    }
    s0 = s1;
    if (s0 === peg$FAILED) {
      s0 = peg$parsedoubleapos();
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 39) {
          s1 = peg$c57;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c58); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseinapos();
          if (s2 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 39) {
              s3 = peg$c57;
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c58); }
            }
            if (s3 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c59(s2);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 123) {
            s1 = peg$c5;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c6); }
          }
          if (s1 !== peg$FAILED) {
            s2 = [];
            s3 = peg$parsestrictFunctionParamPart();
            while (s3 !== peg$FAILED) {
              s2.push(s3);
              s3 = peg$parsestrictFunctionParamPart();
            }
            if (s2 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 125) {
                s3 = peg$c7;
                peg$currPos++;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c8); }
              }
              if (s3 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c60(s2);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c53); }
    }

    return s0;
  }

  function peg$parsedoubleapos() {
    var s0, s1;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c62) {
      s1 = peg$c62;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c63); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c64();
    }
    s0 = s1;
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c61); }
    }

    return s0;
  }

  function peg$parseinapos() {
    var s0, s1, s2;

    s0 = peg$parsedoubleapos();
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = [];
      if (peg$c65.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c66); }
      }
      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          if (peg$c65.test(input.charAt(peg$currPos))) {
            s2 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c66); }
          }
        }
      } else {
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c4(s1);
      }
      s0 = s1;
    }

    return s0;
  }

  function peg$parsequotedCurly() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c67) {
      s1 = peg$c67;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c68); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$parseinapos();
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parseinapos();
      }
      if (s2 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 39) {
          s3 = peg$c57;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c58); }
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c69(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      if (input.substr(peg$currPos, 2) === peg$c70) {
        s1 = peg$c70;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c71); }
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parseinapos();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parseinapos();
        }
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 39) {
            s3 = peg$c57;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c58); }
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c72(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    }

    return s0;
  }

  function peg$parsequoted() {
    var s0, s1, s2, s3, s4, s5;

    peg$silentFails++;
    s0 = peg$parsequotedCurly();
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      if (input.substr(peg$currPos, 2) === peg$c74) {
        s3 = peg$c74;
        peg$currPos += 2;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c75); }
      }
      if (s3 !== peg$FAILED) {
        s4 = [];
        s5 = peg$parseinapos();
        while (s5 !== peg$FAILED) {
          s4.push(s5);
          s5 = peg$parseinapos();
        }
        if (s4 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 39) {
            s5 = peg$c57;
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c58); }
          }
          if (s5 !== peg$FAILED) {
            peg$savedPos = s2;
            s3 = peg$c76(s4);
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        peg$savedPos = peg$currPos;
        s3 = peg$c2();
        if (s3) {
          s3 = void 0;
        } else {
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c77(s1);
      }
      s0 = s1;
      if (s0 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 39) {
          s0 = peg$c57;
          peg$currPos++;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c58); }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c73); }
    }

    return s0;
  }

  function peg$parseplainChar() {
    var s0, s1;

    peg$silentFails++;
    if (peg$c79.test(input.charAt(peg$currPos))) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c80); }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c78); }
    }

    return s0;
  }

  function peg$parsechar() {
    var s0, s1, s2;

    s0 = peg$parsedoubleapos();
    if (s0 === peg$FAILED) {
      s0 = peg$parsequoted();
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 35) {
          s1 = peg$c0;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c1); }
        }
        if (s1 !== peg$FAILED) {
          peg$savedPos = peg$currPos;
          s2 = peg$c81(s1);
          if (s2) {
            s2 = void 0;
          } else {
            s2 = peg$FAILED;
          }
          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c82(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$parseplainChar();
        }
      }
    }

    return s0;
  }

  function peg$parsedigits() {
    var s0, s1, s2;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = [];
    if (peg$c84.test(input.charAt(peg$currPos))) {
      s2 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c85); }
    }
    if (s2 !== peg$FAILED) {
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        if (peg$c84.test(input.charAt(peg$currPos))) {
          s2 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c85); }
        }
      }
    } else {
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      s0 = input.substring(s0, peg$currPos);
    } else {
      s0 = s1;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c83); }
    }

    return s0;
  }

  function peg$parse_() {
    var s0, s1, s2;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = [];
    if (peg$c87.test(input.charAt(peg$currPos))) {
      s2 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c88); }
    }
    while (s2 !== peg$FAILED) {
      s1.push(s2);
      if (peg$c87.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c88); }
      }
    }
    if (s1 !== peg$FAILED) {
      s0 = input.substring(s0, peg$currPos);
    } else {
      s0 = s1;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c86); }
    }

    return s0;
  }


    var inPlural = [false];


  peg$result = peg$startRuleFunction();

  if (peg$result !== peg$FAILED && peg$currPos === input.length) {
    return peg$result;
  } else {
    if (peg$result !== peg$FAILED && peg$currPos < input.length) {
      peg$fail(peg$endExpectation());
    }

    throw peg$buildStructuredError(
      peg$maxFailExpected,
      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
      peg$maxFailPos < input.length
        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
    );
  }
}

module.exports = {
  SyntaxError: peg$SyntaxError,
  parse:       peg$parse
};


/***/ }),

/***/ "./node_modules/messageformat/lib/compiler.js":
/*!****************************************************!*\
  !*** ./node_modules/messageformat/lib/compiler.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var reserved = __webpack_require__(/*! reserved-words */ "./node_modules/reserved-words/lib/index.js");
var parse = __webpack_require__(/*! messageformat-parser */ "./node_modules/messageformat-parser/parser.js").parse;

/** Creates a new message compiler. Called internally from {@link MessageFormat#compile}.
 *
 * @class
 * @private
 * @param {MessageFormat} mf - A MessageFormat instance
 * @property {object} locales - The locale identifiers that are used by the compiled functions
 * @property {object} runtime - Names of the core runtime functions that are used by the compiled functions
 * @property {object} formatters - The formatter functions that are used by the compiled functions
 */
function Compiler(mf) {
  this.mf = mf;
  this.lc = null;
  this.locales = {};
  this.runtime = {};
  this.formatters = {};
}

module.exports = Compiler;

/** Utility function for quoting an Object's key value if required
 *
 *  Quotes the key if it contains invalid characters or is an
 *  ECMAScript 3rd Edition reserved word (for IE8).
 */
Compiler.propname = function(key, obj) {
  if (
    /^[A-Z_$][0-9A-Z_$]*$/i.test(key) &&
    [
      'break',
      'continue',
      'delete',
      'else',
      'for',
      'function',
      'if',
      'in',
      'new',
      'return',
      'this',
      'typeof',
      'var',
      'void',
      'while',
      'with',
      'case',
      'catch',
      'default',
      'do',
      'finally',
      'instanceof',
      'switch',
      'throw',
      'try'
    ].indexOf(key) < 0
  ) {
    return obj ? obj + '.' + key : key;
  } else {
    var jkey = JSON.stringify(key);
    return obj ? obj + '[' + jkey + ']' : jkey;
  }
};

/** Utility function for escaping a function name if required
 */
Compiler.funcname = function(key) {
  var fn = key.trim().replace(/\W+/g, '_');
  return reserved.check(fn, 'es2015', true) || /^\d/.test(fn) ? '_' + fn : fn;
};

/** Utility formatter function for enforcing Bidi Structured Text by using UCC
 *
 *  List inlined from data extracted from CLDR v27 & v28
 *  To verify/recreate, use the following:
 *
 *     git clone https://github.com/unicode-cldr/cldr-misc-full.git
 *     cd cldr-misc-full/main/
 *     grep characterOrder -r . | tr '"/' '\t' | cut -f2,6 | grep -C4 right-to-left
 */
Compiler.bidiMarkText = function(text, locale) {
  function isLocaleRTL(locale) {
    var rtlLanguages = [
      'ar',
      'ckb',
      'fa',
      'he',
      'ks($|[^bfh])',
      'lrc',
      'mzn',
      'pa-Arab',
      'ps',
      'ug',
      'ur',
      'uz-Arab',
      'yi'
    ];
    return new RegExp('^' + rtlLanguages.join('|^')).test(locale);
  }
  var mark = JSON.stringify(isLocaleRTL(locale) ? '\u200F' : '\u200E');
  return mark + ' + ' + text + ' + ' + mark;
};

/** @private */
Compiler.prototype.cases = function(token, plural) {
  var needOther = token.type === 'select' || !this.mf.hasCustomPluralFuncs;
  var r = token.cases.map(function(c) {
    if (c.key === 'other') needOther = false;
    var s = c.tokens.map(function(tok) {
      return this.token(tok, plural);
    }, this);
    return Compiler.propname(c.key) + ': ' + (s.join(' + ') || '""');
  }, this);
  if (needOther)
    throw new Error("No 'other' form found in " + JSON.stringify(token));
  return '{ ' + r.join(', ') + ' }';
};

/** @private */
Compiler.prototype.token = function(token, plural) {
  if (typeof token == 'string') return JSON.stringify(token);

  var fn,
    args = [Compiler.propname(token.arg, 'd')];
  switch (token.type) {
    case 'argument':
      return this.mf.bidiSupport
        ? Compiler.bidiMarkText(args[0], this.lc)
        : args[0];

    case 'select':
      fn = 'select';
      if (plural && this.mf.strictNumberSign) plural = null;
      args.push(this.cases(token, plural));
      this.runtime.select = true;
      break;

    case 'selectordinal':
      fn = 'plural';
      args.push(0, Compiler.funcname(this.lc), this.cases(token, token), 1);
      this.locales[this.lc] = true;
      this.runtime.plural = true;
      break;

    case 'plural':
      fn = 'plural';
      args.push(
        token.offset || 0,
        Compiler.funcname(this.lc),
        this.cases(token, token)
      );
      this.locales[this.lc] = true;
      this.runtime.plural = true;
      break;

    case 'function':
      if (
        !(token.key in this.mf.fmt) &&
        token.key in this.mf.constructor.formatters
      ) {
        var fmt = this.mf.constructor.formatters[token.key];
        this.mf.fmt[token.key] = fmt(this.mf);
      }
      if (!this.mf.fmt[token.key])
        throw new Error(
          'Formatting function ' + JSON.stringify(token.key) + ' not found!'
        );
      args.push(JSON.stringify(this.lc));
      if (token.param) {
        if (plural && this.mf.strictNumberSign) plural = null;
        var s = token.param.tokens.map(function(tok) {
          return this.token(tok, plural);
        }, this);
        args.push('(' + (s.join(' + ') || '""') + ').trim()');
      }
      fn = Compiler.propname(token.key, 'fmt');
      this.formatters[token.key] = true;
      break;

    case 'octothorpe':
      if (!plural) return '"#"';
      fn = 'number';
      args = [Compiler.propname(plural.arg, 'd'), JSON.stringify(plural.arg)];
      if (plural.offset) args.push(plural.offset);
      this.runtime.number = true;
      break;
  }

  if (!fn) throw new Error('Parser error for token ' + JSON.stringify(token));
  return fn + '(' + args.join(', ') + ')';
};

/** Recursively compile a string or a tree of strings to JavaScript function sources
 *
 *  If `src` is an object with a key that is also present in `plurals`, the key
 *  in question will be used as the locale identifier for its value. To disable
 *  the compile-time checks for plural & selectordinal keys while maintaining
 *  multi-locale support, use falsy values in `plurals`.
 *
 * @param {string|object} src - the source for which the JS code should be generated
 * @param {string} lc - the default locale
 * @param {object} plurals - a map of pluralization keys for all available locales
 */
Compiler.prototype.compile = function(src, lc, plurals) {
  if (typeof src != 'object') {
    this.lc = lc;
    var pc = plurals[lc] || { cardinal: [], ordinal: [] };
    pc.strict = !!this.mf.strictNumberSign;
    var r = parse(src, pc).map(function(token) {
      return this.token(token);
    }, this);
    return 'function(d) { return ' + (r.join(' + ') || '""') + '; }';
  } else {
    var result = {};
    for (var key in src) {
      var lcKey = plurals.hasOwnProperty(key) ? key : lc;
      result[key] = this.compile(src[key], lcKey, plurals);
    }
    return result;
  }
};


/***/ }),

/***/ "./node_modules/messageformat/lib/formatters/date.js":
/*!***********************************************************!*\
  !*** ./node_modules/messageformat/lib/formatters/date.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* eslint-disable no-fallthrough */

/** Represent a date as a short/default/long/full string
 *
 * The input value needs to be in a form that the
 * {@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date Date object}
 * can process using its single-argument form, `new Date(value)`.
 *
 * @memberof Formatters
 * @param {number|string} value - Either a Unix epoch time in milliseconds, or a string value representing a date
 * @param {string} [type='default'] - One of `'short'`, `'default'`, `'long'` , or `full`
 *
 * @example
 * var mf = new MessageFormat(['en', 'fi']);
 *
 * mf.compile('Today is {T, date}')({ T: Date.now() })
 * // 'Today is Feb 21, 2016'
 *
 * mf.compile('Tänään on {T, date}', 'fi')({ T: Date.now() })
 * // 'Tänään on 21. helmikuuta 2016'
 *
 * mf.compile('Unix time started on {T, date, full}')({ T: 0 })
 * // 'Unix time started on Thursday, January 1, 1970'
 *
 * var cf = mf.compile('{sys} became operational on {d0, date, short}');
 * cf({ sys: 'HAL 9000', d0: '12 January 1999' })
 * // 'HAL 9000 became operational on 1/12/1999'
 */
function date(v, lc, p) {
  var o = { day: 'numeric', month: 'short', year: 'numeric' };
  switch (p) {
    case 'full':
      o.weekday = 'long';
    case 'long':
      o.month = 'long';
      break;
    case 'short':
      o.month = 'numeric';
  }
  return new Date(v).toLocaleDateString(lc, o);
}

module.exports = function() {
  return date;
};


/***/ }),

/***/ "./node_modules/messageformat/lib/formatters/duration.js":
/*!***************************************************************!*\
  !*** ./node_modules/messageformat/lib/formatters/duration.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Represent a duration in seconds as a string
 *
 * Input should be a finite number; output will include one or two `:`
 * separators, and match the pattern `hhhh:mm:ss`, possibly with a leading `-`
 * for negative values and a trailing `.sss` part for non-integer input
 *
 * @memberof Formatters
 * @param {number|string} value - A finite number, or its string representation
 *
 * @example
 * var mf = new MessageFormat();
 *
 * mf.compile('It has been {D, duration}')({ D: 123 })
 * // 'It has been 2:03'
 *
 * mf.compile('Countdown: {D, duration}')({ D: -151200.42 })
 * // 'Countdown: -42:00:00.420'
 */
function duration(value) {
  if (!isFinite(value)) return String(value);
  var sign = '';
  if (value < 0) {
    sign = '-';
    value = Math.abs(value);
  } else {
    value = Number(value);
  }
  var sec = value % 60;
  var parts = [Math.round(sec) === sec ? sec : sec.toFixed(3)];
  if (value < 60) {
    parts.unshift(0); // at least one : is required
  } else {
    value = Math.round((value - parts[0]) / 60);
    parts.unshift(value % 60); // minutes
    if (value >= 60) {
      value = Math.round((value - parts[0]) / 60);
      parts.unshift(value); // hours
    }
  }
  var first = parts.shift();
  return (
    sign +
    first +
    ':' +
    parts
      .map(function(n) {
        return n < 10 ? '0' + String(n) : String(n);
      })
      .join(':')
  );
}

module.exports = function() {
  return duration;
};


/***/ }),

/***/ "./node_modules/messageformat/lib/formatters/index.js":
/*!************************************************************!*\
  !*** ./node_modules/messageformat/lib/formatters/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @classdesc
 * Default number formatting functions in the style of ICU's
 * {@link http://icu-project.org/apiref/icu4j/com/ibm/icu/text/MessageFormat.html simpleArg syntax}
 * implemented using the
 * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl Intl}
 * object defined by ECMA-402.
 *
 * In MessageFormat source, a formatter function is called with the syntax
 * `{var, name, arg}`, where `var` is a variable, `name` is the formatter name
 * (by default, either `date`, `duration`, `number` or `time`; `spellout` and
 * `ordinal` are not supported by default), and `arg` is an optional string
 * argument.
 *
 * In JavaScript, a formatter is a function called with three parameters:
 *   - The **`value`** of the variable; this can be of any user-defined type
 *   - The current **`locale`** code
 *   - The trimmed **`arg`** string value, or `null` if not set
 *
 * As formatter functions may be used in a precompiled context, they should not
 * refer to any variables that are not defined by the function parameters or
 * within the function body. To add your own formatter, either add it to the
 * static `MessageFormat.formatters` object, or use
 * {@link MessageFormat#addFormatters} to add it to a MessageFormat instance.
 *
 * @class Formatters
 * @private
 * @hideconstructor
 */

module.exports = {
  date: __webpack_require__(/*! ./date */ "./node_modules/messageformat/lib/formatters/date.js"),
  duration: __webpack_require__(/*! ./duration */ "./node_modules/messageformat/lib/formatters/duration.js"),
  number: __webpack_require__(/*! ./number */ "./node_modules/messageformat/lib/formatters/number.js"),
  time: __webpack_require__(/*! ./time */ "./node_modules/messageformat/lib/formatters/time.js")
};


/***/ }),

/***/ "./node_modules/messageformat/lib/formatters/number.js":
/*!*************************************************************!*\
  !*** ./node_modules/messageformat/lib/formatters/number.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* global CURRENCY, Intl */

/** Represent a number as an integer, percent or currency value
 *
 *  Available in MessageFormat strings as `{VAR, number, integer|percent|currency}`.
 *  Internally, calls Intl.NumberFormat with appropriate parameters. `currency` will
 *  default to USD; to change, set `MessageFormat#currency` to the appropriate
 *  three-letter currency code, or use the `currency:EUR` form of the argument.
 *
 * @memberof Formatters
 * @param {number} value - The value to operate on
 * @param {string} type - One of `'integer'`, `'percent'` , `'currency'`, or `/currency:[A-Z]{3}/`
 *
 * @example
 * var mf = new MessageFormat('en');
 * mf.currency = 'EUR';  // needs to be set before first compile() call
 *
 * mf.compile('{N} is almost {N, number, integer}')({ N: 3.14 })
 * // '3.14 is almost 3'
 *
 * mf.compile('{P, number, percent} complete')({ P: 0.99 })
 * // '99% complete'
 *
 * mf.compile('The total is {V, number, currency}.')({ V: 5.5 })
 * // 'The total is €5.50.'
 *
 * mf.compile('The total is {V, number, currency:GBP}.')({ V: 5.5 })
 * // 'The total is £5.50.'
 */

function number(value, lc, arg) {
  var a = (arg && arg.split(':')) || [];
  var opt = {
    integer: { maximumFractionDigits: 0 },
    percent: { style: 'percent' },
    currency: {
      style: 'currency',
      currency: (a[1] && a[1].trim()) || CURRENCY,
      minimumFractionDigits: 2,
      maximumFractionDigits: 2
    }
  };
  return new Intl.NumberFormat(lc, opt[a[0]] || {}).format(value);
}

module.exports = function(mf) {
  var parts = number
    .toString()
    .replace('CURRENCY', JSON.stringify(mf.currency || 'USD'))
    .match(/\(([^)]*)\)[^{]*{([\s\S]*)}/);
  return new Function(parts[1], parts[2]);
};


/***/ }),

/***/ "./node_modules/messageformat/lib/formatters/time.js":
/*!***********************************************************!*\
  !*** ./node_modules/messageformat/lib/formatters/time.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Represent a time as a short/default/long string
 *
 * The input value needs to be in a form that the
 * {@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date Date object}
 * can process using its single-argument form, `new Date(value)`.
 *
 * @memberof Formatters
 * @param {number|string} value - Either a Unix epoch time in milliseconds, or a string value representing a date
 * @param {string} [type='default'] - One of `'short'`, `'default'`, `'long'` , or `full`
 *
 * @example
 * var mf = new MessageFormat(['en', 'fi']);
 *
 * mf.compile('The time is now {T, time}')({ T: Date.now() })
 * // 'The time is now 11:26:35 PM'
 *
 * mf.compile('Kello on nyt {T, time}', 'fi')({ T: Date.now() })
 * // 'Kello on nyt 23.26.35'
 *
 * var cf = mf.compile('The Eagle landed at {T, time, full} on {T, date, full}');
 * cf({ T: '1969-07-20 20:17:40 UTC' })
 * // 'The Eagle landed at 10:17:40 PM GMT+2 on Sunday, July 20, 1969'
 */
function time(v, lc, p) {
  var o = { second: 'numeric', minute: 'numeric', hour: 'numeric' };
  switch (p) {
    case 'full':
    case 'long':
      o.timeZoneName = 'short';
      break;
    case 'short':
      delete o.second;
  }
  return new Date(v).toLocaleTimeString(lc, o);
}

module.exports = function() {
  return time;
};


/***/ }),

/***/ "./node_modules/messageformat/lib/messageformat.js":
/*!*********************************************************!*\
  !*** ./node_modules/messageformat/lib/messageformat.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Compiler = __webpack_require__(/*! ./compiler */ "./node_modules/messageformat/lib/compiler.js");
var formatters = __webpack_require__(/*! ./formatters */ "./node_modules/messageformat/lib/formatters/index.js");
var Plurals = __webpack_require__(/*! ./plurals */ "./node_modules/messageformat/lib/plurals.js");
var Runtime = __webpack_require__(/*! ./runtime */ "./node_modules/messageformat/lib/runtime.js");

/**
 * Create a new MessageFormat compiler
 *
 * If set, the `locale` parameter limits the compiler to use a subset of the 204
 * languages' pluralisation rules made available by the Unicode CLDR.
 *
 * Leaving `locale` undefined or using an array of strings will create a
 * MessageFormat instance with multi-language support. To select which to use,
 * use the second parameter of `{@link MessageFormat#compile compile()}`, or use
 * message keys corresponding to your locales. The default locale will be the
 * first entry of the array, or `{@link MessageFormat.defaultLocale defaultLocale}`
 * if not set.
 *
 * A string `locale` will create a single-locale MessageFormat instance.
 *
 * Using an object `locale` with all properties of type `function` allows for
 * the use of custom or externally defined pluralisation rules; in this case
 *
 * @class
 * @param {string|string[]|Object} [locale] - The locale(s) to use
 *
 * @classdesc MessageFormat-to-JavaScript compiler
 *
 * ```
 * import MessageFormat from 'messageformat'
 * ```
 */
function MessageFormat(locale) {
  this.pluralFuncs = {};
  if (typeof locale === 'string') {
    this.pluralFuncs[locale] = Plurals.get(locale);
    this.defaultLocale = locale;
  } else if (Array.isArray(locale)) {
    locale.forEach(function(lc) {
      this.pluralFuncs[lc] = Plurals.get(lc);
    }, this);
    this.defaultLocale = locale[0];
  } else {
    for (var lc in locale)
      if (locale.hasOwnProperty(lc)) {
        if (typeof locale[lc] !== 'function') {
          throw new Error(
            'Expected function value for locale ' + JSON.stringify(lc)
          );
        }
        this.pluralFuncs[lc] = locale[lc];
        if (!this.defaultLocale) this.defaultLocale = lc;
      }
    if (this.defaultLocale) {
      this.hasCustomPluralFuncs = true;
    } else {
      this.defaultLocale = MessageFormat.defaultLocale;
    }
  }
  this.fmt = {};
  this.runtime = new Runtime(this);
}

/**
 * The default locale
 *
 * Used by the constructor when no `locale` has been set to initialise the value
 * of its instance counterpart, `MessageFormat#defaultLocale`.
 *
 * @memberof MessageFormat
 * @default 'en'
 */
MessageFormat.defaultLocale = 'en';

/** Escape special characaters
 *
 *  Surround the characters `{` and `}` in the input string with 'quotes'.
 *  This will allow those characters to not be considered as MessageFormat
 *  control characters.
 *
 * @param {string} str - The input string
 * @param {boolean} [octothorpe=false] - Include `#` in the escaped characters
 * @returns {string} The escaped string
 */
MessageFormat.escape = function(str, octothorpe) {
  var esc = octothorpe ? '[#{}]' : '[{}]';
  return String(str).replace(new RegExp(esc, 'g'), "'$&'");
};

MessageFormat.formatters = formatters;

/**
 * Add custom formatter functions to this MessageFormat instance. See the
 * {@tutorial guide} for more details.
 *
 * The general syntax for calling a formatting function in MessageFormat is
 * `{var, fn[, arg]}`, where `var` is the variable that will be set by the
 * user code, `fn` determines the formatting function, and `arg` is an
 * optional string argument.
 *
 * In JavaScript, each formatting function is called with three parameters;
 * the variable value `v`, the current locale `lc`, and `arg` as a string, or
 * undefined if not set. `arg` will be trimmed of surrounding whitespace.
 * Formatting functions should not have side effects.
 *
 * @memberof MessageFormat
 * @param {Object.<string,function>} fmt - A map of formatting functions
 * @returns {MessageFormat} The MessageFormat instance, to allow for chaining
 *
 * @example
 * const mf = new MessageFormat('en-GB')
 * mf.addFormatters({
 *   upcase: function(v) { return v.toUpperCase() },
 *   locale: function(v, lc) { return lc },
 *   prop: function(v, lc, p) { return v[p] }
 * })
 * const messages = mf.compile({
 *   describe: 'This is {VAR, upcase}.',
 *   locale: 'The current locale is {_, locale}.',
 *   answer: 'Answer: {obj, prop, a}'
 * }
 *
 * messages.describe({ VAR: 'big' })        // 'This is BIG.'
 * messages.locale({})                      // 'The current locale is en-GB.'
 * messages.answer({ obj: {q: 3, a: 42} })  // 'Answer: 42'
 */
MessageFormat.prototype.addFormatters = function(fmt) {
  for (var name in fmt)
    if (fmt.hasOwnProperty(name)) {
      this.fmt[name] = fmt[name];
    }
  return this;
};

/** Disable the validation of plural & selectordinal keys
 *
 *  Previous versions of messageformat allowed the use of plural &
 *  selectordinal statements with any keys; now we throw an error when a
 *  statement uses a non-numerical key that will never be matched as a
 *  pluralization category for the current locale.
 *
 *  Use this method to disable the validation and allow usage as previously.
 *  To re-enable, you'll need to create a new MessageFormat instance.
 *
 * @returns {MessageFormat} The MessageFormat instance, to allow for chaining
 *
 * @example
 * const mf = new MessageFormat('en')
 * const msg = '{X, plural, zero{no answers} one{an answer} other{# answers}}'
 *
 * mf.compile(msg)
 * // Error: Invalid key `zero` for argument `X`. Valid plural keys for this
 * //        locale are `one`, `other`, and explicit keys like `=0`.
 *
 * mf.disablePluralKeyChecks()
 * mf.compile(msg)({ X: 0 })  // '0 answers'
 */
MessageFormat.prototype.disablePluralKeyChecks = function() {
  this.noPluralKeyChecks = true;
  for (var lc in this.pluralFuncs)
    if (this.pluralFuncs.hasOwnProperty(lc)) {
      this.pluralFuncs[lc].cardinal = [];
      this.pluralFuncs[lc].ordinal = [];
    }
  return this;
};

/** Enable or disable the addition of Unicode control characters to all input
 *  to preserve the integrity of the output when mixing LTR and RTL text.
 *
 * @see http://cldr.unicode.org/development/development-process/design-proposals/bidi-handling-of-structured-text
 *
 * @memberof MessageFormat
 * @param {boolean} [enable=true]
 * @returns {MessageFormat} The MessageFormat instance, to allow for chaining
 *
 * @example
 * // upper case stands for RTL characters, output is shown as rendered
 * const mf = new MessageFormat('en')
 *
 * mf.compile('{0} >> {1} >> {2}')(['first', 'SECOND', 'THIRD'])
 *   // 'first >> THIRD << SECOND'
 *
 * mf.setBiDiSupport(true)
 * mf.compile('{0} >> {1} >> {2}')(['first', 'SECOND', 'THIRD'])
 *   // 'first >> SECOND >> THIRD'
 */
MessageFormat.prototype.setBiDiSupport = function(enable) {
  this.bidiSupport = !!enable || typeof enable == 'undefined';
  return this;
};

/** According to the ICU MessageFormat spec, a `#` character directly inside a
 *  `plural` or `selectordinal` statement should be replaced by the number
 *  matching the surrounding statement. By default, messageformat will replace
 *  `#` signs with the value of the nearest surrounding `plural` or
 *  `selectordinal` statement.
 *
 *  Set this to true to follow the stricter ICU MessageFormat spec, and to
 *  throw a runtime error if `#` is used with non-numeric input.
 *
 * @memberof MessageFormat
 * @param {boolean} [enable=true]
 * @returns {MessageFormat} The MessageFormat instance, to allow for chaining
 *
 * @example
 * const mf = new MessageFormat('en')
 * const src = {
 *   cookie: '#: {X, plural, =0{no cookies} one{a cookie} other{# cookies}}',
 *   pastry: `{X, plural,
 *     one {{P, select, cookie{a cookie} other{a pie}}}
 *     other {{P, select, cookie{# cookies} other{# pies}}}
 *   }`
 * }
 * let messages = mf.compile(src)
 *
 * messages.cookie({ X: 3 })            // '#: 3 cookies'
 * messages.pastry({ X: 3, P: 'pie' })  // '3 pies'
 *
 * mf.setStrictNumberSign(true)
 * messages = mf.compile(src)
 * messages.pastry({ X: 3, P: 'pie' })  // '# pies'
 */
MessageFormat.prototype.setStrictNumberSign = function(enable) {
  this.strictNumberSign = !!enable || typeof enable == 'undefined';
  this.runtime.setStrictNumber(this.strictNumberSign);
  return this;
};

/** Compile messages into storable functions
 *
 *  If `messages` is a single string including ICU MessageFormat declarations,
 *  the result of `compile()` is a function taking a single Object parameter
 *  `d` representing each of the input's defined variables.
 *
 *  If `messages` is a hierarchical structure of such strings, the output of
 *  `compile()` will match that structure, with each string replaced by its
 *  corresponding JavaScript function.
 *
 *  If the input `messages` -- and therefore the output -- of `compile()` is an
 *  object, the output object will have a `toString(global)` method that may be
 *  used to store or cache the compiled functions to disk, for later inclusion
 *  in any JS environment, without a local MessageFormat instance required. If
 *  its `global` parameter is null or undefined, the result is an ES6 module
 *  with a default export. If `global` is a string containing `.`, the result
 *  will be a script setting its value. Otherwise, the output defaults to an UMD
 *  pattern that sets the value of `global` if used outside of AMD and CommonJS
 *  loaders.
 *
 *  If `locale` is not set, it will default to
 *  `{@link MessageFormat.defaultLocale defaultLocale}`; using a key at any
 *  depth of `messages` that is a declared locale will set its child elements to
 *  use that locale.
 *
 *  If `locale` is set, it is used for all messages, ignoring any otherwise
 *  matching locale keys. If the constructor declared any locales, `locale`
 *  needs to be one of them.
 *
 *  If `compile()` is called with a `messages` object on a MessageFormat
 *  instance that does not specify any locales, it will match keys to *all* 204
 *  available locales. This is really useful if you want your messages to be
 *  completely determined by your data, but may provide surprising results if
 *  your input includes any 2-3 letter strings that are not locale identifiers.
 *
 * @memberof MessageFormat
 * @param {string|Object} messages - The input message(s) to be compiled, in ICU MessageFormat
 * @param {string} [locale] - A locale to use for the messages
 * @returns {function|Object} The first match found for the given locale(s)
 *
 * @example
 * const mf = new MessageFormat('en')
 * const msg = mf.compile('A {TYPE} example.')
 *
 * msg({ TYPE: 'simple' })  // 'A simple example.'
 *
 * @example
 * const mf = new MessageFormat(['en', 'fi'])
 * const messages = mf.compile({
 *   en: { a: 'A {TYPE} example.',
 *         b: 'This is the {COUNT, selectordinal, one{#st} two{#nd} few{#rd} other{#th}} example.' },
 *   fi: { a: '{TYPE} esimerkki.',
 *         b: 'Tämä on {COUNT, selectordinal, other{#.}} esimerkki.' }
 * })
 *
 * messages.en.b({ COUNT: 2 })  // 'This is the 2nd example.'
 * messages.fi.b({ COUNT: 2 })  // 'Tämä on 2. esimerkki.'
 *
 * @example
 * const fs = require('fs')
 * const mf = new MessageFormat('en')
 * const msgSet = {
 *   a: 'A {TYPE} example.',
 *   b: 'This has {COUNT, plural, one{one member} other{# members}}.',
 *   c: 'We have {P, number, percent} code coverage.'
 * }
 * const msgStr = mf.compile(msgSet).toString('module.exports')
 * fs.writeFileSync('messages.js', msgStr)
 *
 * ...
 *
 * const messages = require('./messages')
 *
 * messages.a({ TYPE: 'more complex' })  // 'A more complex example.'
 * messages.b({ COUNT: 3 })              // 'This has 3 members.'
 */
MessageFormat.prototype.compile = function(messages, locale) {
  function _stringify(obj, level) {
    if (!level) level = 0;
    if (typeof obj != 'object') return obj;
    var o = [],
      indent = '';
    for (var i = 0; i < level; ++i) indent += '  ';
    for (var k in obj)
      o.push(
        '\n' +
          indent +
          '  ' +
          Compiler.propname(k) +
          ': ' +
          _stringify(obj[k], level + 1)
      );
    return '{' + o.join(',') + '\n' + indent + '}';
  }

  var pf = {};
  if (Object.keys(this.pluralFuncs).length === 0) {
    if (locale) {
      var pfn0 = Plurals.get(locale, this.noPluralKeyChecks);
      if (!pfn0)
        throw new Error('Locale ' + JSON.stringify(locale) + ' not found!');
      pf[locale] = pfn0;
    } else {
      locale = this.defaultLocale;
      pf = Plurals.getAll(this.noPluralKeyChecks);
    }
  } else if (locale) {
    var pfn1 = this.pluralFuncs[locale];
    if (!pfn1)
      throw new Error(
        'Locale ' +
          JSON.stringify(locale) +
          ' not found in ' +
          JSON.stringify(this.pluralFuncs) +
          '!'
      );
    pf[locale] = pfn1;
  } else {
    locale = this.defaultLocale;
    pf = this.pluralFuncs;
  }

  var compiler = new Compiler(this);
  var obj = compiler.compile(messages, locale, pf);

  if (typeof messages != 'object') {
    var fn = new Function(
      'number, plural, select, fmt',
      Compiler.funcname(locale),
      'return ' + obj
    );
    var rt = this.runtime;
    return fn(rt.number, rt.plural, rt.select, this.fmt, pf[locale]);
  }

  var rtStr = this.runtime.toString(pf, compiler) + '\n';
  var objStr = _stringify(obj);
  var result = new Function(rtStr + 'return ' + objStr)();
  if (result.hasOwnProperty('toString'))
    throw new Error('The top-level message key `toString` is reserved');

  result.toString = function(global) {
    if (!global || global === 'export default') {
      return rtStr + 'export default ' + objStr;
    } else if (global.indexOf('.') > -1) {
      return rtStr + global + ' = ' + objStr;
    } else {
      return (
        rtStr +
        [
          '(function (root, G) {',
          '  if (typeof define === "function" && define.amd) { define(G); }',
          '  else if (typeof exports === "object") { module.exports = G; }',
          '  else { ' + Compiler.propname(global, 'root') + ' = G; }',
          '})(this, ' + objStr + ');'
        ].join('\n')
      );
    }
  };
  return result;
};

module.exports = MessageFormat;


/***/ }),

/***/ "./node_modules/messageformat/lib/plurals.js":
/*!***************************************************!*\
  !*** ./node_modules/messageformat/lib/plurals.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var categories = __webpack_require__(/*! make-plural/umd/pluralCategories */ "./node_modules/make-plural/umd/pluralCategories.js");
var plurals = __webpack_require__(/*! make-plural/umd/plurals */ "./node_modules/make-plural/umd/plurals.js");

/**
 * @class
 * @private
 * @hideconstructor
 * @classdesc Utility getter/wrapper for pluralization functions from
 * {@link http://github.com/eemeli/make-plural.js make-plural}
 */

function wrapPluralFunc(lc, pf, noPluralKeyChecks) {
  var fn = function() {
    return pf.apply(this, arguments);
  };
  fn.toString = function() {
    return pf.toString();
  };
  if (noPluralKeyChecks) {
    fn.cardinal = [];
    fn.ordinal = [];
  } else {
    var pc = categories[lc] || {};
    fn.cardinal = pc.cardinal;
    fn.ordinal = pc.ordinal;
  }
  return fn;
}

function get(locale, noPluralKeyChecks) {
  for (var l = locale; l; l = l.replace(/[-_]?[^-_]*$/, '')) {
    var pf = plurals[l];
    if (pf) return wrapPluralFunc(l, pf, noPluralKeyChecks);
  }
  throw new Error(
    'Localisation function not found for locale ' + JSON.stringify(locale)
  );
}

function getAll(noPluralKeyChecks) {
  return Object.keys(plurals).reduce(function(locales, lc) {
    locales[lc] = wrapPluralFunc(lc, plurals[lc], noPluralKeyChecks);
    return locales;
  }, {});
}

module.exports = {
  get: get,
  getAll: getAll
};


/***/ }),

/***/ "./node_modules/messageformat/lib/runtime.js":
/*!***************************************************!*\
  !*** ./node_modules/messageformat/lib/runtime.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Compiler = __webpack_require__(/*! ./compiler */ "./node_modules/messageformat/lib/compiler.js");

/** A set of utility functions that are called by the compiled Javascript
 *  functions, these are included locally in the output of {@link
 *  MessageFormat#compile compile()}.
 *
 * @class
 * @private
 * @param {MessageFormat} mf - A MessageFormat instance
 */
function Runtime(mf) {
  this.mf = mf;
  this.setStrictNumber(mf.strictNumberSign);
}

module.exports = Runtime;

/** Utility function for `#` in plural rules
 *
 *  Will throw an Error if `value` has a non-numeric value and `offset` is
 *  non-zero or {@link MessageFormat#setStrictNumberSign} is set.
 *
 * @function Runtime#number
 * @param {number} value - The value to operate on
 * @param {string} name - The name of the argument, used for error reporting
 * @param {number} [offset=0] - An optional offset, set by the surrounding context
 * @returns {number|string} The result of applying the offset to the input value
 */
function defaultNumber(value, name, offset) {
  if (!offset) return value;
  if (isNaN(value))
    throw new Error(
      "Can't apply offset:" +
        offset +
        ' to argument `' +
        name +
        '` with non-numerical value ' +
        JSON.stringify(value) +
        '.'
    );
  return value - offset;
}

/** @private */
function strictNumber(value, name, offset) {
  if (isNaN(value))
    throw new Error(
      'Argument `' +
        name +
        '` has non-numerical value ' +
        JSON.stringify(value) +
        '.'
    );
  return value - (offset || 0);
}

/** Set how strictly the {@link number} method parses its input.
 *
 *  According to the ICU MessageFormat spec, `#` can only be used to replace a
 *  number input of a `plural` statement. By default, messageformat does not
 *  throw a runtime error if you use non-numeric argument with a `plural` rule,
 *  unless rule also includes a non-zero `offset`.
 *
 *  This is called by {@link MessageFormat#setStrictNumberSign} to follow the
 *  stricter ICU MessageFormat spec.
 *
 * @param {boolean} [enable=false]
 */
Runtime.prototype.setStrictNumber = function(enable) {
  this.number = enable ? strictNumber : defaultNumber;
};

/** Utility function for `{N, plural|selectordinal, ...}`
 *
 * @param {number} value - The key to use to find a pluralization rule
 * @param {number} offset - An offset to apply to `value`
 * @param {function} lcfunc - A locale function from `pluralFuncs`
 * @param {Object.<string,string>} data - The object from which results are looked up
 * @param {?boolean} isOrdinal - If true, use ordinal rather than cardinal rules
 * @returns {string} The result of the pluralization
 */
Runtime.prototype.plural = function(value, offset, lcfunc, data, isOrdinal) {
  if ({}.hasOwnProperty.call(data, value)) return data[value];
  if (offset) value -= offset;
  var key = lcfunc(value, isOrdinal);
  if (key in data) return data[key];
  return data.other;
};

/** Utility function for `{N, select, ...}`
 *
 * @param {number} value - The key to use to find a selection
 * @param {Object.<string,string>} data - The object from which results are looked up
 * @returns {string} The result of the select statement
 */
Runtime.prototype.select = function(value, data) {
  if ({}.hasOwnProperty.call(data, value)) return data[value];
  return data.other;
};

/** @private */
Runtime.prototype.toString = function(pluralFuncs, compiler) {
  function _stringify(o, level) {
    if (typeof o != 'object') {
      var funcStr = o.toString().replace(/^(function )\w*/, '$1');
      var funcIndent = /([ \t]*)\S.*$/.exec(funcStr);
      return funcIndent
        ? funcStr.replace(new RegExp('^' + funcIndent[1], 'mg'), '')
        : funcStr;
    }
    var s = [];
    for (var i in o) {
      if (level === 0)
        s.push('var ' + i + ' = ' + _stringify(o[i], level + 1) + ';\n');
      else s.push(Compiler.propname(i) + ': ' + _stringify(o[i], level + 1));
    }
    if (level === 0) return s.join('');
    if (s.length === 0) return '{}';
    var indent = '  ';
    while (--level) indent += '  ';
    return '{\n' + s.join(',\n').replace(/^/gm, indent) + '\n}';
  }

  var obj = {};
  Object.keys(compiler.locales).forEach(function(lc) {
    obj[Compiler.funcname(lc)] = pluralFuncs[lc];
  });
  Object.keys(compiler.runtime).forEach(function(fn) {
    obj[fn] = this[fn];
  }, this);
  var fmtKeys = Object.keys(compiler.formatters);
  var fmt = this.mf.fmt;
  if (fmtKeys.length)
    obj.fmt = fmtKeys.reduce(function(o, key) {
      o[key] = fmt[key];
      return o;
    }, {});
  return _stringify(obj, 0);
};


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/reselect/es/index.js":
/*!*******************************************!*\
  !*** ./node_modules/reselect/es/index.js ***!
  \*******************************************/
/*! exports provided: defaultMemoize, createSelectorCreator, createSelector, createStructuredSelector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultMemoize", function() { return defaultMemoize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSelectorCreator", function() { return createSelectorCreator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSelector", function() { return createSelector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStructuredSelector", function() { return createStructuredSelector; });
function defaultEqualityCheck(a, b) {
  return a === b;
}

function areArgumentsShallowlyEqual(equalityCheck, prev, next) {
  if (prev === null || next === null || prev.length !== next.length) {
    return false;
  }

  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.
  var length = prev.length;
  for (var i = 0; i < length; i++) {
    if (!equalityCheck(prev[i], next[i])) {
      return false;
    }
  }

  return true;
}

function defaultMemoize(func) {
  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;

  var lastArgs = null;
  var lastResult = null;
  // we reference arguments instead of spreading them for performance reasons
  return function () {
    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {
      // apply arguments instead of spreading for performance.
      lastResult = func.apply(null, arguments);
    }

    lastArgs = arguments;
    return lastResult;
  };
}

function getDependencies(funcs) {
  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;

  if (!dependencies.every(function (dep) {
    return typeof dep === 'function';
  })) {
    var dependencyTypes = dependencies.map(function (dep) {
      return typeof dep;
    }).join(', ');
    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));
  }

  return dependencies;
}

function createSelectorCreator(memoize) {
  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    memoizeOptions[_key - 1] = arguments[_key];
  }

  return function () {
    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      funcs[_key2] = arguments[_key2];
    }

    var recomputations = 0;
    var resultFunc = funcs.pop();
    var dependencies = getDependencies(funcs);

    var memoizedResultFunc = memoize.apply(undefined, [function () {
      recomputations++;
      // apply arguments instead of spreading for performance.
      return resultFunc.apply(null, arguments);
    }].concat(memoizeOptions));

    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.
    var selector = memoize(function () {
      var params = [];
      var length = dependencies.length;

      for (var i = 0; i < length; i++) {
        // apply arguments instead of spreading and mutate a local list of params for performance.
        params.push(dependencies[i].apply(null, arguments));
      }

      // apply arguments instead of spreading for performance.
      return memoizedResultFunc.apply(null, params);
    });

    selector.resultFunc = resultFunc;
    selector.dependencies = dependencies;
    selector.recomputations = function () {
      return recomputations;
    };
    selector.resetRecomputations = function () {
      return recomputations = 0;
    };
    return selector;
  };
}

var createSelector = createSelectorCreator(defaultMemoize);

function createStructuredSelector(selectors) {
  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;

  if (typeof selectors !== 'object') {
    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));
  }
  var objectKeys = Object.keys(selectors);
  return selectorCreator(objectKeys.map(function (key) {
    return selectors[key];
  }), function () {
    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      values[_key3] = arguments[_key3];
    }

    return values.reduce(function (composition, value, index) {
      composition[objectKeys[index]] = value;
      return composition;
    }, {});
  });
}

/***/ }),

/***/ "./node_modules/reserved-words/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/reserved-words/lib/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./reserved-words */ "./node_modules/reserved-words/lib/reserved-words.js");


/***/ }),

/***/ "./node_modules/reserved-words/lib/reserved-words.js":
/*!***********************************************************!*\
  !*** ./node_modules/reserved-words/lib/reserved-words.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assert = __webpack_require__(/*! assert */ "./node_modules/assert/assert.js");

/**
 * Structure for storing keywords.
 *
 * @typedef {Object.<String,Boolean>} KeywordsHash
 */

/**
 * ECMAScript dialects.
 *
 * @const
 * @type {Object.<String,Number|String>} - keys as readable names and values as versions
 */
var DIALECTS = {
    es3: 3,
    es5: 5,
    es2015: 6,
    es7: 7,

    // aliases
    es6: 6,
    'default': 5,
    next: 6
};

/**
 * ECMAScript reserved words.
 *
 * @type {Object.<String,KeywordsHash>}
 */
var KEYWORDS = exports.KEYWORDS = {};

/**
 * Check word for being an reserved word.
 *
 * @param {String} word - word to check
 * @param {String|Number} [dialect] - dialect or version
 * @param {Boolean} [strict] - strict mode
 * @returns {?Boolean}
 */
exports.check = function check(word, dialect, strict) {
    dialect = dialect || DIALECTS.default;
    var version = DIALECTS[dialect] || dialect;

    if (strict && version >= 5) {
        version += '-strict';
    }

    assert(KEYWORDS[version], 'Unknown dialect');

    return KEYWORDS[version].hasOwnProperty(word);
};

/**
 * Reserved Words for ES3
 *
 * ECMA-262 3rd: 7.5.1
 * http://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf
 *
 * @type {KeywordsHash}
 */
KEYWORDS['3'] = _hash(
    // Keyword, ECMA-262 3rd: 7.5.2
    'break    else       new     var',
    'case     finally    return  void',
    'catch    for        switch  while',
    'continue function   this    with',
    'default  if         throw',
    'delete   in         try',
    'do       instanceof typeof',
    // FutureReservedWord, ECMA-262 3rd 7.5.3
    'abstract enum       int        short',
    'boolean  export     interface  static',
    'byte     extends    long       super',
    'char     final      native     synchronized',
    'class    float      package    throws',
    'const    goto       private    transient',
    'debugger implements protected  volatile',
    'double   import     public',
    // NullLiteral & BooleanLiteral
    'null true false'
);

/**
 * Reserved Words for ES5.
 *
 * http://es5.github.io/#x7.6.1
 *
 * @type {KeywordsHash}
 */
KEYWORDS['5'] = _hash(
    // Keyword
    'break    do       instanceof typeof',
    'case     else     new        var',
    'catch    finally  return     void',
    'continue for      switch     while',
    'debugger function this       with',
    'default  if       throw',
    'delete   in       try',
    // FutureReservedWord
    'class enum extends super',
    'const export import',
    // NullLiteral & BooleanLiteral
    'null true false'
);

/**
 * Reserved Words for ES5 in strict mode.
 *
 * @type {KeywordsHash}
 */
KEYWORDS['5-strict'] = _hash(
    KEYWORDS['5'],
    // FutureReservedWord, strict mode. http://es5.github.io/#x7.6.1.2
    'implements let     private   public yield',
    'interface  package protected static'
);

/**
 * Reserved Words for ES6.
 *
 * 11.6.2
 * http://www.ecma-international.org/ecma-262/6.0/index.html#sec-reserved-words
 *
 * @type {KeywordsHash}
 */
KEYWORDS['6'] = _hash(
    // Keywords, ES6 11.6.2.1, http://www.ecma-international.org/ecma-262/6.0/index.html#sec-keywords
    'break    do       in         typeof',
    'case     else     instanceof var',
    'catch    export   new        void',
    'class    extends  return     while',
    'const    finally  super      with',
    'continue for      switch     yield',
    'debugger function this',
    'default  if       throw',
    'delete   import   try',
    // Future Reserved Words, ES6 11.6.2.2
    // http://www.ecma-international.org/ecma-262/6.0/index.html#sec-future-reserved-words
    'enum await',
    // NullLiteral & BooleanLiteral
    'null true false'
);

/**
 * Reserved Words for ES6 in strict mode.
 *
 * @type {KeywordsHash}
 */
KEYWORDS['6-strict'] = _hash(
    KEYWORDS['6'],
    // Keywords, ES6 11.6.2.1
    'let static',
    // Future Reserved Words, ES6 11.6.2.2
    'implements package protected',
    'interface private public'
);

/**
 * Generates hash from strings
 *
 * @private
 * @param {...String|KeywordsHash} keywords - Space-delimited string or previous result of _hash
 * @return {KeywordsHash} - Object with keywords in keys and true in values
 */
function _hash() {
    var set = Array.prototype.map.call(arguments, function(v) {
        return typeof v === 'string' ? v : Object.keys(v).join(' ');
    }).join(' ');

    return set.split(/\s+/)
        .reduce(function(res, keyword) {
            res[keyword] = true;
            return res;
        }, {});
}


/***/ }),

/***/ "./node_modules/rxjs/_esm5/index.js":
/*!******************************************!*\
  !*** ./node_modules/rxjs/_esm5/index.js ***!
  \******************************************/
/*! exports provided: Observable, ConnectableObservable, GroupedObservable, observable, Subject, BehaviorSubject, ReplaySubject, AsyncSubject, asap, asapScheduler, async, asyncScheduler, queue, queueScheduler, animationFrame, animationFrameScheduler, VirtualTimeScheduler, VirtualAction, Scheduler, Subscription, Subscriber, Notification, NotificationKind, pipe, noop, identity, isObservable, ArgumentOutOfRangeError, EmptyError, ObjectUnsubscribedError, UnsubscriptionError, TimeoutError, bindCallback, bindNodeCallback, combineLatest, concat, defer, empty, forkJoin, from, fromEvent, fromEventPattern, generate, iif, interval, merge, never, of, onErrorResumeNext, pairs, partition, race, range, throwError, timer, using, zip, scheduled, EMPTY, NEVER, config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Observable", function() { return _internal_Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]; });

/* harmony import */ var _internal_observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/observable/ConnectableObservable */ "./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConnectableObservable", function() { return _internal_observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_1__["ConnectableObservable"]; });

/* harmony import */ var _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/operators/groupBy */ "./node_modules/rxjs/_esm5/internal/operators/groupBy.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_2__["GroupedObservable"]; });

/* harmony import */ var _internal_symbol_observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return _internal_symbol_observable__WEBPACK_IMPORTED_MODULE_3__["observable"]; });

/* harmony import */ var _internal_Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return _internal_Subject__WEBPACK_IMPORTED_MODULE_4__["Subject"]; });

/* harmony import */ var _internal_BehaviorSubject__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/BehaviorSubject */ "./node_modules/rxjs/_esm5/internal/BehaviorSubject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BehaviorSubject", function() { return _internal_BehaviorSubject__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]; });

/* harmony import */ var _internal_ReplaySubject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./internal/ReplaySubject */ "./node_modules/rxjs/_esm5/internal/ReplaySubject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReplaySubject", function() { return _internal_ReplaySubject__WEBPACK_IMPORTED_MODULE_6__["ReplaySubject"]; });

/* harmony import */ var _internal_AsyncSubject__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./internal/AsyncSubject */ "./node_modules/rxjs/_esm5/internal/AsyncSubject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AsyncSubject", function() { return _internal_AsyncSubject__WEBPACK_IMPORTED_MODULE_7__["AsyncSubject"]; });

/* harmony import */ var _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./internal/scheduler/asap */ "./node_modules/rxjs/_esm5/internal/scheduler/asap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asap", function() { return _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__["asap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asapScheduler", function() { return _internal_scheduler_asap__WEBPACK_IMPORTED_MODULE_8__["asapScheduler"]; });

/* harmony import */ var _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./internal/scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "async", function() { return _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__["async"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "asyncScheduler", function() { return _internal_scheduler_async__WEBPACK_IMPORTED_MODULE_9__["asyncScheduler"]; });

/* harmony import */ var _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./internal/scheduler/queue */ "./node_modules/rxjs/_esm5/internal/scheduler/queue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "queue", function() { return _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__["queue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "queueScheduler", function() { return _internal_scheduler_queue__WEBPACK_IMPORTED_MODULE_10__["queueScheduler"]; });

/* harmony import */ var _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./internal/scheduler/animationFrame */ "./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animationFrame", function() { return _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__["animationFrame"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animationFrameScheduler", function() { return _internal_scheduler_animationFrame__WEBPACK_IMPORTED_MODULE_11__["animationFrameScheduler"]; });

/* harmony import */ var _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./internal/scheduler/VirtualTimeScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VirtualTimeScheduler", function() { return _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__["VirtualTimeScheduler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VirtualAction", function() { return _internal_scheduler_VirtualTimeScheduler__WEBPACK_IMPORTED_MODULE_12__["VirtualAction"]; });

/* harmony import */ var _internal_Scheduler__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./internal/Scheduler */ "./node_modules/rxjs/_esm5/internal/Scheduler.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scheduler", function() { return _internal_Scheduler__WEBPACK_IMPORTED_MODULE_13__["Scheduler"]; });

/* harmony import */ var _internal_Subscription__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./internal/Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subscription", function() { return _internal_Subscription__WEBPACK_IMPORTED_MODULE_14__["Subscription"]; });

/* harmony import */ var _internal_Subscriber__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./internal/Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subscriber", function() { return _internal_Subscriber__WEBPACK_IMPORTED_MODULE_15__["Subscriber"]; });

/* harmony import */ var _internal_Notification__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./internal/Notification */ "./node_modules/rxjs/_esm5/internal/Notification.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Notification", function() { return _internal_Notification__WEBPACK_IMPORTED_MODULE_16__["Notification"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NotificationKind", function() { return _internal_Notification__WEBPACK_IMPORTED_MODULE_16__["NotificationKind"]; });

/* harmony import */ var _internal_util_pipe__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./internal/util/pipe */ "./node_modules/rxjs/_esm5/internal/util/pipe.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return _internal_util_pipe__WEBPACK_IMPORTED_MODULE_17__["pipe"]; });

/* harmony import */ var _internal_util_noop__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./internal/util/noop */ "./node_modules/rxjs/_esm5/internal/util/noop.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return _internal_util_noop__WEBPACK_IMPORTED_MODULE_18__["noop"]; });

/* harmony import */ var _internal_util_identity__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./internal/util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return _internal_util_identity__WEBPACK_IMPORTED_MODULE_19__["identity"]; });

/* harmony import */ var _internal_util_isObservable__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./internal/util/isObservable */ "./node_modules/rxjs/_esm5/internal/util/isObservable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObservable", function() { return _internal_util_isObservable__WEBPACK_IMPORTED_MODULE_20__["isObservable"]; });

/* harmony import */ var _internal_util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./internal/util/ArgumentOutOfRangeError */ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return _internal_util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_21__["ArgumentOutOfRangeError"]; });

/* harmony import */ var _internal_util_EmptyError__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./internal/util/EmptyError */ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EmptyError", function() { return _internal_util_EmptyError__WEBPACK_IMPORTED_MODULE_22__["EmptyError"]; });

/* harmony import */ var _internal_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./internal/util/ObjectUnsubscribedError */ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return _internal_util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_23__["ObjectUnsubscribedError"]; });

/* harmony import */ var _internal_util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./internal/util/UnsubscriptionError */ "./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return _internal_util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_24__["UnsubscriptionError"]; });

/* harmony import */ var _internal_util_TimeoutError__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./internal/util/TimeoutError */ "./node_modules/rxjs/_esm5/internal/util/TimeoutError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return _internal_util_TimeoutError__WEBPACK_IMPORTED_MODULE_25__["TimeoutError"]; });

/* harmony import */ var _internal_observable_bindCallback__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./internal/observable/bindCallback */ "./node_modules/rxjs/_esm5/internal/observable/bindCallback.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindCallback", function() { return _internal_observable_bindCallback__WEBPACK_IMPORTED_MODULE_26__["bindCallback"]; });

/* harmony import */ var _internal_observable_bindNodeCallback__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./internal/observable/bindNodeCallback */ "./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bindNodeCallback", function() { return _internal_observable_bindNodeCallback__WEBPACK_IMPORTED_MODULE_27__["bindNodeCallback"]; });

/* harmony import */ var _internal_observable_combineLatest__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./internal/observable/combineLatest */ "./node_modules/rxjs/_esm5/internal/observable/combineLatest.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return _internal_observable_combineLatest__WEBPACK_IMPORTED_MODULE_28__["combineLatest"]; });

/* harmony import */ var _internal_observable_concat__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./internal/observable/concat */ "./node_modules/rxjs/_esm5/internal/observable/concat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _internal_observable_concat__WEBPACK_IMPORTED_MODULE_29__["concat"]; });

/* harmony import */ var _internal_observable_defer__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./internal/observable/defer */ "./node_modules/rxjs/_esm5/internal/observable/defer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return _internal_observable_defer__WEBPACK_IMPORTED_MODULE_30__["defer"]; });

/* harmony import */ var _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./internal/observable/empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__["empty"]; });

/* harmony import */ var _internal_observable_forkJoin__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./internal/observable/forkJoin */ "./node_modules/rxjs/_esm5/internal/observable/forkJoin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "forkJoin", function() { return _internal_observable_forkJoin__WEBPACK_IMPORTED_MODULE_32__["forkJoin"]; });

/* harmony import */ var _internal_observable_from__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./internal/observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "from", function() { return _internal_observable_from__WEBPACK_IMPORTED_MODULE_33__["from"]; });

/* harmony import */ var _internal_observable_fromEvent__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./internal/observable/fromEvent */ "./node_modules/rxjs/_esm5/internal/observable/fromEvent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromEvent", function() { return _internal_observable_fromEvent__WEBPACK_IMPORTED_MODULE_34__["fromEvent"]; });

/* harmony import */ var _internal_observable_fromEventPattern__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./internal/observable/fromEventPattern */ "./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fromEventPattern", function() { return _internal_observable_fromEventPattern__WEBPACK_IMPORTED_MODULE_35__["fromEventPattern"]; });

/* harmony import */ var _internal_observable_generate__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./internal/observable/generate */ "./node_modules/rxjs/_esm5/internal/observable/generate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return _internal_observable_generate__WEBPACK_IMPORTED_MODULE_36__["generate"]; });

/* harmony import */ var _internal_observable_iif__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./internal/observable/iif */ "./node_modules/rxjs/_esm5/internal/observable/iif.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "iif", function() { return _internal_observable_iif__WEBPACK_IMPORTED_MODULE_37__["iif"]; });

/* harmony import */ var _internal_observable_interval__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./internal/observable/interval */ "./node_modules/rxjs/_esm5/internal/observable/interval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return _internal_observable_interval__WEBPACK_IMPORTED_MODULE_38__["interval"]; });

/* harmony import */ var _internal_observable_merge__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./internal/observable/merge */ "./node_modules/rxjs/_esm5/internal/observable/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _internal_observable_merge__WEBPACK_IMPORTED_MODULE_39__["merge"]; });

/* harmony import */ var _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./internal/observable/never */ "./node_modules/rxjs/_esm5/internal/observable/never.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "never", function() { return _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__["never"]; });

/* harmony import */ var _internal_observable_of__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./internal/observable/of */ "./node_modules/rxjs/_esm5/internal/observable/of.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "of", function() { return _internal_observable_of__WEBPACK_IMPORTED_MODULE_41__["of"]; });

/* harmony import */ var _internal_observable_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./internal/observable/onErrorResumeNext */ "./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return _internal_observable_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_42__["onErrorResumeNext"]; });

/* harmony import */ var _internal_observable_pairs__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./internal/observable/pairs */ "./node_modules/rxjs/_esm5/internal/observable/pairs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _internal_observable_pairs__WEBPACK_IMPORTED_MODULE_43__["pairs"]; });

/* harmony import */ var _internal_observable_partition__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./internal/observable/partition */ "./node_modules/rxjs/_esm5/internal/observable/partition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _internal_observable_partition__WEBPACK_IMPORTED_MODULE_44__["partition"]; });

/* harmony import */ var _internal_observable_race__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./internal/observable/race */ "./node_modules/rxjs/_esm5/internal/observable/race.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "race", function() { return _internal_observable_race__WEBPACK_IMPORTED_MODULE_45__["race"]; });

/* harmony import */ var _internal_observable_range__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./internal/observable/range */ "./node_modules/rxjs/_esm5/internal/observable/range.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _internal_observable_range__WEBPACK_IMPORTED_MODULE_46__["range"]; });

/* harmony import */ var _internal_observable_throwError__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./internal/observable/throwError */ "./node_modules/rxjs/_esm5/internal/observable/throwError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return _internal_observable_throwError__WEBPACK_IMPORTED_MODULE_47__["throwError"]; });

/* harmony import */ var _internal_observable_timer__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./internal/observable/timer */ "./node_modules/rxjs/_esm5/internal/observable/timer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return _internal_observable_timer__WEBPACK_IMPORTED_MODULE_48__["timer"]; });

/* harmony import */ var _internal_observable_using__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./internal/observable/using */ "./node_modules/rxjs/_esm5/internal/observable/using.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "using", function() { return _internal_observable_using__WEBPACK_IMPORTED_MODULE_49__["using"]; });

/* harmony import */ var _internal_observable_zip__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./internal/observable/zip */ "./node_modules/rxjs/_esm5/internal/observable/zip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _internal_observable_zip__WEBPACK_IMPORTED_MODULE_50__["zip"]; });

/* harmony import */ var _internal_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./internal/scheduled/scheduled */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scheduled", function() { return _internal_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_51__["scheduled"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EMPTY", function() { return _internal_observable_empty__WEBPACK_IMPORTED_MODULE_31__["EMPTY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NEVER", function() { return _internal_observable_never__WEBPACK_IMPORTED_MODULE_40__["NEVER"]; });

/* harmony import */ var _internal_config__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./internal/config */ "./node_modules/rxjs/_esm5/internal/config.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "config", function() { return _internal_config__WEBPACK_IMPORTED_MODULE_52__["config"]; });

/** PURE_IMPORTS_START  PURE_IMPORTS_END */























































//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/AsyncSubject.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/AsyncSubject.js ***!
  \**********************************************************/
/*! exports provided: AsyncSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncSubject", function() { return AsyncSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */



var AsyncSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncSubject, _super);
    function AsyncSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.value = null;
        _this.hasNext = false;
        _this.hasCompleted = false;
        return _this;
    }
    AsyncSubject.prototype._subscribe = function (subscriber) {
        if (this.hasError) {
            subscriber.error(this.thrownError);
            return _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
        }
        else if (this.hasCompleted && this.hasNext) {
            subscriber.next(this.value);
            subscriber.complete();
            return _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"].EMPTY;
        }
        return _super.prototype._subscribe.call(this, subscriber);
    };
    AsyncSubject.prototype.next = function (value) {
        if (!this.hasCompleted) {
            this.value = value;
            this.hasNext = true;
        }
    };
    AsyncSubject.prototype.error = function (error) {
        if (!this.hasCompleted) {
            _super.prototype.error.call(this, error);
        }
    };
    AsyncSubject.prototype.complete = function () {
        this.hasCompleted = true;
        if (this.hasNext) {
            _super.prototype.next.call(this, this.value);
        }
        _super.prototype.complete.call(this);
    };
    return AsyncSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]));

//# sourceMappingURL=AsyncSubject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/BehaviorSubject.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/BehaviorSubject.js ***!
  \*************************************************************/
/*! exports provided: BehaviorSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BehaviorSubject", function() { return BehaviorSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js");
/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */



var BehaviorSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        var _this = _super.call(this) || this;
        _this._value = _value;
        return _this;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: true,
        configurable: true
    });
    BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        if (subscription && !subscription.closed) {
            subscriber.next(this._value);
        }
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        if (this.hasError) {
            throw this.thrownError;
        }
        else if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_2__["ObjectUnsubscribedError"]();
        }
        else {
            return this._value;
        }
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, this._value = value);
    };
    return BehaviorSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]));

//# sourceMappingURL=BehaviorSubject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/InnerSubscriber.js ***!
  \*************************************************************/
/*! exports provided: InnerSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InnerSubscriber", function() { return InnerSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var InnerSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.outerValue = outerValue;
        _this.outerIndex = outerIndex;
        _this.index = 0;
        return _this;
    }
    InnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error, this);
        this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return InnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

//# sourceMappingURL=InnerSubscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Notification.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Notification.js ***!
  \**********************************************************/
/*! exports provided: NotificationKind, Notification */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationKind", function() { return NotificationKind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Notification", function() { return Notification; });
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./observable/empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/* harmony import */ var _observable_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observable/of */ "./node_modules/rxjs/_esm5/internal/observable/of.js");
/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observable/throwError */ "./node_modules/rxjs/_esm5/internal/observable/throwError.js");
/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */



var NotificationKind;
/*@__PURE__*/ (function (NotificationKind) {
    NotificationKind["NEXT"] = "N";
    NotificationKind["ERROR"] = "E";
    NotificationKind["COMPLETE"] = "C";
})(NotificationKind || (NotificationKind = {}));
var Notification = /*@__PURE__*/ (function () {
    function Notification(kind, value, error) {
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    }
    Notification.prototype.observe = function (observer) {
        switch (this.kind) {
            case 'N':
                return observer.next && observer.next(this.value);
            case 'E':
                return observer.error && observer.error(this.error);
            case 'C':
                return observer.complete && observer.complete();
        }
    };
    Notification.prototype.do = function (next, error, complete) {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return next && next(this.value);
            case 'E':
                return error && error(this.error);
            case 'C':
                return complete && complete();
        }
    };
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
        if (nextOrObserver && typeof nextOrObserver.next === 'function') {
            return this.observe(nextOrObserver);
        }
        else {
            return this.do(nextOrObserver, error, complete);
        }
    };
    Notification.prototype.toObservable = function () {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return Object(_observable_of__WEBPACK_IMPORTED_MODULE_1__["of"])(this.value);
            case 'E':
                return Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_2__["throwError"])(this.error);
            case 'C':
                return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_0__["empty"])();
        }
        throw new Error('unexpected notification kind value');
    };
    Notification.createNext = function (value) {
        if (typeof value !== 'undefined') {
            return new Notification('N', value);
        }
        return Notification.undefinedValueNotification;
    };
    Notification.createError = function (err) {
        return new Notification('E', undefined, err);
    };
    Notification.createComplete = function () {
        return Notification.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
}());

//# sourceMappingURL=Notification.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Observable.js":
/*!********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Observable.js ***!
  \********************************************************/
/*! exports provided: Observable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Observable", function() { return Observable; });
/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/canReportError */ "./node_modules/rxjs/_esm5/internal/util/canReportError.js");
/* harmony import */ var _util_toSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/toSubscriber */ "./node_modules/rxjs/_esm5/internal/util/toSubscriber.js");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/pipe */ "./node_modules/rxjs/_esm5/internal/util/pipe.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config */ "./node_modules/rxjs/_esm5/internal/config.js");
/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */





var Observable = /*@__PURE__*/ (function () {
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = Object(_util_toSubscriber__WEBPACK_IMPORTED_MODULE_1__["toSubscriber"])(observerOrNext, error, complete);
        if (operator) {
            sink.add(operator.call(sink, this.source));
        }
        else {
            sink.add(this.source || (_config__WEBPACK_IMPORTED_MODULE_4__["config"].useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?
                this._subscribe(sink) :
                this._trySubscribe(sink));
        }
        if (_config__WEBPACK_IMPORTED_MODULE_4__["config"].useDeprecatedSynchronousErrorHandling) {
            if (sink.syncErrorThrowable) {
                sink.syncErrorThrowable = false;
                if (sink.syncErrorThrown) {
                    throw sink.syncErrorValue;
                }
            }
        }
        return sink;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            if (_config__WEBPACK_IMPORTED_MODULE_4__["config"].useDeprecatedSynchronousErrorHandling) {
                sink.syncErrorThrown = true;
                sink.syncErrorValue = err;
            }
            if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_0__["canReportError"])(sink)) {
                sink.error(err);
            }
            else {
                console.warn(err);
            }
        }
    };
    Observable.prototype.forEach = function (next, promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var subscription;
            subscription = _this.subscribe(function (value) {
                try {
                    next(value);
                }
                catch (err) {
                    reject(err);
                    if (subscription) {
                        subscription.unsubscribe();
                    }
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        var source = this.source;
        return source && source.subscribe(subscriber);
    };
    Observable.prototype[_symbol_observable__WEBPACK_IMPORTED_MODULE_2__["observable"]] = function () {
        return this;
    };
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i] = arguments[_i];
        }
        if (operations.length === 0) {
            return this;
        }
        return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__["pipeFromArray"])(operations)(this);
    };
    Observable.prototype.toPromise = function (promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());

function getPromiseCtor(promiseCtor) {
    if (!promiseCtor) {
        promiseCtor = _config__WEBPACK_IMPORTED_MODULE_4__["config"].Promise || Promise;
    }
    if (!promiseCtor) {
        throw new Error('no Promise impl found');
    }
    return promiseCtor;
}
//# sourceMappingURL=Observable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Observer.js":
/*!******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Observer.js ***!
  \******************************************************/
/*! exports provided: empty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ "./node_modules/rxjs/_esm5/internal/config.js");
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/hostReportError */ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js");
/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */


var empty = {
    closed: true,
    next: function (value) { },
    error: function (err) {
        if (_config__WEBPACK_IMPORTED_MODULE_0__["config"].useDeprecatedSynchronousErrorHandling) {
            throw err;
        }
        else {
            Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_1__["hostReportError"])(err);
        }
    },
    complete: function () { }
};
//# sourceMappingURL=Observer.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/OuterSubscriber.js ***!
  \*************************************************************/
/*! exports provided: OuterSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OuterSubscriber", function() { return OuterSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


var OuterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](OuterSubscriber, _super);
    function OuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
        this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
        this.destination.complete();
    };
    return OuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

//# sourceMappingURL=OuterSubscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/ReplaySubject.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/ReplaySubject.js ***!
  \***********************************************************/
/*! exports provided: ReplaySubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReplaySubject", function() { return ReplaySubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _scheduler_queue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scheduler/queue */ "./node_modules/rxjs/_esm5/internal/scheduler/queue.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _operators_observeOn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operators/observeOn */ "./node_modules/rxjs/_esm5/internal/operators/observeOn.js");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js");
/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SubjectSubscription */ "./node_modules/rxjs/_esm5/internal/SubjectSubscription.js");
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */







var ReplaySubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ReplaySubject, _super);
    function ReplaySubject(bufferSize, windowTime, scheduler) {
        if (bufferSize === void 0) {
            bufferSize = Number.POSITIVE_INFINITY;
        }
        if (windowTime === void 0) {
            windowTime = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this) || this;
        _this.scheduler = scheduler;
        _this._events = [];
        _this._infiniteTimeWindow = false;
        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
        _this._windowTime = windowTime < 1 ? 1 : windowTime;
        if (windowTime === Number.POSITIVE_INFINITY) {
            _this._infiniteTimeWindow = true;
            _this.next = _this.nextInfiniteTimeWindow;
        }
        else {
            _this.next = _this.nextTimeWindow;
        }
        return _this;
    }
    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {
        if (!this.isStopped) {
            var _events = this._events;
            _events.push(value);
            if (_events.length > this._bufferSize) {
                _events.shift();
            }
        }
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype.nextTimeWindow = function (value) {
        if (!this.isStopped) {
            this._events.push(new ReplayEvent(this._getNow(), value));
            this._trimBufferThenGetEvents();
        }
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        var _infiniteTimeWindow = this._infiniteTimeWindow;
        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();
        var scheduler = this.scheduler;
        var len = _events.length;
        var subscription;
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_5__["ObjectUnsubscribedError"]();
        }
        else if (this.isStopped || this.hasError) {
            subscription = _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            subscription = new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_6__["SubjectSubscription"](this, subscriber);
        }
        if (scheduler) {
            subscriber.add(subscriber = new _operators_observeOn__WEBPACK_IMPORTED_MODULE_4__["ObserveOnSubscriber"](subscriber, scheduler));
        }
        if (_infiniteTimeWindow) {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i]);
            }
        }
        else {
            for (var i = 0; i < len && !subscriber.closed; i++) {
                subscriber.next(_events[i].value);
            }
        }
        if (this.hasError) {
            subscriber.error(this.thrownError);
        }
        else if (this.isStopped) {
            subscriber.complete();
        }
        return subscription;
    };
    ReplaySubject.prototype._getNow = function () {
        return (this.scheduler || _scheduler_queue__WEBPACK_IMPORTED_MODULE_2__["queue"]).now();
    };
    ReplaySubject.prototype._trimBufferThenGetEvents = function () {
        var now = this._getNow();
        var _bufferSize = this._bufferSize;
        var _windowTime = this._windowTime;
        var _events = this._events;
        var eventsCount = _events.length;
        var spliceCount = 0;
        while (spliceCount < eventsCount) {
            if ((now - _events[spliceCount].time) < _windowTime) {
                break;
            }
            spliceCount++;
        }
        if (eventsCount > _bufferSize) {
            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
        }
        if (spliceCount > 0) {
            _events.splice(0, spliceCount);
        }
        return _events;
    };
    return ReplaySubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]));

var ReplayEvent = /*@__PURE__*/ (function () {
    function ReplayEvent(time, value) {
        this.time = time;
        this.value = value;
    }
    return ReplayEvent;
}());
//# sourceMappingURL=ReplaySubject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Scheduler.js":
/*!*******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Scheduler.js ***!
  \*******************************************************/
/*! exports provided: Scheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scheduler", function() { return Scheduler; });
var Scheduler = /*@__PURE__*/ (function () {
    function Scheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = Scheduler.now;
        }
        this.SchedulerAction = SchedulerAction;
        this.now = now;
    }
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        return new this.SchedulerAction(this, work).schedule(state, delay);
    };
    Scheduler.now = function () { return Date.now(); };
    return Scheduler;
}());

//# sourceMappingURL=Scheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Subject.js":
/*!*****************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Subject.js ***!
  \*****************************************************/
/*! exports provided: SubjectSubscriber, Subject, AnonymousSubject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectSubscriber", function() { return SubjectSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return Subject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnonymousSubject", function() { return AnonymousSubject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js");
/* harmony import */ var _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SubjectSubscription */ "./node_modules/rxjs/_esm5/internal/SubjectSubscription.js");
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/symbol/rxSubscriber */ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js");
/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */







var SubjectSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubjectSubscriber, _super);
    function SubjectSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        return _this;
    }
    return SubjectSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__["Subscriber"]));

var Subject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Subject, _super);
    function Subject() {
        var _this = _super.call(this) || this;
        _this.observers = [];
        _this.closed = false;
        _this.isStopped = false;
        _this.hasError = false;
        _this.thrownError = null;
        return _this;
    }
    Subject.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_6__["rxSubscriber"]] = function () {
        return new SubjectSubscriber(this);
    };
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype.next = function (value) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        if (!this.isStopped) {
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].next(value);
            }
        }
    };
    Subject.prototype.error = function (err) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].error(err);
        }
        this.observers.length = 0;
    };
    Subject.prototype.complete = function () {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].complete();
        }
        this.observers.length = 0;
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
    };
    Subject.prototype._trySubscribe = function (subscriber) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        else {
            return _super.prototype._trySubscribe.call(this, subscriber);
        }
    };
    Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_4__["ObjectUnsubscribedError"]();
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
        else if (this.isStopped) {
            subscriber.complete();
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
        else {
            this.observers.push(subscriber);
            return new _SubjectSubscription__WEBPACK_IMPORTED_MODULE_5__["SubjectSubscription"](this, subscriber);
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new _Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"]();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(_Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"]));

var AnonymousSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        var _this = _super.call(this) || this;
        _this.destination = destination;
        _this.source = source;
        return _this;
    }
    AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;
        if (destination && destination.next) {
            destination.next(value);
        }
    };
    AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;
        if (destination && destination.error) {
            this.destination.error(err);
        }
    };
    AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;
        if (destination && destination.complete) {
            this.destination.complete();
        }
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;
        if (source) {
            return this.source.subscribe(subscriber);
        }
        else {
            return _Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"].EMPTY;
        }
    };
    return AnonymousSubject;
}(Subject));

//# sourceMappingURL=Subject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/SubjectSubscription.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/SubjectSubscription.js ***!
  \*****************************************************************/
/*! exports provided: SubjectSubscription */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectSubscription", function() { return SubjectSubscription; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var SubjectSubscription = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubjectSubscription, _super);
    function SubjectSubscription(subject, subscriber) {
        var _this = _super.call(this) || this;
        _this.subject = subject;
        _this.subscriber = subscriber;
        _this.closed = false;
        return _this;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;
        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
            return;
        }
        var subscriberIndex = observers.indexOf(this.subscriber);
        if (subscriberIndex !== -1) {
            observers.splice(subscriberIndex, 1);
        }
    };
    return SubjectSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]));

//# sourceMappingURL=SubjectSubscription.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Subscriber.js":
/*!********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Subscriber.js ***!
  \********************************************************/
/*! exports provided: Subscriber, SafeSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subscriber", function() { return Subscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SafeSubscriber", function() { return SafeSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Observer */ "./node_modules/rxjs/_esm5/internal/Observer.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/symbol/rxSubscriber */ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config */ "./node_modules/rxjs/_esm5/internal/config.js");
/* harmony import */ var _util_hostReportError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util/hostReportError */ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js");
/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */







var Subscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Subscriber, _super);
    function Subscriber(destinationOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this.syncErrorValue = null;
        _this.syncErrorThrown = false;
        _this.syncErrorThrowable = false;
        _this.isStopped = false;
        switch (arguments.length) {
            case 0:
                _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"];
                break;
            case 1:
                if (!destinationOrNext) {
                    _this.destination = _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"];
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                        _this.destination = destinationOrNext;
                        destinationOrNext.add(_this);
                    }
                    else {
                        _this.syncErrorThrowable = true;
                        _this.destination = new SafeSubscriber(_this, destinationOrNext);
                    }
                    break;
                }
            default:
                _this.syncErrorThrowable = true;
                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
                break;
        }
        return _this;
    }
    Subscriber.prototype[_internal_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_4__["rxSubscriber"]] = function () { return this; };
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    Subscriber.prototype._unsubscribeAndRecycle = function () {
        var _parentOrParents = this._parentOrParents;
        this._parentOrParents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parentOrParents = _parentOrParents;
        return this;
    };
    return Subscriber;
}(_Subscription__WEBPACK_IMPORTED_MODULE_3__["Subscription"]));

var SafeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SafeSubscriber, _super);
    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
        var _this = _super.call(this) || this;
        _this._parentSubscriber = _parentSubscriber;
        var next;
        var context = _this;
        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (observerOrNext !== _Observer__WEBPACK_IMPORTED_MODULE_2__["empty"]) {
                context = Object.create(observerOrNext);
                if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(context.unsubscribe)) {
                    _this.add(context.unsubscribe.bind(context));
                }
                context.unsubscribe = _this.unsubscribe.bind(_this);
            }
        }
        _this._context = context;
        _this._next = next;
        _this._error = error;
        _this._complete = complete;
        return _this;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parentSubscriber = this._parentSubscriber;
            if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            var useDeprecatedSynchronousErrorHandling = _config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling;
            if (this._error) {
                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parentSubscriber.syncErrorThrowable) {
                this.unsubscribe();
                if (useDeprecatedSynchronousErrorHandling) {
                    throw err;
                }
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
            }
            else {
                if (useDeprecatedSynchronousErrorHandling) {
                    _parentSubscriber.syncErrorValue = err;
                    _parentSubscriber.syncErrorThrown = true;
                }
                else {
                    Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
                }
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        var _this = this;
        if (!this.isStopped) {
            var _parentSubscriber = this._parentSubscriber;
            if (this._complete) {
                var wrappedComplete = function () { return _this._complete.call(_this._context); };
                if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(wrappedComplete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            if (_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
                throw err;
            }
            else {
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
            }
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        if (!_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
            throw new Error('bad call');
        }
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            if (_config__WEBPACK_IMPORTED_MODULE_5__["config"].useDeprecatedSynchronousErrorHandling) {
                parent.syncErrorValue = err;
                parent.syncErrorThrown = true;
                return true;
            }
            else {
                Object(_util_hostReportError__WEBPACK_IMPORTED_MODULE_6__["hostReportError"])(err);
                return true;
            }
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;
        _parentSubscriber.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));

//# sourceMappingURL=Subscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/Subscription.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/Subscription.js ***!
  \**********************************************************/
/*! exports provided: Subscription */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subscription", function() { return Subscription; });
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _util_isObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/isObject */ "./node_modules/rxjs/_esm5/internal/util/isObject.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/* harmony import */ var _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/UnsubscriptionError */ "./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js");
/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */




var Subscription = /*@__PURE__*/ (function () {
    function Subscription(unsubscribe) {
        this.closed = false;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (unsubscribe) {
            this._ctorUnsubscribe = true;
            this._unsubscribe = unsubscribe;
        }
    }
    Subscription.prototype.unsubscribe = function () {
        var errors;
        if (this.closed) {
            return;
        }
        var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this.closed = true;
        this._parentOrParents = null;
        this._subscriptions = null;
        if (_parentOrParents instanceof Subscription) {
            _parentOrParents.remove(this);
        }
        else if (_parentOrParents !== null) {
            for (var index = 0; index < _parentOrParents.length; ++index) {
                var parent_1 = _parentOrParents[index];
                parent_1.remove(this);
            }
        }
        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(_unsubscribe)) {
            if (_ctorUnsubscribe) {
                this._unsubscribe = undefined;
            }
            try {
                _unsubscribe.call(this);
            }
            catch (e) {
                errors = e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"] ? flattenUnsubscriptionErrors(e.errors) : [e];
            }
        }
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(_subscriptions)) {
            var index = -1;
            var len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (Object(_util_isObject__WEBPACK_IMPORTED_MODULE_1__["isObject"])(sub)) {
                    try {
                        sub.unsubscribe();
                    }
                    catch (e) {
                        errors = errors || [];
                        if (e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"]) {
                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                        }
                        else {
                            errors.push(e);
                        }
                    }
                }
            }
        }
        if (errors) {
            throw new _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"](errors);
        }
    };
    Subscription.prototype.add = function (teardown) {
        var subscription = teardown;
        if (!teardown) {
            return Subscription.EMPTY;
        }
        switch (typeof teardown) {
            case 'function':
                subscription = new Subscription(teardown);
            case 'object':
                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
                    return subscription;
                }
                else if (this.closed) {
                    subscription.unsubscribe();
                    return subscription;
                }
                else if (!(subscription instanceof Subscription)) {
                    var tmp = subscription;
                    subscription = new Subscription();
                    subscription._subscriptions = [tmp];
                }
                break;
            default: {
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
            }
        }
        var _parentOrParents = subscription._parentOrParents;
        if (_parentOrParents === null) {
            subscription._parentOrParents = this;
        }
        else if (_parentOrParents instanceof Subscription) {
            if (_parentOrParents === this) {
                return subscription;
            }
            subscription._parentOrParents = [_parentOrParents, this];
        }
        else if (_parentOrParents.indexOf(this) === -1) {
            _parentOrParents.push(this);
        }
        else {
            return subscription;
        }
        var subscriptions = this._subscriptions;
        if (subscriptions === null) {
            this._subscriptions = [subscription];
        }
        else {
            subscriptions.push(subscription);
        }
        return subscription;
    };
    Subscription.prototype.remove = function (subscription) {
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());

function flattenUnsubscriptionErrors(errors) {
    return errors.reduce(function (errs, err) { return errs.concat((err instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_3__["UnsubscriptionError"]) ? err.errors : err); }, []);
}
//# sourceMappingURL=Subscription.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/config.js":
/*!****************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/config.js ***!
  \****************************************************/
/*! exports provided: config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "config", function() { return config; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var _enable_super_gross_mode_that_will_cause_bad_things = false;
var config = {
    Promise: undefined,
    set useDeprecatedSynchronousErrorHandling(value) {
        if (value) {
            var error = /*@__PURE__*/ new Error();
            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
        }
        else if (_enable_super_gross_mode_that_will_cause_bad_things) {
            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');
        }
        _enable_super_gross_mode_that_will_cause_bad_things = value;
    },
    get useDeprecatedSynchronousErrorHandling() {
        return _enable_super_gross_mode_that_will_cause_bad_things;
    },
};
//# sourceMappingURL=config.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/innerSubscribe.js ***!
  \************************************************************/
/*! exports provided: SimpleInnerSubscriber, ComplexInnerSubscriber, SimpleOuterSubscriber, ComplexOuterSubscriber, innerSubscribe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleInnerSubscriber", function() { return SimpleInnerSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComplexInnerSubscriber", function() { return ComplexInnerSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleOuterSubscriber", function() { return SimpleOuterSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComplexOuterSubscriber", function() { return ComplexOuterSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "innerSubscribe", function() { return innerSubscribe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/subscribeTo */ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_util_subscribeTo PURE_IMPORTS_END */




var SimpleInnerSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SimpleInnerSubscriber, _super);
    function SimpleInnerSubscriber(parent) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        return _this;
    }
    SimpleInnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(value);
    };
    SimpleInnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error);
        this.unsubscribe();
    };
    SimpleInnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete();
        this.unsubscribe();
    };
    return SimpleInnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

var ComplexInnerSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ComplexInnerSubscriber, _super);
    function ComplexInnerSubscriber(parent, outerValue, outerIndex) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.outerValue = outerValue;
        _this.outerIndex = outerIndex;
        return _this;
    }
    ComplexInnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);
    };
    ComplexInnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error);
        this.unsubscribe();
    };
    ComplexInnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return ComplexInnerSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

var SimpleOuterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SimpleOuterSubscriber, _super);
    function SimpleOuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SimpleOuterSubscriber.prototype.notifyNext = function (innerValue) {
        this.destination.next(innerValue);
    };
    SimpleOuterSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    SimpleOuterSubscriber.prototype.notifyComplete = function () {
        this.destination.complete();
    };
    return SimpleOuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

var ComplexOuterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ComplexOuterSubscriber, _super);
    function ComplexOuterSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ComplexOuterSubscriber.prototype.notifyNext = function (_outerValue, innerValue, _outerIndex, _innerSub) {
        this.destination.next(innerValue);
    };
    ComplexOuterSubscriber.prototype.notifyError = function (error) {
        this.destination.error(error);
    };
    ComplexOuterSubscriber.prototype.notifyComplete = function (_innerSub) {
        this.destination.complete();
    };
    return ComplexOuterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

function innerSubscribe(result, innerSubscriber) {
    if (innerSubscriber.closed) {
        return undefined;
    }
    if (result instanceof _Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]) {
        return result.subscribe(innerSubscriber);
    }
    return Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_3__["subscribeTo"])(result)(innerSubscriber);
}
//# sourceMappingURL=innerSubscribe.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js ***!
  \******************************************************************************/
/*! exports provided: ConnectableObservable, connectableObservableDescriptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectableObservable", function() { return ConnectableObservable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "connectableObservableDescriptor", function() { return connectableObservableDescriptor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _operators_refCount__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operators/refCount */ "./node_modules/rxjs/_esm5/internal/operators/refCount.js");
/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */






var ConnectableObservable = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subjectFactory = subjectFactory;
        _this._refCount = 0;
        _this._isComplete = false;
        return _this;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype.connect = function () {
        var connection = this._connection;
        if (!connection) {
            this._isComplete = false;
            connection = this._connection = new _Subscription__WEBPACK_IMPORTED_MODULE_4__["Subscription"]();
            connection.add(this.source
                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
            if (connection.closed) {
                this._connection = null;
                connection = _Subscription__WEBPACK_IMPORTED_MODULE_4__["Subscription"].EMPTY;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return Object(_operators_refCount__WEBPACK_IMPORTED_MODULE_5__["refCount"])()(this);
    };
    return ConnectableObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]));

var connectableObservableDescriptor = /*@__PURE__*/ (function () {
    var connectableProto = ConnectableObservable.prototype;
    return {
        operator: { value: null },
        _refCount: { value: 0, writable: true },
        _subject: { value: null, writable: true },
        _connection: { value: null, writable: true },
        _subscribe: { value: connectableProto._subscribe },
        _isComplete: { value: connectableProto._isComplete, writable: true },
        getSubject: { value: connectableProto.getSubject },
        connect: { value: connectableProto.connect },
        refCount: { value: connectableProto.refCount }
    };
})();
var ConnectableSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ConnectableSubscriber, _super);
    function ConnectableSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    ConnectableSubscriber.prototype._error = function (err) {
        this._unsubscribe();
        _super.prototype._error.call(this, err);
    };
    ConnectableSubscriber.prototype._complete = function () {
        this.connectable._isComplete = true;
        this._unsubscribe();
        _super.prototype._complete.call(this);
    };
    ConnectableSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (connectable) {
            this.connectable = null;
            var connection = connectable._connection;
            connectable._refCount = 0;
            connectable._subject = null;
            connectable._connection = null;
            if (connection) {
                connection.unsubscribe();
            }
        }
    };
    return ConnectableSubscriber;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["SubjectSubscriber"]));
var RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]));
//# sourceMappingURL=ConnectableObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js ***!
  \******************************************************************************/
/*! exports provided: SubscribeOnObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubscribeOnObservable", function() { return SubscribeOnObservable; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/asap */ "./node_modules/rxjs/_esm5/internal/scheduler/asap.js");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isNumeric */ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js");
/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */




var SubscribeOnObservable = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubscribeOnObservable, _super);
    function SubscribeOnObservable(source, delayTime, scheduler) {
        if (delayTime === void 0) {
            delayTime = 0;
        }
        if (scheduler === void 0) {
            scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__["asap"];
        }
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.delayTime = delayTime;
        _this.scheduler = scheduler;
        if (!Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_3__["isNumeric"])(delayTime) || delayTime < 0) {
            _this.delayTime = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            _this.scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__["asap"];
        }
        return _this;
    }
    SubscribeOnObservable.create = function (source, delay, scheduler) {
        if (delay === void 0) {
            delay = 0;
        }
        if (scheduler === void 0) {
            scheduler = _scheduler_asap__WEBPACK_IMPORTED_MODULE_2__["asap"];
        }
        return new SubscribeOnObservable(source, delay, scheduler);
    };
    SubscribeOnObservable.dispatch = function (arg) {
        var source = arg.source, subscriber = arg.subscriber;
        return this.add(source.subscribe(subscriber));
    };
    SubscribeOnObservable.prototype._subscribe = function (subscriber) {
        var delay = this.delayTime;
        var source = this.source;
        var scheduler = this.scheduler;
        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
            source: source, subscriber: subscriber
        });
    };
    return SubscribeOnObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_1__["Observable"]));

//# sourceMappingURL=SubscribeOnObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/bindCallback.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/bindCallback.js ***!
  \*********************************************************************/
/*! exports provided: bindCallback */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindCallback", function() { return bindCallback; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AsyncSubject */ "./node_modules/rxjs/_esm5/internal/AsyncSubject.js");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canReportError */ "./node_modules/rxjs/_esm5/internal/util/canReportError.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isArray,_util_isScheduler PURE_IMPORTS_END */






function bindCallback(callbackFunc, resultSelector, scheduler) {
    if (resultSelector) {
        if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(resultSelector)) {
            scheduler = resultSelector;
        }
        else {
            return function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_2__["map"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_4__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
            };
        }
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var context = this;
        var subject;
        var params = {
            context: context,
            subject: subject,
            callbackFunc: callbackFunc,
            scheduler: scheduler,
        };
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
            if (!scheduler) {
                if (!subject) {
                    subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();
                    var handler = function () {
                        var innerArgs = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            innerArgs[_i] = arguments[_i];
                        }
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    };
                    try {
                        callbackFunc.apply(context, args.concat([handler]));
                    }
                    catch (err) {
                        if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_3__["canReportError"])(subject)) {
                            subject.error(err);
                        }
                        else {
                            console.warn(err);
                        }
                    }
                }
                return subject.subscribe(subscriber);
            }
            else {
                var state = {
                    args: args, subscriber: subscriber, params: params,
                };
                return scheduler.schedule(dispatch, 0, state);
            }
        });
    };
}
function dispatch(state) {
    var _this = this;
    var self = this;
    var args = state.args, subscriber = state.subscriber, params = state.params;
    var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;
    var subject = params.subject;
    if (!subject) {
        subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();
        var handler = function () {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i] = arguments[_i];
            }
            var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
            _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
        };
        try {
            callbackFunc.apply(context, args.concat([handler]));
        }
        catch (err) {
            subject.error(err);
        }
    }
    this.add(subject.subscribe(subscriber));
}
function dispatchNext(state) {
    var value = state.value, subject = state.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(state) {
    var err = state.err, subject = state.subject;
    subject.error(err);
}
//# sourceMappingURL=bindCallback.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js ***!
  \*************************************************************************/
/*! exports provided: bindNodeCallback */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindNodeCallback", function() { return bindNodeCallback; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AsyncSubject */ "./node_modules/rxjs/_esm5/internal/AsyncSubject.js");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _util_canReportError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/canReportError */ "./node_modules/rxjs/_esm5/internal/util/canReportError.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isScheduler,_util_isArray PURE_IMPORTS_END */






function bindNodeCallback(callbackFunc, resultSelector, scheduler) {
    if (resultSelector) {
        if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_4__["isScheduler"])(resultSelector)) {
            scheduler = resultSelector;
        }
        else {
            return function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_2__["map"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_5__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
            };
        }
    }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var params = {
            subject: undefined,
            args: args,
            callbackFunc: callbackFunc,
            scheduler: scheduler,
            context: this,
        };
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
            var context = params.context;
            var subject = params.subject;
            if (!scheduler) {
                if (!subject) {
                    subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();
                    var handler = function () {
                        var innerArgs = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            innerArgs[_i] = arguments[_i];
                        }
                        var err = innerArgs.shift();
                        if (err) {
                            subject.error(err);
                            return;
                        }
                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    };
                    try {
                        callbackFunc.apply(context, args.concat([handler]));
                    }
                    catch (err) {
                        if (Object(_util_canReportError__WEBPACK_IMPORTED_MODULE_3__["canReportError"])(subject)) {
                            subject.error(err);
                        }
                        else {
                            console.warn(err);
                        }
                    }
                }
                return subject.subscribe(subscriber);
            }
            else {
                return scheduler.schedule(dispatch, 0, { params: params, subscriber: subscriber, context: context });
            }
        });
    };
}
function dispatch(state) {
    var _this = this;
    var params = state.params, subscriber = state.subscriber, context = state.context;
    var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;
    var subject = params.subject;
    if (!subject) {
        subject = params.subject = new _AsyncSubject__WEBPACK_IMPORTED_MODULE_1__["AsyncSubject"]();
        var handler = function () {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i] = arguments[_i];
            }
            var err = innerArgs.shift();
            if (err) {
                _this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));
            }
            else {
                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
            }
        };
        try {
            callbackFunc.apply(context, args.concat([handler]));
        }
        catch (err) {
            this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));
        }
    }
    this.add(subject.subscribe(subscriber));
}
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=bindNodeCallback.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/combineLatest.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/combineLatest.js ***!
  \**********************************************************************/
/*! exports provided: combineLatest, CombineLatestOperator, CombineLatestSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return combineLatest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CombineLatestOperator", function() { return CombineLatestOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CombineLatestSubscriber", function() { return CombineLatestSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */






var NONE = {};
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = undefined;
    var scheduler = undefined;
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(observables[observables.length - 1])) {
        scheduler = observables.pop();
    }
    if (typeof observables[observables.length - 1] === 'function') {
        resultSelector = observables.pop();
    }
    if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(observables[0])) {
        observables = observables[0];
    }
    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_5__["fromArray"])(observables, scheduler).lift(new CombineLatestOperator(resultSelector));
}
var CombineLatestOperator = /*@__PURE__*/ (function () {
    function CombineLatestOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    CombineLatestOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
    };
    return CombineLatestOperator;
}());

var CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CombineLatestSubscriber, _super);
    function CombineLatestSubscriber(destination, resultSelector) {
        var _this = _super.call(this, destination) || this;
        _this.resultSelector = resultSelector;
        _this.active = 0;
        _this.values = [];
        _this.observables = [];
        return _this;
    }
    CombineLatestSubscriber.prototype._next = function (observable) {
        this.values.push(NONE);
        this.observables.push(observable);
    };
    CombineLatestSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            this.active = len;
            this.toRespond = len;
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, observable, undefined, i));
            }
        }
    };
    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
        if ((this.active -= 1) === 0) {
            this.destination.complete();
        }
    };
    CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {
        var values = this.values;
        var oldVal = values[outerIndex];
        var toRespond = !this.toRespond
            ? 0
            : oldVal === NONE ? --this.toRespond : this.toRespond;
        values[outerIndex] = innerValue;
        if (toRespond === 0) {
            if (this.resultSelector) {
                this._tryResultSelector(values);
            }
            else {
                this.destination.next(values.slice());
            }
        }
    };
    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {
        var result;
        try {
            result = this.resultSelector.apply(this, values);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return CombineLatestSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));

//# sourceMappingURL=combineLatest.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/concat.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/concat.js ***!
  \***************************************************************/
/*! exports provided: concat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return concat; });
/* harmony import */ var _of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./of */ "./node_modules/rxjs/_esm5/internal/observable/of.js");
/* harmony import */ var _operators_concatAll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operators/concatAll */ "./node_modules/rxjs/_esm5/internal/operators/concatAll.js");
/** PURE_IMPORTS_START _of,_operators_concatAll PURE_IMPORTS_END */


function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return Object(_operators_concatAll__WEBPACK_IMPORTED_MODULE_1__["concatAll"])()(_of__WEBPACK_IMPORTED_MODULE_0__["of"].apply(void 0, observables));
}
//# sourceMappingURL=concat.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/defer.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/defer.js ***!
  \**************************************************************/
/*! exports provided: defer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defer", function() { return defer; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */



function defer(observableFactory) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var input;
        try {
            input = observableFactory();
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var source = input ? Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(input) : Object(_empty__WEBPACK_IMPORTED_MODULE_2__["empty"])();
        return source.subscribe(subscriber);
    });
}
//# sourceMappingURL=defer.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/empty.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/empty.js ***!
  \**************************************************************/
/*! exports provided: EMPTY, empty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EMPTY", function() { return EMPTY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

var EMPTY = /*@__PURE__*/ new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return subscriber.complete(); });
function empty(scheduler) {
    return scheduler ? emptyScheduled(scheduler) : EMPTY;
}
function emptyScheduled(scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });
}
//# sourceMappingURL=empty.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/forkJoin.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/forkJoin.js ***!
  \*****************************************************************/
/*! exports provided: forkJoin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forkJoin", function() { return forkJoin; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _util_isObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isObject */ "./node_modules/rxjs/_esm5/internal/util/isObject.js");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/** PURE_IMPORTS_START _Observable,_util_isArray,_operators_map,_util_isObject,_from PURE_IMPORTS_END */





function forkJoin() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    if (sources.length === 1) {
        var first_1 = sources[0];
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(first_1)) {
            return forkJoinInternal(first_1, null);
        }
        if (Object(_util_isObject__WEBPACK_IMPORTED_MODULE_3__["isObject"])(first_1) && Object.getPrototypeOf(first_1) === Object.prototype) {
            var keys = Object.keys(first_1);
            return forkJoinInternal(keys.map(function (key) { return first_1[key]; }), keys);
        }
    }
    if (typeof sources[sources.length - 1] === 'function') {
        var resultSelector_1 = sources.pop();
        sources = (sources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(sources[0])) ? sources[0] : sources;
        return forkJoinInternal(sources, null).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_2__["map"])(function (args) { return resultSelector_1.apply(void 0, args); }));
    }
    return forkJoinInternal(sources, null);
}
function forkJoinInternal(sources, keys) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var len = sources.length;
        if (len === 0) {
            subscriber.complete();
            return;
        }
        var values = new Array(len);
        var completed = 0;
        var emitted = 0;
        var _loop_1 = function (i) {
            var source = Object(_from__WEBPACK_IMPORTED_MODULE_4__["from"])(sources[i]);
            var hasValue = false;
            subscriber.add(source.subscribe({
                next: function (value) {
                    if (!hasValue) {
                        hasValue = true;
                        emitted++;
                    }
                    values[i] = value;
                },
                error: function (err) { return subscriber.error(err); },
                complete: function () {
                    completed++;
                    if (completed === len || !hasValue) {
                        if (emitted === len) {
                            subscriber.next(keys ?
                                keys.reduce(function (result, key, i) { return (result[key] = values[i], result); }, {}) :
                                values);
                        }
                        subscriber.complete();
                    }
                }
            }));
        };
        for (var i = 0; i < len; i++) {
            _loop_1(i);
        }
    });
}
//# sourceMappingURL=forkJoin.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/from.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/from.js ***!
  \*************************************************************/
/*! exports provided: from */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "from", function() { return from; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeTo */ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js");
/* harmony import */ var _scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduled */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js");
/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */



function from(input, scheduler) {
    if (!scheduler) {
        if (input instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]) {
            return input;
        }
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(input));
    }
    else {
        return Object(_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_2__["scheduled"])(input, scheduler);
    }
}
//# sourceMappingURL=from.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/fromArray.js ***!
  \******************************************************************/
/*! exports provided: fromArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromArray", function() { return fromArray; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeToArray */ "./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js");
/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduleArray */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js");
/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function fromArray(input, scheduler) {
    if (!scheduler) {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](Object(_util_subscribeToArray__WEBPACK_IMPORTED_MODULE_1__["subscribeToArray"])(input));
    }
    else {
        return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(input, scheduler);
    }
}
//# sourceMappingURL=fromArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/fromEvent.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/fromEvent.js ***!
  \******************************************************************/
/*! exports provided: fromEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromEvent", function() { return fromEvent; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */




var toString = /*@__PURE__*/ (function () { return Object.prototype.toString; })();
function fromEvent(target, eventName, options, resultSelector) {
    if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(options)) {
        resultSelector = options;
        options = undefined;
    }
    if (resultSelector) {
        return fromEvent(target, eventName, options).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        function handler(e) {
            if (arguments.length > 1) {
                subscriber.next(Array.prototype.slice.call(arguments));
            }
            else {
                subscriber.next(e);
            }
        }
        setupSubscription(target, eventName, handler, subscriber, options);
    });
}
function setupSubscription(sourceObj, eventName, handler, subscriber, options) {
    var unsubscribe;
    if (isEventTarget(sourceObj)) {
        var source_1 = sourceObj;
        sourceObj.addEventListener(eventName, handler, options);
        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };
    }
    else if (isJQueryStyleEventEmitter(sourceObj)) {
        var source_2 = sourceObj;
        sourceObj.on(eventName, handler);
        unsubscribe = function () { return source_2.off(eventName, handler); };
    }
    else if (isNodeStyleEventEmitter(sourceObj)) {
        var source_3 = sourceObj;
        sourceObj.addListener(eventName, handler);
        unsubscribe = function () { return source_3.removeListener(eventName, handler); };
    }
    else if (sourceObj && sourceObj.length) {
        for (var i = 0, len = sourceObj.length; i < len; i++) {
            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
        }
    }
    else {
        throw new TypeError('Invalid event target');
    }
    subscriber.add(unsubscribe);
}
function isNodeStyleEventEmitter(sourceObj) {
    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}
function isJQueryStyleEventEmitter(sourceObj) {
    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}
function isEventTarget(sourceObj) {
    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}
//# sourceMappingURL=fromEvent.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js ***!
  \*************************************************************************/
/*! exports provided: fromEventPattern */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromEventPattern", function() { return fromEventPattern; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */




function fromEventPattern(addHandler, removeHandler, resultSelector) {
    if (resultSelector) {
        return fromEventPattern(addHandler, removeHandler).pipe(Object(_operators_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (args) { return Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var handler = function () {
            var e = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                e[_i] = arguments[_i];
            }
            return subscriber.next(e.length === 1 ? e[0] : e);
        };
        var retValue;
        try {
            retValue = addHandler(handler);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        if (!Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(removeHandler)) {
            return undefined;
        }
        return function () { return removeHandler(handler, retValue); };
    });
}
//# sourceMappingURL=fromEventPattern.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/generate.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/generate.js ***!
  \*****************************************************************/
/*! exports provided: generate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generate", function() { return generate; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */



function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
    var resultSelector;
    var initialState;
    if (arguments.length == 1) {
        var options = initialStateOrOptions;
        initialState = options.initialState;
        condition = options.condition;
        iterate = options.iterate;
        resultSelector = options.resultSelector || _util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"];
        scheduler = options.scheduler;
    }
    else if (resultSelectorOrObservable === undefined || Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_2__["isScheduler"])(resultSelectorOrObservable)) {
        initialState = initialStateOrOptions;
        resultSelector = _util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"];
        scheduler = resultSelectorOrObservable;
    }
    else {
        initialState = initialStateOrOptions;
        resultSelector = resultSelectorOrObservable;
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var state = initialState;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                subscriber: subscriber,
                iterate: iterate,
                condition: condition,
                resultSelector: resultSelector,
                state: state
            });
        }
        do {
            if (condition) {
                var conditionResult = void 0;
                try {
                    conditionResult = condition(state);
                }
                catch (err) {
                    subscriber.error(err);
                    return undefined;
                }
                if (!conditionResult) {
                    subscriber.complete();
                    break;
                }
            }
            var value = void 0;
            try {
                value = resultSelector(state);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
            subscriber.next(value);
            if (subscriber.closed) {
                break;
            }
            try {
                state = iterate(state);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
        } while (true);
        return undefined;
    });
}
function dispatch(state) {
    var subscriber = state.subscriber, condition = state.condition;
    if (subscriber.closed) {
        return undefined;
    }
    if (state.needIterate) {
        try {
            state.state = state.iterate(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
    }
    else {
        state.needIterate = true;
    }
    if (condition) {
        var conditionResult = void 0;
        try {
            conditionResult = condition(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        if (!conditionResult) {
            subscriber.complete();
            return undefined;
        }
        if (subscriber.closed) {
            return undefined;
        }
    }
    var value;
    try {
        value = state.resultSelector(state.state);
    }
    catch (err) {
        subscriber.error(err);
        return undefined;
    }
    if (subscriber.closed) {
        return undefined;
    }
    subscriber.next(value);
    if (subscriber.closed) {
        return undefined;
    }
    return this.schedule(state);
}
//# sourceMappingURL=generate.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/iif.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/iif.js ***!
  \************************************************************/
/*! exports provided: iif */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iif", function() { return iif; });
/* harmony import */ var _defer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defer */ "./node_modules/rxjs/_esm5/internal/observable/defer.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */


function iif(condition, trueResult, falseResult) {
    if (trueResult === void 0) {
        trueResult = _empty__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
    }
    if (falseResult === void 0) {
        falseResult = _empty__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
    }
    return Object(_defer__WEBPACK_IMPORTED_MODULE_0__["defer"])(function () { return condition() ? trueResult : falseResult; });
}
//# sourceMappingURL=iif.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/interval.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/interval.js ***!
  \*****************************************************************/
/*! exports provided: interval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interval", function() { return interval; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isNumeric */ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js");
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */



function interval(period, scheduler) {
    if (period === void 0) {
        period = 0;
    }
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    }
    if (!Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(period) || period < 0) {
        period = 0;
    }
    if (!scheduler || typeof scheduler.schedule !== 'function') {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));
        return subscriber;
    });
}
function dispatch(state) {
    var subscriber = state.subscriber, counter = state.counter, period = state.period;
    subscriber.next(counter);
    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);
}
//# sourceMappingURL=interval.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/merge.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/merge.js ***!
  \**************************************************************/
/*! exports provided: merge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/* harmony import */ var _operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/mergeAll */ "./node_modules/rxjs/_esm5/internal/operators/mergeAll.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */




function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(last)) {
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
            concurrent = observables.pop();
        }
    }
    else if (typeof last === 'number') {
        concurrent = observables.pop();
    }
    if (scheduler === null && observables.length === 1 && observables[0] instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"]) {
        return observables[0];
    }
    return Object(_operators_mergeAll__WEBPACK_IMPORTED_MODULE_2__["mergeAll"])(concurrent)(Object(_fromArray__WEBPACK_IMPORTED_MODULE_3__["fromArray"])(observables, scheduler));
}
//# sourceMappingURL=merge.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/never.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/never.js ***!
  \**************************************************************/
/*! exports provided: NEVER, never */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NEVER", function() { return NEVER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "never", function() { return never; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/noop */ "./node_modules/rxjs/_esm5/internal/util/noop.js");
/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */


var NEVER = /*@__PURE__*/ new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](_util_noop__WEBPACK_IMPORTED_MODULE_1__["noop"]);
function never() {
    return NEVER;
}
//# sourceMappingURL=never.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/of.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/of.js ***!
  \***********************************************************/
/*! exports provided: of */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "of", function() { return of; });
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/* harmony import */ var _scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduled/scheduleArray */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js");
/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */



function of() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = args[args.length - 1];
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_0__["isScheduler"])(scheduler)) {
        args.pop();
        return Object(_scheduled_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(args, scheduler);
    }
    else {
        return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__["fromArray"])(args);
    }
}
//# sourceMappingURL=of.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js ***!
  \**************************************************************************/
/*! exports provided: onErrorResumeNext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return onErrorResumeNext; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */




function onErrorResumeNext() {
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        sources[_i] = arguments[_i];
    }
    if (sources.length === 0) {
        return _empty__WEBPACK_IMPORTED_MODULE_3__["EMPTY"];
    }
    var first = sources[0], remainder = sources.slice(1);
    if (sources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(first)) {
        return onErrorResumeNext.apply(void 0, first);
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };
        return Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(first).subscribe({
            next: function (value) { subscriber.next(value); },
            error: subNext,
            complete: subNext,
        });
    });
}
//# sourceMappingURL=onErrorResumeNext.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/pairs.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/pairs.js ***!
  \**************************************************************/
/*! exports provided: pairs, dispatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return pairs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return dispatch; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function pairs(obj, scheduler) {
    if (!scheduler) {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
            var keys = Object.keys(obj);
            for (var i = 0; i < keys.length && !subscriber.closed; i++) {
                var key = keys[i];
                if (obj.hasOwnProperty(key)) {
                    subscriber.next([key, obj[key]]);
                }
            }
            subscriber.complete();
        });
    }
    else {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
            var keys = Object.keys(obj);
            var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
            subscription.add(scheduler.schedule(dispatch, 0, { keys: keys, index: 0, subscriber: subscriber, subscription: subscription, obj: obj }));
            return subscription;
        });
    }
}
function dispatch(state) {
    var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;
    if (!subscriber.closed) {
        if (index < keys.length) {
            var key = keys[index];
            subscriber.next([key, obj[key]]);
            subscription.add(this.schedule({ keys: keys, index: index + 1, subscriber: subscriber, subscription: subscription, obj: obj }));
        }
        else {
            subscriber.complete();
        }
    }
}
//# sourceMappingURL=pairs.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/partition.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/partition.js ***!
  \******************************************************************/
/*! exports provided: partition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return partition; });
/* harmony import */ var _util_not__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/not */ "./node_modules/rxjs/_esm5/internal/util/not.js");
/* harmony import */ var _util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/subscribeTo */ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js");
/* harmony import */ var _operators_filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operators/filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _util_not,_util_subscribeTo,_operators_filter,_Observable PURE_IMPORTS_END */




function partition(source, predicate, thisArg) {
    return [
        Object(_operators_filter__WEBPACK_IMPORTED_MODULE_2__["filter"])(predicate, thisArg)(new _Observable__WEBPACK_IMPORTED_MODULE_3__["Observable"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(source))),
        Object(_operators_filter__WEBPACK_IMPORTED_MODULE_2__["filter"])(Object(_util_not__WEBPACK_IMPORTED_MODULE_0__["not"])(predicate, thisArg))(new _Observable__WEBPACK_IMPORTED_MODULE_3__["Observable"](Object(_util_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(source)))
    ];
}
//# sourceMappingURL=partition.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/race.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/race.js ***!
  \*************************************************************/
/*! exports provided: race, RaceOperator, RaceSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return race; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RaceOperator", function() { return RaceOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RaceSubscriber", function() { return RaceSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    if (observables.length === 1) {
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_1__["isArray"])(observables[0])) {
            observables = observables[0];
        }
        else {
            return observables[0];
        }
    }
    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_2__["fromArray"])(observables, undefined).lift(new RaceOperator());
}
var RaceOperator = /*@__PURE__*/ (function () {
    function RaceOperator() {
    }
    RaceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RaceSubscriber(subscriber));
    };
    return RaceOperator;
}());

var RaceSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RaceSubscriber, _super);
    function RaceSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasFirst = false;
        _this.observables = [];
        _this.subscriptions = [];
        return _this;
    }
    RaceSubscriber.prototype._next = function (observable) {
        this.observables.push(observable);
    };
    RaceSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            for (var i = 0; i < len && !this.hasFirst; i++) {
                var observable = observables[i];
                var subscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, observable, undefined, i);
                if (this.subscriptions) {
                    this.subscriptions.push(subscription);
                }
                this.add(subscription);
            }
            this.observables = null;
        }
    };
    RaceSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {
        if (!this.hasFirst) {
            this.hasFirst = true;
            for (var i = 0; i < this.subscriptions.length; i++) {
                if (i !== outerIndex) {
                    var subscription = this.subscriptions[i];
                    subscription.unsubscribe();
                    this.remove(subscription);
                }
            }
            this.subscriptions = null;
        }
        this.destination.next(innerValue);
    };
    return RaceSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));

//# sourceMappingURL=race.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/range.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/range.js ***!
  \**************************************************************/
/*! exports provided: range, dispatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dispatch", function() { return dispatch; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function range(start, count, scheduler) {
    if (start === void 0) {
        start = 0;
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        if (count === undefined) {
            count = start;
            start = 0;
        }
        var index = 0;
        var current = start;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                index: index, count: count, start: start, subscriber: subscriber
            });
        }
        else {
            do {
                if (index++ >= count) {
                    subscriber.complete();
                    break;
                }
                subscriber.next(current++);
                if (subscriber.closed) {
                    break;
                }
            } while (true);
        }
        return undefined;
    });
}
function dispatch(state) {
    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;
    if (index >= count) {
        subscriber.complete();
        return;
    }
    subscriber.next(start);
    if (subscriber.closed) {
        return;
    }
    state.index = index + 1;
    state.start = start + 1;
    this.schedule(state);
}
//# sourceMappingURL=range.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/throwError.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/throwError.js ***!
  \*******************************************************************/
/*! exports provided: throwError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return throwError; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function throwError(error, scheduler) {
    if (!scheduler) {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return subscriber.error(error); });
    }
    else {
        return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });
    }
}
function dispatch(_a) {
    var error = _a.error, subscriber = _a.subscriber;
    subscriber.error(error);
}
//# sourceMappingURL=throwError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/timer.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/timer.js ***!
  \**************************************************************/
/*! exports provided: timer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timer", function() { return timer; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isNumeric */ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */




function timer(dueTime, periodOrScheduler, scheduler) {
    if (dueTime === void 0) {
        dueTime = 0;
    }
    var period = -1;
    if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(periodOrScheduler)) {
        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
    }
    else if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(periodOrScheduler)) {
        scheduler = periodOrScheduler;
    }
    if (!Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(scheduler)) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var due = Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_2__["isNumeric"])(dueTime)
            ? dueTime
            : (+dueTime - scheduler.now());
        return scheduler.schedule(dispatch, due, {
            index: 0, period: period, subscriber: subscriber
        });
    });
}
function dispatch(state) {
    var index = state.index, period = state.period, subscriber = state.subscriber;
    subscriber.next(index);
    if (subscriber.closed) {
        return;
    }
    else if (period === -1) {
        return subscriber.complete();
    }
    state.index = index + 1;
    this.schedule(state, period);
}
//# sourceMappingURL=timer.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/using.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/using.js ***!
  \**************************************************************/
/*! exports provided: using */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "using", function() { return using; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */



function using(resourceFactory, observableFactory) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var resource;
        try {
            resource = resourceFactory();
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var result;
        try {
            result = observableFactory(resource);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        var source = result ? Object(_from__WEBPACK_IMPORTED_MODULE_1__["from"])(result) : _empty__WEBPACK_IMPORTED_MODULE_2__["EMPTY"];
        var subscription = source.subscribe(subscriber);
        return function () {
            subscription.unsubscribe();
            if (resource) {
                resource.unsubscribe();
            }
        };
    });
}
//# sourceMappingURL=using.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/observable/zip.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/observable/zip.js ***!
  \************************************************************/
/*! exports provided: zip, ZipOperator, ZipSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipOperator", function() { return ZipOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipSubscriber", function() { return ZipSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _fromArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromArray */ "./node_modules/rxjs/_esm5/internal/observable/fromArray.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_.._internal_symbol_iterator,_innerSubscribe PURE_IMPORTS_END */






function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var resultSelector = observables[observables.length - 1];
    if (typeof resultSelector === 'function') {
        observables.pop();
    }
    return Object(_fromArray__WEBPACK_IMPORTED_MODULE_1__["fromArray"])(observables, undefined).lift(new ZipOperator(resultSelector));
}
var ZipOperator = /*@__PURE__*/ (function () {
    function ZipOperator(resultSelector) {
        this.resultSelector = resultSelector;
    }
    ZipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));
    };
    return ZipOperator;
}());

var ZipSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ZipSubscriber, _super);
    function ZipSubscriber(destination, resultSelector, values) {
        if (values === void 0) {
            values = Object.create(null);
        }
        var _this = _super.call(this, destination) || this;
        _this.resultSelector = resultSelector;
        _this.iterators = [];
        _this.active = 0;
        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;
        return _this;
    }
    ZipSubscriber.prototype._next = function (value) {
        var iterators = this.iterators;
        if (Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
            iterators.push(new StaticArrayIterator(value));
        }
        else if (typeof value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__["iterator"]] === 'function') {
            iterators.push(new StaticIterator(value[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__["iterator"]]()));
        }
        else {
            iterators.push(new ZipBufferIterator(this.destination, this, value));
        }
    };
    ZipSubscriber.prototype._complete = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        this.unsubscribe();
        if (len === 0) {
            this.destination.complete();
            return;
        }
        this.active = len;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (iterator.stillUnsubscribed) {
                var destination = this.destination;
                destination.add(iterator.subscribe());
            }
            else {
                this.active--;
            }
        }
    };
    ZipSubscriber.prototype.notifyInactive = function () {
        this.active--;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    ZipSubscriber.prototype.checkIterators = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        var destination = this.destination;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
                return;
            }
        }
        var shouldComplete = false;
        var args = [];
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            var result = iterator.next();
            if (iterator.hasCompleted()) {
                shouldComplete = true;
            }
            if (result.done) {
                destination.complete();
                return;
            }
            args.push(result.value);
        }
        if (this.resultSelector) {
            this._tryresultSelector(args);
        }
        else {
            destination.next(args);
        }
        if (shouldComplete) {
            destination.complete();
        }
    };
    ZipSubscriber.prototype._tryresultSelector = function (args) {
        var result;
        try {
            result = this.resultSelector.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return ZipSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]));

var StaticIterator = /*@__PURE__*/ (function () {
    function StaticIterator(iterator) {
        this.iterator = iterator;
        this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function () {
        return true;
    };
    StaticIterator.prototype.next = function () {
        var result = this.nextResult;
        this.nextResult = this.iterator.next();
        return result;
    };
    StaticIterator.prototype.hasCompleted = function () {
        var nextResult = this.nextResult;
        return Boolean(nextResult && nextResult.done);
    };
    return StaticIterator;
}());
var StaticArrayIterator = /*@__PURE__*/ (function () {
    function StaticArrayIterator(array) {
        this.array = array;
        this.index = 0;
        this.length = 0;
        this.length = array.length;
    }
    StaticArrayIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__["iterator"]] = function () {
        return this;
    };
    StaticArrayIterator.prototype.next = function (value) {
        var i = this.index++;
        var array = this.array;
        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
    };
    StaticArrayIterator.prototype.hasValue = function () {
        return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function () {
        return this.array.length === this.index;
    };
    return StaticArrayIterator;
}());
var ZipBufferIterator = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ZipBufferIterator, _super);
    function ZipBufferIterator(destination, parent, observable) {
        var _this = _super.call(this, destination) || this;
        _this.parent = parent;
        _this.observable = observable;
        _this.stillUnsubscribed = true;
        _this.buffer = [];
        _this.isComplete = false;
        return _this;
    }
    ZipBufferIterator.prototype[_internal_symbol_iterator__WEBPACK_IMPORTED_MODULE_4__["iterator"]] = function () {
        return this;
    };
    ZipBufferIterator.prototype.next = function () {
        var buffer = this.buffer;
        if (buffer.length === 0 && this.isComplete) {
            return { value: null, done: true };
        }
        else {
            return { value: buffer.shift(), done: false };
        }
    };
    ZipBufferIterator.prototype.hasValue = function () {
        return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function () {
        return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function () {
        if (this.buffer.length > 0) {
            this.isComplete = true;
            this.parent.notifyInactive();
        }
        else {
            this.destination.complete();
        }
    };
    ZipBufferIterator.prototype.notifyNext = function (innerValue) {
        this.buffer.push(innerValue);
        this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function () {
        return Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["innerSubscribe"])(this.observable, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["SimpleInnerSubscriber"](this));
    };
    return ZipBufferIterator;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_5__["SimpleOuterSubscriber"]));
//# sourceMappingURL=zip.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/audit.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/audit.js ***!
  \*************************************************************/
/*! exports provided: audit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "audit", function() { return audit; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function audit(durationSelector) {
    return function auditOperatorFunction(source) {
        return source.lift(new AuditOperator(durationSelector));
    };
}
var AuditOperator = /*@__PURE__*/ (function () {
    function AuditOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    AuditOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
    };
    return AuditOperator;
}());
var AuditSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AuditSubscriber, _super);
    function AuditSubscriber(destination, durationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.durationSelector = durationSelector;
        _this.hasValue = false;
        return _this;
    }
    AuditSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            var duration = void 0;
            try {
                var durationSelector = this.durationSelector;
                duration = durationSelector(value);
            }
            catch (err) {
                return this.destination.error(err);
            }
            var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(duration, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](this));
            if (!innerSubscription || innerSubscription.closed) {
                this.clearThrottle();
            }
            else {
                this.add(this.throttled = innerSubscription);
            }
        }
    };
    AuditSubscriber.prototype.clearThrottle = function () {
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = undefined;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = undefined;
            this.hasValue = false;
            this.destination.next(value);
        }
    };
    AuditSubscriber.prototype.notifyNext = function () {
        this.clearThrottle();
    };
    AuditSubscriber.prototype.notifyComplete = function () {
        this.clearThrottle();
    };
    return AuditSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));
//# sourceMappingURL=audit.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/auditTime.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/auditTime.js ***!
  \*****************************************************************/
/*! exports provided: auditTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "auditTime", function() { return auditTime; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _audit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./audit */ "./node_modules/rxjs/_esm5/internal/operators/audit.js");
/* harmony import */ var _observable_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/timer */ "./node_modules/rxjs/_esm5/internal/observable/timer.js");
/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */



function auditTime(duration, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
    }
    return Object(_audit__WEBPACK_IMPORTED_MODULE_1__["audit"])(function () { return Object(_observable_timer__WEBPACK_IMPORTED_MODULE_2__["timer"])(duration, scheduler); });
}
//# sourceMappingURL=auditTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/buffer.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/buffer.js ***!
  \**************************************************************/
/*! exports provided: buffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return buffer; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function buffer(closingNotifier) {
    return function bufferOperatorFunction(source) {
        return source.lift(new BufferOperator(closingNotifier));
    };
}
var BufferOperator = /*@__PURE__*/ (function () {
    function BufferOperator(closingNotifier) {
        this.closingNotifier = closingNotifier;
    }
    BufferOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    };
    return BufferOperator;
}());
var BufferSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferSubscriber, _super);
    function BufferSubscriber(destination, closingNotifier) {
        var _this = _super.call(this, destination) || this;
        _this.buffer = [];
        _this.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(closingNotifier, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](_this)));
        return _this;
    }
    BufferSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferSubscriber.prototype.notifyNext = function () {
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    };
    return BufferSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));
//# sourceMappingURL=buffer.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/bufferCount.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferCount.js ***!
  \*******************************************************************/
/*! exports provided: bufferCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferCount", function() { return bufferCount; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) {
        startBufferEvery = null;
    }
    return function bufferCountOperatorFunction(source) {
        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
    };
}
var BufferCountOperator = /*@__PURE__*/ (function () {
    function BufferCountOperator(bufferSize, startBufferEvery) {
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        if (!startBufferEvery || bufferSize === startBufferEvery) {
            this.subscriberClass = BufferCountSubscriber;
        }
        else {
            this.subscriberClass = BufferSkipCountSubscriber;
        }
    }
    BufferCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
    };
    return BufferCountOperator;
}());
var BufferCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferCountSubscriber, _super);
    function BufferCountSubscriber(destination, bufferSize) {
        var _this = _super.call(this, destination) || this;
        _this.bufferSize = bufferSize;
        _this.buffer = [];
        return _this;
    }
    BufferCountSubscriber.prototype._next = function (value) {
        var buffer = this.buffer;
        buffer.push(value);
        if (buffer.length == this.bufferSize) {
            this.destination.next(buffer);
            this.buffer = [];
        }
    };
    BufferCountSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer.length > 0) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    return BufferCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
var BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferSkipCountSubscriber, _super);
    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
        var _this = _super.call(this, destination) || this;
        _this.bufferSize = bufferSize;
        _this.startBufferEvery = startBufferEvery;
        _this.buffers = [];
        _this.count = 0;
        return _this;
    }
    BufferSkipCountSubscriber.prototype._next = function (value) {
        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;
        this.count++;
        if (count % startBufferEvery === 0) {
            buffers.push([]);
        }
        for (var i = buffers.length; i--;) {
            var buffer = buffers[i];
            buffer.push(value);
            if (buffer.length === bufferSize) {
                buffers.splice(i, 1);
                this.destination.next(buffer);
            }
        }
    };
    BufferSkipCountSubscriber.prototype._complete = function () {
        var _a = this, buffers = _a.buffers, destination = _a.destination;
        while (buffers.length > 0) {
            var buffer = buffers.shift();
            if (buffer.length > 0) {
                destination.next(buffer);
            }
        }
        _super.prototype._complete.call(this);
    };
    return BufferSkipCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=bufferCount.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/bufferTime.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferTime.js ***!
  \******************************************************************/
/*! exports provided: bufferTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferTime", function() { return bufferTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */




function bufferTime(bufferTimeSpan) {
    var length = arguments.length;
    var scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_3__["isScheduler"])(arguments[arguments.length - 1])) {
        scheduler = arguments[arguments.length - 1];
        length--;
    }
    var bufferCreationInterval = null;
    if (length >= 2) {
        bufferCreationInterval = arguments[1];
    }
    var maxBufferSize = Number.POSITIVE_INFINITY;
    if (length >= 3) {
        maxBufferSize = arguments[2];
    }
    return function bufferTimeOperatorFunction(source) {
        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
    };
}
var BufferTimeOperator = /*@__PURE__*/ (function () {
    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
    }
    BufferTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
    };
    return BufferTimeOperator;
}());
var Context = /*@__PURE__*/ (function () {
    function Context() {
        this.buffer = [];
    }
    return Context;
}());
var BufferTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferTimeSubscriber, _super);
    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.bufferTimeSpan = bufferTimeSpan;
        _this.bufferCreationInterval = bufferCreationInterval;
        _this.maxBufferSize = maxBufferSize;
        _this.scheduler = scheduler;
        _this.contexts = [];
        var context = _this.openContext();
        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;
        if (_this.timespanOnly) {
            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };
            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
        else {
            var closeState = { subscriber: _this, context: context };
            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };
            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
        }
        return _this;
    }
    BufferTimeSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        var filledBufferContext;
        for (var i = 0; i < len; i++) {
            var context_1 = contexts[i];
            var buffer = context_1.buffer;
            buffer.push(value);
            if (buffer.length == this.maxBufferSize) {
                filledBufferContext = context_1;
            }
        }
        if (filledBufferContext) {
            this.onBufferFull(filledBufferContext);
        }
    };
    BufferTimeSubscriber.prototype._error = function (err) {
        this.contexts.length = 0;
        _super.prototype._error.call(this, err);
    };
    BufferTimeSubscriber.prototype._complete = function () {
        var _a = this, contexts = _a.contexts, destination = _a.destination;
        while (contexts.length > 0) {
            var context_2 = contexts.shift();
            destination.next(context_2.buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferTimeSubscriber.prototype._unsubscribe = function () {
        this.contexts = null;
    };
    BufferTimeSubscriber.prototype.onBufferFull = function (context) {
        this.closeContext(context);
        var closeAction = context.closeAction;
        closeAction.unsubscribe();
        this.remove(closeAction);
        if (!this.closed && this.timespanOnly) {
            context = this.openContext();
            var bufferTimeSpan = this.bufferTimeSpan;
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
    };
    BufferTimeSubscriber.prototype.openContext = function () {
        var context = new Context();
        this.contexts.push(context);
        return context;
    };
    BufferTimeSubscriber.prototype.closeContext = function (context) {
        this.destination.next(context.buffer);
        var contexts = this.contexts;
        var spliceIndex = contexts ? contexts.indexOf(context) : -1;
        if (spliceIndex >= 0) {
            contexts.splice(contexts.indexOf(context), 1);
        }
    };
    return BufferTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__["Subscriber"]));
function dispatchBufferTimeSpanOnly(state) {
    var subscriber = state.subscriber;
    var prevContext = state.context;
    if (prevContext) {
        subscriber.closeContext(prevContext);
    }
    if (!subscriber.closed) {
        state.context = subscriber.openContext();
        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
    }
}
function dispatchBufferCreation(state) {
    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;
    var context = subscriber.openContext();
    var action = this;
    if (!subscriber.closed) {
        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));
        action.schedule(state, bufferCreationInterval);
    }
}
function dispatchBufferClose(arg) {
    var subscriber = arg.subscriber, context = arg.context;
    subscriber.closeContext(context);
}
//# sourceMappingURL=bufferTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js ***!
  \********************************************************************/
/*! exports provided: bufferToggle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferToggle", function() { return bufferToggle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */




function bufferToggle(openings, closingSelector) {
    return function bufferToggleOperatorFunction(source) {
        return source.lift(new BufferToggleOperator(openings, closingSelector));
    };
}
var BufferToggleOperator = /*@__PURE__*/ (function () {
    function BufferToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    BufferToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return BufferToggleOperator;
}());
var BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferToggleSubscriber, _super);
    function BufferToggleSubscriber(destination, openings, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.closingSelector = closingSelector;
        _this.contexts = [];
        _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(_this, openings));
        return _this;
    }
    BufferToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        for (var i = 0; i < len; i++) {
            contexts[i].buffer.push(value);
        }
    };
    BufferToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context_1 = contexts.shift();
            context_1.subscription.unsubscribe();
            context_1.buffer = null;
            context_1.subscription = null;
        }
        this.contexts = null;
        _super.prototype._error.call(this, err);
    };
    BufferToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context_2 = contexts.shift();
            this.destination.next(context_2.buffer);
            context_2.subscription.unsubscribe();
            context_2.buffer = null;
            context_2.subscription = null;
        }
        this.contexts = null;
        _super.prototype._complete.call(this);
    };
    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue) {
        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
    };
    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
        this.closeBuffer(innerSub.context);
    };
    BufferToggleSubscriber.prototype.openBuffer = function (value) {
        try {
            var closingSelector = this.closingSelector;
            var closingNotifier = closingSelector.call(this, value);
            if (closingNotifier) {
                this.trySubscribe(closingNotifier);
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    BufferToggleSubscriber.prototype.closeBuffer = function (context) {
        var contexts = this.contexts;
        if (contexts && context) {
            var buffer = context.buffer, subscription = context.subscription;
            this.destination.next(buffer);
            contexts.splice(contexts.indexOf(context), 1);
            this.remove(subscription);
            subscription.unsubscribe();
        }
    };
    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
        var contexts = this.contexts;
        var buffer = [];
        var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        var context = { buffer: buffer, subscription: subscription };
        contexts.push(context);
        var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(this, closingNotifier, context);
        if (!innerSubscription || innerSubscription.closed) {
            this.closeBuffer(context);
        }
        else {
            innerSubscription.context = context;
            this.add(innerSubscription);
            subscription.add(innerSubscription);
        }
    };
    return BufferToggleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));
//# sourceMappingURL=bufferToggle.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js ***!
  \******************************************************************/
/*! exports provided: bufferWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bufferWhen", function() { return bufferWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_Subscription,_innerSubscribe PURE_IMPORTS_END */



function bufferWhen(closingSelector) {
    return function (source) {
        return source.lift(new BufferWhenOperator(closingSelector));
    };
}
var BufferWhenOperator = /*@__PURE__*/ (function () {
    function BufferWhenOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    BufferWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
    };
    return BufferWhenOperator;
}());
var BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](BufferWhenSubscriber, _super);
    function BufferWhenSubscriber(destination, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.closingSelector = closingSelector;
        _this.subscribing = false;
        _this.openBuffer();
        return _this;
    }
    BufferWhenSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferWhenSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferWhenSubscriber.prototype._unsubscribe = function () {
        this.buffer = undefined;
        this.subscribing = false;
    };
    BufferWhenSubscriber.prototype.notifyNext = function () {
        this.openBuffer();
    };
    BufferWhenSubscriber.prototype.notifyComplete = function () {
        if (this.subscribing) {
            this.complete();
        }
        else {
            this.openBuffer();
        }
    };
    BufferWhenSubscriber.prototype.openBuffer = function () {
        var closingSubscription = this.closingSubscription;
        if (closingSubscription) {
            this.remove(closingSubscription);
            closingSubscription.unsubscribe();
        }
        var buffer = this.buffer;
        if (this.buffer) {
            this.destination.next(buffer);
        }
        this.buffer = [];
        var closingNotifier;
        try {
            var closingSelector = this.closingSelector;
            closingNotifier = closingSelector();
        }
        catch (err) {
            return this.error(err);
        }
        closingSubscription = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        this.closingSubscription = closingSubscription;
        this.add(closingSubscription);
        this.subscribing = true;
        closingSubscription.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["innerSubscribe"])(closingNotifier, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["SimpleInnerSubscriber"](this)));
        this.subscribing = false;
    };
    return BufferWhenSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["SimpleOuterSubscriber"]));
//# sourceMappingURL=bufferWhen.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/catchError.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/catchError.js ***!
  \******************************************************************/
/*! exports provided: catchError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "catchError", function() { return catchError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function catchError(selector) {
    return function catchErrorOperatorFunction(source) {
        var operator = new CatchOperator(selector);
        var caught = source.lift(operator);
        return (operator.caught = caught);
    };
}
var CatchOperator = /*@__PURE__*/ (function () {
    function CatchOperator(selector) {
        this.selector = selector;
    }
    CatchOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
    };
    return CatchOperator;
}());
var CatchSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CatchSubscriber, _super);
    function CatchSubscriber(destination, selector, caught) {
        var _this = _super.call(this, destination) || this;
        _this.selector = selector;
        _this.caught = caught;
        return _this;
    }
    CatchSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var result = void 0;
            try {
                result = this.selector(err, this.caught);
            }
            catch (err2) {
                _super.prototype.error.call(this, err2);
                return;
            }
            this._unsubscribeAndRecycle();
            var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](this);
            this.add(innerSubscriber);
            var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(result, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                this.add(innerSubscription);
            }
        }
    };
    return CatchSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));
//# sourceMappingURL=catchError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/combineAll.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/combineAll.js ***!
  \******************************************************************/
/*! exports provided: combineAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineAll", function() { return combineAll; });
/* harmony import */ var _observable_combineLatest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/combineLatest */ "./node_modules/rxjs/_esm5/internal/observable/combineLatest.js");
/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */

function combineAll(project) {
    return function (source) { return source.lift(new _observable_combineLatest__WEBPACK_IMPORTED_MODULE_0__["CombineLatestOperator"](project)); };
}
//# sourceMappingURL=combineAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/combineLatest.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/combineLatest.js ***!
  \*********************************************************************/
/*! exports provided: combineLatest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return combineLatest; });
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _observable_combineLatest__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/combineLatest */ "./node_modules/rxjs/_esm5/internal/observable/combineLatest.js");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */



var none = {};
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    var project = null;
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(observables[0])) {
        observables = observables[0].slice();
    }
    return function (source) { return source.lift.call(Object(_observable_from__WEBPACK_IMPORTED_MODULE_2__["from"])([source].concat(observables)), new _observable_combineLatest__WEBPACK_IMPORTED_MODULE_1__["CombineLatestOperator"](project)); };
}
//# sourceMappingURL=combineLatest.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/concat.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/concat.js ***!
  \**************************************************************/
/*! exports provided: concat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return concat; });
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ "./node_modules/rxjs/_esm5/internal/observable/concat.js");
/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */

function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function (source) { return source.lift.call(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"].apply(void 0, [source].concat(observables))); };
}
//# sourceMappingURL=concat.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/concatAll.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/concatAll.js ***!
  \*****************************************************************/
/*! exports provided: concatAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatAll", function() { return concatAll; });
/* harmony import */ var _mergeAll__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeAll */ "./node_modules/rxjs/_esm5/internal/operators/mergeAll.js");
/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */

function concatAll() {
    return Object(_mergeAll__WEBPACK_IMPORTED_MODULE_0__["mergeAll"])(1);
}
//# sourceMappingURL=concatAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/concatMap.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/concatMap.js ***!
  \*****************************************************************/
/*! exports provided: concatMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatMap", function() { return concatMap; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js");
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

function concatMap(project, resultSelector) {
    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(project, resultSelector, 1);
}
//# sourceMappingURL=concatMap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js ***!
  \*******************************************************************/
/*! exports provided: concatMapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "concatMapTo", function() { return concatMapTo; });
/* harmony import */ var _concatMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concatMap */ "./node_modules/rxjs/_esm5/internal/operators/concatMap.js");
/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */

function concatMapTo(innerObservable, resultSelector) {
    return Object(_concatMap__WEBPACK_IMPORTED_MODULE_0__["concatMap"])(function () { return innerObservable; }, resultSelector);
}
//# sourceMappingURL=concatMapTo.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/count.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/count.js ***!
  \*************************************************************/
/*! exports provided: count */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "count", function() { return count; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function count(predicate) {
    return function (source) { return source.lift(new CountOperator(predicate, source)); };
}
var CountOperator = /*@__PURE__*/ (function () {
    function CountOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    CountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
    };
    return CountOperator;
}());
var CountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CountSubscriber, _super);
    function CountSubscriber(destination, predicate, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.count = 0;
        _this.index = 0;
        return _this;
    }
    CountSubscriber.prototype._next = function (value) {
        if (this.predicate) {
            this._tryPredicate(value);
        }
        else {
            this.count++;
        }
    };
    CountSubscriber.prototype._tryPredicate = function (value) {
        var result;
        try {
            result = this.predicate(value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.count++;
        }
    };
    CountSubscriber.prototype._complete = function () {
        this.destination.next(this.count);
        this.destination.complete();
    };
    return CountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=count.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/debounce.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/debounce.js ***!
  \****************************************************************/
/*! exports provided: debounce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return debounce; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function debounce(durationSelector) {
    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };
}
var DebounceOperator = /*@__PURE__*/ (function () {
    function DebounceOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    DebounceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
    };
    return DebounceOperator;
}());
var DebounceSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DebounceSubscriber, _super);
    function DebounceSubscriber(destination, durationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.durationSelector = durationSelector;
        _this.hasValue = false;
        return _this;
    }
    DebounceSubscriber.prototype._next = function (value) {
        try {
            var result = this.durationSelector.call(this, value);
            if (result) {
                this._tryNext(value, result);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DebounceSubscriber.prototype._complete = function () {
        this.emitValue();
        this.destination.complete();
    };
    DebounceSubscriber.prototype._tryNext = function (value, duration) {
        var subscription = this.durationSubscription;
        this.value = value;
        this.hasValue = true;
        if (subscription) {
            subscription.unsubscribe();
            this.remove(subscription);
        }
        subscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(duration, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](this));
        if (subscription && !subscription.closed) {
            this.add(this.durationSubscription = subscription);
        }
    };
    DebounceSubscriber.prototype.notifyNext = function () {
        this.emitValue();
    };
    DebounceSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    DebounceSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            var value = this.value;
            var subscription = this.durationSubscription;
            if (subscription) {
                this.durationSubscription = undefined;
                subscription.unsubscribe();
                this.remove(subscription);
            }
            this.value = undefined;
            this.hasValue = false;
            _super.prototype._next.call(this, value);
        }
    };
    return DebounceSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));
//# sourceMappingURL=debounce.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/debounceTime.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/debounceTime.js ***!
  \********************************************************************/
/*! exports provided: debounceTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounceTime", function() { return debounceTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
    }
    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };
}
var DebounceTimeOperator = /*@__PURE__*/ (function () {
    function DebounceTimeOperator(dueTime, scheduler) {
        this.dueTime = dueTime;
        this.scheduler = scheduler;
    }
    DebounceTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
    };
    return DebounceTimeOperator;
}());
var DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DebounceTimeSubscriber, _super);
    function DebounceTimeSubscriber(destination, dueTime, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.dueTime = dueTime;
        _this.scheduler = scheduler;
        _this.debouncedSubscription = null;
        _this.lastValue = null;
        _this.hasValue = false;
        return _this;
    }
    DebounceTimeSubscriber.prototype._next = function (value) {
        this.clearDebounce();
        this.lastValue = value;
        this.hasValue = true;
        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
    };
    DebounceTimeSubscriber.prototype._complete = function () {
        this.debouncedNext();
        this.destination.complete();
    };
    DebounceTimeSubscriber.prototype.debouncedNext = function () {
        this.clearDebounce();
        if (this.hasValue) {
            var lastValue = this.lastValue;
            this.lastValue = null;
            this.hasValue = false;
            this.destination.next(lastValue);
        }
    };
    DebounceTimeSubscriber.prototype.clearDebounce = function () {
        var debouncedSubscription = this.debouncedSubscription;
        if (debouncedSubscription !== null) {
            this.remove(debouncedSubscription);
            debouncedSubscription.unsubscribe();
            this.debouncedSubscription = null;
        }
    };
    return DebounceTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
function dispatchNext(subscriber) {
    subscriber.debouncedNext();
}
//# sourceMappingURL=debounceTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js ***!
  \**********************************************************************/
/*! exports provided: defaultIfEmpty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultIfEmpty", function() { return defaultIfEmpty; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function defaultIfEmpty(defaultValue) {
    if (defaultValue === void 0) {
        defaultValue = null;
    }
    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };
}
var DefaultIfEmptyOperator = /*@__PURE__*/ (function () {
    function DefaultIfEmptyOperator(defaultValue) {
        this.defaultValue = defaultValue;
    }
    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    };
    return DefaultIfEmptyOperator;
}());
var DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DefaultIfEmptySubscriber, _super);
    function DefaultIfEmptySubscriber(destination, defaultValue) {
        var _this = _super.call(this, destination) || this;
        _this.defaultValue = defaultValue;
        _this.isEmpty = true;
        return _this;
    }
    DefaultIfEmptySubscriber.prototype._next = function (value) {
        this.isEmpty = false;
        this.destination.next(value);
    };
    DefaultIfEmptySubscriber.prototype._complete = function () {
        if (this.isEmpty) {
            this.destination.next(this.defaultValue);
        }
        this.destination.complete();
    };
    return DefaultIfEmptySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=defaultIfEmpty.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/delay.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/delay.js ***!
  \*************************************************************/
/*! exports provided: delay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return delay; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _util_isDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isDate */ "./node_modules/rxjs/_esm5/internal/util/isDate.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Notification */ "./node_modules/rxjs/_esm5/internal/Notification.js");
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */





function delay(delay, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    }
    var absoluteDelay = Object(_util_isDate__WEBPACK_IMPORTED_MODULE_2__["isDate"])(delay);
    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);
    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };
}
var DelayOperator = /*@__PURE__*/ (function () {
    function DelayOperator(delay, scheduler) {
        this.delay = delay;
        this.scheduler = scheduler;
    }
    DelayOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
    };
    return DelayOperator;
}());
var DelaySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DelaySubscriber, _super);
    function DelaySubscriber(destination, delay, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.delay = delay;
        _this.scheduler = scheduler;
        _this.queue = [];
        _this.active = false;
        _this.errored = false;
        return _this;
    }
    DelaySubscriber.dispatch = function (state) {
        var source = state.source;
        var queue = source.queue;
        var scheduler = state.scheduler;
        var destination = state.destination;
        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {
            queue.shift().notification.observe(destination);
        }
        if (queue.length > 0) {
            var delay_1 = Math.max(0, queue[0].time - scheduler.now());
            this.schedule(state, delay_1);
        }
        else {
            this.unsubscribe();
            source.active = false;
        }
    };
    DelaySubscriber.prototype._schedule = function (scheduler) {
        this.active = true;
        var destination = this.destination;
        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
            source: this, destination: this.destination, scheduler: scheduler
        }));
    };
    DelaySubscriber.prototype.scheduleNotification = function (notification) {
        if (this.errored === true) {
            return;
        }
        var scheduler = this.scheduler;
        var message = new DelayMessage(scheduler.now() + this.delay, notification);
        this.queue.push(message);
        if (this.active === false) {
            this._schedule(scheduler);
        }
    };
    DelaySubscriber.prototype._next = function (value) {
        this.scheduleNotification(_Notification__WEBPACK_IMPORTED_MODULE_4__["Notification"].createNext(value));
    };
    DelaySubscriber.prototype._error = function (err) {
        this.errored = true;
        this.queue = [];
        this.destination.error(err);
        this.unsubscribe();
    };
    DelaySubscriber.prototype._complete = function () {
        this.scheduleNotification(_Notification__WEBPACK_IMPORTED_MODULE_4__["Notification"].createComplete());
        this.unsubscribe();
    };
    return DelaySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]));
var DelayMessage = /*@__PURE__*/ (function () {
    function DelayMessage(time, notification) {
        this.time = time;
        this.notification = notification;
    }
    return DelayMessage;
}());
//# sourceMappingURL=delay.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/delayWhen.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/delayWhen.js ***!
  \*****************************************************************/
/*! exports provided: delayWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delayWhen", function() { return delayWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function delayWhen(delayDurationSelector, subscriptionDelay) {
    if (subscriptionDelay) {
        return function (source) {
            return new SubscriptionDelayObservable(source, subscriptionDelay)
                .lift(new DelayWhenOperator(delayDurationSelector));
        };
    }
    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };
}
var DelayWhenOperator = /*@__PURE__*/ (function () {
    function DelayWhenOperator(delayDurationSelector) {
        this.delayDurationSelector = delayDurationSelector;
    }
    DelayWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
    };
    return DelayWhenOperator;
}());
var DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DelayWhenSubscriber, _super);
    function DelayWhenSubscriber(destination, delayDurationSelector) {
        var _this = _super.call(this, destination) || this;
        _this.delayDurationSelector = delayDurationSelector;
        _this.completed = false;
        _this.delayNotifierSubscriptions = [];
        _this.index = 0;
        return _this;
    }
    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {
        this.destination.next(outerValue);
        this.removeSubscription(innerSub);
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        var value = this.removeSubscription(innerSub);
        if (value) {
            this.destination.next(value);
        }
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype._next = function (value) {
        var index = this.index++;
        try {
            var delayNotifier = this.delayDurationSelector(value, index);
            if (delayNotifier) {
                this.tryDelay(delayNotifier, value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DelayWhenSubscriber.prototype._complete = function () {
        this.completed = true;
        this.tryComplete();
        this.unsubscribe();
    };
    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
        subscription.unsubscribe();
        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
        if (subscriptionIdx !== -1) {
            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
        }
        return subscription.outerValue;
    };
    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
        var notifierSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, delayNotifier, value);
        if (notifierSubscription && !notifierSubscription.closed) {
            var destination = this.destination;
            destination.add(notifierSubscription);
            this.delayNotifierSubscriptions.push(notifierSubscription);
        }
    };
    DelayWhenSubscriber.prototype.tryComplete = function () {
        if (this.completed && this.delayNotifierSubscriptions.length === 0) {
            this.destination.complete();
        }
    };
    return DelayWhenSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));
var SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubscriptionDelayObservable, _super);
    function SubscriptionDelayObservable(source, subscriptionDelay) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subscriptionDelay = subscriptionDelay;
        return _this;
    }
    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
    };
    return SubscriptionDelayObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]));
var SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SubscriptionDelaySubscriber, _super);
    function SubscriptionDelaySubscriber(parent, source) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        _this.source = source;
        _this.sourceSubscribed = false;
        return _this;
    }
    SubscriptionDelaySubscriber.prototype._next = function (unused) {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype._error = function (err) {
        this.unsubscribe();
        this.parent.error(err);
    };
    SubscriptionDelaySubscriber.prototype._complete = function () {
        this.unsubscribe();
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
        if (!this.sourceSubscribed) {
            this.sourceSubscribed = true;
            this.unsubscribe();
            this.source.subscribe(this.parent);
        }
    };
    return SubscriptionDelaySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=delayWhen.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/dematerialize.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/dematerialize.js ***!
  \*********************************************************************/
/*! exports provided: dematerialize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dematerialize", function() { return dematerialize; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function dematerialize() {
    return function dematerializeOperatorFunction(source) {
        return source.lift(new DeMaterializeOperator());
    };
}
var DeMaterializeOperator = /*@__PURE__*/ (function () {
    function DeMaterializeOperator() {
    }
    DeMaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DeMaterializeSubscriber(subscriber));
    };
    return DeMaterializeOperator;
}());
var DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DeMaterializeSubscriber, _super);
    function DeMaterializeSubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    DeMaterializeSubscriber.prototype._next = function (value) {
        value.observe(this.destination);
    };
    return DeMaterializeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=dematerialize.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/distinct.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/distinct.js ***!
  \****************************************************************/
/*! exports provided: distinct, DistinctSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return distinct; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DistinctSubscriber", function() { return DistinctSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function distinct(keySelector, flushes) {
    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };
}
var DistinctOperator = /*@__PURE__*/ (function () {
    function DistinctOperator(keySelector, flushes) {
        this.keySelector = keySelector;
        this.flushes = flushes;
    }
    DistinctOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
    };
    return DistinctOperator;
}());
var DistinctSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DistinctSubscriber, _super);
    function DistinctSubscriber(destination, keySelector, flushes) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.values = new Set();
        if (flushes) {
            _this.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(flushes, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](_this)));
        }
        return _this;
    }
    DistinctSubscriber.prototype.notifyNext = function () {
        this.values.clear();
    };
    DistinctSubscriber.prototype.notifyError = function (error) {
        this._error(error);
    };
    DistinctSubscriber.prototype._next = function (value) {
        if (this.keySelector) {
            this._useKeySelector(value);
        }
        else {
            this._finalizeNext(value, value);
        }
    };
    DistinctSubscriber.prototype._useKeySelector = function (value) {
        var key;
        var destination = this.destination;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this._finalizeNext(key, value);
    };
    DistinctSubscriber.prototype._finalizeNext = function (key, value) {
        var values = this.values;
        if (!values.has(key)) {
            values.add(key);
            this.destination.next(value);
        }
    };
    return DistinctSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));

//# sourceMappingURL=distinct.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js":
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js ***!
  \****************************************************************************/
/*! exports provided: distinctUntilChanged */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilChanged", function() { return distinctUntilChanged; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function distinctUntilChanged(compare, keySelector) {
    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };
}
var DistinctUntilChangedOperator = /*@__PURE__*/ (function () {
    function DistinctUntilChangedOperator(compare, keySelector) {
        this.compare = compare;
        this.keySelector = keySelector;
    }
    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    };
    return DistinctUntilChangedOperator;
}());
var DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](DistinctUntilChangedSubscriber, _super);
    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.hasKey = false;
        if (typeof compare === 'function') {
            _this.compare = compare;
        }
        return _this;
    }
    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
        return x === y;
    };
    DistinctUntilChangedSubscriber.prototype._next = function (value) {
        var key;
        try {
            var keySelector = this.keySelector;
            key = keySelector ? keySelector(value) : value;
        }
        catch (err) {
            return this.destination.error(err);
        }
        var result = false;
        if (this.hasKey) {
            try {
                var compare = this.compare;
                result = compare(this.key, key);
            }
            catch (err) {
                return this.destination.error(err);
            }
        }
        else {
            this.hasKey = true;
        }
        if (!result) {
            this.key = key;
            this.destination.next(value);
        }
    };
    return DistinctUntilChangedSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=distinctUntilChanged.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js ***!
  \*******************************************************************************/
/*! exports provided: distinctUntilKeyChanged */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distinctUntilKeyChanged", function() { return distinctUntilKeyChanged; });
/* harmony import */ var _distinctUntilChanged__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./distinctUntilChanged */ "./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js");
/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */

function distinctUntilKeyChanged(key, compare) {
    return Object(_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_0__["distinctUntilChanged"])(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });
}
//# sourceMappingURL=distinctUntilKeyChanged.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/elementAt.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/elementAt.js ***!
  \*****************************************************************/
/*! exports provided: elementAt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elementAt", function() { return elementAt; });
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./throwIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js");
/* harmony import */ var _take__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./take */ "./node_modules/rxjs/_esm5/internal/operators/take.js");
/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */





function elementAt(index, defaultValue) {
    if (index < 0) {
        throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__["ArgumentOutOfRangeError"]();
    }
    var hasDefaultValue = arguments.length >= 2;
    return function (source) {
        return source.pipe(Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) { return i === index; }), Object(_take__WEBPACK_IMPORTED_MODULE_4__["take"])(1), hasDefaultValue
            ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__["defaultIfEmpty"])(defaultValue)
            : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_2__["throwIfEmpty"])(function () { return new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_0__["ArgumentOutOfRangeError"](); }));
    };
}
//# sourceMappingURL=elementAt.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/endWith.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/endWith.js ***!
  \***************************************************************/
/*! exports provided: endWith */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "endWith", function() { return endWith; });
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ "./node_modules/rxjs/_esm5/internal/observable/concat.js");
/* harmony import */ var _observable_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/of */ "./node_modules/rxjs/_esm5/internal/observable/of.js");
/** PURE_IMPORTS_START _observable_concat,_observable_of PURE_IMPORTS_END */


function endWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i] = arguments[_i];
    }
    return function (source) { return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"])(source, _observable_of__WEBPACK_IMPORTED_MODULE_1__["of"].apply(void 0, array)); };
}
//# sourceMappingURL=endWith.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/every.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/every.js ***!
  \*************************************************************/
/*! exports provided: every */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "every", function() { return every; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function every(predicate, thisArg) {
    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };
}
var EveryOperator = /*@__PURE__*/ (function () {
    function EveryOperator(predicate, thisArg, source) {
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
    }
    EveryOperator.prototype.call = function (observer, source) {
        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
    };
    return EveryOperator;
}());
var EverySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](EverySubscriber, _super);
    function EverySubscriber(destination, predicate, thisArg, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.source = source;
        _this.index = 0;
        _this.thisArg = thisArg || _this;
        return _this;
    }
    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
        this.destination.next(everyValueMatch);
        this.destination.complete();
    };
    EverySubscriber.prototype._next = function (value) {
        var result = false;
        try {
            result = this.predicate.call(this.thisArg, value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (!result) {
            this.notifyComplete(false);
        }
    };
    EverySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return EverySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=every.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/exhaust.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/exhaust.js ***!
  \***************************************************************/
/*! exports provided: exhaust */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exhaust", function() { return exhaust; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function exhaust() {
    return function (source) { return source.lift(new SwitchFirstOperator()); };
}
var SwitchFirstOperator = /*@__PURE__*/ (function () {
    function SwitchFirstOperator() {
    }
    SwitchFirstOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchFirstSubscriber(subscriber));
    };
    return SwitchFirstOperator;
}());
var SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SwitchFirstSubscriber, _super);
    function SwitchFirstSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasCompleted = false;
        _this.hasSubscription = false;
        return _this;
    }
    SwitchFirstSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.hasSubscription = true;
            this.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(value, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](this)));
        }
    };
    SwitchFirstSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstSubscriber.prototype.notifyComplete = function () {
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));
//# sourceMappingURL=exhaust.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js ***!
  \******************************************************************/
/*! exports provided: exhaustMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exhaustMap", function() { return exhaustMap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */




function exhaustMap(project, resultSelector) {
    if (resultSelector) {
        return function (source) { return source.pipe(exhaustMap(function (a, i) { return Object(_observable_from__WEBPACK_IMPORTED_MODULE_2__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_1__["map"])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
    }
    return function (source) {
        return source.lift(new ExhaustMapOperator(project));
    };
}
var ExhaustMapOperator = /*@__PURE__*/ (function () {
    function ExhaustMapOperator(project) {
        this.project = project;
    }
    ExhaustMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));
    };
    return ExhaustMapOperator;
}());
var ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ExhaustMapSubscriber, _super);
    function ExhaustMapSubscriber(destination, project) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.hasSubscription = false;
        _this.hasCompleted = false;
        _this.index = 0;
        return _this;
    }
    ExhaustMapSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.tryNext(value);
        }
    };
    ExhaustMapSubscriber.prototype.tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.hasSubscription = true;
        this._innerSub(result);
    };
    ExhaustMapSubscriber.prototype._innerSub = function (result) {
        var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleInnerSubscriber"](this);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["innerSubscribe"])(result, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    ExhaustMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    ExhaustMapSubscriber.prototype.notifyNext = function (innerValue) {
        this.destination.next(innerValue);
    };
    ExhaustMapSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    ExhaustMapSubscriber.prototype.notifyComplete = function () {
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return ExhaustMapSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleOuterSubscriber"]));
//# sourceMappingURL=exhaustMap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/expand.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/expand.js ***!
  \**************************************************************/
/*! exports provided: expand, ExpandOperator, ExpandSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expand", function() { return expand; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandOperator", function() { return ExpandOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExpandSubscriber", function() { return ExpandSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };
}
var ExpandOperator = /*@__PURE__*/ (function () {
    function ExpandOperator(project, concurrent, scheduler) {
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
    }
    ExpandOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
    };
    return ExpandOperator;
}());

var ExpandSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ExpandSubscriber, _super);
    function ExpandSubscriber(destination, project, concurrent, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.concurrent = concurrent;
        _this.scheduler = scheduler;
        _this.index = 0;
        _this.active = 0;
        _this.hasCompleted = false;
        if (concurrent < Number.POSITIVE_INFINITY) {
            _this.buffer = [];
        }
        return _this;
    }
    ExpandSubscriber.dispatch = function (arg) {
        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;
        subscriber.subscribeToProjection(result, value, index);
    };
    ExpandSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (destination.closed) {
            this._complete();
            return;
        }
        var index = this.index++;
        if (this.active < this.concurrent) {
            destination.next(value);
            try {
                var project = this.project;
                var result = project(value, index);
                if (!this.scheduler) {
                    this.subscribeToProjection(result, value, index);
                }
                else {
                    var state = { subscriber: this, result: result, value: value, index: index };
                    var destination_1 = this.destination;
                    destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
                }
            }
            catch (e) {
                destination.error(e);
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
        this.active++;
        var destination = this.destination;
        destination.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(result, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](this)));
    };
    ExpandSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    ExpandSubscriber.prototype.notifyNext = function (innerValue) {
        this._next(innerValue);
    };
    ExpandSubscriber.prototype.notifyComplete = function () {
        var buffer = this.buffer;
        this.active--;
        if (buffer && buffer.length > 0) {
            this._next(buffer.shift());
        }
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    return ExpandSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));

//# sourceMappingURL=expand.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/filter.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/filter.js ***!
  \**************************************************************/
/*! exports provided: filter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return filter; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function filter(predicate, thisArg) {
    return function filterOperatorFunction(source) {
        return source.lift(new FilterOperator(predicate, thisArg));
    };
}
var FilterOperator = /*@__PURE__*/ (function () {
    function FilterOperator(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
    }
    FilterOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
    };
    return FilterOperator;
}());
var FilterSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FilterSubscriber, _super);
    function FilterSubscriber(destination, predicate, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.thisArg = thisArg;
        _this.count = 0;
        return _this;
    }
    FilterSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.predicate.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.destination.next(value);
        }
    };
    return FilterSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=filter.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/finalize.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/finalize.js ***!
  \****************************************************************/
/*! exports provided: finalize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "finalize", function() { return finalize; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */



function finalize(callback) {
    return function (source) { return source.lift(new FinallyOperator(callback)); };
}
var FinallyOperator = /*@__PURE__*/ (function () {
    function FinallyOperator(callback) {
        this.callback = callback;
    }
    FinallyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FinallySubscriber(subscriber, this.callback));
    };
    return FinallyOperator;
}());
var FinallySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FinallySubscriber, _super);
    function FinallySubscriber(destination, callback) {
        var _this = _super.call(this, destination) || this;
        _this.add(new _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"](callback));
        return _this;
    }
    return FinallySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=finalize.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/find.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/find.js ***!
  \************************************************************/
/*! exports provided: find, FindValueOperator, FindValueSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "find", function() { return find; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FindValueOperator", function() { return FindValueOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FindValueSubscriber", function() { return FindValueSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function find(predicate, thisArg) {
    if (typeof predicate !== 'function') {
        throw new TypeError('predicate is not a function');
    }
    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };
}
var FindValueOperator = /*@__PURE__*/ (function () {
    function FindValueOperator(predicate, source, yieldIndex, thisArg) {
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
    }
    FindValueOperator.prototype.call = function (observer, source) {
        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
    };
    return FindValueOperator;
}());

var FindValueSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](FindValueSubscriber, _super);
    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.yieldIndex = yieldIndex;
        _this.thisArg = thisArg;
        _this.index = 0;
        return _this;
    }
    FindValueSubscriber.prototype.notifyComplete = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
        this.unsubscribe();
    };
    FindValueSubscriber.prototype._next = function (value) {
        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
        var index = this.index++;
        try {
            var result = predicate.call(thisArg || this, value, index, this.source);
            if (result) {
                this.notifyComplete(this.yieldIndex ? index : value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    FindValueSubscriber.prototype._complete = function () {
        this.notifyComplete(this.yieldIndex ? -1 : undefined);
    };
    return FindValueSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

//# sourceMappingURL=find.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/findIndex.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/findIndex.js ***!
  \*****************************************************************/
/*! exports provided: findIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return findIndex; });
/* harmony import */ var _operators_find__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operators/find */ "./node_modules/rxjs/_esm5/internal/operators/find.js");
/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */

function findIndex(predicate, thisArg) {
    return function (source) { return source.lift(new _operators_find__WEBPACK_IMPORTED_MODULE_0__["FindValueOperator"](predicate, source, true, thisArg)); };
}
//# sourceMappingURL=findIndex.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/first.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/first.js ***!
  \*************************************************************/
/*! exports provided: first */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "first", function() { return first; });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/EmptyError */ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/* harmony import */ var _take__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./take */ "./node_modules/rxjs/_esm5/internal/operators/take.js");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js");
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./throwIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */






function first(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) { return source.pipe(predicate ? Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) { return predicate(v, i, source); }) : _util_identity__WEBPACK_IMPORTED_MODULE_5__["identity"], Object(_take__WEBPACK_IMPORTED_MODULE_2__["take"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__["defaultIfEmpty"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__["throwIfEmpty"])(function () { return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__["EmptyError"](); })); };
}
//# sourceMappingURL=first.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/groupBy.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/groupBy.js ***!
  \***************************************************************/
/*! exports provided: groupBy, GroupedObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return groupBy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupedObservable", function() { return GroupedObservable; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */





function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
    return function (source) {
        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
    };
}
var GroupByOperator = /*@__PURE__*/ (function () {
    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.subjectSelector = subjectSelector;
    }
    GroupByOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
    };
    return GroupByOperator;
}());
var GroupBySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupBySubscriber, _super);
    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.elementSelector = elementSelector;
        _this.durationSelector = durationSelector;
        _this.subjectSelector = subjectSelector;
        _this.groups = null;
        _this.attemptedToUnsubscribe = false;
        _this.count = 0;
        return _this;
    }
    GroupBySubscriber.prototype._next = function (value) {
        var key;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            this.error(err);
            return;
        }
        this._group(value, key);
    };
    GroupBySubscriber.prototype._group = function (value, key) {
        var groups = this.groups;
        if (!groups) {
            groups = this.groups = new Map();
        }
        var group = groups.get(key);
        var element;
        if (this.elementSelector) {
            try {
                element = this.elementSelector(value);
            }
            catch (err) {
                this.error(err);
            }
        }
        else {
            element = value;
        }
        if (!group) {
            group = (this.subjectSelector ? this.subjectSelector() : new _Subject__WEBPACK_IMPORTED_MODULE_4__["Subject"]());
            groups.set(key, group);
            var groupedObservable = new GroupedObservable(key, group, this);
            this.destination.next(groupedObservable);
            if (this.durationSelector) {
                var duration = void 0;
                try {
                    duration = this.durationSelector(new GroupedObservable(key, group));
                }
                catch (err) {
                    this.error(err);
                    return;
                }
                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
            }
        }
        if (!group.closed) {
            group.next(element);
        }
    };
    GroupBySubscriber.prototype._error = function (err) {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.error(err);
            });
            groups.clear();
        }
        this.destination.error(err);
    };
    GroupBySubscriber.prototype._complete = function () {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.complete();
            });
            groups.clear();
        }
        this.destination.complete();
    };
    GroupBySubscriber.prototype.removeGroup = function (key) {
        this.groups.delete(key);
    };
    GroupBySubscriber.prototype.unsubscribe = function () {
        if (!this.closed) {
            this.attemptedToUnsubscribe = true;
            if (this.count === 0) {
                _super.prototype.unsubscribe.call(this);
            }
        }
    };
    return GroupBySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
var GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupDurationSubscriber, _super);
    function GroupDurationSubscriber(key, group, parent) {
        var _this = _super.call(this, group) || this;
        _this.key = key;
        _this.group = group;
        _this.parent = parent;
        return _this;
    }
    GroupDurationSubscriber.prototype._next = function (value) {
        this.complete();
    };
    GroupDurationSubscriber.prototype._unsubscribe = function () {
        var _a = this, parent = _a.parent, key = _a.key;
        this.key = this.parent = null;
        if (parent) {
            parent.removeGroup(key);
        }
    };
    return GroupDurationSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
var GroupedObservable = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](GroupedObservable, _super);
    function GroupedObservable(key, groupSubject, refCountSubscription) {
        var _this = _super.call(this) || this;
        _this.key = key;
        _this.groupSubject = groupSubject;
        _this.refCountSubscription = refCountSubscription;
        return _this;
    }
    GroupedObservable.prototype._subscribe = function (subscriber) {
        var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"]();
        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
        if (refCountSubscription && !refCountSubscription.closed) {
            subscription.add(new InnerRefCountSubscription(refCountSubscription));
        }
        subscription.add(groupSubject.subscribe(subscriber));
        return subscription;
    };
    return GroupedObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_3__["Observable"]));

var InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](InnerRefCountSubscription, _super);
    function InnerRefCountSubscription(parent) {
        var _this = _super.call(this) || this;
        _this.parent = parent;
        parent.count++;
        return _this;
    }
    InnerRefCountSubscription.prototype.unsubscribe = function () {
        var parent = this.parent;
        if (!parent.closed && !this.closed) {
            _super.prototype.unsubscribe.call(this);
            parent.count -= 1;
            if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                parent.unsubscribe();
            }
        }
    };
    return InnerRefCountSubscription;
}(_Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"]));
//# sourceMappingURL=groupBy.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js ***!
  \**********************************************************************/
/*! exports provided: ignoreElements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ignoreElements", function() { return ignoreElements; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function ignoreElements() {
    return function ignoreElementsOperatorFunction(source) {
        return source.lift(new IgnoreElementsOperator());
    };
}
var IgnoreElementsOperator = /*@__PURE__*/ (function () {
    function IgnoreElementsOperator() {
    }
    IgnoreElementsOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new IgnoreElementsSubscriber(subscriber));
    };
    return IgnoreElementsOperator;
}());
var IgnoreElementsSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](IgnoreElementsSubscriber, _super);
    function IgnoreElementsSubscriber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IgnoreElementsSubscriber.prototype._next = function (unused) {
    };
    return IgnoreElementsSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=ignoreElements.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/isEmpty.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/isEmpty.js ***!
  \***************************************************************/
/*! exports provided: isEmpty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return isEmpty; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function isEmpty() {
    return function (source) { return source.lift(new IsEmptyOperator()); };
}
var IsEmptyOperator = /*@__PURE__*/ (function () {
    function IsEmptyOperator() {
    }
    IsEmptyOperator.prototype.call = function (observer, source) {
        return source.subscribe(new IsEmptySubscriber(observer));
    };
    return IsEmptyOperator;
}());
var IsEmptySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](IsEmptySubscriber, _super);
    function IsEmptySubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
        var destination = this.destination;
        destination.next(isEmpty);
        destination.complete();
    };
    IsEmptySubscriber.prototype._next = function (value) {
        this.notifyComplete(false);
    };
    IsEmptySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return IsEmptySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=isEmpty.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/last.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/last.js ***!
  \************************************************************/
/*! exports provided: last */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "last", function() { return last; });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/EmptyError */ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/* harmony import */ var _takeLast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./takeLast */ "./node_modules/rxjs/_esm5/internal/operators/takeLast.js");
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./throwIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */






function last(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) { return source.pipe(predicate ? Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(function (v, i) { return predicate(v, i, source); }) : _util_identity__WEBPACK_IMPORTED_MODULE_5__["identity"], Object(_takeLast__WEBPACK_IMPORTED_MODULE_2__["takeLast"])(1), hasDefaultValue ? Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_4__["defaultIfEmpty"])(defaultValue) : Object(_throwIfEmpty__WEBPACK_IMPORTED_MODULE_3__["throwIfEmpty"])(function () { return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__["EmptyError"](); })); };
}
//# sourceMappingURL=last.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/map.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/map.js ***!
  \***********************************************************/
/*! exports provided: map, MapOperator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapOperator", function() { return MapOperator; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function map(project, thisArg) {
    return function mapOperation(source) {
        if (typeof project !== 'function') {
            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
        }
        return source.lift(new MapOperator(project, thisArg));
    };
}
var MapOperator = /*@__PURE__*/ (function () {
    function MapOperator(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
}());

var MapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.count = 0;
        _this.thisArg = thisArg || _this;
        return _this;
    }
    MapSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.project.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return MapSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=map.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mapTo.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mapTo.js ***!
  \*************************************************************/
/*! exports provided: mapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapTo", function() { return mapTo; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function mapTo(value) {
    return function (source) { return source.lift(new MapToOperator(value)); };
}
var MapToOperator = /*@__PURE__*/ (function () {
    function MapToOperator(value) {
        this.value = value;
    }
    MapToOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapToSubscriber(subscriber, this.value));
    };
    return MapToOperator;
}());
var MapToSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MapToSubscriber, _super);
    function MapToSubscriber(destination, value) {
        var _this = _super.call(this, destination) || this;
        _this.value = value;
        return _this;
    }
    MapToSubscriber.prototype._next = function (x) {
        this.destination.next(this.value);
    };
    return MapToSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=mapTo.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/materialize.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/materialize.js ***!
  \*******************************************************************/
/*! exports provided: materialize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "materialize", function() { return materialize; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Notification */ "./node_modules/rxjs/_esm5/internal/Notification.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



function materialize() {
    return function materializeOperatorFunction(source) {
        return source.lift(new MaterializeOperator());
    };
}
var MaterializeOperator = /*@__PURE__*/ (function () {
    function MaterializeOperator() {
    }
    MaterializeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MaterializeSubscriber(subscriber));
    };
    return MaterializeOperator;
}());
var MaterializeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MaterializeSubscriber, _super);
    function MaterializeSubscriber(destination) {
        return _super.call(this, destination) || this;
    }
    MaterializeSubscriber.prototype._next = function (value) {
        this.destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createNext(value));
    };
    MaterializeSubscriber.prototype._error = function (err) {
        var destination = this.destination;
        destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createError(err));
        destination.complete();
    };
    MaterializeSubscriber.prototype._complete = function () {
        var destination = this.destination;
        destination.next(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createComplete());
        destination.complete();
    };
    return MaterializeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=materialize.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/max.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/max.js ***!
  \***********************************************************/
/*! exports provided: max */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ "./node_modules/rxjs/_esm5/internal/operators/reduce.js");
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function max(comparer) {
    var max = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }
        : function (x, y) { return x > y ? x : y; };
    return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(max);
}
//# sourceMappingURL=max.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/merge.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/merge.js ***!
  \*************************************************************/
/*! exports provided: merge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge; });
/* harmony import */ var _observable_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/merge */ "./node_modules/rxjs/_esm5/internal/observable/merge.js");
/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */

function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function (source) { return source.lift.call(_observable_merge__WEBPACK_IMPORTED_MODULE_0__["merge"].apply(void 0, [source].concat(observables))); };
}
//# sourceMappingURL=merge.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mergeAll.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeAll.js ***!
  \****************************************************************/
/*! exports provided: mergeAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeAll", function() { return mergeAll; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */


function mergeAll(concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(_util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"], concurrent);
}
//# sourceMappingURL=mergeAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeMap.js ***!
  \****************************************************************/
/*! exports provided: mergeMap, MergeMapOperator, MergeMapSubscriber, flatMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMap", function() { return mergeMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeMapOperator", function() { return MergeMapOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeMapSubscriber", function() { return MergeMapSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flatMap", function() { return flatMap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */




function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'function') {
        return function (source) { return source.pipe(mergeMap(function (a, i) { return Object(_observable_from__WEBPACK_IMPORTED_MODULE_2__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_1__["map"])(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };
    }
    else if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };
}
var MergeMapOperator = /*@__PURE__*/ (function () {
    function MergeMapOperator(project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        this.project = project;
        this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));
    };
    return MergeMapOperator;
}());

var MergeMapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, concurrent) {
        if (concurrent === void 0) {
            concurrent = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.concurrent = concurrent;
        _this.hasCompleted = false;
        _this.buffer = [];
        _this.active = 0;
        _this.index = 0;
        return _this;
    }
    MergeMapSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            this._tryNext(value);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.active++;
        this._innerSub(result);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish) {
        var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleInnerSubscriber"](this);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["innerSubscribe"])(ish, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    MergeMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
        this.unsubscribe();
    };
    MergeMapSubscriber.prototype.notifyNext = function (innerValue) {
        this.destination.next(innerValue);
    };
    MergeMapSubscriber.prototype.notifyComplete = function () {
        var buffer = this.buffer;
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleOuterSubscriber"]));

var flatMap = mergeMap;
//# sourceMappingURL=mergeMap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js ***!
  \******************************************************************/
/*! exports provided: mergeMapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeMapTo", function() { return mergeMapTo; });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js");
/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */

function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    if (typeof resultSelector === 'function') {
        return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(function () { return innerObservable; }, resultSelector, concurrent);
    }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return Object(_mergeMap__WEBPACK_IMPORTED_MODULE_0__["mergeMap"])(function () { return innerObservable; }, concurrent);
}
//# sourceMappingURL=mergeMapTo.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/mergeScan.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/mergeScan.js ***!
  \*****************************************************************/
/*! exports provided: mergeScan, MergeScanOperator, MergeScanSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeScan", function() { return mergeScan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeScanOperator", function() { return MergeScanOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MergeScanSubscriber", function() { return MergeScanSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function mergeScan(accumulator, seed, concurrent) {
    if (concurrent === void 0) {
        concurrent = Number.POSITIVE_INFINITY;
    }
    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };
}
var MergeScanOperator = /*@__PURE__*/ (function () {
    function MergeScanOperator(accumulator, seed, concurrent) {
        this.accumulator = accumulator;
        this.seed = seed;
        this.concurrent = concurrent;
    }
    MergeScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
    };
    return MergeScanOperator;
}());

var MergeScanSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](MergeScanSubscriber, _super);
    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
        var _this = _super.call(this, destination) || this;
        _this.accumulator = accumulator;
        _this.acc = acc;
        _this.concurrent = concurrent;
        _this.hasValue = false;
        _this.hasCompleted = false;
        _this.buffer = [];
        _this.active = 0;
        _this.index = 0;
        return _this;
    }
    MergeScanSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var index = this.index++;
            var destination = this.destination;
            var ish = void 0;
            try {
                var accumulator = this.accumulator;
                ish = accumulator(this.acc, value, index);
            }
            catch (e) {
                return destination.error(e);
            }
            this.active++;
            this._innerSub(ish);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeScanSubscriber.prototype._innerSub = function (ish) {
        var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](this);
        var destination = this.destination;
        destination.add(innerSubscriber);
        var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(ish, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            destination.add(innerSubscription);
        }
    };
    MergeScanSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
        this.unsubscribe();
    };
    MergeScanSubscriber.prototype.notifyNext = function (innerValue) {
        var destination = this.destination;
        this.acc = innerValue;
        this.hasValue = true;
        destination.next(innerValue);
    };
    MergeScanSubscriber.prototype.notifyComplete = function () {
        var buffer = this.buffer;
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    return MergeScanSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));

//# sourceMappingURL=mergeScan.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/min.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/min.js ***!
  \***********************************************************/
/*! exports provided: min */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ "./node_modules/rxjs/_esm5/internal/operators/reduce.js");
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function min(comparer) {
    var min = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }
        : function (x, y) { return x < y ? x : y; };
    return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(min);
}
//# sourceMappingURL=min.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/multicast.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/multicast.js ***!
  \*****************************************************************/
/*! exports provided: multicast, MulticastOperator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multicast", function() { return multicast; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MulticastOperator", function() { return MulticastOperator; });
/* harmony import */ var _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/ConnectableObservable */ "./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js");
/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */

function multicast(subjectOrSubjectFactory, selector) {
    return function multicastOperatorFunction(source) {
        var subjectFactory;
        if (typeof subjectOrSubjectFactory === 'function') {
            subjectFactory = subjectOrSubjectFactory;
        }
        else {
            subjectFactory = function subjectFactory() {
                return subjectOrSubjectFactory;
            };
        }
        if (typeof selector === 'function') {
            return source.lift(new MulticastOperator(subjectFactory, selector));
        }
        var connectable = Object.create(source, _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_0__["connectableObservableDescriptor"]);
        connectable.source = source;
        connectable.subjectFactory = subjectFactory;
        return connectable;
    };
}
var MulticastOperator = /*@__PURE__*/ (function () {
    function MulticastOperator(subjectFactory, selector) {
        this.subjectFactory = subjectFactory;
        this.selector = selector;
    }
    MulticastOperator.prototype.call = function (subscriber, source) {
        var selector = this.selector;
        var subject = this.subjectFactory();
        var subscription = selector(subject).subscribe(subscriber);
        subscription.add(source.subscribe(subject));
        return subscription;
    };
    return MulticastOperator;
}());

//# sourceMappingURL=multicast.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/observeOn.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/observeOn.js ***!
  \*****************************************************************/
/*! exports provided: observeOn, ObserveOnOperator, ObserveOnSubscriber, ObserveOnMessage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observeOn", function() { return observeOn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnOperator", function() { return ObserveOnOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnSubscriber", function() { return ObserveOnSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserveOnMessage", function() { return ObserveOnMessage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Notification__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Notification */ "./node_modules/rxjs/_esm5/internal/Notification.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */



function observeOn(scheduler, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    return function observeOnOperatorFunction(source) {
        return source.lift(new ObserveOnOperator(scheduler, delay));
    };
}
var ObserveOnOperator = /*@__PURE__*/ (function () {
    function ObserveOnOperator(scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    };
    return ObserveOnOperator;
}());

var ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        var _this = _super.call(this, destination) || this;
        _this.scheduler = scheduler;
        _this.delay = delay;
        return _this;
    }
    ObserveOnSubscriber.dispatch = function (arg) {
        var notification = arg.notification, destination = arg.destination;
        notification.observe(destination);
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
        var destination = this.destination;
        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    };
    ObserveOnSubscriber.prototype._next = function (value) {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createNext(value));
    };
    ObserveOnSubscriber.prototype._error = function (err) {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createError(err));
        this.unsubscribe();
    };
    ObserveOnSubscriber.prototype._complete = function () {
        this.scheduleMessage(_Notification__WEBPACK_IMPORTED_MODULE_2__["Notification"].createComplete());
        this.unsubscribe();
    };
    return ObserveOnSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

var ObserveOnMessage = /*@__PURE__*/ (function () {
    function ObserveOnMessage(notification, destination) {
        this.notification = notification;
        this.destination = destination;
    }
    return ObserveOnMessage;
}());

//# sourceMappingURL=observeOn.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js ***!
  \*************************************************************************/
/*! exports provided: onErrorResumeNext, onErrorResumeNextStatic */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return onErrorResumeNext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNextStatic", function() { return onErrorResumeNextStatic; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_innerSubscribe PURE_IMPORTS_END */




function onErrorResumeNext() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i] = arguments[_i];
    }
    if (nextSources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(nextSources[0])) {
        nextSources = nextSources[0];
    }
    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };
}
function onErrorResumeNextStatic() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i] = arguments[_i];
    }
    var source = undefined;
    if (nextSources.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_2__["isArray"])(nextSources[0])) {
        nextSources = nextSources[0];
    }
    source = nextSources.shift();
    return Object(_observable_from__WEBPACK_IMPORTED_MODULE_1__["from"])(source).lift(new OnErrorResumeNextOperator(nextSources));
}
var OnErrorResumeNextOperator = /*@__PURE__*/ (function () {
    function OnErrorResumeNextOperator(nextSources) {
        this.nextSources = nextSources;
    }
    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
    };
    return OnErrorResumeNextOperator;
}());
var OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](OnErrorResumeNextSubscriber, _super);
    function OnErrorResumeNextSubscriber(destination, nextSources) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.nextSources = nextSources;
        return _this;
    }
    OnErrorResumeNextSubscriber.prototype.notifyError = function () {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.notifyComplete = function () {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._error = function (err) {
        this.subscribeToNextSource();
        this.unsubscribe();
    };
    OnErrorResumeNextSubscriber.prototype._complete = function () {
        this.subscribeToNextSource();
        this.unsubscribe();
    };
    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
        var next = this.nextSources.shift();
        if (!!next) {
            var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleInnerSubscriber"](this);
            var destination = this.destination;
            destination.add(innerSubscriber);
            var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["innerSubscribe"])(next, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                destination.add(innerSubscription);
            }
        }
        else {
            this.destination.complete();
        }
    };
    return OnErrorResumeNextSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleOuterSubscriber"]));
//# sourceMappingURL=onErrorResumeNext.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/pairwise.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/pairwise.js ***!
  \****************************************************************/
/*! exports provided: pairwise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pairwise", function() { return pairwise; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function pairwise() {
    return function (source) { return source.lift(new PairwiseOperator()); };
}
var PairwiseOperator = /*@__PURE__*/ (function () {
    function PairwiseOperator() {
    }
    PairwiseOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new PairwiseSubscriber(subscriber));
    };
    return PairwiseOperator;
}());
var PairwiseSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](PairwiseSubscriber, _super);
    function PairwiseSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.hasPrev = false;
        return _this;
    }
    PairwiseSubscriber.prototype._next = function (value) {
        var pair;
        if (this.hasPrev) {
            pair = [this.prev, value];
        }
        else {
            this.hasPrev = true;
        }
        this.prev = value;
        if (pair) {
            this.destination.next(pair);
        }
    };
    return PairwiseSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=pairwise.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/partition.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/partition.js ***!
  \*****************************************************************/
/*! exports provided: partition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return partition; });
/* harmony import */ var _util_not__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/not */ "./node_modules/rxjs/_esm5/internal/util/not.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */


function partition(predicate, thisArg) {
    return function (source) {
        return [
            Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(predicate, thisArg)(source),
            Object(_filter__WEBPACK_IMPORTED_MODULE_1__["filter"])(Object(_util_not__WEBPACK_IMPORTED_MODULE_0__["not"])(predicate, thisArg))(source)
        ];
    };
}
//# sourceMappingURL=partition.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/pluck.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/pluck.js ***!
  \*************************************************************/
/*! exports provided: pluck */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return pluck; });
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/** PURE_IMPORTS_START _map PURE_IMPORTS_END */

function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i] = arguments[_i];
    }
    var length = properties.length;
    if (length === 0) {
        throw new Error('list of properties cannot be empty.');
    }
    return function (source) { return Object(_map__WEBPACK_IMPORTED_MODULE_0__["map"])(plucker(properties, length))(source); };
}
function plucker(props, length) {
    var mapper = function (x) {
        var currentProp = x;
        for (var i = 0; i < length; i++) {
            var p = currentProp != null ? currentProp[props[i]] : undefined;
            if (p !== void 0) {
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    };
    return mapper;
}
//# sourceMappingURL=pluck.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/publish.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/publish.js ***!
  \***************************************************************/
/*! exports provided: publish */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publish", function() { return publish; });
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */


function publish(selector) {
    return selector ?
        Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(function () { return new _Subject__WEBPACK_IMPORTED_MODULE_0__["Subject"](); }, selector) :
        Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _Subject__WEBPACK_IMPORTED_MODULE_0__["Subject"]());
}
//# sourceMappingURL=publish.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js ***!
  \***********************************************************************/
/*! exports provided: publishBehavior */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishBehavior", function() { return publishBehavior; });
/* harmony import */ var _BehaviorSubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BehaviorSubject */ "./node_modules/rxjs/_esm5/internal/BehaviorSubject.js");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */


function publishBehavior(value) {
    return function (source) { return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _BehaviorSubject__WEBPACK_IMPORTED_MODULE_0__["BehaviorSubject"](value))(source); };
}
//# sourceMappingURL=publishBehavior.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/publishLast.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/publishLast.js ***!
  \*******************************************************************/
/*! exports provided: publishLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishLast", function() { return publishLast; });
/* harmony import */ var _AsyncSubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AsyncSubject */ "./node_modules/rxjs/_esm5/internal/AsyncSubject.js");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */


function publishLast() {
    return function (source) { return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(new _AsyncSubject__WEBPACK_IMPORTED_MODULE_0__["AsyncSubject"]())(source); };
}
//# sourceMappingURL=publishLast.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/publishReplay.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/publishReplay.js ***!
  \*********************************************************************/
/*! exports provided: publishReplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "publishReplay", function() { return publishReplay; });
/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ReplaySubject */ "./node_modules/rxjs/_esm5/internal/ReplaySubject.js");
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */


function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
        scheduler = selectorOrScheduler;
    }
    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
    var subject = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__["ReplaySubject"](bufferSize, windowTime, scheduler);
    return function (source) { return Object(_multicast__WEBPACK_IMPORTED_MODULE_1__["multicast"])(function () { return subject; }, selector)(source); };
}
//# sourceMappingURL=publishReplay.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/race.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/race.js ***!
  \************************************************************/
/*! exports provided: race */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "race", function() { return race; });
/* harmony import */ var _util_isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/* harmony import */ var _observable_race__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/race */ "./node_modules/rxjs/_esm5/internal/observable/race.js");
/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */


function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function raceOperatorFunction(source) {
        if (observables.length === 1 && Object(_util_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(observables[0])) {
            observables = observables[0];
        }
        return source.lift.call(_observable_race__WEBPACK_IMPORTED_MODULE_1__["race"].apply(void 0, [source].concat(observables)));
    };
}
//# sourceMappingURL=race.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/reduce.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/reduce.js ***!
  \**************************************************************/
/*! exports provided: reduce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return reduce; });
/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scan */ "./node_modules/rxjs/_esm5/internal/operators/scan.js");
/* harmony import */ var _takeLast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./takeLast */ "./node_modules/rxjs/_esm5/internal/operators/takeLast.js");
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js");
/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/pipe */ "./node_modules/rxjs/_esm5/internal/util/pipe.js");
/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */




function reduce(accumulator, seed) {
    if (arguments.length >= 2) {
        return function reduceOperatorFunctionWithSeed(source) {
            return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__["pipe"])(Object(_scan__WEBPACK_IMPORTED_MODULE_0__["scan"])(accumulator, seed), Object(_takeLast__WEBPACK_IMPORTED_MODULE_1__["takeLast"])(1), Object(_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_2__["defaultIfEmpty"])(seed))(source);
        };
    }
    return function reduceOperatorFunction(source) {
        return Object(_util_pipe__WEBPACK_IMPORTED_MODULE_3__["pipe"])(Object(_scan__WEBPACK_IMPORTED_MODULE_0__["scan"])(function (acc, value, index) { return accumulator(acc, value, index + 1); }), Object(_takeLast__WEBPACK_IMPORTED_MODULE_1__["takeLast"])(1))(source);
    };
}
//# sourceMappingURL=reduce.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/refCount.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/refCount.js ***!
  \****************************************************************/
/*! exports provided: refCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "refCount", function() { return refCount; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function refCount() {
    return function refCountOperatorFunction(source) {
        return source.lift(new RefCountOperator(source));
    };
}
var RefCountOperator = /*@__PURE__*/ (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        var _this = _super.call(this, destination) || this;
        _this.connectable = connectable;
        return _this;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=refCount.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/repeat.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/repeat.js ***!
  \**************************************************************/
/*! exports provided: repeat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return repeat; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */



function repeat(count) {
    if (count === void 0) {
        count = -1;
    }
    return function (source) {
        if (count === 0) {
            return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_2__["empty"])();
        }
        else if (count < 0) {
            return source.lift(new RepeatOperator(-1, source));
        }
        else {
            return source.lift(new RepeatOperator(count - 1, source));
        }
    };
}
var RepeatOperator = /*@__PURE__*/ (function () {
    function RepeatOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RepeatOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
    };
    return RepeatOperator;
}());
var RepeatSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RepeatSubscriber, _super);
    function RepeatSubscriber(destination, count, source) {
        var _this = _super.call(this, destination) || this;
        _this.count = count;
        _this.source = source;
        return _this;
    }
    RepeatSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.complete.call(this);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RepeatSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=repeat.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js ***!
  \******************************************************************/
/*! exports provided: repeatWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repeatWhen", function() { return repeatWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */



function repeatWhen(notifier) {
    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };
}
var RepeatWhenOperator = /*@__PURE__*/ (function () {
    function RepeatWhenOperator(notifier) {
        this.notifier = notifier;
    }
    RepeatWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
    };
    return RepeatWhenOperator;
}());
var RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RepeatWhenSubscriber, _super);
    function RepeatWhenSubscriber(destination, notifier, source) {
        var _this = _super.call(this, destination) || this;
        _this.notifier = notifier;
        _this.source = source;
        _this.sourceIsBeingSubscribedTo = true;
        return _this;
    }
    RepeatWhenSubscriber.prototype.notifyNext = function () {
        this.sourceIsBeingSubscribedTo = true;
        this.source.subscribe(this);
    };
    RepeatWhenSubscriber.prototype.notifyComplete = function () {
        if (this.sourceIsBeingSubscribedTo === false) {
            return _super.prototype.complete.call(this);
        }
    };
    RepeatWhenSubscriber.prototype.complete = function () {
        this.sourceIsBeingSubscribedTo = false;
        if (!this.isStopped) {
            if (!this.retries) {
                this.subscribeToRetries();
            }
            if (!this.retriesSubscription || this.retriesSubscription.closed) {
                return _super.prototype.complete.call(this);
            }
            this._unsubscribeAndRecycle();
            this.notifications.next(undefined);
        }
    };
    RepeatWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;
        if (notifications) {
            notifications.unsubscribe();
            this.notifications = undefined;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = undefined;
        }
        this.retries = undefined;
    };
    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
        var _unsubscribe = this._unsubscribe;
        this._unsubscribe = null;
        _super.prototype._unsubscribeAndRecycle.call(this);
        this._unsubscribe = _unsubscribe;
        return this;
    };
    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
        this.notifications = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        var retries;
        try {
            var notifier = this.notifier;
            retries = notifier(this.notifications);
        }
        catch (e) {
            return _super.prototype.complete.call(this);
        }
        this.retries = retries;
        this.retriesSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["innerSubscribe"])(retries, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["SimpleInnerSubscriber"](this));
    };
    return RepeatWhenSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["SimpleOuterSubscriber"]));
//# sourceMappingURL=repeatWhen.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/retry.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/retry.js ***!
  \*************************************************************/
/*! exports provided: retry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retry", function() { return retry; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function retry(count) {
    if (count === void 0) {
        count = -1;
    }
    return function (source) { return source.lift(new RetryOperator(count, source)); };
}
var RetryOperator = /*@__PURE__*/ (function () {
    function RetryOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RetryOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
    };
    return RetryOperator;
}());
var RetrySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RetrySubscriber, _super);
    function RetrySubscriber(destination, count, source) {
        var _this = _super.call(this, destination) || this;
        _this.count = count;
        _this.source = source;
        return _this;
    }
    RetrySubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.error.call(this, err);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            source.subscribe(this._unsubscribeAndRecycle());
        }
    };
    return RetrySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=retry.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/retryWhen.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/retryWhen.js ***!
  \*****************************************************************/
/*! exports provided: retryWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retryWhen", function() { return retryWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */



function retryWhen(notifier) {
    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };
}
var RetryWhenOperator = /*@__PURE__*/ (function () {
    function RetryWhenOperator(notifier, source) {
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
    };
    return RetryWhenOperator;
}());
var RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](RetryWhenSubscriber, _super);
    function RetryWhenSubscriber(destination, notifier, source) {
        var _this = _super.call(this, destination) || this;
        _this.notifier = notifier;
        _this.source = source;
        return _this;
    }
    RetryWhenSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var errors = this.errors;
            var retries = this.retries;
            var retriesSubscription = this.retriesSubscription;
            if (!retries) {
                errors = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
                try {
                    var notifier = this.notifier;
                    retries = notifier(errors);
                }
                catch (e) {
                    return _super.prototype.error.call(this, e);
                }
                retriesSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["innerSubscribe"])(retries, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["SimpleInnerSubscriber"](this));
            }
            else {
                this.errors = undefined;
                this.retriesSubscription = undefined;
            }
            this._unsubscribeAndRecycle();
            this.errors = errors;
            this.retries = retries;
            this.retriesSubscription = retriesSubscription;
            errors.next(err);
        }
    };
    RetryWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;
        if (errors) {
            errors.unsubscribe();
            this.errors = undefined;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = undefined;
        }
        this.retries = undefined;
    };
    RetryWhenSubscriber.prototype.notifyNext = function () {
        var _unsubscribe = this._unsubscribe;
        this._unsubscribe = null;
        this._unsubscribeAndRecycle();
        this._unsubscribe = _unsubscribe;
        this.source.subscribe(this);
    };
    return RetryWhenSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["SimpleOuterSubscriber"]));
//# sourceMappingURL=retryWhen.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/sample.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/sample.js ***!
  \**************************************************************/
/*! exports provided: sample */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return sample; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function sample(notifier) {
    return function (source) { return source.lift(new SampleOperator(notifier)); };
}
var SampleOperator = /*@__PURE__*/ (function () {
    function SampleOperator(notifier) {
        this.notifier = notifier;
    }
    SampleOperator.prototype.call = function (subscriber, source) {
        var sampleSubscriber = new SampleSubscriber(subscriber);
        var subscription = source.subscribe(sampleSubscriber);
        subscription.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(this.notifier, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](sampleSubscriber)));
        return subscription;
    };
    return SampleOperator;
}());
var SampleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SampleSubscriber, _super);
    function SampleSubscriber() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasValue = false;
        return _this;
    }
    SampleSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
    };
    SampleSubscriber.prototype.notifyNext = function () {
        this.emitValue();
    };
    SampleSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    SampleSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.value);
        }
    };
    return SampleSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));
//# sourceMappingURL=sample.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/sampleTime.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/sampleTime.js ***!
  \******************************************************************/
/*! exports provided: sampleTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sampleTime", function() { return sampleTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */



function sampleTime(period, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
    }
    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };
}
var SampleTimeOperator = /*@__PURE__*/ (function () {
    function SampleTimeOperator(period, scheduler) {
        this.period = period;
        this.scheduler = scheduler;
    }
    SampleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
    };
    return SampleTimeOperator;
}());
var SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SampleTimeSubscriber, _super);
    function SampleTimeSubscriber(destination, period, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.period = period;
        _this.scheduler = scheduler;
        _this.hasValue = false;
        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));
        return _this;
    }
    SampleTimeSubscriber.prototype._next = function (value) {
        this.lastValue = value;
        this.hasValue = true;
    };
    SampleTimeSubscriber.prototype.notifyNext = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.lastValue);
        }
    };
    return SampleTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
function dispatchNotification(state) {
    var subscriber = state.subscriber, period = state.period;
    subscriber.notifyNext();
    this.schedule(state, period);
}
//# sourceMappingURL=sampleTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/scan.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/scan.js ***!
  \************************************************************/
/*! exports provided: scan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return scan; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function scan(accumulator, seed) {
    var hasSeed = false;
    if (arguments.length >= 2) {
        hasSeed = true;
    }
    return function scanOperatorFunction(source) {
        return source.lift(new ScanOperator(accumulator, seed, hasSeed));
    };
}
var ScanOperator = /*@__PURE__*/ (function () {
    function ScanOperator(accumulator, seed, hasSeed) {
        if (hasSeed === void 0) {
            hasSeed = false;
        }
        this.accumulator = accumulator;
        this.seed = seed;
        this.hasSeed = hasSeed;
    }
    ScanOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
    };
    return ScanOperator;
}());
var ScanSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ScanSubscriber, _super);
    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
        var _this = _super.call(this, destination) || this;
        _this.accumulator = accumulator;
        _this._seed = _seed;
        _this.hasSeed = hasSeed;
        _this.index = 0;
        return _this;
    }
    Object.defineProperty(ScanSubscriber.prototype, "seed", {
        get: function () {
            return this._seed;
        },
        set: function (value) {
            this.hasSeed = true;
            this._seed = value;
        },
        enumerable: true,
        configurable: true
    });
    ScanSubscriber.prototype._next = function (value) {
        if (!this.hasSeed) {
            this.seed = value;
            this.destination.next(value);
        }
        else {
            return this._tryNext(value);
        }
    };
    ScanSubscriber.prototype._tryNext = function (value) {
        var index = this.index++;
        var result;
        try {
            result = this.accumulator(this.seed, value, index);
        }
        catch (err) {
            this.destination.error(err);
        }
        this.seed = result;
        this.destination.next(result);
    };
    return ScanSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=scan.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js ***!
  \*********************************************************************/
/*! exports provided: sequenceEqual, SequenceEqualOperator, SequenceEqualSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sequenceEqual", function() { return sequenceEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SequenceEqualOperator", function() { return SequenceEqualOperator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SequenceEqualSubscriber", function() { return SequenceEqualSubscriber; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function sequenceEqual(compareTo, comparator) {
    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparator)); };
}
var SequenceEqualOperator = /*@__PURE__*/ (function () {
    function SequenceEqualOperator(compareTo, comparator) {
        this.compareTo = compareTo;
        this.comparator = comparator;
    }
    SequenceEqualOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));
    };
    return SequenceEqualOperator;
}());

var SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SequenceEqualSubscriber, _super);
    function SequenceEqualSubscriber(destination, compareTo, comparator) {
        var _this = _super.call(this, destination) || this;
        _this.compareTo = compareTo;
        _this.comparator = comparator;
        _this._a = [];
        _this._b = [];
        _this._oneComplete = false;
        _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));
        return _this;
    }
    SequenceEqualSubscriber.prototype._next = function (value) {
        if (this._oneComplete && this._b.length === 0) {
            this.emit(false);
        }
        else {
            this._a.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype._complete = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
        this.unsubscribe();
    };
    SequenceEqualSubscriber.prototype.checkValues = function () {
        var _c = this, _a = _c._a, _b = _c._b, comparator = _c.comparator;
        while (_a.length > 0 && _b.length > 0) {
            var a = _a.shift();
            var b = _b.shift();
            var areEqual = false;
            try {
                areEqual = comparator ? comparator(a, b) : a === b;
            }
            catch (e) {
                this.destination.error(e);
            }
            if (!areEqual) {
                this.emit(false);
            }
        }
    };
    SequenceEqualSubscriber.prototype.emit = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    SequenceEqualSubscriber.prototype.nextB = function (value) {
        if (this._oneComplete && this._a.length === 0) {
            this.emit(false);
        }
        else {
            this._b.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype.completeB = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
    };
    return SequenceEqualSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));

var SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SequenceEqualCompareToSubscriber, _super);
    function SequenceEqualCompareToSubscriber(destination, parent) {
        var _this = _super.call(this, destination) || this;
        _this.parent = parent;
        return _this;
    }
    SequenceEqualCompareToSubscriber.prototype._next = function (value) {
        this.parent.nextB(value);
    };
    SequenceEqualCompareToSubscriber.prototype._error = function (err) {
        this.parent.error(err);
        this.unsubscribe();
    };
    SequenceEqualCompareToSubscriber.prototype._complete = function () {
        this.parent.completeB();
        this.unsubscribe();
    };
    return SequenceEqualCompareToSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=sequenceEqual.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/share.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/share.js ***!
  \*************************************************************/
/*! exports provided: share */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "share", function() { return share; });
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/* harmony import */ var _refCount__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./refCount */ "./node_modules/rxjs/_esm5/internal/operators/refCount.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */



function shareSubjectFactory() {
    return new _Subject__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
}
function share() {
    return function (source) { return Object(_refCount__WEBPACK_IMPORTED_MODULE_1__["refCount"])()(Object(_multicast__WEBPACK_IMPORTED_MODULE_0__["multicast"])(shareSubjectFactory)(source)); };
}
//# sourceMappingURL=share.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/shareReplay.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/shareReplay.js ***!
  \*******************************************************************/
/*! exports provided: shareReplay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shareReplay", function() { return shareReplay; });
/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ReplaySubject */ "./node_modules/rxjs/_esm5/internal/ReplaySubject.js");
/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */

function shareReplay(configOrBufferSize, windowTime, scheduler) {
    var config;
    if (configOrBufferSize && typeof configOrBufferSize === 'object') {
        config = configOrBufferSize;
    }
    else {
        config = {
            bufferSize: configOrBufferSize,
            windowTime: windowTime,
            refCount: false,
            scheduler: scheduler
        };
    }
    return function (source) { return source.lift(shareReplayOperator(config)); };
}
function shareReplayOperator(_a) {
    var _b = _a.bufferSize, bufferSize = _b === void 0 ? Number.POSITIVE_INFINITY : _b, _c = _a.windowTime, windowTime = _c === void 0 ? Number.POSITIVE_INFINITY : _c, useRefCount = _a.refCount, scheduler = _a.scheduler;
    var subject;
    var refCount = 0;
    var subscription;
    var hasError = false;
    var isComplete = false;
    return function shareReplayOperation(source) {
        refCount++;
        var innerSub;
        if (!subject || hasError) {
            hasError = false;
            subject = new _ReplaySubject__WEBPACK_IMPORTED_MODULE_0__["ReplaySubject"](bufferSize, windowTime, scheduler);
            innerSub = subject.subscribe(this);
            subscription = source.subscribe({
                next: function (value) { subject.next(value); },
                error: function (err) {
                    hasError = true;
                    subject.error(err);
                },
                complete: function () {
                    isComplete = true;
                    subscription = undefined;
                    subject.complete();
                },
            });
        }
        else {
            innerSub = subject.subscribe(this);
        }
        this.add(function () {
            refCount--;
            innerSub.unsubscribe();
            if (subscription && !isComplete && useRefCount && refCount === 0) {
                subscription.unsubscribe();
                subscription = undefined;
                subject = undefined;
            }
        });
    };
}
//# sourceMappingURL=shareReplay.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/single.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/single.js ***!
  \**************************************************************/
/*! exports provided: single */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "single", function() { return single; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/EmptyError */ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */



function single(predicate) {
    return function (source) { return source.lift(new SingleOperator(predicate, source)); };
}
var SingleOperator = /*@__PURE__*/ (function () {
    function SingleOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    SingleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
    };
    return SingleOperator;
}());
var SingleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SingleSubscriber, _super);
    function SingleSubscriber(destination, predicate, source) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.seenValue = false;
        _this.index = 0;
        return _this;
    }
    SingleSubscriber.prototype.applySingleValue = function (value) {
        if (this.seenValue) {
            this.destination.error('Sequence contains more than one element');
        }
        else {
            this.seenValue = true;
            this.singleValue = value;
        }
    };
    SingleSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this.tryNext(value, index);
        }
        else {
            this.applySingleValue(value);
        }
    };
    SingleSubscriber.prototype.tryNext = function (value, index) {
        try {
            if (this.predicate(value, index, this.source)) {
                this.applySingleValue(value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    SingleSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index > 0) {
            destination.next(this.seenValue ? this.singleValue : undefined);
            destination.complete();
        }
        else {
            destination.error(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_2__["EmptyError"]);
        }
    };
    return SingleSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=single.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/skip.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/skip.js ***!
  \************************************************************/
/*! exports provided: skip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skip", function() { return skip; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function skip(count) {
    return function (source) { return source.lift(new SkipOperator(count)); };
}
var SkipOperator = /*@__PURE__*/ (function () {
    function SkipOperator(total) {
        this.total = total;
    }
    SkipOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipSubscriber(subscriber, this.total));
    };
    return SkipOperator;
}());
var SkipSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipSubscriber, _super);
    function SkipSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.count = 0;
        return _this;
    }
    SkipSubscriber.prototype._next = function (x) {
        if (++this.count > this.total) {
            this.destination.next(x);
        }
    };
    return SkipSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=skip.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/skipLast.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/skipLast.js ***!
  \****************************************************************/
/*! exports provided: skipLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipLast", function() { return skipLast; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */



function skipLast(count) {
    return function (source) { return source.lift(new SkipLastOperator(count)); };
}
var SkipLastOperator = /*@__PURE__*/ (function () {
    function SkipLastOperator(_skipCount) {
        this._skipCount = _skipCount;
        if (this._skipCount < 0) {
            throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__["ArgumentOutOfRangeError"];
        }
    }
    SkipLastOperator.prototype.call = function (subscriber, source) {
        if (this._skipCount === 0) {
            return source.subscribe(new _Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"](subscriber));
        }
        else {
            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
        }
    };
    return SkipLastOperator;
}());
var SkipLastSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipLastSubscriber, _super);
    function SkipLastSubscriber(destination, _skipCount) {
        var _this = _super.call(this, destination) || this;
        _this._skipCount = _skipCount;
        _this._count = 0;
        _this._ring = new Array(_skipCount);
        return _this;
    }
    SkipLastSubscriber.prototype._next = function (value) {
        var skipCount = this._skipCount;
        var count = this._count++;
        if (count < skipCount) {
            this._ring[count] = value;
        }
        else {
            var currentIndex = count % skipCount;
            var ring = this._ring;
            var oldValue = ring[currentIndex];
            ring[currentIndex] = value;
            this.destination.next(oldValue);
        }
    };
    return SkipLastSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=skipLast.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/skipUntil.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/skipUntil.js ***!
  \*****************************************************************/
/*! exports provided: skipUntil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipUntil", function() { return skipUntil; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function skipUntil(notifier) {
    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };
}
var SkipUntilOperator = /*@__PURE__*/ (function () {
    function SkipUntilOperator(notifier) {
        this.notifier = notifier;
    }
    SkipUntilOperator.prototype.call = function (destination, source) {
        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));
    };
    return SkipUntilOperator;
}());
var SkipUntilSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipUntilSubscriber, _super);
    function SkipUntilSubscriber(destination, notifier) {
        var _this = _super.call(this, destination) || this;
        _this.hasValue = false;
        var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](_this);
        _this.add(innerSubscriber);
        _this.innerSubscription = innerSubscriber;
        var innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(notifier, innerSubscriber);
        if (innerSubscription !== innerSubscriber) {
            _this.add(innerSubscription);
            _this.innerSubscription = innerSubscription;
        }
        return _this;
    }
    SkipUntilSubscriber.prototype._next = function (value) {
        if (this.hasValue) {
            _super.prototype._next.call(this, value);
        }
    };
    SkipUntilSubscriber.prototype.notifyNext = function () {
        this.hasValue = true;
        if (this.innerSubscription) {
            this.innerSubscription.unsubscribe();
        }
    };
    SkipUntilSubscriber.prototype.notifyComplete = function () {
    };
    return SkipUntilSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));
//# sourceMappingURL=skipUntil.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/skipWhile.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/skipWhile.js ***!
  \*****************************************************************/
/*! exports provided: skipWhile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "skipWhile", function() { return skipWhile; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function skipWhile(predicate) {
    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };
}
var SkipWhileOperator = /*@__PURE__*/ (function () {
    function SkipWhileOperator(predicate) {
        this.predicate = predicate;
    }
    SkipWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
    };
    return SkipWhileOperator;
}());
var SkipWhileSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SkipWhileSubscriber, _super);
    function SkipWhileSubscriber(destination, predicate) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.skipping = true;
        _this.index = 0;
        return _this;
    }
    SkipWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (this.skipping) {
            this.tryCallPredicate(value);
        }
        if (!this.skipping) {
            destination.next(value);
        }
    };
    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
        try {
            var result = this.predicate(value, this.index++);
            this.skipping = Boolean(result);
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    return SkipWhileSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=skipWhile.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/startWith.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/startWith.js ***!
  \*****************************************************************/
/*! exports provided: startWith */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "startWith", function() { return startWith; });
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/concat */ "./node_modules/rxjs/_esm5/internal/observable/concat.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START _observable_concat,_util_isScheduler PURE_IMPORTS_END */


function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i] = arguments[_i];
    }
    var scheduler = array[array.length - 1];
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_1__["isScheduler"])(scheduler)) {
        array.pop();
        return function (source) { return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"])(array, source, scheduler); };
    }
    else {
        return function (source) { return Object(_observable_concat__WEBPACK_IMPORTED_MODULE_0__["concat"])(array, source); };
    }
}
//# sourceMappingURL=startWith.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js ***!
  \*******************************************************************/
/*! exports provided: subscribeOn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeOn", function() { return subscribeOn; });
/* harmony import */ var _observable_SubscribeOnObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/SubscribeOnObservable */ "./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js");
/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */

function subscribeOn(scheduler, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    return function subscribeOnOperatorFunction(source) {
        return source.lift(new SubscribeOnOperator(scheduler, delay));
    };
}
var SubscribeOnOperator = /*@__PURE__*/ (function () {
    function SubscribeOnOperator(scheduler, delay) {
        this.scheduler = scheduler;
        this.delay = delay;
    }
    SubscribeOnOperator.prototype.call = function (subscriber, source) {
        return new _observable_SubscribeOnObservable__WEBPACK_IMPORTED_MODULE_0__["SubscribeOnObservable"](source, this.delay, this.scheduler).subscribe(subscriber);
    };
    return SubscribeOnOperator;
}());
//# sourceMappingURL=subscribeOn.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/switchAll.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/switchAll.js ***!
  \*****************************************************************/
/*! exports provided: switchAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchAll", function() { return switchAll; });
/* harmony import */ var _switchMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./switchMap */ "./node_modules/rxjs/_esm5/internal/operators/switchMap.js");
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */


function switchAll() {
    return Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(_util_identity__WEBPACK_IMPORTED_MODULE_1__["identity"]);
}
//# sourceMappingURL=switchAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/switchMap.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/switchMap.js ***!
  \*****************************************************************/
/*! exports provided: switchMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchMap", function() { return switchMap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/from */ "./node_modules/rxjs/_esm5/internal/observable/from.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */




function switchMap(project, resultSelector) {
    if (typeof resultSelector === 'function') {
        return function (source) { return source.pipe(switchMap(function (a, i) { return Object(_observable_from__WEBPACK_IMPORTED_MODULE_2__["from"])(project(a, i)).pipe(Object(_map__WEBPACK_IMPORTED_MODULE_1__["map"])(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
    }
    return function (source) { return source.lift(new SwitchMapOperator(project)); };
}
var SwitchMapOperator = /*@__PURE__*/ (function () {
    function SwitchMapOperator(project) {
        this.project = project;
    }
    SwitchMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));
    };
    return SwitchMapOperator;
}());
var SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](SwitchMapSubscriber, _super);
    function SwitchMapSubscriber(destination, project) {
        var _this = _super.call(this, destination) || this;
        _this.project = project;
        _this.index = 0;
        return _this;
    }
    SwitchMapSubscriber.prototype._next = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (error) {
            this.destination.error(error);
            return;
        }
        this._innerSub(result);
    };
    SwitchMapSubscriber.prototype._innerSub = function (result) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        var innerSubscriber = new _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleInnerSubscriber"](this);
        var destination = this.destination;
        destination.add(innerSubscriber);
        this.innerSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["innerSubscribe"])(result, innerSubscriber);
        if (this.innerSubscription !== innerSubscriber) {
            destination.add(this.innerSubscription);
        }
    };
    SwitchMapSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
        this.unsubscribe();
    };
    SwitchMapSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = undefined;
    };
    SwitchMapSubscriber.prototype.notifyComplete = function () {
        this.innerSubscription = undefined;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype.notifyNext = function (innerValue) {
        this.destination.next(innerValue);
    };
    return SwitchMapSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleOuterSubscriber"]));
//# sourceMappingURL=switchMap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js ***!
  \*******************************************************************/
/*! exports provided: switchMapTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchMapTo", function() { return switchMapTo; });
/* harmony import */ var _switchMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./switchMap */ "./node_modules/rxjs/_esm5/internal/operators/switchMap.js");
/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */

function switchMapTo(innerObservable, resultSelector) {
    return resultSelector ? Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(function () { return innerObservable; }, resultSelector) : Object(_switchMap__WEBPACK_IMPORTED_MODULE_0__["switchMap"])(function () { return innerObservable; });
}
//# sourceMappingURL=switchMapTo.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/take.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/take.js ***!
  \************************************************************/
/*! exports provided: take */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "take", function() { return take; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js");
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




function take(count) {
    return function (source) {
        if (count === 0) {
            return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_3__["empty"])();
        }
        else {
            return source.lift(new TakeOperator(count));
        }
    };
}
var TakeOperator = /*@__PURE__*/ (function () {
    function TakeOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__["ArgumentOutOfRangeError"];
        }
    }
    TakeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeSubscriber(subscriber, this.total));
    };
    return TakeOperator;
}());
var TakeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeSubscriber, _super);
    function TakeSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.count = 0;
        return _this;
    }
    TakeSubscriber.prototype._next = function (value) {
        var total = this.total;
        var count = ++this.count;
        if (count <= total) {
            this.destination.next(value);
            if (count === total) {
                this.destination.complete();
                this.unsubscribe();
            }
        }
    };
    return TakeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=take.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/takeLast.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/takeLast.js ***!
  \****************************************************************/
/*! exports provided: takeLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeLast", function() { return takeLast; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ArgumentOutOfRangeError */ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js");
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/empty */ "./node_modules/rxjs/_esm5/internal/observable/empty.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */




function takeLast(count) {
    return function takeLastOperatorFunction(source) {
        if (count === 0) {
            return Object(_observable_empty__WEBPACK_IMPORTED_MODULE_3__["empty"])();
        }
        else {
            return source.lift(new TakeLastOperator(count));
        }
    };
}
var TakeLastOperator = /*@__PURE__*/ (function () {
    function TakeLastOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new _util_ArgumentOutOfRangeError__WEBPACK_IMPORTED_MODULE_2__["ArgumentOutOfRangeError"];
        }
    }
    TakeLastOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
    };
    return TakeLastOperator;
}());
var TakeLastSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeLastSubscriber, _super);
    function TakeLastSubscriber(destination, total) {
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.ring = new Array();
        _this.count = 0;
        return _this;
    }
    TakeLastSubscriber.prototype._next = function (value) {
        var ring = this.ring;
        var total = this.total;
        var count = this.count++;
        if (ring.length < total) {
            ring.push(value);
        }
        else {
            var index = count % total;
            ring[index] = value;
        }
    };
    TakeLastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var count = this.count;
        if (count > 0) {
            var total = this.count >= this.total ? this.total : this.count;
            var ring = this.ring;
            for (var i = 0; i < total; i++) {
                var idx = (count++) % total;
                destination.next(ring[idx]);
            }
        }
        destination.complete();
    };
    return TakeLastSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=takeLast.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/takeUntil.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/takeUntil.js ***!
  \*****************************************************************/
/*! exports provided: takeUntil */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeUntil", function() { return takeUntil; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


function takeUntil(notifier) {
    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };
}
var TakeUntilOperator = /*@__PURE__*/ (function () {
    function TakeUntilOperator(notifier) {
        this.notifier = notifier;
    }
    TakeUntilOperator.prototype.call = function (subscriber, source) {
        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);
        var notifierSubscription = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(this.notifier, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](takeUntilSubscriber));
        if (notifierSubscription && !takeUntilSubscriber.seenValue) {
            takeUntilSubscriber.add(notifierSubscription);
            return source.subscribe(takeUntilSubscriber);
        }
        return takeUntilSubscriber;
    };
    return TakeUntilOperator;
}());
var TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeUntilSubscriber, _super);
    function TakeUntilSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.seenValue = false;
        return _this;
    }
    TakeUntilSubscriber.prototype.notifyNext = function () {
        this.seenValue = true;
        this.complete();
    };
    TakeUntilSubscriber.prototype.notifyComplete = function () {
    };
    return TakeUntilSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));
//# sourceMappingURL=takeUntil.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/takeWhile.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/takeWhile.js ***!
  \*****************************************************************/
/*! exports provided: takeWhile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return takeWhile; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */


function takeWhile(predicate, inclusive) {
    if (inclusive === void 0) {
        inclusive = false;
    }
    return function (source) {
        return source.lift(new TakeWhileOperator(predicate, inclusive));
    };
}
var TakeWhileOperator = /*@__PURE__*/ (function () {
    function TakeWhileOperator(predicate, inclusive) {
        this.predicate = predicate;
        this.inclusive = inclusive;
    }
    TakeWhileOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));
    };
    return TakeWhileOperator;
}());
var TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TakeWhileSubscriber, _super);
    function TakeWhileSubscriber(destination, predicate, inclusive) {
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.inclusive = inclusive;
        _this.index = 0;
        return _this;
    }
    TakeWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        var result;
        try {
            result = this.predicate(value, this.index++);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this.nextOrComplete(value, result);
    };
    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
        var destination = this.destination;
        if (Boolean(predicateResult)) {
            destination.next(value);
        }
        else {
            if (this.inclusive) {
                destination.next(value);
            }
            destination.complete();
        }
    };
    return TakeWhileSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=takeWhile.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/tap.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/tap.js ***!
  \***********************************************************/
/*! exports provided: tap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return tap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/noop */ "./node_modules/rxjs/_esm5/internal/util/noop.js");
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isFunction */ "./node_modules/rxjs/_esm5/internal/util/isFunction.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */




function tap(nextOrObserver, error, complete) {
    return function tapOperatorFunction(source) {
        return source.lift(new DoOperator(nextOrObserver, error, complete));
    };
}
var DoOperator = /*@__PURE__*/ (function () {
    function DoOperator(nextOrObserver, error, complete) {
        this.nextOrObserver = nextOrObserver;
        this.error = error;
        this.complete = complete;
    }
    DoOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    };
    return DoOperator;
}());
var TapSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TapSubscriber, _super);
    function TapSubscriber(destination, observerOrNext, error, complete) {
        var _this = _super.call(this, destination) || this;
        _this._tapNext = _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        _this._tapError = _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        _this._tapComplete = _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        _this._tapError = error || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        _this._tapComplete = complete || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        if (Object(_util_isFunction__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(observerOrNext)) {
            _this._context = _this;
            _this._tapNext = observerOrNext;
        }
        else if (observerOrNext) {
            _this._context = observerOrNext;
            _this._tapNext = observerOrNext.next || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
            _this._tapError = observerOrNext.error || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
            _this._tapComplete = observerOrNext.complete || _util_noop__WEBPACK_IMPORTED_MODULE_2__["noop"];
        }
        return _this;
    }
    TapSubscriber.prototype._next = function (value) {
        try {
            this._tapNext.call(this._context, value);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(value);
    };
    TapSubscriber.prototype._error = function (err) {
        try {
            this._tapError.call(this._context, err);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.error(err);
    };
    TapSubscriber.prototype._complete = function () {
        try {
            this._tapComplete.call(this._context);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        return this.destination.complete();
    };
    return TapSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=tap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/throttle.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/throttle.js ***!
  \****************************************************************/
/*! exports provided: defaultThrottleConfig, throttle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultThrottleConfig", function() { return defaultThrottleConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return throttle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */


var defaultThrottleConfig = {
    leading: true,
    trailing: false
};
function throttle(durationSelector, config) {
    if (config === void 0) {
        config = defaultThrottleConfig;
    }
    return function (source) { return source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing)); };
}
var ThrottleOperator = /*@__PURE__*/ (function () {
    function ThrottleOperator(durationSelector, leading, trailing) {
        this.durationSelector = durationSelector;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
    };
    return ThrottleOperator;
}());
var ThrottleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ThrottleSubscriber, _super);
    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.durationSelector = durationSelector;
        _this._leading = _leading;
        _this._trailing = _trailing;
        _this._hasValue = false;
        return _this;
    }
    ThrottleSubscriber.prototype._next = function (value) {
        this._hasValue = true;
        this._sendValue = value;
        if (!this._throttled) {
            if (this._leading) {
                this.send();
            }
            else {
                this.throttle(value);
            }
        }
    };
    ThrottleSubscriber.prototype.send = function () {
        var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;
        if (_hasValue) {
            this.destination.next(_sendValue);
            this.throttle(_sendValue);
        }
        this._hasValue = false;
        this._sendValue = undefined;
    };
    ThrottleSubscriber.prototype.throttle = function (value) {
        var duration = this.tryDurationSelector(value);
        if (!!duration) {
            this.add(this._throttled = Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["innerSubscribe"])(duration, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleInnerSubscriber"](this)));
        }
    };
    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
        try {
            return this.durationSelector(value);
        }
        catch (err) {
            this.destination.error(err);
            return null;
        }
    };
    ThrottleSubscriber.prototype.throttlingDone = function () {
        var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;
        if (_throttled) {
            _throttled.unsubscribe();
        }
        this._throttled = undefined;
        if (_trailing) {
            this.send();
        }
    };
    ThrottleSubscriber.prototype.notifyNext = function () {
        this.throttlingDone();
    };
    ThrottleSubscriber.prototype.notifyComplete = function () {
        this.throttlingDone();
    };
    return ThrottleSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_1__["SimpleOuterSubscriber"]));
//# sourceMappingURL=throttle.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/throttleTime.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/throttleTime.js ***!
  \********************************************************************/
/*! exports provided: throttleTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throttleTime", function() { return throttleTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _throttle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./throttle */ "./node_modules/rxjs/_esm5/internal/operators/throttle.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */




function throttleTime(duration, scheduler, config) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
    }
    if (config === void 0) {
        config = _throttle__WEBPACK_IMPORTED_MODULE_3__["defaultThrottleConfig"];
    }
    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };
}
var ThrottleTimeOperator = /*@__PURE__*/ (function () {
    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
        this.duration = duration;
        this.scheduler = scheduler;
        this.leading = leading;
        this.trailing = trailing;
    }
    ThrottleTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
    };
    return ThrottleTimeOperator;
}());
var ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ThrottleTimeSubscriber, _super);
    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
        var _this = _super.call(this, destination) || this;
        _this.duration = duration;
        _this.scheduler = scheduler;
        _this.leading = leading;
        _this.trailing = trailing;
        _this._hasTrailingValue = false;
        _this._trailingValue = null;
        return _this;
    }
    ThrottleTimeSubscriber.prototype._next = function (value) {
        if (this.throttled) {
            if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
        else {
            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));
            if (this.leading) {
                this.destination.next(value);
            }
            else if (this.trailing) {
                this._trailingValue = value;
                this._hasTrailingValue = true;
            }
        }
    };
    ThrottleTimeSubscriber.prototype._complete = function () {
        if (this._hasTrailingValue) {
            this.destination.next(this._trailingValue);
            this.destination.complete();
        }
        else {
            this.destination.complete();
        }
    };
    ThrottleTimeSubscriber.prototype.clearThrottle = function () {
        var throttled = this.throttled;
        if (throttled) {
            if (this.trailing && this._hasTrailingValue) {
                this.destination.next(this._trailingValue);
                this._trailingValue = null;
                this._hasTrailingValue = false;
            }
            throttled.unsubscribe();
            this.remove(throttled);
            this.throttled = null;
        }
    };
    return ThrottleTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
function dispatchNext(arg) {
    var subscriber = arg.subscriber;
    subscriber.clearThrottle();
}
//# sourceMappingURL=throttleTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js ***!
  \********************************************************************/
/*! exports provided: throwIfEmpty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwIfEmpty", function() { return throwIfEmpty; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/EmptyError */ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START tslib,_util_EmptyError,_Subscriber PURE_IMPORTS_END */



function throwIfEmpty(errorFactory) {
    if (errorFactory === void 0) {
        errorFactory = defaultErrorFactory;
    }
    return function (source) {
        return source.lift(new ThrowIfEmptyOperator(errorFactory));
    };
}
var ThrowIfEmptyOperator = /*@__PURE__*/ (function () {
    function ThrowIfEmptyOperator(errorFactory) {
        this.errorFactory = errorFactory;
    }
    ThrowIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));
    };
    return ThrowIfEmptyOperator;
}());
var ThrowIfEmptySubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](ThrowIfEmptySubscriber, _super);
    function ThrowIfEmptySubscriber(destination, errorFactory) {
        var _this = _super.call(this, destination) || this;
        _this.errorFactory = errorFactory;
        _this.hasValue = false;
        return _this;
    }
    ThrowIfEmptySubscriber.prototype._next = function (value) {
        this.hasValue = true;
        this.destination.next(value);
    };
    ThrowIfEmptySubscriber.prototype._complete = function () {
        if (!this.hasValue) {
            var err = void 0;
            try {
                err = this.errorFactory();
            }
            catch (e) {
                err = e;
            }
            this.destination.error(err);
        }
        else {
            return this.destination.complete();
        }
    };
    return ThrowIfEmptySubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_2__["Subscriber"]));
function defaultErrorFactory() {
    return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__["EmptyError"]();
}
//# sourceMappingURL=throwIfEmpty.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/timeInterval.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/timeInterval.js ***!
  \********************************************************************/
/*! exports provided: timeInterval, TimeInterval */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return timeInterval; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeInterval", function() { return TimeInterval; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _scan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scan */ "./node_modules/rxjs/_esm5/internal/operators/scan.js");
/* harmony import */ var _observable_defer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/defer */ "./node_modules/rxjs/_esm5/internal/observable/defer.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */




function timeInterval(scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
    }
    return function (source) {
        return Object(_observable_defer__WEBPACK_IMPORTED_MODULE_2__["defer"])(function () {
            return source.pipe(Object(_scan__WEBPACK_IMPORTED_MODULE_1__["scan"])(function (_a, value) {
                var current = _a.current;
                return ({ value: value, current: scheduler.now(), last: current });
            }, { current: scheduler.now(), value: undefined, last: undefined }), Object(_map__WEBPACK_IMPORTED_MODULE_3__["map"])(function (_a) {
                var current = _a.current, last = _a.last, value = _a.value;
                return new TimeInterval(value, current - last);
            }));
        });
    };
}
var TimeInterval = /*@__PURE__*/ (function () {
    function TimeInterval(value, interval) {
        this.value = value;
        this.interval = interval;
    }
    return TimeInterval;
}());

//# sourceMappingURL=timeInterval.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/timeout.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/timeout.js ***!
  \***************************************************************/
/*! exports provided: timeout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return timeout; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _util_TimeoutError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TimeoutError */ "./node_modules/rxjs/_esm5/internal/util/TimeoutError.js");
/* harmony import */ var _timeoutWith__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeoutWith */ "./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js");
/* harmony import */ var _observable_throwError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/throwError */ "./node_modules/rxjs/_esm5/internal/observable/throwError.js");
/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */




function timeout(due, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
    }
    return Object(_timeoutWith__WEBPACK_IMPORTED_MODULE_2__["timeoutWith"])(due, Object(_observable_throwError__WEBPACK_IMPORTED_MODULE_3__["throwError"])(new _util_TimeoutError__WEBPACK_IMPORTED_MODULE_1__["TimeoutError"]()), scheduler);
}
//# sourceMappingURL=timeout.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js ***!
  \*******************************************************************/
/*! exports provided: timeoutWith */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeoutWith", function() { return timeoutWith; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _util_isDate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/isDate */ "./node_modules/rxjs/_esm5/internal/util/isDate.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_innerSubscribe PURE_IMPORTS_END */




function timeoutWith(due, withObservable, scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_1__["async"];
    }
    return function (source) {
        var absoluteTimeout = Object(_util_isDate__WEBPACK_IMPORTED_MODULE_2__["isDate"])(due);
        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
    };
}
var TimeoutWithOperator = /*@__PURE__*/ (function () {
    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
    }
    TimeoutWithOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
    };
    return TimeoutWithOperator;
}());
var TimeoutWithSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](TimeoutWithSubscriber, _super);
    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.absoluteTimeout = absoluteTimeout;
        _this.waitFor = waitFor;
        _this.withObservable = withObservable;
        _this.scheduler = scheduler;
        _this.scheduleTimeout();
        return _this;
    }
    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {
        var withObservable = subscriber.withObservable;
        subscriber._unsubscribeAndRecycle();
        subscriber.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["innerSubscribe"])(withObservable, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleInnerSubscriber"](subscriber)));
    };
    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
        var action = this.action;
        if (action) {
            this.action = action.schedule(this, this.waitFor);
        }
        else {
            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
        }
    };
    TimeoutWithSubscriber.prototype._next = function (value) {
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
        _super.prototype._next.call(this, value);
    };
    TimeoutWithSubscriber.prototype._unsubscribe = function () {
        this.action = undefined;
        this.scheduler = null;
        this.withObservable = null;
    };
    return TimeoutWithSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_3__["SimpleOuterSubscriber"]));
//# sourceMappingURL=timeoutWith.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/timestamp.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/timestamp.js ***!
  \*****************************************************************/
/*! exports provided: timestamp, Timestamp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timestamp", function() { return timestamp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Timestamp", function() { return Timestamp; });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */


function timestamp(scheduler) {
    if (scheduler === void 0) {
        scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__["async"];
    }
    return Object(_map__WEBPACK_IMPORTED_MODULE_1__["map"])(function (value) { return new Timestamp(value, scheduler.now()); });
}
var Timestamp = /*@__PURE__*/ (function () {
    function Timestamp(value, timestamp) {
        this.value = value;
        this.timestamp = timestamp;
    }
    return Timestamp;
}());

//# sourceMappingURL=timestamp.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/toArray.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/toArray.js ***!
  \***************************************************************/
/*! exports provided: toArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return toArray; });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce */ "./node_modules/rxjs/_esm5/internal/operators/reduce.js");
/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */

function toArrayReducer(arr, item, index) {
    if (index === 0) {
        return [item];
    }
    arr.push(item);
    return arr;
}
function toArray() {
    return Object(_reduce__WEBPACK_IMPORTED_MODULE_0__["reduce"])(toArrayReducer, []);
}
//# sourceMappingURL=toArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/window.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/window.js ***!
  \**************************************************************/
/*! exports provided: window */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "window", function() { return window; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _innerSubscribe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../innerSubscribe */ "./node_modules/rxjs/_esm5/internal/innerSubscribe.js");
/** PURE_IMPORTS_START tslib,_Subject,_innerSubscribe PURE_IMPORTS_END */



function window(windowBoundaries) {
    return function windowOperatorFunction(source) {
        return source.lift(new WindowOperator(windowBoundaries));
    };
}
var WindowOperator = /*@__PURE__*/ (function () {
    function WindowOperator(windowBoundaries) {
        this.windowBoundaries = windowBoundaries;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        var windowSubscriber = new WindowSubscriber(subscriber);
        var sourceSubscription = source.subscribe(windowSubscriber);
        if (!sourceSubscription.closed) {
            windowSubscriber.add(Object(_innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["innerSubscribe"])(this.windowBoundaries, new _innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["SimpleInnerSubscriber"](windowSubscriber)));
        }
        return sourceSubscription;
    };
    return WindowOperator;
}());
var WindowSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowSubscriber, _super);
    function WindowSubscriber(destination) {
        var _this = _super.call(this, destination) || this;
        _this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        destination.next(_this.window);
        return _this;
    }
    WindowSubscriber.prototype.notifyNext = function () {
        this.openWindow();
    };
    WindowSubscriber.prototype.notifyError = function (error) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function () {
        this._complete();
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
    };
    WindowSubscriber.prototype._unsubscribe = function () {
        this.window = null;
    };
    WindowSubscriber.prototype.openWindow = function () {
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var destination = this.destination;
        var newWindow = this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        destination.next(newWindow);
    };
    return WindowSubscriber;
}(_innerSubscribe__WEBPACK_IMPORTED_MODULE_2__["SimpleOuterSubscriber"]));
//# sourceMappingURL=window.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/windowCount.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/windowCount.js ***!
  \*******************************************************************/
/*! exports provided: windowCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowCount", function() { return windowCount; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */



function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) {
        startWindowEvery = 0;
    }
    return function windowCountOperatorFunction(source) {
        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
    };
}
var WindowCountOperator = /*@__PURE__*/ (function () {
    function WindowCountOperator(windowSize, startWindowEvery) {
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
    }
    WindowCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
    };
    return WindowCountOperator;
}());
var WindowCountSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowCountSubscriber, _super);
    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.windowSize = windowSize;
        _this.startWindowEvery = startWindowEvery;
        _this.windows = [new _Subject__WEBPACK_IMPORTED_MODULE_2__["Subject"]()];
        _this.count = 0;
        destination.next(_this.windows[0]);
        return _this;
    }
    WindowCountSubscriber.prototype._next = function (value) {
        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;
        var destination = this.destination;
        var windowSize = this.windowSize;
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len && !this.closed; i++) {
            windows[i].next(value);
        }
        var c = this.count - windowSize + 1;
        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
            windows.shift().complete();
        }
        if (++this.count % startWindowEvery === 0 && !this.closed) {
            var window_1 = new _Subject__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
            windows.push(window_1);
            destination.next(window_1);
        }
    };
    WindowCountSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().error(err);
            }
        }
        this.destination.error(err);
    };
    WindowCountSubscriber.prototype._complete = function () {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().complete();
            }
        }
        this.destination.complete();
    };
    WindowCountSubscriber.prototype._unsubscribe = function () {
        this.count = 0;
        this.windows = null;
    };
    return WindowCountSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__["Subscriber"]));
//# sourceMappingURL=windowCount.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/windowTime.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/windowTime.js ***!
  \******************************************************************/
/*! exports provided: windowTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowTime", function() { return windowTime; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheduler/async */ "./node_modules/rxjs/_esm5/internal/scheduler/async.js");
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _util_isNumeric__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isNumeric */ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js");
/* harmony import */ var _util_isScheduler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isScheduler */ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js");
/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */






function windowTime(windowTimeSpan) {
    var scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_2__["async"];
    var windowCreationInterval = null;
    var maxWindowSize = Number.POSITIVE_INFINITY;
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(arguments[3])) {
        scheduler = arguments[3];
    }
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(arguments[2])) {
        scheduler = arguments[2];
    }
    else if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_4__["isNumeric"])(arguments[2])) {
        maxWindowSize = Number(arguments[2]);
    }
    if (Object(_util_isScheduler__WEBPACK_IMPORTED_MODULE_5__["isScheduler"])(arguments[1])) {
        scheduler = arguments[1];
    }
    else if (Object(_util_isNumeric__WEBPACK_IMPORTED_MODULE_4__["isNumeric"])(arguments[1])) {
        windowCreationInterval = Number(arguments[1]);
    }
    return function windowTimeOperatorFunction(source) {
        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
    };
}
var WindowTimeOperator = /*@__PURE__*/ (function () {
    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.maxWindowSize = maxWindowSize;
        this.scheduler = scheduler;
    }
    WindowTimeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
    };
    return WindowTimeOperator;
}());
var CountedSubject = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](CountedSubject, _super);
    function CountedSubject() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._numberOfNextedValues = 0;
        return _this;
    }
    CountedSubject.prototype.next = function (value) {
        this._numberOfNextedValues++;
        _super.prototype.next.call(this, value);
    };
    Object.defineProperty(CountedSubject.prototype, "numberOfNextedValues", {
        get: function () {
            return this._numberOfNextedValues;
        },
        enumerable: true,
        configurable: true
    });
    return CountedSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]));
var WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowTimeSubscriber, _super);
    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.windowTimeSpan = windowTimeSpan;
        _this.windowCreationInterval = windowCreationInterval;
        _this.maxWindowSize = maxWindowSize;
        _this.scheduler = scheduler;
        _this.windows = [];
        var window = _this.openWindow();
        if (windowCreationInterval !== null && windowCreationInterval >= 0) {
            var closeState = { subscriber: _this, window: window, context: null };
            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };
            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
        }
        else {
            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };
            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
        }
        return _this;
    }
    WindowTimeSubscriber.prototype._next = function (value) {
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len; i++) {
            var window_1 = windows[i];
            if (!window_1.closed) {
                window_1.next(value);
                if (window_1.numberOfNextedValues >= this.maxWindowSize) {
                    this.closeWindow(window_1);
                }
            }
        }
    };
    WindowTimeSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        while (windows.length > 0) {
            windows.shift().error(err);
        }
        this.destination.error(err);
    };
    WindowTimeSubscriber.prototype._complete = function () {
        var windows = this.windows;
        while (windows.length > 0) {
            var window_2 = windows.shift();
            if (!window_2.closed) {
                window_2.complete();
            }
        }
        this.destination.complete();
    };
    WindowTimeSubscriber.prototype.openWindow = function () {
        var window = new CountedSubject();
        this.windows.push(window);
        var destination = this.destination;
        destination.next(window);
        return window;
    };
    WindowTimeSubscriber.prototype.closeWindow = function (window) {
        window.complete();
        var windows = this.windows;
        windows.splice(windows.indexOf(window), 1);
    };
    return WindowTimeSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_3__["Subscriber"]));
function dispatchWindowTimeSpanOnly(state) {
    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;
    if (window) {
        subscriber.closeWindow(window);
    }
    state.window = subscriber.openWindow();
    this.schedule(state, windowTimeSpan);
}
function dispatchWindowCreation(state) {
    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;
    var window = subscriber.openWindow();
    var action = this;
    var context = { action: action, subscription: null };
    var timeSpanState = { subscriber: subscriber, window: window, context: context };
    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
    action.add(context.subscription);
    action.schedule(state, windowCreationInterval);
}
function dispatchWindowClose(state) {
    var subscriber = state.subscriber, window = state.window, context = state.context;
    if (context && context.action && context.subscription) {
        context.action.remove(context.subscription);
    }
    subscriber.closeWindow(window);
}
//# sourceMappingURL=windowTime.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/windowToggle.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/windowToggle.js ***!
  \********************************************************************/
/*! exports provided: windowToggle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowToggle", function() { return windowToggle; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */





function windowToggle(openings, closingSelector) {
    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };
}
var WindowToggleOperator = /*@__PURE__*/ (function () {
    function WindowToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    WindowToggleOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return WindowToggleOperator;
}());
var WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowToggleSubscriber, _super);
    function WindowToggleSubscriber(destination, openings, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.openings = openings;
        _this.closingSelector = closingSelector;
        _this.contexts = [];
        _this.add(_this.openSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(_this, openings, openings));
        return _this;
    }
    WindowToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        if (contexts) {
            var len = contexts.length;
            for (var i = 0; i < len; i++) {
                contexts[i].window.next(value);
            }
        }
    };
    WindowToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_1 = contexts[index];
                context_1.window.error(err);
                context_1.subscription.unsubscribe();
            }
        }
        _super.prototype._error.call(this, err);
    };
    WindowToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_2 = contexts[index];
                context_2.window.complete();
                context_2.subscription.unsubscribe();
            }
        }
        _super.prototype._complete.call(this);
    };
    WindowToggleSubscriber.prototype._unsubscribe = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context_3 = contexts[index];
                context_3.window.unsubscribe();
                context_3.subscription.unsubscribe();
            }
        }
    };
    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (outerValue === this.openings) {
            var closingNotifier = void 0;
            try {
                var closingSelector = this.closingSelector;
                closingNotifier = closingSelector(innerValue);
            }
            catch (e) {
                return this.error(e);
            }
            var window_1 = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
            var subscription = new _Subscription__WEBPACK_IMPORTED_MODULE_2__["Subscription"]();
            var context_4 = { window: window_1, subscription: subscription };
            this.contexts.push(context_4);
            var innerSubscription = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_4__["subscribeToResult"])(this, closingNotifier, context_4);
            if (innerSubscription.closed) {
                this.closeWindow(this.contexts.length - 1);
            }
            else {
                innerSubscription.context = context_4;
                subscription.add(innerSubscription);
            }
            this.destination.next(window_1);
        }
        else {
            this.closeWindow(this.contexts.indexOf(outerValue));
        }
    };
    WindowToggleSubscriber.prototype.notifyError = function (err) {
        this.error(err);
    };
    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
        if (inner !== this.openSubscription) {
            this.closeWindow(this.contexts.indexOf(inner.context));
        }
    };
    WindowToggleSubscriber.prototype.closeWindow = function (index) {
        if (index === -1) {
            return;
        }
        var contexts = this.contexts;
        var context = contexts[index];
        var window = context.window, subscription = context.subscription;
        contexts.splice(index, 1);
        window.complete();
        subscription.unsubscribe();
    };
    return WindowToggleSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_3__["OuterSubscriber"]));
//# sourceMappingURL=windowToggle.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/windowWhen.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/windowWhen.js ***!
  \******************************************************************/
/*! exports provided: windowWhen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "windowWhen", function() { return windowWhen; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subject */ "./node_modules/rxjs/_esm5/internal/Subject.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */




function windowWhen(closingSelector) {
    return function windowWhenOperatorFunction(source) {
        return source.lift(new WindowOperator(closingSelector));
    };
}
var WindowOperator = /*@__PURE__*/ (function () {
    function WindowOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));
    };
    return WindowOperator;
}());
var WindowSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WindowSubscriber, _super);
    function WindowSubscriber(destination, closingSelector) {
        var _this = _super.call(this, destination) || this;
        _this.destination = destination;
        _this.closingSelector = closingSelector;
        _this.openWindow();
        return _this;
    }
    WindowSubscriber.prototype.notifyNext = function (_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype.notifyError = function (error) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
        if (this.closingNotification) {
            this.closingNotification.unsubscribe();
        }
    };
    WindowSubscriber.prototype.openWindow = function (innerSub) {
        if (innerSub === void 0) {
            innerSub = null;
        }
        if (innerSub) {
            this.remove(innerSub);
            innerSub.unsubscribe();
        }
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var window = this.window = new _Subject__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        this.destination.next(window);
        var closingNotifier;
        try {
            var closingSelector = this.closingSelector;
            closingNotifier = closingSelector();
        }
        catch (e) {
            this.destination.error(e);
            this.window.error(e);
            return;
        }
        this.add(this.closingNotification = Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_3__["subscribeToResult"])(this, closingNotifier));
    };
    return WindowSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_2__["OuterSubscriber"]));
//# sourceMappingURL=windowWhen.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js ***!
  \**********************************************************************/
/*! exports provided: withLatestFrom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "withLatestFrom", function() { return withLatestFrom; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../OuterSubscriber */ "./node_modules/rxjs/_esm5/internal/OuterSubscriber.js");
/* harmony import */ var _util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/subscribeToResult */ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js");
/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */



function withLatestFrom() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return function (source) {
        var project;
        if (typeof args[args.length - 1] === 'function') {
            project = args.pop();
        }
        var observables = args;
        return source.lift(new WithLatestFromOperator(observables, project));
    };
}
var WithLatestFromOperator = /*@__PURE__*/ (function () {
    function WithLatestFromOperator(observables, project) {
        this.observables = observables;
        this.project = project;
    }
    WithLatestFromOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
    };
    return WithLatestFromOperator;
}());
var WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](WithLatestFromSubscriber, _super);
    function WithLatestFromSubscriber(destination, observables, project) {
        var _this = _super.call(this, destination) || this;
        _this.observables = observables;
        _this.project = project;
        _this.toRespond = [];
        var len = observables.length;
        _this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            _this.toRespond.push(i);
        }
        for (var i = 0; i < len; i++) {
            var observable = observables[i];
            _this.add(Object(_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_2__["subscribeToResult"])(_this, observable, undefined, i));
        }
        return _this;
    }
    WithLatestFromSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {
        this.values[outerIndex] = innerValue;
        var toRespond = this.toRespond;
        if (toRespond.length > 0) {
            var found = toRespond.indexOf(outerIndex);
            if (found !== -1) {
                toRespond.splice(found, 1);
            }
        }
    };
    WithLatestFromSubscriber.prototype.notifyComplete = function () {
    };
    WithLatestFromSubscriber.prototype._next = function (value) {
        if (this.toRespond.length === 0) {
            var args = [value].concat(this.values);
            if (this.project) {
                this._tryProject(args);
            }
            else {
                this.destination.next(args);
            }
        }
    };
    WithLatestFromSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return WithLatestFromSubscriber;
}(_OuterSubscriber__WEBPACK_IMPORTED_MODULE_1__["OuterSubscriber"]));
//# sourceMappingURL=withLatestFrom.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/zip.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/zip.js ***!
  \***********************************************************/
/*! exports provided: zip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony import */ var _observable_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/zip */ "./node_modules/rxjs/_esm5/internal/observable/zip.js");
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

function zip() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return function zipOperatorFunction(source) {
        return source.lift.call(_observable_zip__WEBPACK_IMPORTED_MODULE_0__["zip"].apply(void 0, [source].concat(observables)));
    };
}
//# sourceMappingURL=zip.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/operators/zipAll.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/operators/zipAll.js ***!
  \**************************************************************/
/*! exports provided: zipAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zipAll", function() { return zipAll; });
/* harmony import */ var _observable_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/zip */ "./node_modules/rxjs/_esm5/internal/observable/zip.js");
/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */

function zipAll(project) {
    return function (source) { return source.lift(new _observable_zip__WEBPACK_IMPORTED_MODULE_0__["ZipOperator"](project)); };
}
//# sourceMappingURL=zipAll.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js ***!
  \*********************************************************************/
/*! exports provided: scheduleArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleArray", function() { return scheduleArray; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function scheduleArray(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        var i = 0;
        sub.add(scheduler.schedule(function () {
            if (i === input.length) {
                subscriber.complete();
                return;
            }
            subscriber.next(input[i++]);
            if (!subscriber.closed) {
                sub.add(this.schedule());
            }
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js ***!
  \************************************************************************/
/*! exports provided: scheduleIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleIterable", function() { return scheduleIterable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */



function scheduleIterable(input, scheduler) {
    if (!input) {
        throw new Error('Iterable cannot be null');
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        var iterator;
        sub.add(function () {
            if (iterator && typeof iterator.return === 'function') {
                iterator.return();
            }
        });
        sub.add(scheduler.schedule(function () {
            iterator = input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__["iterator"]]();
            sub.add(scheduler.schedule(function () {
                if (subscriber.closed) {
                    return;
                }
                var value;
                var done;
                try {
                    var result = iterator.next();
                    value = result.value;
                    done = result.done;
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (done) {
                    subscriber.complete();
                }
                else {
                    subscriber.next(value);
                    this.schedule();
                }
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleIterable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js ***!
  \**************************************************************************/
/*! exports provided: scheduleObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduleObservable", function() { return scheduleObservable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */



function scheduleObservable(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        sub.add(scheduler.schedule(function () {
            var observable = input[_symbol_observable__WEBPACK_IMPORTED_MODULE_2__["observable"]]();
            sub.add(observable.subscribe({
                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },
                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },
                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },
            }));
        }));
        return sub;
    });
}
//# sourceMappingURL=scheduleObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js ***!
  \***********************************************************************/
/*! exports provided: schedulePromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "schedulePromise", function() { return schedulePromise; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */


function schedulePromise(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"](function (subscriber) {
        var sub = new _Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]();
        sub.add(scheduler.schedule(function () {
            return input.then(function (value) {
                sub.add(scheduler.schedule(function () {
                    subscriber.next(value);
                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));
                }));
            }, function (err) {
                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));
            });
        }));
        return sub;
    });
}
//# sourceMappingURL=schedulePromise.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js ***!
  \*****************************************************************/
/*! exports provided: scheduled */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheduled", function() { return scheduled; });
/* harmony import */ var _scheduleObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheduleObservable */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js");
/* harmony import */ var _schedulePromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schedulePromise */ "./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js");
/* harmony import */ var _scheduleArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scheduleArray */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js");
/* harmony import */ var _scheduleIterable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scheduleIterable */ "./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js");
/* harmony import */ var _util_isInteropObservable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/isInteropObservable */ "./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js");
/* harmony import */ var _util_isPromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/isPromise */ "./node_modules/rxjs/_esm5/internal/util/isPromise.js");
/* harmony import */ var _util_isArrayLike__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/isArrayLike */ "./node_modules/rxjs/_esm5/internal/util/isArrayLike.js");
/* harmony import */ var _util_isIterable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/isIterable */ "./node_modules/rxjs/_esm5/internal/util/isIterable.js");
/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */








function scheduled(input, scheduler) {
    if (input != null) {
        if (Object(_util_isInteropObservable__WEBPACK_IMPORTED_MODULE_4__["isInteropObservable"])(input)) {
            return Object(_scheduleObservable__WEBPACK_IMPORTED_MODULE_0__["scheduleObservable"])(input, scheduler);
        }
        else if (Object(_util_isPromise__WEBPACK_IMPORTED_MODULE_5__["isPromise"])(input)) {
            return Object(_schedulePromise__WEBPACK_IMPORTED_MODULE_1__["schedulePromise"])(input, scheduler);
        }
        else if (Object(_util_isArrayLike__WEBPACK_IMPORTED_MODULE_6__["isArrayLike"])(input)) {
            return Object(_scheduleArray__WEBPACK_IMPORTED_MODULE_2__["scheduleArray"])(input, scheduler);
        }
        else if (Object(_util_isIterable__WEBPACK_IMPORTED_MODULE_7__["isIterable"])(input) || typeof input === 'string') {
            return Object(_scheduleIterable__WEBPACK_IMPORTED_MODULE_3__["scheduleIterable"])(input, scheduler);
        }
    }
    throw new TypeError((input !== null && typeof input || input) + ' is not observable');
}
//# sourceMappingURL=scheduled.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/Action.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/Action.js ***!
  \**************************************************************/
/*! exports provided: Action */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Action", function() { return Action; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ "./node_modules/rxjs/_esm5/internal/Subscription.js");
/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */


var Action = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Action, _super);
    function Action(scheduler, work) {
        return _super.call(this) || this;
    }
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return this;
    };
    return Action;
}(_Subscription__WEBPACK_IMPORTED_MODULE_1__["Subscription"]));

//# sourceMappingURL=Action.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js":
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js ***!
  \****************************************************************************/
/*! exports provided: AnimationFrameAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationFrameAction", function() { return AnimationFrameAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


var AnimationFrameAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AnimationFrameAction, _super);
    function AnimationFrameAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));
    };
    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            cancelAnimationFrame(id);
            scheduler.scheduled = undefined;
        }
        return undefined;
    };
    return AnimationFrameAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__["AsyncAction"]));

//# sourceMappingURL=AnimationFrameAction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js ***!
  \*******************************************************************************/
/*! exports provided: AnimationFrameScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationFrameScheduler", function() { return AnimationFrameScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var AnimationFrameScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AnimationFrameScheduler, _super);
    function AnimationFrameScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnimationFrameScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AnimationFrameScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"]));

//# sourceMappingURL=AnimationFrameScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js ***!
  \******************************************************************/
/*! exports provided: AsapAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsapAction", function() { return AsapAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _util_Immediate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Immediate */ "./node_modules/rxjs/_esm5/internal/util/Immediate.js");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */



var AsapAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsapAction, _super);
    function AsapAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = _util_Immediate__WEBPACK_IMPORTED_MODULE_1__["Immediate"].setImmediate(scheduler.flush.bind(scheduler, null)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            _util_Immediate__WEBPACK_IMPORTED_MODULE_1__["Immediate"].clearImmediate(id);
            scheduler.scheduled = undefined;
        }
        return undefined;
    };
    return AsapAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_2__["AsyncAction"]));

//# sourceMappingURL=AsapAction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js ***!
  \*********************************************************************/
/*! exports provided: AsapScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsapScheduler", function() { return AsapScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var AsapScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsapScheduler, _super);
    function AsapScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AsapScheduler.prototype.flush = function (action) {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        action = action || actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"]));

//# sourceMappingURL=AsapScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js ***!
  \*******************************************************************/
/*! exports provided: AsyncAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncAction", function() { return AsyncAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Action */ "./node_modules/rxjs/_esm5/internal/scheduler/Action.js");
/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */


var AsyncAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.pending = false;
        return _this;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (this.closed) {
            return this;
        }
        this.state = state;
        var id = this.id;
        var scheduler = this.scheduler;
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.pending = true;
        this.delay = delay;
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay !== null && this.delay === delay && this.pending === false) {
            return id;
        }
        clearInterval(id);
        return undefined;
    };
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, delay) {
        var errored = false;
        var errorValue = undefined;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = !!e && e || new Error(e);
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype._unsubscribe = function () {
        var id = this.id;
        var scheduler = this.scheduler;
        var actions = scheduler.actions;
        var index = actions.indexOf(this);
        this.work = null;
        this.state = null;
        this.pending = false;
        this.scheduler = null;
        if (index !== -1) {
            actions.splice(index, 1);
        }
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, null);
        }
        this.delay = null;
    };
    return AsyncAction;
}(_Action__WEBPACK_IMPORTED_MODULE_1__["Action"]));

//# sourceMappingURL=AsyncAction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js ***!
  \**********************************************************************/
/*! exports provided: AsyncScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AsyncScheduler", function() { return AsyncScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Scheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Scheduler */ "./node_modules/rxjs/_esm5/internal/Scheduler.js");
/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */


var AsyncScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](AsyncScheduler, _super);
    function AsyncScheduler(SchedulerAction, now) {
        if (now === void 0) {
            now = _Scheduler__WEBPACK_IMPORTED_MODULE_1__["Scheduler"].now;
        }
        var _this = _super.call(this, SchedulerAction, function () {
            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {
                return AsyncScheduler.delegate.now();
            }
            else {
                return now();
            }
        }) || this;
        _this.actions = [];
        _this.active = false;
        _this.scheduled = undefined;
        return _this;
    }
    AsyncScheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) {
            delay = 0;
        }
        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {
            return AsyncScheduler.delegate.schedule(work, delay, state);
        }
        else {
            return _super.prototype.schedule.call(this, work, delay, state);
        }
    };
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this.active) {
            actions.push(action);
            return;
        }
        var error;
        this.active = true;
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (action = actions.shift());
        this.active = false;
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(_Scheduler__WEBPACK_IMPORTED_MODULE_1__["Scheduler"]));

//# sourceMappingURL=AsyncScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js ***!
  \*******************************************************************/
/*! exports provided: QueueAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueueAction", function() { return QueueAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */


var QueueAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](QueueAction, _super);
    function QueueAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        return scheduler.flush(this);
    };
    return QueueAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__["AsyncAction"]));

//# sourceMappingURL=QueueAction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js ***!
  \**********************************************************************/
/*! exports provided: QueueScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QueueScheduler", function() { return QueueScheduler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */


var QueueScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](QueueScheduler, _super);
    function QueueScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return QueueScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"]));

//# sourceMappingURL=QueueScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js":
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js ***!
  \****************************************************************************/
/*! exports provided: VirtualTimeScheduler, VirtualAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualTimeScheduler", function() { return VirtualTimeScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VirtualAction", function() { return VirtualAction; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */



var VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](VirtualTimeScheduler, _super);
    function VirtualTimeScheduler(SchedulerAction, maxFrames) {
        if (SchedulerAction === void 0) {
            SchedulerAction = VirtualAction;
        }
        if (maxFrames === void 0) {
            maxFrames = Number.POSITIVE_INFINITY;
        }
        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;
        _this.maxFrames = maxFrames;
        _this.frame = 0;
        _this.index = -1;
        return _this;
    }
    VirtualTimeScheduler.prototype.flush = function () {
        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;
        var error, action;
        while ((action = actions[0]) && action.delay <= maxFrames) {
            actions.shift();
            this.frame = action.delay;
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        }
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    VirtualTimeScheduler.frameTimeFactor = 10;
    return VirtualTimeScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_2__["AsyncScheduler"]));

var VirtualAction = /*@__PURE__*/ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](VirtualAction, _super);
    function VirtualAction(scheduler, work, index) {
        if (index === void 0) {
            index = scheduler.index += 1;
        }
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.index = index;
        _this.active = true;
        _this.index = scheduler.index = index;
        return _this;
    }
    VirtualAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        if (!this.id) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.active = false;
        var action = new VirtualAction(this.scheduler, this.work);
        this.add(action);
        return action.schedule(state, delay);
    };
    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        this.delay = scheduler.frame + delay;
        var actions = scheduler.actions;
        actions.push(this);
        actions.sort(VirtualAction.sortActions);
        return true;
    };
    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) {
            delay = 0;
        }
        return undefined;
    };
    VirtualAction.prototype._execute = function (state, delay) {
        if (this.active === true) {
            return _super.prototype._execute.call(this, state, delay);
        }
    };
    VirtualAction.sortActions = function (a, b) {
        if (a.delay === b.delay) {
            if (a.index === b.index) {
                return 0;
            }
            else if (a.index > b.index) {
                return 1;
            }
            else {
                return -1;
            }
        }
        else if (a.delay > b.delay) {
            return 1;
        }
        else {
            return -1;
        }
    };
    return VirtualAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_1__["AsyncAction"]));

//# sourceMappingURL=VirtualTimeScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js ***!
  \**********************************************************************/
/*! exports provided: animationFrameScheduler, animationFrame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animationFrameScheduler", function() { return animationFrameScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animationFrame", function() { return animationFrame; });
/* harmony import */ var _AnimationFrameAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AnimationFrameAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js");
/* harmony import */ var _AnimationFrameScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AnimationFrameScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js");
/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */


var animationFrameScheduler = /*@__PURE__*/ new _AnimationFrameScheduler__WEBPACK_IMPORTED_MODULE_1__["AnimationFrameScheduler"](_AnimationFrameAction__WEBPACK_IMPORTED_MODULE_0__["AnimationFrameAction"]);
var animationFrame = animationFrameScheduler;
//# sourceMappingURL=animationFrame.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/asap.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/asap.js ***!
  \************************************************************/
/*! exports provided: asapScheduler, asap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asapScheduler", function() { return asapScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asap", function() { return asap; });
/* harmony import */ var _AsapAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsapAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js");
/* harmony import */ var _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsapScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js");
/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */


var asapScheduler = /*@__PURE__*/ new _AsapScheduler__WEBPACK_IMPORTED_MODULE_1__["AsapScheduler"](_AsapAction__WEBPACK_IMPORTED_MODULE_0__["AsapAction"]);
var asap = asapScheduler;
//# sourceMappingURL=asap.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/async.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/async.js ***!
  \*************************************************************/
/*! exports provided: asyncScheduler, async */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asyncScheduler", function() { return asyncScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "async", function() { return async; });
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsyncAction */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js");
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js");
/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */


var asyncScheduler = /*@__PURE__*/ new _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__["AsyncScheduler"](_AsyncAction__WEBPACK_IMPORTED_MODULE_0__["AsyncAction"]);
var async = asyncScheduler;
//# sourceMappingURL=async.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/scheduler/queue.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/scheduler/queue.js ***!
  \*************************************************************/
/*! exports provided: queueScheduler, queue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queueScheduler", function() { return queueScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queue", function() { return queue; });
/* harmony import */ var _QueueAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./QueueAction */ "./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js");
/* harmony import */ var _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueueScheduler */ "./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js");
/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */


var queueScheduler = /*@__PURE__*/ new _QueueScheduler__WEBPACK_IMPORTED_MODULE_1__["QueueScheduler"](_QueueAction__WEBPACK_IMPORTED_MODULE_0__["QueueAction"]);
var queue = queueScheduler;
//# sourceMappingURL=queue.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/symbol/iterator.js ***!
  \*************************************************************/
/*! exports provided: getSymbolIterator, iterator, $$iterator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSymbolIterator", function() { return getSymbolIterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iterator", function() { return iterator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$iterator", function() { return $$iterator; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function getSymbolIterator() {
    if (typeof Symbol !== 'function' || !Symbol.iterator) {
        return '@@iterator';
    }
    return Symbol.iterator;
}
var iterator = /*@__PURE__*/ getSymbolIterator();
var $$iterator = iterator;
//# sourceMappingURL=iterator.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/symbol/observable.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/symbol/observable.js ***!
  \***************************************************************/
/*! exports provided: observable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "observable", function() { return observable; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();
//# sourceMappingURL=observable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js ***!
  \*****************************************************************/
/*! exports provided: rxSubscriber, $$rxSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rxSubscriber", function() { return rxSubscriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "$$rxSubscriber", function() { return $$rxSubscriber; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var rxSubscriber = /*@__PURE__*/ (function () {
    return typeof Symbol === 'function'
        ? /*@__PURE__*/ Symbol('rxSubscriber')
        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();
})();
var $$rxSubscriber = rxSubscriber;
//# sourceMappingURL=rxSubscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js ***!
  \**************************************************************************/
/*! exports provided: ArgumentOutOfRangeError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArgumentOutOfRangeError", function() { return ArgumentOutOfRangeError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ArgumentOutOfRangeErrorImpl = /*@__PURE__*/ (function () {
    function ArgumentOutOfRangeErrorImpl() {
        Error.call(this);
        this.message = 'argument out of range';
        this.name = 'ArgumentOutOfRangeError';
        return this;
    }
    ArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ArgumentOutOfRangeErrorImpl;
})();
var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;
//# sourceMappingURL=ArgumentOutOfRangeError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/EmptyError.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/EmptyError.js ***!
  \*************************************************************/
/*! exports provided: EmptyError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmptyError", function() { return EmptyError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var EmptyErrorImpl = /*@__PURE__*/ (function () {
    function EmptyErrorImpl() {
        Error.call(this);
        this.message = 'no elements in sequence';
        this.name = 'EmptyError';
        return this;
    }
    EmptyErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return EmptyErrorImpl;
})();
var EmptyError = EmptyErrorImpl;
//# sourceMappingURL=EmptyError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/Immediate.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/Immediate.js ***!
  \************************************************************/
/*! exports provided: Immediate, TestTools */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Immediate", function() { return Immediate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TestTools", function() { return TestTools; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var nextHandle = 1;
var RESOLVED = /*@__PURE__*/ (function () { return /*@__PURE__*/ Promise.resolve(); })();
var activeHandles = {};
function findAndClearHandle(handle) {
    if (handle in activeHandles) {
        delete activeHandles[handle];
        return true;
    }
    return false;
}
var Immediate = {
    setImmediate: function (cb) {
        var handle = nextHandle++;
        activeHandles[handle] = true;
        RESOLVED.then(function () { return findAndClearHandle(handle) && cb(); });
        return handle;
    },
    clearImmediate: function (handle) {
        findAndClearHandle(handle);
    },
};
var TestTools = {
    pending: function () {
        return Object.keys(activeHandles).length;
    }
};
//# sourceMappingURL=Immediate.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js ***!
  \**************************************************************************/
/*! exports provided: ObjectUnsubscribedError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectUnsubscribedError", function() { return ObjectUnsubscribedError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {
    function ObjectUnsubscribedErrorImpl() {
        Error.call(this);
        this.message = 'object unsubscribed';
        this.name = 'ObjectUnsubscribedError';
        return this;
    }
    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return ObjectUnsubscribedErrorImpl;
})();
var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;
//# sourceMappingURL=ObjectUnsubscribedError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/TimeoutError.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/TimeoutError.js ***!
  \***************************************************************/
/*! exports provided: TimeoutError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return TimeoutError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var TimeoutErrorImpl = /*@__PURE__*/ (function () {
    function TimeoutErrorImpl() {
        Error.call(this);
        this.message = 'Timeout has occurred';
        this.name = 'TimeoutError';
        return this;
    }
    TimeoutErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return TimeoutErrorImpl;
})();
var TimeoutError = TimeoutErrorImpl;
//# sourceMappingURL=TimeoutError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js ***!
  \**********************************************************************/
/*! exports provided: UnsubscriptionError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnsubscriptionError", function() { return UnsubscriptionError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {
    function UnsubscriptionErrorImpl(errors) {
        Error.call(this);
        this.message = errors ?
            errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ') : '';
        this.name = 'UnsubscriptionError';
        this.errors = errors;
        return this;
    }
    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
    return UnsubscriptionErrorImpl;
})();
var UnsubscriptionError = UnsubscriptionErrorImpl;
//# sourceMappingURL=UnsubscriptionError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/canReportError.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/canReportError.js ***!
  \*****************************************************************/
/*! exports provided: canReportError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canReportError", function() { return canReportError; });
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */

function canReportError(observer) {
    while (observer) {
        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
        if (closed_1 || isStopped) {
            return false;
        }
        else if (destination && destination instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"]) {
            observer = destination;
        }
        else {
            observer = null;
        }
    }
    return true;
}
//# sourceMappingURL=canReportError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/hostReportError.js ***!
  \******************************************************************/
/*! exports provided: hostReportError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hostReportError", function() { return hostReportError; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function hostReportError(err) {
    setTimeout(function () { throw err; }, 0);
}
//# sourceMappingURL=hostReportError.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/identity.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/identity.js ***!
  \***********************************************************/
/*! exports provided: identity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function identity(x) {
    return x;
}
//# sourceMappingURL=identity.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isArray.js":
/*!**********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isArray.js ***!
  \**********************************************************/
/*! exports provided: isArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return isArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();
//# sourceMappingURL=isArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isArrayLike.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isArrayLike.js ***!
  \**************************************************************/
/*! exports provided: isArrayLike */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return isArrayLike; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });
//# sourceMappingURL=isArrayLike.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isDate.js":
/*!*********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isDate.js ***!
  \*********************************************************/
/*! exports provided: isDate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDate", function() { return isDate; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isDate(value) {
    return value instanceof Date && !isNaN(+value);
}
//# sourceMappingURL=isDate.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isFunction.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isFunction.js ***!
  \*************************************************************/
/*! exports provided: isFunction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return isFunction; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isFunction(x) {
    return typeof x === 'function';
}
//# sourceMappingURL=isFunction.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js ***!
  \**********************************************************************/
/*! exports provided: isInteropObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isInteropObservable", function() { return isInteropObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

function isInteropObservable(input) {
    return input && typeof input[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__["observable"]] === 'function';
}
//# sourceMappingURL=isInteropObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isIterable.js":
/*!*************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isIterable.js ***!
  \*************************************************************/
/*! exports provided: isIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isIterable", function() { return isIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

function isIterable(input) {
    return input && typeof input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__["iterator"]] === 'function';
}
//# sourceMappingURL=isIterable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isNumeric.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isNumeric.js ***!
  \************************************************************/
/*! exports provided: isNumeric */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumeric", function() { return isNumeric; });
/* harmony import */ var _isArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isArray */ "./node_modules/rxjs/_esm5/internal/util/isArray.js");
/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */

function isNumeric(val) {
    return !Object(_isArray__WEBPACK_IMPORTED_MODULE_0__["isArray"])(val) && (val - parseFloat(val) + 1) >= 0;
}
//# sourceMappingURL=isNumeric.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isObject.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isObject.js ***!
  \***********************************************************/
/*! exports provided: isObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isObject(x) {
    return x !== null && typeof x === 'object';
}
//# sourceMappingURL=isObject.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isObservable.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isObservable.js ***!
  \***************************************************************/
/*! exports provided: isObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObservable", function() { return isObservable; });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */

function isObservable(obj) {
    return !!obj && (obj instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__["Observable"] || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));
}
//# sourceMappingURL=isObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isPromise.js":
/*!************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isPromise.js ***!
  \************************************************************/
/*! exports provided: isPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPromise", function() { return isPromise; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isPromise(value) {
    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}
//# sourceMappingURL=isPromise.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/isScheduler.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/isScheduler.js ***!
  \**************************************************************/
/*! exports provided: isScheduler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isScheduler", function() { return isScheduler; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function isScheduler(value) {
    return value && typeof value.schedule === 'function';
}
//# sourceMappingURL=isScheduler.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/noop.js":
/*!*******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/noop.js ***!
  \*******************************************************/
/*! exports provided: noop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return noop; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function noop() { }
//# sourceMappingURL=noop.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/not.js":
/*!******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/not.js ***!
  \******************************************************/
/*! exports provided: not */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "not", function() { return not; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
function not(pred, thisArg) {
    function notPred() {
        return !(notPred.pred.apply(notPred.thisArg, arguments));
    }
    notPred.pred = pred;
    notPred.thisArg = thisArg;
    return notPred;
}
//# sourceMappingURL=not.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/pipe.js":
/*!*******************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/pipe.js ***!
  \*******************************************************/
/*! exports provided: pipe, pipeFromArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return pipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pipeFromArray", function() { return pipeFromArray; });
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity */ "./node_modules/rxjs/_esm5/internal/util/identity.js");
/** PURE_IMPORTS_START _identity PURE_IMPORTS_END */

function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return pipeFromArray(fns);
}
function pipeFromArray(fns) {
    if (fns.length === 0) {
        return _identity__WEBPACK_IMPORTED_MODULE_0__["identity"];
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
//# sourceMappingURL=pipe.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js":
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeTo.js ***!
  \**************************************************************/
/*! exports provided: subscribeTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeTo", function() { return subscribeTo; });
/* harmony import */ var _subscribeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribeToArray */ "./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js");
/* harmony import */ var _subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./subscribeToPromise */ "./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js");
/* harmony import */ var _subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./subscribeToIterable */ "./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js");
/* harmony import */ var _subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./subscribeToObservable */ "./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js");
/* harmony import */ var _isArrayLike__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isArrayLike */ "./node_modules/rxjs/_esm5/internal/util/isArrayLike.js");
/* harmony import */ var _isPromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isPromise */ "./node_modules/rxjs/_esm5/internal/util/isPromise.js");
/* harmony import */ var _isObject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isObject */ "./node_modules/rxjs/_esm5/internal/util/isObject.js");
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */









var subscribeTo = function (result) {
    if (!!result && typeof result[_symbol_observable__WEBPACK_IMPORTED_MODULE_8__["observable"]] === 'function') {
        return Object(_subscribeToObservable__WEBPACK_IMPORTED_MODULE_3__["subscribeToObservable"])(result);
    }
    else if (Object(_isArrayLike__WEBPACK_IMPORTED_MODULE_4__["isArrayLike"])(result)) {
        return Object(_subscribeToArray__WEBPACK_IMPORTED_MODULE_0__["subscribeToArray"])(result);
    }
    else if (Object(_isPromise__WEBPACK_IMPORTED_MODULE_5__["isPromise"])(result)) {
        return Object(_subscribeToPromise__WEBPACK_IMPORTED_MODULE_1__["subscribeToPromise"])(result);
    }
    else if (!!result && typeof result[_symbol_iterator__WEBPACK_IMPORTED_MODULE_7__["iterator"]] === 'function') {
        return Object(_subscribeToIterable__WEBPACK_IMPORTED_MODULE_2__["subscribeToIterable"])(result);
    }
    else {
        var value = Object(_isObject__WEBPACK_IMPORTED_MODULE_6__["isObject"])(result) ? 'an invalid object' : "'" + result + "'";
        var msg = "You provided " + value + " where a stream was expected."
            + ' You can provide an Observable, Promise, Array, or Iterable.';
        throw new TypeError(msg);
    }
};
//# sourceMappingURL=subscribeTo.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js":
/*!*******************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js ***!
  \*******************************************************************/
/*! exports provided: subscribeToArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToArray", function() { return subscribeToArray; });
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var subscribeToArray = function (array) {
    return function (subscriber) {
        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
            subscriber.next(array[i]);
        }
        subscriber.complete();
    };
};
//# sourceMappingURL=subscribeToArray.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js ***!
  \**********************************************************************/
/*! exports provided: subscribeToIterable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToIterable", function() { return subscribeToIterable; });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/iterator */ "./node_modules/rxjs/_esm5/internal/symbol/iterator.js");
/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */

var subscribeToIterable = function (iterable) {
    return function (subscriber) {
        var iterator = iterable[_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__["iterator"]]();
        do {
            var item = void 0;
            try {
                item = iterator.next();
            }
            catch (err) {
                subscriber.error(err);
                return subscriber;
            }
            if (item.done) {
                subscriber.complete();
                break;
            }
            subscriber.next(item.value);
            if (subscriber.closed) {
                break;
            }
        } while (true);
        if (typeof iterator.return === 'function') {
            subscriber.add(function () {
                if (iterator.return) {
                    iterator.return();
                }
            });
        }
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToIterable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js":
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js ***!
  \************************************************************************/
/*! exports provided: subscribeToObservable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToObservable", function() { return subscribeToObservable; });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../symbol/observable */ "./node_modules/rxjs/_esm5/internal/symbol/observable.js");
/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */

var subscribeToObservable = function (obj) {
    return function (subscriber) {
        var obs = obj[_symbol_observable__WEBPACK_IMPORTED_MODULE_0__["observable"]]();
        if (typeof obs.subscribe !== 'function') {
            throw new TypeError('Provided object does not correctly implement Symbol.observable');
        }
        else {
            return obs.subscribe(subscriber);
        }
    };
};
//# sourceMappingURL=subscribeToObservable.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js ***!
  \*********************************************************************/
/*! exports provided: subscribeToPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToPromise", function() { return subscribeToPromise; });
/* harmony import */ var _hostReportError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hostReportError */ "./node_modules/rxjs/_esm5/internal/util/hostReportError.js");
/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */

var subscribeToPromise = function (promise) {
    return function (subscriber) {
        promise.then(function (value) {
            if (!subscriber.closed) {
                subscriber.next(value);
                subscriber.complete();
            }
        }, function (err) { return subscriber.error(err); })
            .then(null, _hostReportError__WEBPACK_IMPORTED_MODULE_0__["hostReportError"]);
        return subscriber;
    };
};
//# sourceMappingURL=subscribeToPromise.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js ***!
  \********************************************************************/
/*! exports provided: subscribeToResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribeToResult", function() { return subscribeToResult; });
/* harmony import */ var _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../InnerSubscriber */ "./node_modules/rxjs/_esm5/internal/InnerSubscriber.js");
/* harmony import */ var _subscribeTo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./subscribeTo */ "./node_modules/rxjs/_esm5/internal/util/subscribeTo.js");
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observable */ "./node_modules/rxjs/_esm5/internal/Observable.js");
/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */



function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, innerSubscriber) {
    if (innerSubscriber === void 0) {
        innerSubscriber = new _InnerSubscriber__WEBPACK_IMPORTED_MODULE_0__["InnerSubscriber"](outerSubscriber, outerValue, outerIndex);
    }
    if (innerSubscriber.closed) {
        return undefined;
    }
    if (result instanceof _Observable__WEBPACK_IMPORTED_MODULE_2__["Observable"]) {
        return result.subscribe(innerSubscriber);
    }
    return Object(_subscribeTo__WEBPACK_IMPORTED_MODULE_1__["subscribeTo"])(result)(innerSubscriber);
}
//# sourceMappingURL=subscribeToResult.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/internal/util/toSubscriber.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/_esm5/internal/util/toSubscriber.js ***!
  \***************************************************************/
/*! exports provided: toSubscriber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toSubscriber", function() { return toSubscriber; });
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subscriber */ "./node_modules/rxjs/_esm5/internal/Subscriber.js");
/* harmony import */ var _symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../symbol/rxSubscriber */ "./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js");
/* harmony import */ var _Observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Observer */ "./node_modules/rxjs/_esm5/internal/Observer.js");
/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */



function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"]) {
            return nextOrObserver;
        }
        if (nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__["rxSubscriber"]]) {
            return nextOrObserver[_symbol_rxSubscriber__WEBPACK_IMPORTED_MODULE_1__["rxSubscriber"]]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"](_Observer__WEBPACK_IMPORTED_MODULE_2__["empty"]);
    }
    return new _Subscriber__WEBPACK_IMPORTED_MODULE_0__["Subscriber"](nextOrObserver, error, complete);
}
//# sourceMappingURL=toSubscriber.js.map


/***/ }),

/***/ "./node_modules/rxjs/_esm5/operators/index.js":
/*!****************************************************!*\
  !*** ./node_modules/rxjs/_esm5/operators/index.js ***!
  \****************************************************/
/*! exports provided: audit, auditTime, buffer, bufferCount, bufferTime, bufferToggle, bufferWhen, catchError, combineAll, combineLatest, concat, concatAll, concatMap, concatMapTo, count, debounce, debounceTime, defaultIfEmpty, delay, delayWhen, dematerialize, distinct, distinctUntilChanged, distinctUntilKeyChanged, elementAt, endWith, every, exhaust, exhaustMap, expand, filter, finalize, find, findIndex, first, groupBy, ignoreElements, isEmpty, last, map, mapTo, materialize, max, merge, mergeAll, mergeMap, flatMap, mergeMapTo, mergeScan, min, multicast, observeOn, onErrorResumeNext, pairwise, partition, pluck, publish, publishBehavior, publishLast, publishReplay, race, reduce, repeat, repeatWhen, retry, retryWhen, refCount, sample, sampleTime, scan, sequenceEqual, share, shareReplay, single, skip, skipLast, skipUntil, skipWhile, startWith, subscribeOn, switchAll, switchMap, switchMapTo, take, takeLast, takeUntil, takeWhile, tap, throttle, throttleTime, throwIfEmpty, timeInterval, timeout, timeoutWith, timestamp, toArray, window, windowCount, windowTime, windowToggle, windowWhen, withLatestFrom, zip, zipAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_operators_audit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/operators/audit */ "./node_modules/rxjs/_esm5/internal/operators/audit.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "audit", function() { return _internal_operators_audit__WEBPACK_IMPORTED_MODULE_0__["audit"]; });

/* harmony import */ var _internal_operators_auditTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/operators/auditTime */ "./node_modules/rxjs/_esm5/internal/operators/auditTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "auditTime", function() { return _internal_operators_auditTime__WEBPACK_IMPORTED_MODULE_1__["auditTime"]; });

/* harmony import */ var _internal_operators_buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/operators/buffer */ "./node_modules/rxjs/_esm5/internal/operators/buffer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "buffer", function() { return _internal_operators_buffer__WEBPACK_IMPORTED_MODULE_2__["buffer"]; });

/* harmony import */ var _internal_operators_bufferCount__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/operators/bufferCount */ "./node_modules/rxjs/_esm5/internal/operators/bufferCount.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferCount", function() { return _internal_operators_bufferCount__WEBPACK_IMPORTED_MODULE_3__["bufferCount"]; });

/* harmony import */ var _internal_operators_bufferTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/operators/bufferTime */ "./node_modules/rxjs/_esm5/internal/operators/bufferTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferTime", function() { return _internal_operators_bufferTime__WEBPACK_IMPORTED_MODULE_4__["bufferTime"]; });

/* harmony import */ var _internal_operators_bufferToggle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../internal/operators/bufferToggle */ "./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferToggle", function() { return _internal_operators_bufferToggle__WEBPACK_IMPORTED_MODULE_5__["bufferToggle"]; });

/* harmony import */ var _internal_operators_bufferWhen__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/operators/bufferWhen */ "./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bufferWhen", function() { return _internal_operators_bufferWhen__WEBPACK_IMPORTED_MODULE_6__["bufferWhen"]; });

/* harmony import */ var _internal_operators_catchError__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal/operators/catchError */ "./node_modules/rxjs/_esm5/internal/operators/catchError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "catchError", function() { return _internal_operators_catchError__WEBPACK_IMPORTED_MODULE_7__["catchError"]; });

/* harmony import */ var _internal_operators_combineAll__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../internal/operators/combineAll */ "./node_modules/rxjs/_esm5/internal/operators/combineAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineAll", function() { return _internal_operators_combineAll__WEBPACK_IMPORTED_MODULE_8__["combineAll"]; });

/* harmony import */ var _internal_operators_combineLatest__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../internal/operators/combineLatest */ "./node_modules/rxjs/_esm5/internal/operators/combineLatest.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "combineLatest", function() { return _internal_operators_combineLatest__WEBPACK_IMPORTED_MODULE_9__["combineLatest"]; });

/* harmony import */ var _internal_operators_concat__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../internal/operators/concat */ "./node_modules/rxjs/_esm5/internal/operators/concat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concat", function() { return _internal_operators_concat__WEBPACK_IMPORTED_MODULE_10__["concat"]; });

/* harmony import */ var _internal_operators_concatAll__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../internal/operators/concatAll */ "./node_modules/rxjs/_esm5/internal/operators/concatAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatAll", function() { return _internal_operators_concatAll__WEBPACK_IMPORTED_MODULE_11__["concatAll"]; });

/* harmony import */ var _internal_operators_concatMap__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../internal/operators/concatMap */ "./node_modules/rxjs/_esm5/internal/operators/concatMap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatMap", function() { return _internal_operators_concatMap__WEBPACK_IMPORTED_MODULE_12__["concatMap"]; });

/* harmony import */ var _internal_operators_concatMapTo__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../internal/operators/concatMapTo */ "./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "concatMapTo", function() { return _internal_operators_concatMapTo__WEBPACK_IMPORTED_MODULE_13__["concatMapTo"]; });

/* harmony import */ var _internal_operators_count__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../internal/operators/count */ "./node_modules/rxjs/_esm5/internal/operators/count.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "count", function() { return _internal_operators_count__WEBPACK_IMPORTED_MODULE_14__["count"]; });

/* harmony import */ var _internal_operators_debounce__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../internal/operators/debounce */ "./node_modules/rxjs/_esm5/internal/operators/debounce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return _internal_operators_debounce__WEBPACK_IMPORTED_MODULE_15__["debounce"]; });

/* harmony import */ var _internal_operators_debounceTime__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../internal/operators/debounceTime */ "./node_modules/rxjs/_esm5/internal/operators/debounceTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounceTime", function() { return _internal_operators_debounceTime__WEBPACK_IMPORTED_MODULE_16__["debounceTime"]; });

/* harmony import */ var _internal_operators_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../internal/operators/defaultIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultIfEmpty", function() { return _internal_operators_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_17__["defaultIfEmpty"]; });

/* harmony import */ var _internal_operators_delay__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../internal/operators/delay */ "./node_modules/rxjs/_esm5/internal/operators/delay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return _internal_operators_delay__WEBPACK_IMPORTED_MODULE_18__["delay"]; });

/* harmony import */ var _internal_operators_delayWhen__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../internal/operators/delayWhen */ "./node_modules/rxjs/_esm5/internal/operators/delayWhen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delayWhen", function() { return _internal_operators_delayWhen__WEBPACK_IMPORTED_MODULE_19__["delayWhen"]; });

/* harmony import */ var _internal_operators_dematerialize__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../internal/operators/dematerialize */ "./node_modules/rxjs/_esm5/internal/operators/dematerialize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dematerialize", function() { return _internal_operators_dematerialize__WEBPACK_IMPORTED_MODULE_20__["dematerialize"]; });

/* harmony import */ var _internal_operators_distinct__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../internal/operators/distinct */ "./node_modules/rxjs/_esm5/internal/operators/distinct.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinct", function() { return _internal_operators_distinct__WEBPACK_IMPORTED_MODULE_21__["distinct"]; });

/* harmony import */ var _internal_operators_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../internal/operators/distinctUntilChanged */ "./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinctUntilChanged", function() { return _internal_operators_distinctUntilChanged__WEBPACK_IMPORTED_MODULE_22__["distinctUntilChanged"]; });

/* harmony import */ var _internal_operators_distinctUntilKeyChanged__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../internal/operators/distinctUntilKeyChanged */ "./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distinctUntilKeyChanged", function() { return _internal_operators_distinctUntilKeyChanged__WEBPACK_IMPORTED_MODULE_23__["distinctUntilKeyChanged"]; });

/* harmony import */ var _internal_operators_elementAt__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../internal/operators/elementAt */ "./node_modules/rxjs/_esm5/internal/operators/elementAt.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "elementAt", function() { return _internal_operators_elementAt__WEBPACK_IMPORTED_MODULE_24__["elementAt"]; });

/* harmony import */ var _internal_operators_endWith__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../internal/operators/endWith */ "./node_modules/rxjs/_esm5/internal/operators/endWith.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "endWith", function() { return _internal_operators_endWith__WEBPACK_IMPORTED_MODULE_25__["endWith"]; });

/* harmony import */ var _internal_operators_every__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../internal/operators/every */ "./node_modules/rxjs/_esm5/internal/operators/every.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "every", function() { return _internal_operators_every__WEBPACK_IMPORTED_MODULE_26__["every"]; });

/* harmony import */ var _internal_operators_exhaust__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../internal/operators/exhaust */ "./node_modules/rxjs/_esm5/internal/operators/exhaust.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "exhaust", function() { return _internal_operators_exhaust__WEBPACK_IMPORTED_MODULE_27__["exhaust"]; });

/* harmony import */ var _internal_operators_exhaustMap__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../internal/operators/exhaustMap */ "./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "exhaustMap", function() { return _internal_operators_exhaustMap__WEBPACK_IMPORTED_MODULE_28__["exhaustMap"]; });

/* harmony import */ var _internal_operators_expand__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../internal/operators/expand */ "./node_modules/rxjs/_esm5/internal/operators/expand.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expand", function() { return _internal_operators_expand__WEBPACK_IMPORTED_MODULE_29__["expand"]; });

/* harmony import */ var _internal_operators_filter__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../internal/operators/filter */ "./node_modules/rxjs/_esm5/internal/operators/filter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _internal_operators_filter__WEBPACK_IMPORTED_MODULE_30__["filter"]; });

/* harmony import */ var _internal_operators_finalize__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../internal/operators/finalize */ "./node_modules/rxjs/_esm5/internal/operators/finalize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "finalize", function() { return _internal_operators_finalize__WEBPACK_IMPORTED_MODULE_31__["finalize"]; });

/* harmony import */ var _internal_operators_find__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../internal/operators/find */ "./node_modules/rxjs/_esm5/internal/operators/find.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "find", function() { return _internal_operators_find__WEBPACK_IMPORTED_MODULE_32__["find"]; });

/* harmony import */ var _internal_operators_findIndex__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../internal/operators/findIndex */ "./node_modules/rxjs/_esm5/internal/operators/findIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findIndex", function() { return _internal_operators_findIndex__WEBPACK_IMPORTED_MODULE_33__["findIndex"]; });

/* harmony import */ var _internal_operators_first__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../internal/operators/first */ "./node_modules/rxjs/_esm5/internal/operators/first.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "first", function() { return _internal_operators_first__WEBPACK_IMPORTED_MODULE_34__["first"]; });

/* harmony import */ var _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../internal/operators/groupBy */ "./node_modules/rxjs/_esm5/internal/operators/groupBy.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groupBy", function() { return _internal_operators_groupBy__WEBPACK_IMPORTED_MODULE_35__["groupBy"]; });

/* harmony import */ var _internal_operators_ignoreElements__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../internal/operators/ignoreElements */ "./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ignoreElements", function() { return _internal_operators_ignoreElements__WEBPACK_IMPORTED_MODULE_36__["ignoreElements"]; });

/* harmony import */ var _internal_operators_isEmpty__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../internal/operators/isEmpty */ "./node_modules/rxjs/_esm5/internal/operators/isEmpty.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEmpty", function() { return _internal_operators_isEmpty__WEBPACK_IMPORTED_MODULE_37__["isEmpty"]; });

/* harmony import */ var _internal_operators_last__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../internal/operators/last */ "./node_modules/rxjs/_esm5/internal/operators/last.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "last", function() { return _internal_operators_last__WEBPACK_IMPORTED_MODULE_38__["last"]; });

/* harmony import */ var _internal_operators_map__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../internal/operators/map */ "./node_modules/rxjs/_esm5/internal/operators/map.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _internal_operators_map__WEBPACK_IMPORTED_MODULE_39__["map"]; });

/* harmony import */ var _internal_operators_mapTo__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../internal/operators/mapTo */ "./node_modules/rxjs/_esm5/internal/operators/mapTo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mapTo", function() { return _internal_operators_mapTo__WEBPACK_IMPORTED_MODULE_40__["mapTo"]; });

/* harmony import */ var _internal_operators_materialize__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../internal/operators/materialize */ "./node_modules/rxjs/_esm5/internal/operators/materialize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "materialize", function() { return _internal_operators_materialize__WEBPACK_IMPORTED_MODULE_41__["materialize"]; });

/* harmony import */ var _internal_operators_max__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../internal/operators/max */ "./node_modules/rxjs/_esm5/internal/operators/max.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _internal_operators_max__WEBPACK_IMPORTED_MODULE_42__["max"]; });

/* harmony import */ var _internal_operators_merge__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../internal/operators/merge */ "./node_modules/rxjs/_esm5/internal/operators/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _internal_operators_merge__WEBPACK_IMPORTED_MODULE_43__["merge"]; });

/* harmony import */ var _internal_operators_mergeAll__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../internal/operators/mergeAll */ "./node_modules/rxjs/_esm5/internal/operators/mergeAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeAll", function() { return _internal_operators_mergeAll__WEBPACK_IMPORTED_MODULE_44__["mergeAll"]; });

/* harmony import */ var _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../internal/operators/mergeMap */ "./node_modules/rxjs/_esm5/internal/operators/mergeMap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeMap", function() { return _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__["mergeMap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "flatMap", function() { return _internal_operators_mergeMap__WEBPACK_IMPORTED_MODULE_45__["flatMap"]; });

/* harmony import */ var _internal_operators_mergeMapTo__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../internal/operators/mergeMapTo */ "./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeMapTo", function() { return _internal_operators_mergeMapTo__WEBPACK_IMPORTED_MODULE_46__["mergeMapTo"]; });

/* harmony import */ var _internal_operators_mergeScan__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../internal/operators/mergeScan */ "./node_modules/rxjs/_esm5/internal/operators/mergeScan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeScan", function() { return _internal_operators_mergeScan__WEBPACK_IMPORTED_MODULE_47__["mergeScan"]; });

/* harmony import */ var _internal_operators_min__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../internal/operators/min */ "./node_modules/rxjs/_esm5/internal/operators/min.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _internal_operators_min__WEBPACK_IMPORTED_MODULE_48__["min"]; });

/* harmony import */ var _internal_operators_multicast__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../internal/operators/multicast */ "./node_modules/rxjs/_esm5/internal/operators/multicast.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multicast", function() { return _internal_operators_multicast__WEBPACK_IMPORTED_MODULE_49__["multicast"]; });

/* harmony import */ var _internal_operators_observeOn__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../internal/operators/observeOn */ "./node_modules/rxjs/_esm5/internal/operators/observeOn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "observeOn", function() { return _internal_operators_observeOn__WEBPACK_IMPORTED_MODULE_50__["observeOn"]; });

/* harmony import */ var _internal_operators_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../internal/operators/onErrorResumeNext */ "./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onErrorResumeNext", function() { return _internal_operators_onErrorResumeNext__WEBPACK_IMPORTED_MODULE_51__["onErrorResumeNext"]; });

/* harmony import */ var _internal_operators_pairwise__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../internal/operators/pairwise */ "./node_modules/rxjs/_esm5/internal/operators/pairwise.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairwise", function() { return _internal_operators_pairwise__WEBPACK_IMPORTED_MODULE_52__["pairwise"]; });

/* harmony import */ var _internal_operators_partition__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../internal/operators/partition */ "./node_modules/rxjs/_esm5/internal/operators/partition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "partition", function() { return _internal_operators_partition__WEBPACK_IMPORTED_MODULE_53__["partition"]; });

/* harmony import */ var _internal_operators_pluck__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../internal/operators/pluck */ "./node_modules/rxjs/_esm5/internal/operators/pluck.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pluck", function() { return _internal_operators_pluck__WEBPACK_IMPORTED_MODULE_54__["pluck"]; });

/* harmony import */ var _internal_operators_publish__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../internal/operators/publish */ "./node_modules/rxjs/_esm5/internal/operators/publish.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publish", function() { return _internal_operators_publish__WEBPACK_IMPORTED_MODULE_55__["publish"]; });

/* harmony import */ var _internal_operators_publishBehavior__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../internal/operators/publishBehavior */ "./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishBehavior", function() { return _internal_operators_publishBehavior__WEBPACK_IMPORTED_MODULE_56__["publishBehavior"]; });

/* harmony import */ var _internal_operators_publishLast__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../internal/operators/publishLast */ "./node_modules/rxjs/_esm5/internal/operators/publishLast.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishLast", function() { return _internal_operators_publishLast__WEBPACK_IMPORTED_MODULE_57__["publishLast"]; });

/* harmony import */ var _internal_operators_publishReplay__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../internal/operators/publishReplay */ "./node_modules/rxjs/_esm5/internal/operators/publishReplay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "publishReplay", function() { return _internal_operators_publishReplay__WEBPACK_IMPORTED_MODULE_58__["publishReplay"]; });

/* harmony import */ var _internal_operators_race__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../internal/operators/race */ "./node_modules/rxjs/_esm5/internal/operators/race.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "race", function() { return _internal_operators_race__WEBPACK_IMPORTED_MODULE_59__["race"]; });

/* harmony import */ var _internal_operators_reduce__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../internal/operators/reduce */ "./node_modules/rxjs/_esm5/internal/operators/reduce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return _internal_operators_reduce__WEBPACK_IMPORTED_MODULE_60__["reduce"]; });

/* harmony import */ var _internal_operators_repeat__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../internal/operators/repeat */ "./node_modules/rxjs/_esm5/internal/operators/repeat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeat", function() { return _internal_operators_repeat__WEBPACK_IMPORTED_MODULE_61__["repeat"]; });

/* harmony import */ var _internal_operators_repeatWhen__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../internal/operators/repeatWhen */ "./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "repeatWhen", function() { return _internal_operators_repeatWhen__WEBPACK_IMPORTED_MODULE_62__["repeatWhen"]; });

/* harmony import */ var _internal_operators_retry__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../internal/operators/retry */ "./node_modules/rxjs/_esm5/internal/operators/retry.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "retry", function() { return _internal_operators_retry__WEBPACK_IMPORTED_MODULE_63__["retry"]; });

/* harmony import */ var _internal_operators_retryWhen__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../internal/operators/retryWhen */ "./node_modules/rxjs/_esm5/internal/operators/retryWhen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "retryWhen", function() { return _internal_operators_retryWhen__WEBPACK_IMPORTED_MODULE_64__["retryWhen"]; });

/* harmony import */ var _internal_operators_refCount__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../internal/operators/refCount */ "./node_modules/rxjs/_esm5/internal/operators/refCount.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "refCount", function() { return _internal_operators_refCount__WEBPACK_IMPORTED_MODULE_65__["refCount"]; });

/* harmony import */ var _internal_operators_sample__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../internal/operators/sample */ "./node_modules/rxjs/_esm5/internal/operators/sample.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sample", function() { return _internal_operators_sample__WEBPACK_IMPORTED_MODULE_66__["sample"]; });

/* harmony import */ var _internal_operators_sampleTime__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ../internal/operators/sampleTime */ "./node_modules/rxjs/_esm5/internal/operators/sampleTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sampleTime", function() { return _internal_operators_sampleTime__WEBPACK_IMPORTED_MODULE_67__["sampleTime"]; });

/* harmony import */ var _internal_operators_scan__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ../internal/operators/scan */ "./node_modules/rxjs/_esm5/internal/operators/scan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return _internal_operators_scan__WEBPACK_IMPORTED_MODULE_68__["scan"]; });

/* harmony import */ var _internal_operators_sequenceEqual__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ../internal/operators/sequenceEqual */ "./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sequenceEqual", function() { return _internal_operators_sequenceEqual__WEBPACK_IMPORTED_MODULE_69__["sequenceEqual"]; });

/* harmony import */ var _internal_operators_share__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ../internal/operators/share */ "./node_modules/rxjs/_esm5/internal/operators/share.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "share", function() { return _internal_operators_share__WEBPACK_IMPORTED_MODULE_70__["share"]; });

/* harmony import */ var _internal_operators_shareReplay__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ../internal/operators/shareReplay */ "./node_modules/rxjs/_esm5/internal/operators/shareReplay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shareReplay", function() { return _internal_operators_shareReplay__WEBPACK_IMPORTED_MODULE_71__["shareReplay"]; });

/* harmony import */ var _internal_operators_single__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ../internal/operators/single */ "./node_modules/rxjs/_esm5/internal/operators/single.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "single", function() { return _internal_operators_single__WEBPACK_IMPORTED_MODULE_72__["single"]; });

/* harmony import */ var _internal_operators_skip__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ../internal/operators/skip */ "./node_modules/rxjs/_esm5/internal/operators/skip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skip", function() { return _internal_operators_skip__WEBPACK_IMPORTED_MODULE_73__["skip"]; });

/* harmony import */ var _internal_operators_skipLast__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ../internal/operators/skipLast */ "./node_modules/rxjs/_esm5/internal/operators/skipLast.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipLast", function() { return _internal_operators_skipLast__WEBPACK_IMPORTED_MODULE_74__["skipLast"]; });

/* harmony import */ var _internal_operators_skipUntil__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ../internal/operators/skipUntil */ "./node_modules/rxjs/_esm5/internal/operators/skipUntil.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipUntil", function() { return _internal_operators_skipUntil__WEBPACK_IMPORTED_MODULE_75__["skipUntil"]; });

/* harmony import */ var _internal_operators_skipWhile__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ../internal/operators/skipWhile */ "./node_modules/rxjs/_esm5/internal/operators/skipWhile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "skipWhile", function() { return _internal_operators_skipWhile__WEBPACK_IMPORTED_MODULE_76__["skipWhile"]; });

/* harmony import */ var _internal_operators_startWith__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ../internal/operators/startWith */ "./node_modules/rxjs/_esm5/internal/operators/startWith.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startWith", function() { return _internal_operators_startWith__WEBPACK_IMPORTED_MODULE_77__["startWith"]; });

/* harmony import */ var _internal_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ../internal/operators/subscribeOn */ "./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subscribeOn", function() { return _internal_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_78__["subscribeOn"]; });

/* harmony import */ var _internal_operators_switchAll__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ../internal/operators/switchAll */ "./node_modules/rxjs/_esm5/internal/operators/switchAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchAll", function() { return _internal_operators_switchAll__WEBPACK_IMPORTED_MODULE_79__["switchAll"]; });

/* harmony import */ var _internal_operators_switchMap__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ../internal/operators/switchMap */ "./node_modules/rxjs/_esm5/internal/operators/switchMap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchMap", function() { return _internal_operators_switchMap__WEBPACK_IMPORTED_MODULE_80__["switchMap"]; });

/* harmony import */ var _internal_operators_switchMapTo__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ../internal/operators/switchMapTo */ "./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "switchMapTo", function() { return _internal_operators_switchMapTo__WEBPACK_IMPORTED_MODULE_81__["switchMapTo"]; });

/* harmony import */ var _internal_operators_take__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ../internal/operators/take */ "./node_modules/rxjs/_esm5/internal/operators/take.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "take", function() { return _internal_operators_take__WEBPACK_IMPORTED_MODULE_82__["take"]; });

/* harmony import */ var _internal_operators_takeLast__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ../internal/operators/takeLast */ "./node_modules/rxjs/_esm5/internal/operators/takeLast.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeLast", function() { return _internal_operators_takeLast__WEBPACK_IMPORTED_MODULE_83__["takeLast"]; });

/* harmony import */ var _internal_operators_takeUntil__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ../internal/operators/takeUntil */ "./node_modules/rxjs/_esm5/internal/operators/takeUntil.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeUntil", function() { return _internal_operators_takeUntil__WEBPACK_IMPORTED_MODULE_84__["takeUntil"]; });

/* harmony import */ var _internal_operators_takeWhile__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ../internal/operators/takeWhile */ "./node_modules/rxjs/_esm5/internal/operators/takeWhile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "takeWhile", function() { return _internal_operators_takeWhile__WEBPACK_IMPORTED_MODULE_85__["takeWhile"]; });

/* harmony import */ var _internal_operators_tap__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ../internal/operators/tap */ "./node_modules/rxjs/_esm5/internal/operators/tap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tap", function() { return _internal_operators_tap__WEBPACK_IMPORTED_MODULE_86__["tap"]; });

/* harmony import */ var _internal_operators_throttle__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ../internal/operators/throttle */ "./node_modules/rxjs/_esm5/internal/operators/throttle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return _internal_operators_throttle__WEBPACK_IMPORTED_MODULE_87__["throttle"]; });

/* harmony import */ var _internal_operators_throttleTime__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ../internal/operators/throttleTime */ "./node_modules/rxjs/_esm5/internal/operators/throttleTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throttleTime", function() { return _internal_operators_throttleTime__WEBPACK_IMPORTED_MODULE_88__["throttleTime"]; });

/* harmony import */ var _internal_operators_throwIfEmpty__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ../internal/operators/throwIfEmpty */ "./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throwIfEmpty", function() { return _internal_operators_throwIfEmpty__WEBPACK_IMPORTED_MODULE_89__["throwIfEmpty"]; });

/* harmony import */ var _internal_operators_timeInterval__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ../internal/operators/timeInterval */ "./node_modules/rxjs/_esm5/internal/operators/timeInterval.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeInterval", function() { return _internal_operators_timeInterval__WEBPACK_IMPORTED_MODULE_90__["timeInterval"]; });

/* harmony import */ var _internal_operators_timeout__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ../internal/operators/timeout */ "./node_modules/rxjs/_esm5/internal/operators/timeout.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeout", function() { return _internal_operators_timeout__WEBPACK_IMPORTED_MODULE_91__["timeout"]; });

/* harmony import */ var _internal_operators_timeoutWith__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ../internal/operators/timeoutWith */ "./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timeoutWith", function() { return _internal_operators_timeoutWith__WEBPACK_IMPORTED_MODULE_92__["timeoutWith"]; });

/* harmony import */ var _internal_operators_timestamp__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ../internal/operators/timestamp */ "./node_modules/rxjs/_esm5/internal/operators/timestamp.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "timestamp", function() { return _internal_operators_timestamp__WEBPACK_IMPORTED_MODULE_93__["timestamp"]; });

/* harmony import */ var _internal_operators_toArray__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ../internal/operators/toArray */ "./node_modules/rxjs/_esm5/internal/operators/toArray.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return _internal_operators_toArray__WEBPACK_IMPORTED_MODULE_94__["toArray"]; });

/* harmony import */ var _internal_operators_window__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ../internal/operators/window */ "./node_modules/rxjs/_esm5/internal/operators/window.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "window", function() { return _internal_operators_window__WEBPACK_IMPORTED_MODULE_95__["window"]; });

/* harmony import */ var _internal_operators_windowCount__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ../internal/operators/windowCount */ "./node_modules/rxjs/_esm5/internal/operators/windowCount.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowCount", function() { return _internal_operators_windowCount__WEBPACK_IMPORTED_MODULE_96__["windowCount"]; });

/* harmony import */ var _internal_operators_windowTime__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ../internal/operators/windowTime */ "./node_modules/rxjs/_esm5/internal/operators/windowTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowTime", function() { return _internal_operators_windowTime__WEBPACK_IMPORTED_MODULE_97__["windowTime"]; });

/* harmony import */ var _internal_operators_windowToggle__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ../internal/operators/windowToggle */ "./node_modules/rxjs/_esm5/internal/operators/windowToggle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowToggle", function() { return _internal_operators_windowToggle__WEBPACK_IMPORTED_MODULE_98__["windowToggle"]; });

/* harmony import */ var _internal_operators_windowWhen__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ../internal/operators/windowWhen */ "./node_modules/rxjs/_esm5/internal/operators/windowWhen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "windowWhen", function() { return _internal_operators_windowWhen__WEBPACK_IMPORTED_MODULE_99__["windowWhen"]; });

/* harmony import */ var _internal_operators_withLatestFrom__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ../internal/operators/withLatestFrom */ "./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "withLatestFrom", function() { return _internal_operators_withLatestFrom__WEBPACK_IMPORTED_MODULE_100__["withLatestFrom"]; });

/* harmony import */ var _internal_operators_zip__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ../internal/operators/zip */ "./node_modules/rxjs/_esm5/internal/operators/zip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _internal_operators_zip__WEBPACK_IMPORTED_MODULE_101__["zip"]; });

/* harmony import */ var _internal_operators_zipAll__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ../internal/operators/zipAll */ "./node_modules/rxjs/_esm5/internal/operators/zipAll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zipAll", function() { return _internal_operators_zipAll__WEBPACK_IMPORTED_MODULE_102__["zipAll"]; });

/** PURE_IMPORTS_START  PURE_IMPORTS_END */







































































































//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/shallowequal/index.js":
/*!********************************************!*\
  !*** ./node_modules/shallowequal/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

//

module.exports = function shallowEqual(objA, objB, compare, compareContext) {
  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

  if (ret !== void 0) {
    return !!ret;
  }

  if (objA === objB) {
    return true;
  }

  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

  // Test for A's keys different from B.
  for (var idx = 0; idx < keysA.length; idx++) {
    var key = keysA[idx];

    if (!bHasOwnProperty(key)) {
      return false;
    }

    var valueA = objA[key];
    var valueB = objB[key];

    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;

    if (ret === false || (ret === void 0 && valueA !== valueB)) {
      return false;
    }
  }

  return true;
};


/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "./node_modules/util/node_modules/inherits/inherits_browser.js":
/*!*********************************************************************!*\
  !*** ./node_modules/util/node_modules/inherits/inherits_browser.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||
  function getOwnPropertyDescriptors(obj) {
    var keys = Object.keys(obj);
    var descriptors = {};
    for (var i = 0; i < keys.length; i++) {
      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
    }
    return descriptors;
  };

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  if (typeof process !== 'undefined' && process.noDeprecation === true) {
    return fn;
  }

  // Allow for deprecating things in the process of starting up.
  if (typeof process === 'undefined') {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ "./node_modules/util/support/isBufferBrowser.js");

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
<<<<<<< HEAD
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = __webpack_require__(/*! inherits */ "./node_modules/util/node_modules/inherits/inherits_browser.js");

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

exports.promisify = function promisify(original) {
  if (typeof original !== 'function')
    throw new TypeError('The "original" argument must be of type Function');

  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
    var fn = original[kCustomPromisifiedSymbol];
    if (typeof fn !== 'function') {
      throw new TypeError('The "util.promisify.custom" argument must be of type Function');
    }
    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
      value: fn, enumerable: false, writable: false, configurable: true
    });
    return fn;
  }

  function fn() {
    var promiseResolve, promiseReject;
    var promise = new Promise(function (resolve, reject) {
      promiseResolve = resolve;
      promiseReject = reject;
    });

    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }
    args.push(function (err, value) {
      if (err) {
        promiseReject(err);
      } else {
        promiseResolve(value);
      }
    });

    try {
      original.apply(this, args);
    } catch (err) {
      promiseReject(err);
    }

    return promise;
  }

  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));

  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
    value: fn, enumerable: false, writable: false, configurable: true
  });
  return Object.defineProperties(
    fn,
    getOwnPropertyDescriptors(original)
  );
}

exports.promisify.custom = kCustomPromisifiedSymbol

function callbackifyOnRejected(reason, cb) {
  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
  // Because `null` is a special error value in callbacks which means "no error
  // occurred", we error-wrap so the callback consumer can distinguish between
  // "the promise rejected with null" or "the promise fulfilled with undefined".
  if (!reason) {
    var newReason = new Error('Promise was rejected with a falsy value');
    newReason.reason = reason;
    reason = newReason;
  }
  return cb(reason);
}

function callbackify(original) {
  if (typeof original !== 'function') {
    throw new TypeError('The "original" argument must be of type Function');
  }

  // We DO NOT return the promise as it gives the user a false sense that
  // the promise is actually somehow related to the callback's execution
  // and that the callback throwing will reject the promise.
  function callbackified() {
    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    var maybeCb = args.pop();
    if (typeof maybeCb !== 'function') {
      throw new TypeError('The last argument must be of type Function');
    }
    var self = this;
    var cb = function() {
      return maybeCb.apply(self, arguments);
    };
    // In true node style we process the callback on `nextTick` with all the
    // implications (stack, `uncaughtException`, `async_hooks`)
    original.apply(this, args)
      .then(function(ret) { process.nextTick(cb, null, ret) },
            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });
  }

  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
  Object.defineProperties(callbackified,
                          getOwnPropertyDescriptors(original));
  return callbackified;
}
exports.callbackify = callbackify;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
=======
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */function i(t,e){if(t===e)return 0;for(var n=t.length,r=e.length,i=0,o=Math.min(n,r);i<o;++i)if(t[i]!==e[i]){n=t[i],r=e[i];break}return n<r?-1:r<n?1:0}function o(t){return e.Buffer&&"function"==typeof e.Buffer.isBuffer?e.Buffer.isBuffer(t):!(null==t||!t._isBuffer)}var a=n(306),s=Object.prototype.hasOwnProperty,c=Array.prototype.slice,u="foo"===function(){}.name;function d(t){return Object.prototype.toString.call(t)}function l(t){return!o(t)&&("function"==typeof e.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):!!t&&(t instanceof DataView||!!(t.buffer&&t.buffer instanceof ArrayBuffer))))}var p=t.exports=g,h=/\s*function\s+([^\(\s]*)\s*/;function f(t){if(a.isFunction(t)){if(u)return t.name;var e=t.toString().match(h);return e&&e[1]}}function m(t,e){return"string"==typeof t?t.length<e?t:t.slice(0,e):t}function y(t){if(u||!a.isFunction(t))return a.inspect(t);var e=f(t);return"[Function"+(e?": "+e:"")+"]"}function _(t,e,n,r,i){throw new p.AssertionError({message:n,actual:t,expected:e,operator:r,stackStartFunction:i})}function g(t,e){t||_(t,!0,e,"==",p.ok)}function b(t,e,n,r){if(t===e)return!0;if(o(t)&&o(e))return 0===i(t,e);if(a.isDate(t)&&a.isDate(e))return t.getTime()===e.getTime();if(a.isRegExp(t)&&a.isRegExp(e))return t.source===e.source&&t.global===e.global&&t.multiline===e.multiline&&t.lastIndex===e.lastIndex&&t.ignoreCase===e.ignoreCase;if(null!==t&&"object"==typeof t||null!==e&&"object"==typeof e){if(l(t)&&l(e)&&d(t)===d(e)&&!(t instanceof Float32Array||t instanceof Float64Array))return 0===i(new Uint8Array(t.buffer),new Uint8Array(e.buffer));if(o(t)!==o(e))return!1;var s=(r=r||{actual:[],expected:[]}).actual.indexOf(t);return-1!==s&&s===r.expected.indexOf(e)||(r.actual.push(t),r.expected.push(e),function(t,e,n,r){if(null==t||null==e)return!1;if(a.isPrimitive(t)||a.isPrimitive(e))return t===e;if(n&&Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1;var i=v(t),o=v(e);if(i&&!o||!i&&o)return!1;if(i)return t=c.call(t),e=c.call(e),b(t,e,n);var s,u,d=C(t),l=C(e);if(d.length!==l.length)return!1;for(d.sort(),l.sort(),u=d.length-1;u>=0;u--)if(d[u]!==l[u])return!1;for(u=d.length-1;u>=0;u--)if(s=d[u],!b(t[s],e[s],n,r))return!1;return!0}(t,e,n,r))}return n?t===e:t==e}function v(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function w(t,e){if(!t||!e)return!1;if("[object RegExp]"==Object.prototype.toString.call(e))return e.test(t);try{if(t instanceof e)return!0}catch(t){}return!Error.isPrototypeOf(e)&&!0===e.call({},t)}function O(t,e,n,r){var i;if("function"!=typeof e)throw new TypeError('"block" argument must be a function');"string"==typeof n&&(r=n,n=null),i=function(t){var e;try{t()}catch(t){e=t}return e}(e),r=(n&&n.name?" ("+n.name+").":".")+(r?" "+r:"."),t&&!i&&_(i,n,"Missing expected exception"+r);var o="string"==typeof r,s=!t&&i&&!n;if((!t&&a.isError(i)&&o&&w(i,n)||s)&&_(i,n,"Got unwanted exception"+r),t&&i&&n&&!w(i,n)||!t&&i)throw i}p.AssertionError=function(t){this.name="AssertionError",this.actual=t.actual,this.expected=t.expected,this.operator=t.operator,t.message?(this.message=t.message,this.generatedMessage=!1):(this.message=function(t){return m(y(t.actual),128)+" "+t.operator+" "+m(y(t.expected),128)}(this),this.generatedMessage=!0);var e=t.stackStartFunction||_;if(Error.captureStackTrace)Error.captureStackTrace(this,e);else{var n=new Error;if(n.stack){var r=n.stack,i=f(e),o=r.indexOf("\n"+i);if(o>=0){var a=r.indexOf("\n",o+1);r=r.substring(a+1)}this.stack=r}}},a.inherits(p.AssertionError,Error),p.fail=_,p.ok=g,p.equal=function(t,e,n){t!=e&&_(t,e,n,"==",p.equal)},p.notEqual=function(t,e,n){t==e&&_(t,e,n,"!=",p.notEqual)},p.deepEqual=function(t,e,n){b(t,e,!1)||_(t,e,n,"deepEqual",p.deepEqual)},p.deepStrictEqual=function(t,e,n){b(t,e,!0)||_(t,e,n,"deepStrictEqual",p.deepStrictEqual)},p.notDeepEqual=function(t,e,n){b(t,e,!1)&&_(t,e,n,"notDeepEqual",p.notDeepEqual)},p.notDeepStrictEqual=function t(e,n,r){b(e,n,!0)&&_(e,n,r,"notDeepStrictEqual",t)},p.strictEqual=function(t,e,n){t!==e&&_(t,e,n,"===",p.strictEqual)},p.notStrictEqual=function(t,e,n){t===e&&_(t,e,n,"!==",p.notStrictEqual)},p.throws=function(t,e,n){O(!0,t,e,n)},p.doesNotThrow=function(t,e,n){O(!1,t,e,n)},p.ifError=function(t){if(t)throw t},p.strict=r((function t(e,n){e||_(e,!0,n,"==",t)}),p,{equal:p.strictEqual,deepEqual:p.deepStrictEqual,notEqual:p.notStrictEqual,notDeepEqual:p.notDeepStrictEqual}),p.strict.strict=p.strict;var C=Object.keys||function(t){var e=[];for(var n in t)s.call(t,n)&&e.push(n);return e}}).call(this,n(50))},function(t,e,n){(function(t){var r=Object.getOwnPropertyDescriptors||function(t){for(var e=Object.keys(t),n={},r=0;r<e.length;r++)n[e[r]]=Object.getOwnPropertyDescriptor(t,e[r]);return n},i=/%[sdj%]/g;e.format=function(t){if(!_(t)){for(var e=[],n=0;n<arguments.length;n++)e.push(s(arguments[n]));return e.join(" ")}n=1;for(var r=arguments,o=r.length,a=String(t).replace(i,(function(t){if("%%"===t)return"%";if(n>=o)return t;switch(t){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(t){return"[Circular]"}default:return t}})),c=r[n];n<o;c=r[++n])m(c)||!v(c)?a+=" "+c:a+=" "+s(c);return a},e.deprecate=function(n,r){if(void 0!==t&&!0===t.noDeprecation)return n;if(void 0===t)return function(){return e.deprecate(n,r).apply(this,arguments)};var i=!1;return function(){if(!i){if(t.throwDeprecation)throw new Error(r);t.traceDeprecation?console.trace(r):console.error(r),i=!0}return n.apply(this,arguments)}};var o,a={};function s(t,n){var r={seen:[],stylize:u};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),f(n)?r.showHidden=n:n&&e._extend(r,n),g(r.showHidden)&&(r.showHidden=!1),g(r.depth)&&(r.depth=2),g(r.colors)&&(r.colors=!1),g(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=c),d(r,t,r.depth)}function c(t,e){var n=s.styles[e];return n?"["+s.colors[n][0]+"m"+t+"["+s.colors[n][1]+"m":t}function u(t,e){return t}function d(t,n,r){if(t.customInspect&&n&&C(n.inspect)&&n.inspect!==e.inspect&&(!n.constructor||n.constructor.prototype!==n)){var i=n.inspect(r,t);return _(i)||(i=d(t,i,r)),i}var o=function(t,e){if(g(e))return t.stylize("undefined","undefined");if(_(e)){var n="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(n,"string")}if(y(e))return t.stylize(""+e,"number");if(f(e))return t.stylize(""+e,"boolean");if(m(e))return t.stylize("null","null")}(t,n);if(o)return o;var a=Object.keys(n),s=function(t){var e={};return t.forEach((function(t,n){e[t]=!0})),e}(a);if(t.showHidden&&(a=Object.getOwnPropertyNames(n)),O(n)&&(a.indexOf("message")>=0||a.indexOf("description")>=0))return l(n);if(0===a.length){if(C(n)){var c=n.name?": "+n.name:"";return t.stylize("[Function"+c+"]","special")}if(b(n))return t.stylize(RegExp.prototype.toString.call(n),"regexp");if(w(n))return t.stylize(Date.prototype.toString.call(n),"date");if(O(n))return l(n)}var u,v="",S=!1,I=["{","}"];(h(n)&&(S=!0,I=["[","]"]),C(n))&&(v=" [Function"+(n.name?": "+n.name:"")+"]");return b(n)&&(v=" "+RegExp.prototype.toString.call(n)),w(n)&&(v=" "+Date.prototype.toUTCString.call(n)),O(n)&&(v=" "+l(n)),0!==a.length||S&&0!=n.length?r<0?b(n)?t.stylize(RegExp.prototype.toString.call(n),"regexp"):t.stylize("[Object]","special"):(t.seen.push(n),u=S?function(t,e,n,r,i){for(var o=[],a=0,s=e.length;a<s;++a)j(e,String(a))?o.push(p(t,e,n,r,String(a),!0)):o.push("");return i.forEach((function(i){i.match(/^\d+$/)||o.push(p(t,e,n,r,i,!0))})),o}(t,n,r,s,a):a.map((function(e){return p(t,n,r,s,e,S)})),t.seen.pop(),function(t,e,n){if(t.reduce((function(t,e){return e.indexOf("\n")>=0&&0,t+e.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60)return n[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+n[1];return n[0]+e+" "+t.join(", ")+" "+n[1]}(u,v,I)):I[0]+v+I[1]}function l(t){return"["+Error.prototype.toString.call(t)+"]"}function p(t,e,n,r,i,o){var a,s,c;if((c=Object.getOwnPropertyDescriptor(e,i)||{value:e[i]}).get?s=c.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):c.set&&(s=t.stylize("[Setter]","special")),j(r,i)||(a="["+i+"]"),s||(t.seen.indexOf(c.value)<0?(s=m(n)?d(t,c.value,null):d(t,c.value,n-1)).indexOf("\n")>-1&&(s=o?s.split("\n").map((function(t){return"  "+t})).join("\n").substr(2):"\n"+s.split("\n").map((function(t){return"   "+t})).join("\n")):s=t.stylize("[Circular]","special")),g(a)){if(o&&i.match(/^\d+$/))return s;(a=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.substr(1,a.length-2),a=t.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=t.stylize(a,"string"))}return a+": "+s}function h(t){return Array.isArray(t)}function f(t){return"boolean"==typeof t}function m(t){return null===t}function y(t){return"number"==typeof t}function _(t){return"string"==typeof t}function g(t){return void 0===t}function b(t){return v(t)&&"[object RegExp]"===S(t)}function v(t){return"object"==typeof t&&null!==t}function w(t){return v(t)&&"[object Date]"===S(t)}function O(t){return v(t)&&("[object Error]"===S(t)||t instanceof Error)}function C(t){return"function"==typeof t}function S(t){return Object.prototype.toString.call(t)}function I(t){return t<10?"0"+t.toString(10):t.toString(10)}e.debuglog=function(n){if(g(o)&&(o=t.env.NODE_DEBUG||""),n=n.toUpperCase(),!a[n])if(new RegExp("\\b"+n+"\\b","i").test(o)){var r=t.pid;a[n]=function(){var t=e.format.apply(e,arguments);console.error("%s %d: %s",n,r,t)}}else a[n]=function(){};return a[n]},e.inspect=s,s.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},s.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},e.isArray=h,e.isBoolean=f,e.isNull=m,e.isNullOrUndefined=function(t){return null==t},e.isNumber=y,e.isString=_,e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=g,e.isRegExp=b,e.isObject=v,e.isDate=w,e.isError=O,e.isFunction=C,e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=n(308);var E=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function A(){var t=new Date,e=[I(t.getHours()),I(t.getMinutes()),I(t.getSeconds())].join(":");return[t.getDate(),E[t.getMonth()],e].join(" ")}function j(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.log=function(){console.log("%s - %s",A(),e.format.apply(e,arguments))},e.inherits=n(309),e._extend=function(t,e){if(!e||!v(e))return t;for(var n=Object.keys(e),r=n.length;r--;)t[n[r]]=e[n[r]];return t};var P="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;function k(t,e){if(!t){var n=new Error("Promise was rejected with a falsy value");n.reason=t,t=n}return e(t)}e.promisify=function(t){if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');if(P&&t[P]){var e;if("function"!=typeof(e=t[P]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(e,P,{value:e,enumerable:!1,writable:!1,configurable:!0}),e}function e(){for(var e,n,r=new Promise((function(t,r){e=t,n=r})),i=[],o=0;o<arguments.length;o++)i.push(arguments[o]);i.push((function(t,r){t?n(t):e(r)}));try{t.apply(this,i)}catch(t){n(t)}return r}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),P&&Object.defineProperty(e,P,{value:e,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(e,r(t))},e.promisify.custom=P,e.callbackify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');function n(){for(var n=[],r=0;r<arguments.length;r++)n.push(arguments[r]);var i=n.pop();if("function"!=typeof i)throw new TypeError("The last argument must be of type Function");var o=this,a=function(){return i.apply(o,arguments)};e.apply(this,n).then((function(e){t.nextTick(a,null,e)}),(function(e){t.nextTick(k,e,a)}))}return Object.setPrototypeOf(n,Object.getPrototypeOf(e)),Object.defineProperties(n,r(e)),n}}).call(this,n(307))},function(t,e){var n,r,i=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(t){n=o}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(t){r=a}}();var c,u=[],d=!1,l=-1;function p(){d&&c&&(d=!1,c.length?u=c.concat(u):l=-1,u.length&&h())}function h(){if(!d){var t=s(p);d=!0;for(var e=u.length;e;){for(c=u,u=[];++l<e;)c&&c[l].run();l=-1,e=u.length}c=null,d=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function m(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];u.push(new f(t,e)),1!==u.length||d||s(h)},f.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=m,i.addListener=m,i.once=m,i.off=m,i.removeListener=m,i.removeAllListeners=m,i.emit=m,i.prependListener=m,i.prependOnceListener=m,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t,e){t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},function(t,e){"function"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}},function(t,e,n){"use strict";function r(t,e,n,i){this.message=t,this.expected=e,this.found=n,this.location=i,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,r)}!function(t,e){function n(){this.constructor=t}n.prototype=e.prototype,t.prototype=new n}(r,Error),r.buildMessage=function(t,e){var n={literal:function(t){return'"'+i(t.text)+'"'},class:function(t){var e,n="";for(e=0;e<t.parts.length;e++)n+=t.parts[e]instanceof Array?o(t.parts[e][0])+"-"+o(t.parts[e][1]):o(t.parts[e]);return"["+(t.inverted?"^":"")+n+"]"},any:function(t){return"any character"},end:function(t){return"end of input"},other:function(t){return t.description}};function r(t){return t.charCodeAt(0).toString(16).toUpperCase()}function i(t){return t.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+r(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+r(t)}))}function o(t){return t.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+r(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+r(t)}))}return"Expected "+function(t){var e,r,i,o=new Array(t.length);for(e=0;e<t.length;e++)o[e]=(i=t[e],n[i.type](i));if(o.sort(),o.length>0){for(e=1,r=1;e<o.length;e++)o[e-1]!==o[e]&&(o[r]=o[e],r++);o.length=r}switch(o.length){case 1:return o[0];case 2:return o[0]+" or "+o[1];default:return o.slice(0,-1).join(", ")+", or "+o[o.length-1]}}(t)+" but "+function(t){return t?'"'+i(t)+'"':"end of input"}(e)+" found."},t.exports={SyntaxError:r,parse:function(t,e){e=void 0!==e?e:{};var n,i={},o={start:dt},a=dt,s=rt("#",!1),c=function(){return Ct[0]},u=function(t){return t.join("")},d=rt("{",!1),l=rt("}",!1),p=rt(",",!1),h=rt("select",!1),f=rt("plural",!1),m="selectordinal",y=rt("selectordinal",!1),_=ot("identifier"),g=/^[^\t-\r \x85\u200E\u200F\u2028\u2029!-\/:-@[-\^`{-~\xA1-\xA7\xA9\xAB\xAC\xAE\xB0\xB1\xB6\xBB\xBF\xD7\xF7\u2010-\u2027\u2030-\u203E\u2041-\u2053\u2055-\u205E\u2190-\u245F\u2500-\u2775\u2794-\u2BFF\u2E00-\u2E7F\u3001-\u3003\u3008-\u3020\u3030\uFD3E\uFD3F\uFE45\uFE46]/,b=it([["\t","\r"]," ","","‎","‏","\u2028","\u2029",["!","/"],[":","@"],["[","^"],"`",["{","~"],["¡","§"],"©","«","¬","®","°","±","¶","»","¿","×","÷",["‐","‧"],["‰","‾"],["⁁","⁓"],["⁕","⁞"],["←","⑟"],["─","❵"],["➔","⯿"],["⸀","⹿"],["、","〃"],["〈","〠"],"〰","﴾","﴿","﹅","﹆"],!0,!1),v=function(t,e){return{key:t,tokens:e}},w=ot("plural offset"),O=rt("offset",!1),C=rt(":",!1),S=rt("=",!1),I=rt("number",!1),E=rt("date",!1),A=rt("time",!1),j=rt("spellout",!1),P=rt("ordinal",!1),k=rt("duration",!1),T=ot("a valid (strict) function parameter"),M=/^[^'{}]/,x=it(["'","{","}"],!0,!1),R=rt("'",!1),N=ot("doubled apostrophe"),z=rt("''",!1),D=/^[^']/,L=it(["'"],!0,!1),F=rt("'{",!1),q=rt("'}",!1),U=ot("escaped string"),B=rt("'#",!1),V=ot("plain char"),G=/^[^{}#\0-\x08\x0E-\x1F\x7F]/,Y=it(["{","}","#",["\0","\b"],["",""],""],!0,!1),H=ot("integer"),W=/^[0-9]/,K=it([["0","9"]],!1,!1),J=ot("white space"),Z=/^[\t-\r \x85\u200E\u200F\u2028\u2029]/,Q=it([["\t","\r"]," ","","‎","‏","\u2028","\u2029"],!1,!1),$=0,X=[{line:1,column:1}],tt=0,et=[],nt=0;if("startRule"in e){if(!(e.startRule in o))throw new Error("Can't start parsing from rule \""+e.startRule+'".');a=o[e.startRule]}function rt(t,e){return{type:"literal",text:t,ignoreCase:e}}function it(t,e,n){return{type:"class",parts:t,inverted:e,ignoreCase:n}}function ot(t){return{type:"other",description:t}}function at(e){var n,r=X[e];if(r)return r;for(n=e-1;!X[n];)n--;for(r={line:(r=X[n]).line,column:r.column};n<e;)10===t.charCodeAt(n)?(r.line++,r.column=1):r.column++,n++;return X[e]=r,r}function st(t,e){var n=at(t),r=at(e);return{start:{offset:t,line:n.line,column:n.column},end:{offset:e,line:r.line,column:r.column}}}function ct(t){$<tt||($>tt&&(tt=$,et=[]),et.push(t))}function ut(t,e,n){return new r(r.buildMessage(t,e),t,e,n)}function dt(){var t,e;for(t=[],e=lt();e!==i;)t.push(e),e=lt();return t}function lt(){var n,r,o;if((n=function(){var e,n,r,o;e=$,123===t.charCodeAt($)?(n="{",$++):(n=i,0===nt&&ct(d));n!==i&&Ot()!==i&&(r=pt())!==i&&Ot()!==i?(125===t.charCodeAt($)?(o="}",$++):(o=i,0===nt&&ct(l)),o!==i?(e,e=n={type:"argument",arg:r}):($=e,e=i)):($=e,e=i);return e}())===i&&(n=function(){var n,r,o,a,s,c,u,f,m,y;n=$,123===t.charCodeAt($)?(r="{",$++):(r=i,0===nt&&ct(d));if(r!==i)if(Ot()!==i)if((o=pt())!==i)if(Ot()!==i)if(44===t.charCodeAt($)?(a=",",$++):(a=i,0===nt&&ct(p)),a!==i)if(Ot()!==i)if(s=$,"select"===t.substr($,6)?(c="select",$+=6):(c=i,0===nt&&ct(h)),c!==i&&(s,b=c,e.strict&&Ct.unshift(!1),c=b),(s=c)!==i)if((c=Ot())!==i)if(44===t.charCodeAt($)?(u=",",$++):(u=i,0===nt&&ct(p)),u!==i)if(Ot()!==i){if(f=[],(m=ht())!==i)for(;m!==i;)f.push(m),m=ht();else f=i;f!==i&&(m=Ot())!==i?(125===t.charCodeAt($)?(y="}",$++):(y=i,0===nt&&ct(l)),y!==i?(n,_=o,g=f,e.strict&&Ct.shift(),n=r={type:"select",arg:_,cases:g}):($=n,n=i)):($=n,n=i)}else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;var _,g;var b;return n}())===i&&(n=function(){var n,r,o,a,s,c,u,h,_,g,b;n=$,123===t.charCodeAt($)?(r="{",$++):(r=i,0===nt&&ct(d));if(r!==i)if(Ot()!==i)if((o=pt())!==i)if(Ot()!==i)if(44===t.charCodeAt($)?(a=",",$++):(a=i,0===nt&&ct(p)),a!==i)if(Ot()!==i)if(s=$,"plural"===t.substr($,6)?(c="plural",$+=6):(c=i,0===nt&&ct(f)),c===i&&(t.substr($,13)===m?(c=m,$+=13):(c=i,0===nt&&ct(y))),c!==i&&(s,j=c,Ct.unshift(!0),c=j),(s=c)!==i)if((c=Ot())!==i)if(44===t.charCodeAt($)?(u=",",$++):(u=i,0===nt&&ct(p)),u!==i)if(Ot()!==i)if((h=function(){var e,n,r,o;nt++,e=$,Ot()!==i?("offset"===t.substr($,6)?(n="offset",$+=6):(n=i,0===nt&&ct(O)),n!==i&&Ot()!==i?(58===t.charCodeAt($)?(r=":",$++):(r=i,0===nt&&ct(C)),r!==i&&Ot()!==i&&(o=wt())!==i&&Ot()!==i?(e,e=o):($=e,e=i)):($=e,e=i)):($=e,e=i);nt--,e===i&&(i,0===nt&&ct(w));return e}())===i&&(h=null),h!==i){if(_=[],(g=ft())!==i)for(;g!==i;)_.push(g),g=ft();else _=i;_!==i&&(g=Ot())!==i?(125===t.charCodeAt($)?(b="}",$++):(b=i,0===nt&&ct(l)),b!==i?(n,v=o,I=h,E=_,(A=("selectordinal"===(S=s)?e.ordinal:e.cardinal)||["zero","one","two","few","many","other"])&&A.length&&E.forEach((function(t){if(isNaN(t.key)&&A.indexOf(t.key)<0)throw new Error("Invalid key `"+t.key+"` for argument `"+v+"`. Valid "+S+" keys for this locale are `"+A.join("`, `")+"`, and explicit keys like `=0`.")})),Ct.shift(),n=r={type:S,arg:v,offset:I||0,cases:E}):($=n,n=i)):($=n,n=i)}else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;else $=n,n=i;var v,S,I,E,A;var j;return n}())===i&&(n=function(){var n,r,o,a,s,c,u;n=$,123===t.charCodeAt($)?(r="{",$++):(r=i,0===nt&&ct(d));r!==i&&Ot()!==i&&(o=pt())!==i&&Ot()!==i?(44===t.charCodeAt($)?(a=",",$++):(a=i,0===nt&&ct(p)),a!==i&&Ot()!==i&&(s=function(){var n,r,o,a,s;"number"===t.substr($,6)?(n="number",$+=6):(n=i,0===nt&&ct(I));n===i&&("date"===t.substr($,4)?(n="date",$+=4):(n=i,0===nt&&ct(E)),n===i&&("time"===t.substr($,4)?(n="time",$+=4):(n=i,0===nt&&ct(A)),n===i&&("spellout"===t.substr($,8)?(n="spellout",$+=8):(n=i,0===nt&&ct(j)),n===i&&("ordinal"===t.substr($,7)?(n="ordinal",$+=7):(n=i,0===nt&&ct(P)),n===i&&("duration"===t.substr($,8)?(n="duration",$+=8):(n=i,0===nt&&ct(k)),n===i&&(n=$,r=$,nt++,"select"===t.substr($,6)?(o="select",$+=6):(o=i,0===nt&&ct(h)),nt--,o===i?r=void 0:($=r,r=i),r!==i?(o=$,nt++,"plural"===t.substr($,6)?(a="plural",$+=6):(a=i,0===nt&&ct(f)),nt--,a===i?o=void 0:($=o,o=i),o!==i?(a=$,nt++,t.substr($,13)===m?(s=m,$+=13):(s=i,0===nt&&ct(y)),nt--,s===i?a=void 0:($=a,a=i),a!==i&&(s=pt())!==i?($,(function(t){if(e.strict||/^\d/.test(t))return!1;switch(t.toLowerCase()){case"select":case"plural":case"selectordinal":return!1;default:return!0}}(s)?void 0:i)!==i?(n,n=r=s):($=n,n=i)):($=n,n=i)):($=n,n=i)):($=n,n=i)))))));return n}())!==i&&Ot()!==i?((c=function(){var n,r,o,a,s;if(n=$,(r=Ot())!==i)if(44===t.charCodeAt($)?(o=",",$++):(o=i,0===nt&&ct(p)),o!==i){for(a=[],s=lt();s!==i;)a.push(s),s=lt();a!==i?($,(s=(s=!e.strict)?void 0:i)!==i?(n,n=r={tokens:a}):($=n,n=i)):($=n,n=i)}else $=n,n=i;else $=n,n=i;if(n===i)if(n=$,(r=Ot())!==i)if(44===t.charCodeAt($)?(o=",",$++):(o=i,0===nt&&ct(p)),o!==i){for(a=[],s=yt();s!==i;)a.push(s),s=yt();a!==i?(n,r={tokens:[a.join("")]},n=r):($=n,n=i)}else $=n,n=i;else $=n,n=i;return n}())===i&&(c=null),c!==i?(125===t.charCodeAt($)?(u="}",$++):(u=i,0===nt&&ct(l)),u!==i?(n,n=r={type:"function",arg:o,key:s,param:c}):($=n,n=i)):($=n,n=i)):($=n,n=i)):($=n,n=i);return n}())===i&&(n=$,35===t.charCodeAt($)?(r="#",$++):(r=i,0===nt&&ct(s)),r!==i?($,(o=(o=c())?void 0:i)!==i?(n,n=r={type:"octothorpe"}):($=n,n=i)):($=n,n=i),n===i)){if(n=$,r=[],(o=vt())!==i)for(;o!==i;)r.push(o),o=vt();else r=i;r!==i&&(n,r=u(r)),n=r}return n}function pt(){var e,n,r;if(nt++,e=$,n=[],g.test(t.charAt($))?(r=t.charAt($),$++):(r=i,0===nt&&ct(b)),r!==i)for(;r!==i;)n.push(r),g.test(t.charAt($))?(r=t.charAt($),$++):(r=i,0===nt&&ct(b));else n=i;return e=n!==i?t.substring(e,$):n,nt--,e===i&&(n=i,0===nt&&ct(_)),e}function ht(){var t,e,n;return t=$,Ot()!==i&&(e=pt())!==i&&Ot()!==i&&(n=mt())!==i?(t,t=v(e,n)):($=t,t=i),t}function ft(){var e,n,r;return e=$,Ot()!==i&&(n=function(){var e,n,r;(e=pt())===i&&(e=$,61===t.charCodeAt($)?(n="=",$++):(n=i,0===nt&&ct(S)),n!==i&&(r=wt())!==i?(e,e=n=r):($=e,e=i));return e}())!==i&&Ot()!==i&&(r=mt())!==i?(e,e=v(n,r)):($=e,e=i),e}function mt(){var e,n,r,o,a,s;if(e=$,123===t.charCodeAt($)?(n="{",$++):(n=i,0===nt&&ct(d)),n!==i)if(r=$,(o=Ot())!==i?(a=$,nt++,123===t.charCodeAt($)?(s="{",$++):(s=i,0===nt&&ct(d)),nt--,s!==i?($=a,a=void 0):a=i,a!==i?r=o=[o,a]:($=r,r=i)):($=r,r=i),r===i&&(r=null),r!==i){for(o=[],a=lt();a!==i;)o.push(a),a=lt();o!==i&&(a=Ot())!==i?(125===t.charCodeAt($)?(s="}",$++):(s=i,0===nt&&ct(l)),s!==i?(e,e=n=o):($=e,e=i)):($=e,e=i)}else $=e,e=i;else $=e,e=i;return e}function yt(){var e,n,r,o;if(nt++,e=$,n=[],M.test(t.charAt($))?(r=t.charAt($),$++):(r=i,0===nt&&ct(x)),r!==i)for(;r!==i;)n.push(r),M.test(t.charAt($))?(r=t.charAt($),$++):(r=i,0===nt&&ct(x));else n=i;if(n!==i&&(e,n=n.join("")),(e=n)===i&&(e=_t())===i&&(e=$,39===t.charCodeAt($)?(n="'",$++):(n=i,0===nt&&ct(R)),n!==i&&(r=gt())!==i?(39===t.charCodeAt($)?(o="'",$++):(o=i,0===nt&&ct(R)),o!==i?(e,e=n=r):($=e,e=i)):($=e,e=i),e===i))if(e=$,123===t.charCodeAt($)?(n="{",$++):(n=i,0===nt&&ct(d)),n!==i){for(r=[],o=yt();o!==i;)r.push(o),o=yt();r!==i?(125===t.charCodeAt($)?(o="}",$++):(o=i,0===nt&&ct(l)),o!==i?(e,e=n=function(t){return"{"+t.join("")+"}"}(r)):($=e,e=i)):($=e,e=i)}else $=e,e=i;return nt--,e===i&&(n=i,0===nt&&ct(T)),e}function _t(){var e,n;return nt++,e=$,"''"===t.substr($,2)?(n="''",$+=2):(n=i,0===nt&&ct(z)),n!==i&&(e,n="'"),nt--,(e=n)===i&&(n=i,0===nt&&ct(N)),e}function gt(){var e,n,r;if((e=_t())===i){if(e=$,n=[],D.test(t.charAt($))?(r=t.charAt($),$++):(r=i,0===nt&&ct(L)),r!==i)for(;r!==i;)n.push(r),D.test(t.charAt($))?(r=t.charAt($),$++):(r=i,0===nt&&ct(L));else n=i;n!==i&&(e,n=u(n)),e=n}return e}function bt(){var e,n,r,o,a,s;if(nt++,(e=function(){var e,n,r,o;if(e=$,"'{"===t.substr($,2)?(n="'{",$+=2):(n=i,0===nt&&ct(F)),n!==i){for(r=[],o=gt();o!==i;)r.push(o),o=gt();r!==i?(39===t.charCodeAt($)?(o="'",$++):(o=i,0===nt&&ct(R)),o!==i?(e,e=n="{"+r.join("")):($=e,e=i)):($=e,e=i)}else $=e,e=i;if(e===i)if(e=$,"'}"===t.substr($,2)?(n="'}",$+=2):(n=i,0===nt&&ct(q)),n!==i){for(r=[],o=gt();o!==i;)r.push(o),o=gt();r!==i?(39===t.charCodeAt($)?(o="'",$++):(o=i,0===nt&&ct(R)),o!==i?(e,e=n=function(t){return"}"+t.join("")}(r)):($=e,e=i)):($=e,e=i)}else $=e,e=i;return e}())===i){if(e=$,n=$,r=$,"'#"===t.substr($,2)?(o="'#",$+=2):(o=i,0===nt&&ct(B)),o!==i){for(a=[],s=gt();s!==i;)a.push(s),s=gt();a!==i?(39===t.charCodeAt($)?(s="'",$++):(s=i,0===nt&&ct(R)),s!==i?(r,r=o="#"+a.join("")):($=r,r=i)):($=r,r=i)}else $=r,r=i;r!==i?($,(o=(o=c())?void 0:i)!==i?n=r=[r,o]:($=n,n=i)):($=n,n=i),n!==i&&(e,n=n[0]),(e=n)===i&&(39===t.charCodeAt($)?(e="'",$++):(e=i,0===nt&&ct(R)))}return nt--,e===i&&(n=i,0===nt&&ct(U)),e}function vt(){var e,n;return(e=_t())===i&&(e=bt())===i&&(e=$,35===t.charCodeAt($)?(n="#",$++):(n=i,0===nt&&ct(s)),n!==i?($,(!Ct[0]?void 0:i)!==i?(e,e=n=n):($=e,e=i)):($=e,e=i),e===i&&(e=function(){var e;return nt++,G.test(t.charAt($))?(e=t.charAt($),$++):(e=i,0===nt&&ct(Y)),nt--,e===i&&(i,0===nt&&ct(V)),e}())),e}function wt(){var e,n,r;if(nt++,e=$,n=[],W.test(t.charAt($))?(r=t.charAt($),$++):(r=i,0===nt&&ct(K)),r!==i)for(;r!==i;)n.push(r),W.test(t.charAt($))?(r=t.charAt($),$++):(r=i,0===nt&&ct(K));else n=i;return e=n!==i?t.substring(e,$):n,nt--,e===i&&(n=i,0===nt&&ct(H)),e}function Ot(){var e,n,r;for(nt++,e=$,n=[],Z.test(t.charAt($))?(r=t.charAt($),$++):(r=i,0===nt&&ct(Q));r!==i;)n.push(r),Z.test(t.charAt($))?(r=t.charAt($),$++):(r=i,0===nt&&ct(Q));return e=n!==i?t.substring(e,$):n,nt--,e===i&&(n=i,0===nt&&ct(J)),e}var Ct=[!1];if((n=a())!==i&&$===t.length)return n;throw n!==i&&$<t.length&&ct({type:"end"}),ut(et,tt<t.length?t.charAt(tt):null,tt<t.length?st(tt,tt+1):st(tt,tt))}}},function(t,e,n){t.exports={date:n(312),duration:n(313),number:n(314),time:n(315)}},function(t,e){function n(t,e,n){var r={day:"numeric",month:"short",year:"numeric"};switch(n){case"full":r.weekday="long";case"long":r.month="long";break;case"short":r.month="numeric"}return new Date(t).toLocaleDateString(e,r)}t.exports=function(){return n}},function(t,e){function n(t){if(!isFinite(t))return String(t);var e="";t<0?(e="-",t=Math.abs(t)):t=Number(t);var n=t%60,r=[Math.round(n)===n?n:n.toFixed(3)];return t<60?r.unshift(0):(t=Math.round((t-r[0])/60),r.unshift(t%60),t>=60&&(t=Math.round((t-r[0])/60),r.unshift(t))),e+r.shift()+":"+r.map((function(t){return t<10?"0"+String(t):String(t)})).join(":")}t.exports=function(){return n}},function(t,e){function n(t,e,n){var r=n&&n.split(":")||[],i={integer:{maximumFractionDigits:0},percent:{style:"percent"},currency:{style:"currency",currency:r[1]&&r[1].trim()||CURRENCY,minimumFractionDigits:2,maximumFractionDigits:2}};return new Intl.NumberFormat(e,i[r[0]]||{}).format(t)}t.exports=function(t){var e=n.toString().replace("CURRENCY",JSON.stringify(t.currency||"USD")).match(/\(([^)]*)\)[^{]*{([\s\S]*)}/);return new Function(e[1],e[2])}},function(t,e){function n(t,e,n){var r={second:"numeric",minute:"numeric",hour:"numeric"};switch(n){case"full":case"long":r.timeZoneName="short";break;case"short":delete r.second}return new Date(t).toLocaleTimeString(e,r)}t.exports=function(){return n}},function(t,e,n){var r=n(317),i=n(318);function o(t,e,n){var i=function(){return e.apply(this,arguments)};if(i.toString=function(){return e.toString()},n)i.cardinal=[],i.ordinal=[];else{var o=r[t]||{};i.cardinal=o.cardinal,i.ordinal=o.ordinal}return i}t.exports={get:function(t,e){for(var n=t;n;n=n.replace(/[-_]?[^-_]*$/,"")){var r=i[n];if(r)return o(n,r,e)}throw new Error("Localisation function not found for locale "+JSON.stringify(t))},getAll:function(t){return Object.keys(i).reduce((function(e,n){return e[n]=o(n,i[n],t),e}),{})}}},function(t,e,n){var r,i,o=[{cardinal:["other"],ordinal:["other"]},{cardinal:["one","other"],ordinal:["other"]},{cardinal:["one","other"],ordinal:["one","other"]},{cardinal:["one","two","other"],ordinal:["other"]}];void 0===(i="function"==typeof(r={af:o[1],ak:o[1],am:o[1],ar:{cardinal:["zero","one","two","few","many","other"],ordinal:["other"]},ars:{cardinal:["zero","one","two","few","many","other"],ordinal:["other"]},as:{cardinal:["one","other"],ordinal:["one","two","few","many","other"]},asa:o[1],ast:o[1],az:{cardinal:["one","other"],ordinal:["one","few","many","other"]},be:{cardinal:["one","few","many","other"],ordinal:["few","other"]},bem:o[1],bez:o[1],bg:o[1],bh:o[1],bm:o[0],bn:{cardinal:["one","other"],ordinal:["one","two","few","many","other"]},bo:o[0],br:{cardinal:["one","two","few","many","other"],ordinal:["other"]},brx:o[1],bs:{cardinal:["one","few","other"],ordinal:["other"]},ca:{cardinal:["one","other"],ordinal:["one","two","few","other"]},ce:o[1],cgg:o[1],chr:o[1],ckb:o[1],cs:{cardinal:["one","few","many","other"],ordinal:["other"]},cy:{cardinal:["zero","one","two","few","many","other"],ordinal:["zero","one","two","few","many","other"]},da:o[1],de:o[1],dsb:{cardinal:["one","two","few","other"],ordinal:["other"]},dv:o[1],dz:o[0],ee:o[1],el:o[1],en:{cardinal:["one","other"],ordinal:["one","two","few","other"]},eo:o[1],es:o[1],et:o[1],eu:o[1],fa:o[1],ff:o[1],fi:o[1],fil:o[2],fo:o[1],fr:o[2],fur:o[1],fy:o[1],ga:{cardinal:["one","two","few","many","other"],ordinal:["one","other"]},gd:{cardinal:["one","two","few","other"],ordinal:["one","two","few","other"]},gl:o[1],gsw:o[1],gu:{cardinal:["one","other"],ordinal:["one","two","few","many","other"]},guw:o[1],gv:{cardinal:["one","two","few","many","other"],ordinal:["other"]},ha:o[1],haw:o[1],he:{cardinal:["one","two","many","other"],ordinal:["other"]},hi:{cardinal:["one","other"],ordinal:["one","two","few","many","other"]},hr:{cardinal:["one","few","other"],ordinal:["other"]},hsb:{cardinal:["one","two","few","other"],ordinal:["other"]},hu:o[2],hy:o[2],ia:o[1],id:o[0],ig:o[0],ii:o[0],in:o[0],io:o[1],is:o[1],it:{cardinal:["one","other"],ordinal:["many","other"]},iu:o[3],iw:{cardinal:["one","two","many","other"],ordinal:["other"]},ja:o[0],jbo:o[0],jgo:o[1],ji:o[1],jmc:o[1],jv:o[0],jw:o[0],ka:{cardinal:["one","other"],ordinal:["one","many","other"]},kab:o[1],kaj:o[1],kcg:o[1],kde:o[0],kea:o[0],kk:{cardinal:["one","other"],ordinal:["many","other"]},kkj:o[1],kl:o[1],km:o[0],kn:o[1],ko:o[0],ks:o[1],ksb:o[1],ksh:{cardinal:["zero","one","other"],ordinal:["other"]},ku:o[1],kw:o[3],ky:o[1],lag:{cardinal:["zero","one","other"],ordinal:["other"]},lb:o[1],lg:o[1],lkt:o[0],ln:o[1],lo:{cardinal:["other"],ordinal:["one","other"]},lt:{cardinal:["one","few","many","other"],ordinal:["other"]},lv:{cardinal:["zero","one","other"],ordinal:["other"]},mas:o[1],mg:o[1],mgo:o[1],mk:{cardinal:["one","other"],ordinal:["one","two","many","other"]},ml:o[1],mn:o[1],mo:{cardinal:["one","few","other"],ordinal:["one","other"]},mr:{cardinal:["one","other"],ordinal:["one","two","few","other"]},ms:{cardinal:["other"],ordinal:["one","other"]},mt:{cardinal:["one","few","many","other"],ordinal:["other"]},my:o[0],nah:o[1],naq:o[3],nb:o[1],nd:o[1],ne:o[2],nl:o[1],nn:o[1],nnh:o[1],no:o[1],nqo:o[0],nr:o[1],nso:o[1],ny:o[1],nyn:o[1],om:o[1],or:{cardinal:["one","other"],ordinal:["one","two","few","many","other"]},os:o[1],pa:o[1],pap:o[1],pl:{cardinal:["one","few","many","other"],ordinal:["other"]},prg:{cardinal:["zero","one","other"],ordinal:["other"]},ps:o[1],pt:o[1],"pt-PT":o[1],rm:o[1],ro:{cardinal:["one","few","other"],ordinal:["one","other"]},rof:o[1],root:o[0],ru:{cardinal:["one","few","many","other"],ordinal:["other"]},rwk:o[1],sah:o[0],saq:o[1],sc:{cardinal:["one","other"],ordinal:["many","other"]},scn:{cardinal:["one","other"],ordinal:["many","other"]},sd:o[1],sdh:o[1],se:o[3],seh:o[1],ses:o[0],sg:o[0],sh:{cardinal:["one","few","other"],ordinal:["other"]},shi:{cardinal:["one","few","other"],ordinal:["other"]},si:o[1],sk:{cardinal:["one","few","many","other"],ordinal:["other"]},sl:{cardinal:["one","two","few","other"],ordinal:["other"]},sma:o[3],smi:o[3],smj:o[3],smn:o[3],sms:o[3],sn:o[1],so:o[1],sq:{cardinal:["one","other"],ordinal:["one","many","other"]},sr:{cardinal:["one","few","other"],ordinal:["other"]},ss:o[1],ssy:o[1],st:o[1],sv:o[2],sw:o[1],syr:o[1],ta:o[1],te:o[1],teo:o[1],th:o[0],ti:o[1],tig:o[1],tk:{cardinal:["one","other"],ordinal:["few","other"]},tl:o[2],tn:o[1],to:o[0],tr:o[1],ts:o[1],tzm:o[1],ug:o[1],uk:{cardinal:["one","few","many","other"],ordinal:["few","other"]},ur:o[1],uz:o[1],ve:o[1],vi:{cardinal:["other"],ordinal:["one","other"]},vo:o[1],vun:o[1],wa:o[1],wae:o[1],wo:o[0],xh:o[1],xog:o[1],yi:o[1],yo:o[0],yue:o[0],zh:o[0],zu:o[1]})?r.call(e,n,e,t):r)||(t.exports=i)},function(t,e,n){var r,i;void 0===(i="function"==typeof(r={af:function(t,e){return e?"other":1==t?"one":"other"},ak:function(t,e){return e?"other":0==t||1==t?"one":"other"},am:function(t,e){return e?"other":t>=0&&t<=1?"one":"other"},ar:function(t,e){var n=String(t).split("."),r=Number(n[0])==t&&n[0].slice(-2);return e?"other":0==t?"zero":1==t?"one":2==t?"two":r>=3&&r<=10?"few":r>=11&&r<=99?"many":"other"},ars:function(t,e){var n=String(t).split("."),r=Number(n[0])==t&&n[0].slice(-2);return e?"other":0==t?"zero":1==t?"one":2==t?"two":r>=3&&r<=10?"few":r>=11&&r<=99?"many":"other"},as:function(t,e){return e?1==t||5==t||7==t||8==t||9==t||10==t?"one":2==t||3==t?"two":4==t?"few":6==t?"many":"other":t>=0&&t<=1?"one":"other"},asa:function(t,e){return e?"other":1==t?"one":"other"},ast:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},az:function(t,e){var n=String(t).split(".")[0],r=n.slice(-1),i=n.slice(-2),o=n.slice(-3);return e?1==r||2==r||5==r||7==r||8==r||20==i||50==i||70==i||80==i?"one":3==r||4==r||100==o||200==o||300==o||400==o||500==o||600==o||700==o||800==o||900==o?"few":0==n||6==r||40==i||60==i||90==i?"many":"other":1==t?"one":"other"},be:function(t,e){var n=String(t).split("."),r=Number(n[0])==t,i=r&&n[0].slice(-1),o=r&&n[0].slice(-2);return e?2!=i&&3!=i||12==o||13==o?"other":"few":1==i&&11!=o?"one":i>=2&&i<=4&&(o<12||o>14)?"few":r&&0==i||i>=5&&i<=9||o>=11&&o<=14?"many":"other"},bem:function(t,e){return e?"other":1==t?"one":"other"},bez:function(t,e){return e?"other":1==t?"one":"other"},bg:function(t,e){return e?"other":1==t?"one":"other"},bh:function(t,e){return e?"other":0==t||1==t?"one":"other"},bm:function(t,e){return"other"},bn:function(t,e){return e?1==t||5==t||7==t||8==t||9==t||10==t?"one":2==t||3==t?"two":4==t?"few":6==t?"many":"other":t>=0&&t<=1?"one":"other"},bo:function(t,e){return"other"},br:function(t,e){var n=String(t).split("."),r=Number(n[0])==t,i=r&&n[0].slice(-1),o=r&&n[0].slice(-2),a=r&&n[0].slice(-6);return e?"other":1==i&&11!=o&&71!=o&&91!=o?"one":2==i&&12!=o&&72!=o&&92!=o?"two":(3==i||4==i||9==i)&&(o<10||o>19)&&(o<70||o>79)&&(o<90||o>99)?"few":0!=t&&r&&0==a?"many":"other"},brx:function(t,e){return e?"other":1==t?"one":"other"},bs:function(t,e){var n=String(t).split("."),r=n[0],i=n[1]||"",o=!n[1],a=r.slice(-1),s=r.slice(-2),c=i.slice(-1),u=i.slice(-2);return e?"other":o&&1==a&&11!=s||1==c&&11!=u?"one":o&&a>=2&&a<=4&&(s<12||s>14)||c>=2&&c<=4&&(u<12||u>14)?"few":"other"},ca:function(t,e){var n=!String(t).split(".")[1];return e?1==t||3==t?"one":2==t?"two":4==t?"few":"other":1==t&&n?"one":"other"},ce:function(t,e){return e?"other":1==t?"one":"other"},cgg:function(t,e){return e?"other":1==t?"one":"other"},chr:function(t,e){return e?"other":1==t?"one":"other"},ckb:function(t,e){return e?"other":1==t?"one":"other"},cs:function(t,e){var n=String(t).split("."),r=n[0],i=!n[1];return e?"other":1==t&&i?"one":r>=2&&r<=4&&i?"few":i?"other":"many"},cy:function(t,e){return e?0==t||7==t||8==t||9==t?"zero":1==t?"one":2==t?"two":3==t||4==t?"few":5==t||6==t?"many":"other":0==t?"zero":1==t?"one":2==t?"two":3==t?"few":6==t?"many":"other"},da:function(t,e){var n=String(t).split("."),r=n[0],i=Number(n[0])==t;return e||1!=t&&(i||0!=r&&1!=r)?"other":"one"},de:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},dsb:function(t,e){var n=String(t).split("."),r=n[0],i=n[1]||"",o=!n[1],a=r.slice(-2),s=i.slice(-2);return e?"other":o&&1==a||1==s?"one":o&&2==a||2==s?"two":o&&(3==a||4==a)||3==s||4==s?"few":"other"},dv:function(t,e){return e?"other":1==t?"one":"other"},dz:function(t,e){return"other"},ee:function(t,e){return e?"other":1==t?"one":"other"},el:function(t,e){return e?"other":1==t?"one":"other"},en:function(t,e){var n=String(t).split("."),r=!n[1],i=Number(n[0])==t,o=i&&n[0].slice(-1),a=i&&n[0].slice(-2);return e?1==o&&11!=a?"one":2==o&&12!=a?"two":3==o&&13!=a?"few":"other":1==t&&r?"one":"other"},eo:function(t,e){return e?"other":1==t?"one":"other"},es:function(t,e){return e?"other":1==t?"one":"other"},et:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},eu:function(t,e){return e?"other":1==t?"one":"other"},fa:function(t,e){return e?"other":t>=0&&t<=1?"one":"other"},ff:function(t,e){return e?"other":t>=0&&t<2?"one":"other"},fi:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},fil:function(t,e){var n=String(t).split("."),r=n[0],i=n[1]||"",o=!n[1],a=r.slice(-1),s=i.slice(-1);return e?1==t?"one":"other":o&&(1==r||2==r||3==r)||o&&4!=a&&6!=a&&9!=a||!o&&4!=s&&6!=s&&9!=s?"one":"other"},fo:function(t,e){return e?"other":1==t?"one":"other"},fr:function(t,e){return e?1==t?"one":"other":t>=0&&t<2?"one":"other"},fur:function(t,e){return e?"other":1==t?"one":"other"},fy:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},ga:function(t,e){var n=String(t).split("."),r=Number(n[0])==t;return e?1==t?"one":"other":1==t?"one":2==t?"two":r&&t>=3&&t<=6?"few":r&&t>=7&&t<=10?"many":"other"},gd:function(t,e){var n=String(t).split("."),r=Number(n[0])==t;return e?1==t||11==t?"one":2==t||12==t?"two":3==t||13==t?"few":"other":1==t||11==t?"one":2==t||12==t?"two":r&&t>=3&&t<=10||r&&t>=13&&t<=19?"few":"other"},gl:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},gsw:function(t,e){return e?"other":1==t?"one":"other"},gu:function(t,e){return e?1==t?"one":2==t||3==t?"two":4==t?"few":6==t?"many":"other":t>=0&&t<=1?"one":"other"},guw:function(t,e){return e?"other":0==t||1==t?"one":"other"},gv:function(t,e){var n=String(t).split("."),r=n[0],i=!n[1],o=r.slice(-1),a=r.slice(-2);return e?"other":i&&1==o?"one":i&&2==o?"two":!i||0!=a&&20!=a&&40!=a&&60!=a&&80!=a?i?"other":"many":"few"},ha:function(t,e){return e?"other":1==t?"one":"other"},haw:function(t,e){return e?"other":1==t?"one":"other"},he:function(t,e){var n=String(t).split("."),r=n[0],i=!n[1],o=Number(n[0])==t,a=o&&n[0].slice(-1);return e?"other":1==t&&i?"one":2==r&&i?"two":i&&(t<0||t>10)&&o&&0==a?"many":"other"},hi:function(t,e){return e?1==t?"one":2==t||3==t?"two":4==t?"few":6==t?"many":"other":t>=0&&t<=1?"one":"other"},hr:function(t,e){var n=String(t).split("."),r=n[0],i=n[1]||"",o=!n[1],a=r.slice(-1),s=r.slice(-2),c=i.slice(-1),u=i.slice(-2);return e?"other":o&&1==a&&11!=s||1==c&&11!=u?"one":o&&a>=2&&a<=4&&(s<12||s>14)||c>=2&&c<=4&&(u<12||u>14)?"few":"other"},hsb:function(t,e){var n=String(t).split("."),r=n[0],i=n[1]||"",o=!n[1],a=r.slice(-2),s=i.slice(-2);return e?"other":o&&1==a||1==s?"one":o&&2==a||2==s?"two":o&&(3==a||4==a)||3==s||4==s?"few":"other"},hu:function(t,e){return e?1==t||5==t?"one":"other":1==t?"one":"other"},hy:function(t,e){return e?1==t?"one":"other":t>=0&&t<2?"one":"other"},ia:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},id:function(t,e){return"other"},ig:function(t,e){return"other"},ii:function(t,e){return"other"},in:function(t,e){return"other"},io:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},is:function(t,e){var n=String(t).split("."),r=n[0],i=Number(n[0])==t,o=r.slice(-1),a=r.slice(-2);return e?"other":i&&1==o&&11!=a||!i?"one":"other"},it:function(t,e){var n=!String(t).split(".")[1];return e?11==t||8==t||80==t||800==t?"many":"other":1==t&&n?"one":"other"},iu:function(t,e){return e?"other":1==t?"one":2==t?"two":"other"},iw:function(t,e){var n=String(t).split("."),r=n[0],i=!n[1],o=Number(n[0])==t,a=o&&n[0].slice(-1);return e?"other":1==t&&i?"one":2==r&&i?"two":i&&(t<0||t>10)&&o&&0==a?"many":"other"},ja:function(t,e){return"other"},jbo:function(t,e){return"other"},jgo:function(t,e){return e?"other":1==t?"one":"other"},ji:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},jmc:function(t,e){return e?"other":1==t?"one":"other"},jv:function(t,e){return"other"},jw:function(t,e){return"other"},ka:function(t,e){var n=String(t).split(".")[0],r=n.slice(-2);return e?1==n?"one":0==n||r>=2&&r<=20||40==r||60==r||80==r?"many":"other":1==t?"one":"other"},kab:function(t,e){return e?"other":t>=0&&t<2?"one":"other"},kaj:function(t,e){return e?"other":1==t?"one":"other"},kcg:function(t,e){return e?"other":1==t?"one":"other"},kde:function(t,e){return"other"},kea:function(t,e){return"other"},kk:function(t,e){var n=String(t).split("."),r=Number(n[0])==t,i=r&&n[0].slice(-1);return e?6==i||9==i||r&&0==i&&0!=t?"many":"other":1==t?"one":"other"},kkj:function(t,e){return e?"other":1==t?"one":"other"},kl:function(t,e){return e?"other":1==t?"one":"other"},km:function(t,e){return"other"},kn:function(t,e){return e?"other":t>=0&&t<=1?"one":"other"},ko:function(t,e){return"other"},ks:function(t,e){return e?"other":1==t?"one":"other"},ksb:function(t,e){return e?"other":1==t?"one":"other"},ksh:function(t,e){return e?"other":0==t?"zero":1==t?"one":"other"},ku:function(t,e){return e?"other":1==t?"one":"other"},kw:function(t,e){return e?"other":1==t?"one":2==t?"two":"other"},ky:function(t,e){return e?"other":1==t?"one":"other"},lag:function(t,e){var n=String(t).split(".")[0];return e?"other":0==t?"zero":0!=n&&1!=n||0==t?"other":"one"},lb:function(t,e){return e?"other":1==t?"one":"other"},lg:function(t,e){return e?"other":1==t?"one":"other"},lkt:function(t,e){return"other"},ln:function(t,e){return e?"other":0==t||1==t?"one":"other"},lo:function(t,e){return e&&1==t?"one":"other"},lt:function(t,e){var n=String(t).split("."),r=n[1]||"",i=Number(n[0])==t,o=i&&n[0].slice(-1),a=i&&n[0].slice(-2);return e?"other":1==o&&(a<11||a>19)?"one":o>=2&&o<=9&&(a<11||a>19)?"few":0!=r?"many":"other"},lv:function(t,e){var n=String(t).split("."),r=n[1]||"",i=r.length,o=Number(n[0])==t,a=o&&n[0].slice(-1),s=o&&n[0].slice(-2),c=r.slice(-2),u=r.slice(-1);return e?"other":o&&0==a||s>=11&&s<=19||2==i&&c>=11&&c<=19?"zero":1==a&&11!=s||2==i&&1==u&&11!=c||2!=i&&1==u?"one":"other"},mas:function(t,e){return e?"other":1==t?"one":"other"},mg:function(t,e){return e?"other":0==t||1==t?"one":"other"},mgo:function(t,e){return e?"other":1==t?"one":"other"},mk:function(t,e){var n=String(t).split("."),r=n[0],i=n[1]||"",o=!n[1],a=r.slice(-1),s=r.slice(-2),c=i.slice(-1),u=i.slice(-2);return e?1==a&&11!=s?"one":2==a&&12!=s?"two":7!=a&&8!=a||17==s||18==s?"other":"many":o&&1==a&&11!=s||1==c&&11!=u?"one":"other"},ml:function(t,e){return e?"other":1==t?"one":"other"},mn:function(t,e){return e?"other":1==t?"one":"other"},mo:function(t,e){var n=String(t).split("."),r=!n[1],i=Number(n[0])==t&&n[0].slice(-2);return e?1==t?"one":"other":1==t&&r?"one":!r||0==t||1!=t&&i>=1&&i<=19?"few":"other"},mr:function(t,e){return e?1==t?"one":2==t||3==t?"two":4==t?"few":"other":t>=0&&t<=1?"one":"other"},ms:function(t,e){return e&&1==t?"one":"other"},mt:function(t,e){var n=String(t).split("."),r=Number(n[0])==t&&n[0].slice(-2);return e?"other":1==t?"one":0==t||r>=2&&r<=10?"few":r>=11&&r<=19?"many":"other"},my:function(t,e){return"other"},nah:function(t,e){return e?"other":1==t?"one":"other"},naq:function(t,e){return e?"other":1==t?"one":2==t?"two":"other"},nb:function(t,e){return e?"other":1==t?"one":"other"},nd:function(t,e){return e?"other":1==t?"one":"other"},ne:function(t,e){var n=String(t).split("."),r=Number(n[0])==t;return e?r&&t>=1&&t<=4?"one":"other":1==t?"one":"other"},nl:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},nn:function(t,e){return e?"other":1==t?"one":"other"},nnh:function(t,e){return e?"other":1==t?"one":"other"},no:function(t,e){return e?"other":1==t?"one":"other"},nqo:function(t,e){return"other"},nr:function(t,e){return e?"other":1==t?"one":"other"},nso:function(t,e){return e?"other":0==t||1==t?"one":"other"},ny:function(t,e){return e?"other":1==t?"one":"other"},nyn:function(t,e){return e?"other":1==t?"one":"other"},om:function(t,e){return e?"other":1==t?"one":"other"},or:function(t,e){var n=String(t).split("."),r=Number(n[0])==t;return e?1==t||5==t||r&&t>=7&&t<=9?"one":2==t||3==t?"two":4==t?"few":6==t?"many":"other":1==t?"one":"other"},os:function(t,e){return e?"other":1==t?"one":"other"},pa:function(t,e){return e?"other":0==t||1==t?"one":"other"},pap:function(t,e){return e?"other":1==t?"one":"other"},pl:function(t,e){var n=String(t).split("."),r=n[0],i=!n[1],o=r.slice(-1),a=r.slice(-2);return e?"other":1==t&&i?"one":i&&o>=2&&o<=4&&(a<12||a>14)?"few":i&&1!=r&&(0==o||1==o)||i&&o>=5&&o<=9||i&&a>=12&&a<=14?"many":"other"},prg:function(t,e){var n=String(t).split("."),r=n[1]||"",i=r.length,o=Number(n[0])==t,a=o&&n[0].slice(-1),s=o&&n[0].slice(-2),c=r.slice(-2),u=r.slice(-1);return e?"other":o&&0==a||s>=11&&s<=19||2==i&&c>=11&&c<=19?"zero":1==a&&11!=s||2==i&&1==u&&11!=c||2!=i&&1==u?"one":"other"},ps:function(t,e){return e?"other":1==t?"one":"other"},pt:function(t,e){var n=String(t).split(".")[0];return e?"other":0==n||1==n?"one":"other"},"pt-PT":function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},rm:function(t,e){return e?"other":1==t?"one":"other"},ro:function(t,e){var n=String(t).split("."),r=!n[1],i=Number(n[0])==t&&n[0].slice(-2);return e?1==t?"one":"other":1==t&&r?"one":!r||0==t||1!=t&&i>=1&&i<=19?"few":"other"},rof:function(t,e){return e?"other":1==t?"one":"other"},root:function(t,e){return"other"},ru:function(t,e){var n=String(t).split("."),r=n[0],i=!n[1],o=r.slice(-1),a=r.slice(-2);return e?"other":i&&1==o&&11!=a?"one":i&&o>=2&&o<=4&&(a<12||a>14)?"few":i&&0==o||i&&o>=5&&o<=9||i&&a>=11&&a<=14?"many":"other"},rwk:function(t,e){return e?"other":1==t?"one":"other"},sah:function(t,e){return"other"},saq:function(t,e){return e?"other":1==t?"one":"other"},sc:function(t,e){var n=!String(t).split(".")[1];return e?11==t||8==t||80==t||800==t?"many":"other":1==t&&n?"one":"other"},scn:function(t,e){var n=!String(t).split(".")[1];return e?11==t||8==t||80==t||800==t?"many":"other":1==t&&n?"one":"other"},sd:function(t,e){return e?"other":1==t?"one":"other"},sdh:function(t,e){return e?"other":1==t?"one":"other"},se:function(t,e){return e?"other":1==t?"one":2==t?"two":"other"},seh:function(t,e){return e?"other":1==t?"one":"other"},ses:function(t,e){return"other"},sg:function(t,e){return"other"},sh:function(t,e){var n=String(t).split("."),r=n[0],i=n[1]||"",o=!n[1],a=r.slice(-1),s=r.slice(-2),c=i.slice(-1),u=i.slice(-2);return e?"other":o&&1==a&&11!=s||1==c&&11!=u?"one":o&&a>=2&&a<=4&&(s<12||s>14)||c>=2&&c<=4&&(u<12||u>14)?"few":"other"},shi:function(t,e){var n=String(t).split("."),r=Number(n[0])==t;return e?"other":t>=0&&t<=1?"one":r&&t>=2&&t<=10?"few":"other"},si:function(t,e){var n=String(t).split("."),r=n[0],i=n[1]||"";return e?"other":0==t||1==t||0==r&&1==i?"one":"other"},sk:function(t,e){var n=String(t).split("."),r=n[0],i=!n[1];return e?"other":1==t&&i?"one":r>=2&&r<=4&&i?"few":i?"other":"many"},sl:function(t,e){var n=String(t).split("."),r=n[0],i=!n[1],o=r.slice(-2);return e?"other":i&&1==o?"one":i&&2==o?"two":i&&(3==o||4==o)||!i?"few":"other"},sma:function(t,e){return e?"other":1==t?"one":2==t?"two":"other"},smi:function(t,e){return e?"other":1==t?"one":2==t?"two":"other"},smj:function(t,e){return e?"other":1==t?"one":2==t?"two":"other"},smn:function(t,e){return e?"other":1==t?"one":2==t?"two":"other"},sms:function(t,e){return e?"other":1==t?"one":2==t?"two":"other"},sn:function(t,e){return e?"other":1==t?"one":"other"},so:function(t,e){return e?"other":1==t?"one":"other"},sq:function(t,e){var n=String(t).split("."),r=Number(n[0])==t,i=r&&n[0].slice(-1),o=r&&n[0].slice(-2);return e?1==t?"one":4==i&&14!=o?"many":"other":1==t?"one":"other"},sr:function(t,e){var n=String(t).split("."),r=n[0],i=n[1]||"",o=!n[1],a=r.slice(-1),s=r.slice(-2),c=i.slice(-1),u=i.slice(-2);return e?"other":o&&1==a&&11!=s||1==c&&11!=u?"one":o&&a>=2&&a<=4&&(s<12||s>14)||c>=2&&c<=4&&(u<12||u>14)?"few":"other"},ss:function(t,e){return e?"other":1==t?"one":"other"},ssy:function(t,e){return e?"other":1==t?"one":"other"},st:function(t,e){return e?"other":1==t?"one":"other"},sv:function(t,e){var n=String(t).split("."),r=!n[1],i=Number(n[0])==t,o=i&&n[0].slice(-1),a=i&&n[0].slice(-2);return e?1!=o&&2!=o||11==a||12==a?"other":"one":1==t&&r?"one":"other"},sw:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},syr:function(t,e){return e?"other":1==t?"one":"other"},ta:function(t,e){return e?"other":1==t?"one":"other"},te:function(t,e){return e?"other":1==t?"one":"other"},teo:function(t,e){return e?"other":1==t?"one":"other"},th:function(t,e){return"other"},ti:function(t,e){return e?"other":0==t||1==t?"one":"other"},tig:function(t,e){return e?"other":1==t?"one":"other"},tk:function(t,e){var n=String(t).split("."),r=Number(n[0])==t&&n[0].slice(-1);return e?6==r||9==r||10==t?"few":"other":1==t?"one":"other"},tl:function(t,e){var n=String(t).split("."),r=n[0],i=n[1]||"",o=!n[1],a=r.slice(-1),s=i.slice(-1);return e?1==t?"one":"other":o&&(1==r||2==r||3==r)||o&&4!=a&&6!=a&&9!=a||!o&&4!=s&&6!=s&&9!=s?"one":"other"},tn:function(t,e){return e?"other":1==t?"one":"other"},to:function(t,e){return"other"},tr:function(t,e){return e?"other":1==t?"one":"other"},ts:function(t,e){return e?"other":1==t?"one":"other"},tzm:function(t,e){var n=String(t).split("."),r=Number(n[0])==t;return e?"other":0==t||1==t||r&&t>=11&&t<=99?"one":"other"},ug:function(t,e){return e?"other":1==t?"one":"other"},uk:function(t,e){var n=String(t).split("."),r=n[0],i=!n[1],o=Number(n[0])==t,a=o&&n[0].slice(-1),s=o&&n[0].slice(-2),c=r.slice(-1),u=r.slice(-2);return e?3==a&&13!=s?"few":"other":i&&1==c&&11!=u?"one":i&&c>=2&&c<=4&&(u<12||u>14)?"few":i&&0==c||i&&c>=5&&c<=9||i&&u>=11&&u<=14?"many":"other"},ur:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},uz:function(t,e){return e?"other":1==t?"one":"other"},ve:function(t,e){return e?"other":1==t?"one":"other"},vi:function(t,e){return e&&1==t?"one":"other"},vo:function(t,e){return e?"other":1==t?"one":"other"},vun:function(t,e){return e?"other":1==t?"one":"other"},wa:function(t,e){return e?"other":0==t||1==t?"one":"other"},wae:function(t,e){return e?"other":1==t?"one":"other"},wo:function(t,e){return"other"},xh:function(t,e){return e?"other":1==t?"one":"other"},xog:function(t,e){return e?"other":1==t?"one":"other"},yi:function(t,e){var n=!String(t).split(".")[1];return e?"other":1==t&&n?"one":"other"},yo:function(t,e){return"other"},yue:function(t,e){return"other"},zh:function(t,e){return"other"},zu:function(t,e){return e?"other":t>=0&&t<=1?"one":"other"}})?r.call(e,n,e,t):r)||(t.exports=i)},function(t,e,n){var r=n(185);function i(t){this.mf=t,this.setStrictNumber(t.strictNumberSign)}function o(t,e,n){if(!n)return t;if(isNaN(t))throw new Error("Can't apply offset:"+n+" to argument `"+e+"` with non-numerical value "+JSON.stringify(t)+".");return t-n}function a(t,e,n){if(isNaN(t))throw new Error("Argument `"+e+"` has non-numerical value "+JSON.stringify(t)+".");return t-(n||0)}t.exports=i,i.prototype.setStrictNumber=function(t){this.number=t?a:o},i.prototype.plural=function(t,e,n,r,i){if({}.hasOwnProperty.call(r,t))return r[t];e&&(t-=e);var o=n(t,i);return o in r?r[o]:r.other},i.prototype.select=function(t,e){return{}.hasOwnProperty.call(e,t)?e[t]:e.other},i.prototype.toString=function(t,e){var n={};Object.keys(e.locales).forEach((function(e){n[r.funcname(e)]=t[e]})),Object.keys(e.runtime).forEach((function(t){n[t]=this[t]}),this);var i=Object.keys(e.formatters),o=this.mf.fmt;return i.length&&(n.fmt=i.reduce((function(t,e){return t[e]=o[e],t}),{})),function t(e,n){if("object"!=typeof e){var i=e.toString().replace(/^(function )\w*/,"$1"),o=/([ \t]*)\S.*$/.exec(i);return o?i.replace(new RegExp("^"+o[1],"mg"),""):i}var a=[];for(var s in e)0===n?a.push("var "+s+" = "+t(e[s],n+1)+";\n"):a.push(r.propname(s)+": "+t(e[s],n+1));if(0===n)return a.join("");if(0===a.length)return"{}";for(var c="  ";--n;)c+="  ";return"{\n"+a.join(",\n").replace(/^/gm,c)+"\n}"}(n,0)}}])]);
//# sourceMappingURL=theme-bundle.chunk.5.js.map
>>>>>>> 44f31af017b7f2ab5f385252ef164cf06d8421dd
