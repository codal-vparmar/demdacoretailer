{"version":3,"sources":["webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js","webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/common/url-utils.js","webpack:///./assets/js/theme/global/compare-products.js"],"names":["CatalogPage","event","url","parse","window","location","href","queryParams","$","currentTarget","serialize","split","query","page","preventDefault","format","pathname","search","buildQueryString","requestOptions","callback","options","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalOpen","this","extend","collapsedFacets","collapsedFacetItems","initPriceValidator","each","index","navList","collapseFacetItems","accordionToggle","collapsible","data","isCollapsed","push","targetId","setTimeout","is","collapseAllFacets","onStateChange","bind","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","onSortBySubmit","filterFacetItems","bindEvents","content","restoreCollapsedFacets","restoreCollapsedFacetItems","show","getPage","getUrl","err","hide","Error","refreshView","$navList","id","attr","without","hasMoreResults","union","includes","getMoreFacetResults","facet","facetUrl","showMore","template","params","list_all","response","open","updateContent","$items","val","toLowerCase","element","text","indexOf","$accordionToggle","close","collapseFacet","expandFacet","length","validator","selectors","errorSelector","fieldsetSelector","formSelector","maxPriceSelector","minPriceSelector","setMinMaxPriceValidation","priceRangeValidator","expandFacetItems","unbindEvents","on","document","off","stopPropagation","goToUrl","$toggle","toggleFacetItems","$link","toggleClass","areAll","constants","VALID","decodeURI","parseQueryParams","key","hasOwnProperty","updateView","Search","node","nodeData","metadata","state","selected","opened","children","forEach","childNode","formatCategoryTreeForJSTree","replaceParams","section","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","context","urls","$searchForm","$categoryTreeContainer","find","treeData","initFacetedSearch","showProducts","showContent","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","categoryId","input","type","name","value","append","cb","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","done","formattedResults","dataNode","$container","treeOptions","core","loadTreeNodes","themes","icons","checkbox","three_state","plugins","$searchHeading","$searchCount","productListing","sidebar","heading","productCount","config","product_results","limit","searchProductsPerPage","facetedSearch","html","triggerHandler","animate","scrollTop","$form","submit","$element","add","selector","validate","errorMessage","performCheck","urlUtils","history","pushState","title","trigger","parsed","param","queryData","out","Array","isArray","ndx","substring","i","temp","updateCounterNav","counter","urlContext","compare","join","compareCounter","$compareLink","$checked","map","product","$clickedCompareLink","item","checked","splice","decrementCounter"],"mappings":"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","file":"theme-bundle.chunk.11.js","sourcesContent":["import PageManager from './page-manager';\r\nimport urlUtils from './common/url-utils';\r\nimport Url from 'url';\r\n\r\nexport default class CatalogPage extends PageManager {\r\n    onSortBySubmit(event) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(event.currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        event.preventDefault();\r\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\r\n    }\r\n}\r\n","import { hooks, api } from '@bigcommerce/stencil-utils';\r\nimport _ from 'lodash';\r\nimport Url from 'url';\r\nimport urlUtils from './url-utils';\r\nimport modalFactory from '../global/modal';\r\nimport collapsibleFactory from './collapsible';\r\nimport { Validators } from './form-utils';\r\nimport nod from './nod';\r\n\r\n/**\r\n * Faceted search view component\r\n */\r\nclass FacetedSearch {\r\n    /**\r\n     * @param {object} requestOptions - Object with options for the ajax requests\r\n     * @param {function} callback - Function to execute after fetching templates\r\n     * @param {object} options - Configurable options\r\n     * @example\r\n     *\r\n     * let requestOptions = {\r\n     *      templates: {\r\n     *          productListing: 'category/product-listing',\r\n     *          sidebar: 'category/sidebar'\r\n     *     }\r\n     * };\r\n     *\r\n     * let templatesDidLoad = function(content) {\r\n     *     $productListingContainer.html(content.productListing);\r\n     *     $facetedSearchContainer.html(content.sidebar);\r\n     * };\r\n     *\r\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\r\n     */\r\n    constructor(requestOptions, callback, options) {\r\n        const defaultOptions = {\r\n            accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\r\n            blockerSelector: '#facetedSearch .blocker',\r\n            clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\r\n            componentSelector: '#facetedSearch-navList',\r\n            facetNavListSelector: '#facetedSearch .navList',\r\n            priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\r\n            priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\r\n            priceRangeFormSelector: '#facet-range-form',\r\n            priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\r\n            priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\r\n            showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\r\n            facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\r\n            modal: modalFactory('#modal')[0],\r\n            modalOpen: false,\r\n        };\r\n\r\n        // Private properties\r\n        this.requestOptions = requestOptions;\r\n        this.callback = callback;\r\n        this.options = _.extend({}, defaultOptions, options);\r\n        this.collapsedFacets = [];\r\n        this.collapsedFacetItems = [];\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Show limited items by default\r\n        $(this.options.facetNavListSelector).each((index, navList) => {\r\n            this.collapseFacetItems($(navList));\r\n        });\r\n\r\n        // Mark initially collapsed accordions\r\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n            if (collapsible.isCollapsed) {\r\n                this.collapsedFacets.push(collapsible.targetId);\r\n            }\r\n        });\r\n\r\n        // Collapse all facets if initially hidden\r\n        // NOTE: Need to execute after Collapsible gets bootstrapped\r\n        setTimeout(() => {\r\n            if ($(this.options.componentSelector).is(':hidden')) {\r\n                this.collapseAllFacets();\r\n            }\r\n        });\r\n\r\n        // Observe user events\r\n        this.onStateChange = this.onStateChange.bind(this);\r\n        this.onToggleClick = this.onToggleClick.bind(this);\r\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\r\n        this.onClearFacet = this.onClearFacet.bind(this);\r\n        this.onFacetClick = this.onFacetClick.bind(this);\r\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\r\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n        this.filterFacetItems = this.filterFacetItems.bind(this);\r\n\r\n        this.bindEvents();\r\n    }\r\n\r\n    // Public methods\r\n    refreshView(content) {\r\n        if (content) {\r\n            this.callback(content);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Restore view state\r\n        this.restoreCollapsedFacets();\r\n        this.restoreCollapsedFacetItems();\r\n\r\n        // Bind events\r\n        this.bindEvents();\r\n    }\r\n\r\n    updateView() {\r\n        $(this.options.blockerSelector).show();\r\n\r\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\r\n            $(this.options.blockerSelector).hide();\r\n\r\n            if (err) {\r\n                throw new Error(err);\r\n            }\r\n\r\n            // Refresh view with new content\r\n            this.refreshView(content);\r\n        });\r\n    }\r\n\r\n    expandFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Remove\r\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n    }\r\n\r\n    collapseFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n        const hasMoreResults = $navList.data('hasMoreResults');\r\n\r\n        if (hasMoreResults) {\r\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\r\n        } else {\r\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n        }\r\n    }\r\n\r\n    toggleFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Toggle depending on `collapsed` flag\r\n        if (_.includes(this.collapsedFacetItems, id)) {\r\n            this.getMoreFacetResults($navList);\r\n\r\n            return true;\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    getMoreFacetResults($navList) {\r\n        const facet = $navList.data('facet');\r\n        const facetUrl = urlUtils.getUrl();\r\n\r\n        if (this.requestOptions.showMore) {\r\n            api.getPage(facetUrl, {\r\n                template: this.requestOptions.showMore,\r\n                params: {\r\n                    list_all: facet,\r\n                },\r\n            }, (err, response) => {\r\n                if (err) {\r\n                    throw new Error(err);\r\n                }\r\n\r\n                this.options.modal.open();\r\n                this.options.modalOpen = true;\r\n                this.options.modal.updateContent(response);\r\n            });\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    filterFacetItems(event) {\r\n        const $items = $('.navList-item');\r\n        const query = $(event.currentTarget).val().toLowerCase();\r\n\r\n        $items.each((index, element) => {\r\n            const text = $(element).text().toLowerCase();\r\n            if (text.indexOf(query) !== -1) {\r\n                $(element).show();\r\n            } else {\r\n                $(element).hide();\r\n            }\r\n        });\r\n    }\r\n\r\n    expandFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.open();\r\n    }\r\n\r\n    collapseFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.close();\r\n    }\r\n\r\n    collapseAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.collapseFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    expandAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.expandFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    // Private methods\r\n    initPriceValidator() {\r\n        if ($(this.options.priceRangeFormSelector).length === 0) {\r\n            return;\r\n        }\r\n\r\n        const validator = nod();\r\n        const selectors = {\r\n            errorSelector: this.options.priceRangeErrorSelector,\r\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\r\n            formSelector: this.options.priceRangeFormSelector,\r\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\r\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\r\n        };\r\n\r\n        Validators.setMinMaxPriceValidation(validator, selectors);\r\n\r\n        this.priceRangeValidator = validator;\r\n    }\r\n\r\n    restoreCollapsedFacetItems() {\r\n        const $navLists = $(this.options.facetNavListSelector);\r\n\r\n        // Restore collapsed state for each facet\r\n        $navLists.each((index, navList) => {\r\n            const $navList = $(navList);\r\n            const id = $navList.attr('id');\r\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacetItems($navList);\r\n            } else {\r\n                this.expandFacetItems($navList);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreCollapsedFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n            const id = collapsible.targetId;\r\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacet($accordionToggle);\r\n            } else {\r\n                this.expandFacet($accordionToggle);\r\n            }\r\n        });\r\n    }\r\n\r\n    bindEvents() {\r\n        // Clean-up\r\n        this.unbindEvents();\r\n\r\n        // DOM events\r\n        $(window).on('statechange', this.onStateChange);\r\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    unbindEvents() {\r\n        // DOM events\r\n        $(window).off('statechange', this.onStateChange);\r\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    onClearFacet(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    onToggleClick(event) {\r\n        const $toggle = $(event.currentTarget);\r\n        const $navList = $($toggle.attr('href'));\r\n\r\n        // Prevent default\r\n        event.preventDefault();\r\n\r\n        // Toggle visible items\r\n        this.toggleFacetItems($navList);\r\n    }\r\n\r\n    onFacetClick(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n\r\n        $link.toggleClass('is-selected');\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n\r\n        if (this.options.modalOpen) {\r\n            this.options.modal.close();\r\n        }\r\n    }\r\n\r\n    onSortBySubmit(event) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(event.currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        event.preventDefault();\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) }));\r\n    }\r\n\r\n    onRangeSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\r\n            return;\r\n        }\r\n\r\n        const url = Url.parse(window.location.href, true);\r\n        let queryParams = decodeURI($(event.currentTarget).serialize()).split('&');\r\n        queryParams = urlUtils.parseQueryParams(queryParams);\r\n\r\n        for (const key in queryParams) {\r\n            if (queryParams.hasOwnProperty(key)) {\r\n                url.query[key] = queryParams[key];\r\n            }\r\n        }\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) }));\r\n    }\r\n\r\n    onStateChange() {\r\n        this.updateView();\r\n    }\r\n\r\n    onAccordionToggle(event) {\r\n        const $accordionToggle = $(event.currentTarget);\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n        const id = collapsible.targetId;\r\n\r\n        if (collapsible.isCollapsed) {\r\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\r\n        } else {\r\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\r\n        }\r\n    }\r\n}\r\n\r\nexport default FacetedSearch;\r\n","import { hooks } from '@bigcommerce/stencil-utils';\r\nimport CatalogPage from './catalog';\r\nimport FacetedSearch from './common/faceted-search';\r\nimport compareProducts from './global/compare-products';\r\nimport urlUtils from './common/url-utils';\r\nimport Url from 'url';\r\nimport collapsibleFactory from './common/collapsible';\r\nimport 'jstree';\r\nimport nod from './common/nod';\r\n\r\nexport default class Search extends CatalogPage {\r\n    formatCategoryTreeForJSTree(node) {\r\n        const nodeData = {\r\n            text: node.data,\r\n            id: node.metadata.id,\r\n            state: {\r\n                selected: node.selected,\r\n            },\r\n        };\r\n\r\n        if (node.state) {\r\n            nodeData.state.opened = node.state === 'open';\r\n            nodeData.children = true;\r\n        }\r\n\r\n        if (node.children) {\r\n            nodeData.children = [];\r\n            node.children.forEach((childNode) => {\r\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\r\n            });\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n\r\n    showProducts() {\r\n        const url = urlUtils.replaceParams(window.location.href, {\r\n            section: 'product',\r\n        });\r\n\r\n        this.$productListingContainer.removeClass('u-hiddenVisually');\r\n        this.$facetedSearchContainer.removeClass('u-hiddenVisually');\r\n        this.$contentResultsContainer.addClass('u-hiddenVisually');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-content-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action');\r\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    showContent() {\r\n        const url = urlUtils.replaceParams(window.location.href, {\r\n            section: 'content',\r\n        });\r\n\r\n        this.$contentResultsContainer.removeClass('u-hiddenVisually');\r\n        this.$productListingContainer.addClass('u-hiddenVisually');\r\n        this.$facetedSearchContainer.addClass('u-hiddenVisually');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-product-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action');\r\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    onReady() {\r\n        compareProducts(this.context.urls);\r\n\r\n        const $searchForm = $('[data-advanced-search-form]');\r\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\r\n        const url = Url.parse(window.location.href, true);\r\n        const treeData = [];\r\n        this.$productListingContainer = $('#product-listing-container');\r\n        this.$facetedSearchContainer = $('#faceted-search-container');\r\n        this.$contentResultsContainer = $('#search-results-content');\r\n\r\n        // Init faceted search\r\n        if ($('#facetedSearch').length > 0) {\r\n            this.initFacetedSearch();\r\n        } else {\r\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        $('[data-product-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showProducts();\r\n        });\r\n\r\n        $('[data-content-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showContent();\r\n        });\r\n\r\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\r\n            this.showContent();\r\n        } else {\r\n            this.showProducts();\r\n        }\r\n\r\n        const validator = this.initValidation($searchForm)\r\n            .bindValidation($searchForm.find('#search_query_adv'));\r\n\r\n        this.context.categoryTree.forEach((node) => {\r\n            treeData.push(this.formatCategoryTreeForJSTree(node));\r\n        });\r\n\r\n        this.categoryTreeData = treeData;\r\n        this.createCategoryTree($categoryTreeContainer);\r\n\r\n        $searchForm.on('submit', event => {\r\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\r\n\r\n            if (!validator.check()) {\r\n                return event.preventDefault();\r\n            }\r\n\r\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\r\n\r\n            for (const categoryId of selectedCategoryIds) {\r\n                const input = $('<input>', {\r\n                    type: 'hidden',\r\n                    name: 'category[]',\r\n                    value: categoryId,\r\n                });\r\n\r\n                $searchForm.append(input);\r\n            }\r\n        });\r\n    }\r\n\r\n    loadTreeNodes(node, cb) {\r\n        $.ajax({\r\n            url: '/remote/v1/category-tree',\r\n            data: {\r\n                selectedCategoryId: node.id,\r\n                prefix: 'category',\r\n            },\r\n            headers: {\r\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\r\n            },\r\n        }).done(data => {\r\n            const formattedResults = [];\r\n\r\n            data.forEach((dataNode) => {\r\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\r\n            });\r\n\r\n            cb(formattedResults);\r\n        });\r\n    }\r\n\r\n    createCategoryTree($container) {\r\n        const treeOptions = {\r\n            core: {\r\n                data: (node, cb) => {\r\n                    // Root node\r\n                    if (node.id === '#') {\r\n                        cb(this.categoryTreeData);\r\n                    } else {\r\n                        // Lazy loaded children\r\n                        this.loadTreeNodes(node, cb);\r\n                    }\r\n                },\r\n                themes: {\r\n                    icons: true,\r\n                },\r\n            },\r\n            checkbox: {\r\n                three_state: false,\r\n            },\r\n            plugins: [\r\n                'checkbox',\r\n            ],\r\n        };\r\n\r\n        $container.jstree(treeOptions);\r\n    }\r\n\r\n    initFacetedSearch() {\r\n        const $productListingContainer = $('#product-listing-container');\r\n        const $facetedSearchContainer = $('#faceted-search-container');\r\n        const $searchHeading = $('#search-results-heading');\r\n        const $searchCount = $('#search-results-product-count');\r\n        const productsPerPage = this.context.searchProductsPerPage;\r\n        const requestOptions = {\r\n            template: {\r\n                productListing: 'search/product-listing',\r\n                sidebar: 'search/sidebar',\r\n                heading: 'search/heading',\r\n                productCount: 'search/product-count',\r\n            },\r\n            config: {\r\n                product_results: {\r\n                    limit: productsPerPage,\r\n                },\r\n            },\r\n            showMore: 'search/show-more',\r\n        };\r\n\r\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\r\n            $productListingContainer.html(content.productListing);\r\n            $facetedSearchContainer.html(content.sidebar);\r\n            $searchHeading.html(content.heading);\r\n            $searchCount.html(content.productCount);\r\n\r\n            $('body').triggerHandler('compareReset');\r\n\r\n            $('html, body').animate({\r\n                scrollTop: 0,\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    initValidation($form) {\r\n        this.$form = $form;\r\n        this.validator = nod({\r\n            submit: $form,\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    bindValidation($element) {\r\n        if (this.validator) {\r\n            this.validator.add({\r\n                selector: $element,\r\n                validate: 'presence',\r\n                errorMessage: $element.data('errorMessage'),\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    check() {\r\n        if (this.validator) {\r\n            this.validator.performCheck();\r\n            return this.validator.areAll('valid');\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import Url from 'url';\r\n\r\nconst urlUtils = {\r\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\r\n\r\n    goToUrl: (url) => {\r\n        window.history.pushState({}, document.title, url);\r\n        $(window).trigger('statechange');\r\n    },\r\n\r\n    replaceParams: (url, params) => {\r\n        const parsed = Url.parse(url, true);\r\n        let param;\r\n\r\n        // Let the formatter use the query object to build the new url\r\n        parsed.search = null;\r\n\r\n        for (param in params) {\r\n            if (params.hasOwnProperty(param)) {\r\n                parsed.query[param] = params[param];\r\n            }\r\n        }\r\n\r\n        return Url.format(parsed);\r\n    },\r\n\r\n    buildQueryString: (queryData) => {\r\n        let out = '';\r\n        let key;\r\n        for (key in queryData) {\r\n            if (queryData.hasOwnProperty(key)) {\r\n                if (Array.isArray(queryData[key])) {\r\n                    let ndx;\r\n\r\n                    for (ndx in queryData[key]) {\r\n                        if (queryData[key].hasOwnProperty(ndx)) {\r\n                            out += `&${key}=${queryData[key][ndx]}`;\r\n                        }\r\n                    }\r\n                } else {\r\n                    out += `&${key}=${queryData[key]}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return out.substring(1);\r\n    },\r\n\r\n    parseQueryParams: (queryData) => {\r\n        const params = {};\r\n\r\n        for (let i = 0; i < queryData.length; i++) {\r\n            const temp = queryData[i].split('=');\r\n\r\n            if (temp[0] in params) {\r\n                if (Array.isArray(params[temp[0]])) {\r\n                    params[temp[0]].push(temp[1]);\r\n                } else {\r\n                    params[temp[0]] = [params[temp[0]], temp[1]];\r\n                }\r\n            } else {\r\n                params[temp[0]] = temp[1];\r\n            }\r\n        }\r\n\r\n        return params;\r\n    },\r\n};\r\n\r\nexport default urlUtils;\r\n","import _ from 'lodash';\r\nimport { showAlertModal } from './modal';\r\n\r\nfunction decrementCounter(counter, item) {\r\n    const index = counter.indexOf(item);\r\n\r\n    if (index > -1) {\r\n        counter.splice(index, 1);\r\n    }\r\n}\r\n\r\nfunction incrementCounter(counter, item) {\r\n    counter.push(item);\r\n}\r\n\r\nfunction updateCounterNav(counter, $link, urlContext) {\r\n    if (counter.length !== 0) {\r\n        if (!$link.is('visible')) {\r\n            $link.addClass('show');\r\n        }\r\n        $link.attr('href', `${urlContext.compare}/${counter.join('/')}`);\r\n        $link.find('span.countPill').html(counter.length);\r\n    } else {\r\n        $link.removeClass('show');\r\n    }\r\n}\r\n\r\nexport default function (urlContext) {\r\n    let compareCounter = [];\r\n\r\n    const $compareLink = $('a[data-compare-nav]');\r\n\r\n    $('body').on('compareReset', () => {\r\n        const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        compareCounter = $checked.length ? _.map($checked, element => element.value) : [];\r\n        updateCounterNav(compareCounter, $compareLink, urlContext);\r\n    });\r\n\r\n    $('body').triggerHandler('compareReset');\r\n\r\n    $('body').on('click', '[data-compare-id]', event => {\r\n        const product = event.currentTarget.value;\r\n        const $clickedCompareLink = $('a[data-compare-nav]');\r\n\r\n        if (event.currentTarget.checked) {\r\n            incrementCounter(compareCounter, product);\r\n        } else {\r\n            decrementCounter(compareCounter, product);\r\n        }\r\n\r\n        updateCounterNav(compareCounter, $clickedCompareLink, urlContext);\r\n    });\r\n\r\n    $('body').on('submit', '[data-product-compare]', event => {\r\n        const $this = $(event.currentTarget);\r\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if (productsToCompare.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            event.preventDefault();\r\n        }\r\n    });\r\n\r\n    $('body').on('click', 'a[data-compare-nav]', () => {\r\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if ($clickedCheckedInput.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            return false;\r\n        }\r\n    });\r\n}\r\n"],"sourceRoot":""}